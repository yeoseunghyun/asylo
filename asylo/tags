!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABORTED	./grpc/auth/core/ekep_handshaker.h	/^    ABORTED = 3,$/;"	m	class:asylo::EkepHandshaker::HandshakeState
ABORTED	./grpc/auth/core/ekep_handshaker.h	/^    ABORTED = 3,$/;"	m	class:asylo::EkepHandshaker::Result
ABSL_ATTRIBUTE_PACKED	./crypto/util/bytes.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo	typeref:class:asylo::Bytes
ABSL_ATTRIBUTE_PACKED	./crypto/util/bytes.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo	typeref:class:asylo::final
ABSL_ATTRIBUTE_PACKED	./identity/sgx/fake_enclave.h	/^  } ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::sgx::FakeEnclave	typeref:struct:asylo::sgx::FakeEnclave::KeyDependencies
ABSL_ATTRIBUTE_PACKED	./identity/sgx/fake_enclave.h	/^  } ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::sgx::FakeEnclave	typeref:struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::sgx::KeyrequestKeyname	typeref:struct:asylo::sgx::KeyrequestKeyname::Keyrequest
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::sgx::KeyrequestKeyname	typeref:struct:asylo::sgx::KeyrequestKeyname::Report
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::sgx::KeyrequestKeyname	typeref:struct:asylo::sgx::KeyrequestKeyname::Reportdata
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::sgx::KeyrequestKeyname	typeref:struct:asylo::sgx::KeyrequestKeyname::Targetinfo
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo::sgx	typeref:struct:asylo::sgx::Date
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo::sgx	typeref:struct:asylo::sgx::Rsa3072PublicKey
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo::sgx	typeref:struct:asylo::sgx::Sigstruct
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo::sgx	typeref:struct:asylo::sgx::SigstructBody
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo::sgx	typeref:struct:asylo::sgx::SigstructHeader
ABSL_ATTRIBUTE_PACKED	./identity/sgx/identity_key_management_structs.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo::sgx	typeref:struct:asylo::sgx::SigstructSigningData
ABSL_ATTRIBUTE_PACKED	./identity/sgx/secs_attributes.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::sgx::SecsAttributeBit	typeref:struct:asylo::sgx::SecsAttributeBit::SecsAttributeSet
ABSL_ATTRIBUTE_PACKED	./identity/util/aligned_object_ptr_test.cc	/^} ABSL_ATTRIBUTE_PACKED;  \/\/ Use ABSL_ATTRIBUTE_PACKED to make sure that the$/;"	m	namespace:asylo::__anon172	typeref:struct:asylo::__anon172::TestStruct	file:
ABSL_ATTRIBUTE_PACKED	./identity/util/aligned_object_ptr_test.cc	/^} ABSL_ATTRIBUTE_PACKED;  \/\/ Use ABSL_ATTRIBUTE_PACKED to make sure that the$/;"	m	namespace:asylo::__anon426	typeref:struct:asylo::__anon426::TestStruct	file:
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^  } ABSL_ATTRIBUTE_PACKED;$/;"	m	struct:bridge_sockaddr	typeref:union:bridge_sockaddr::__anon5
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:BridgeCpuSet
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:BridgeITimerVal
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:BridgeTms
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_in6_addr
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_in_addr
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_sockaddr
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_sockaddr_in
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_sockaddr_in6
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_sockaddr_un
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_stat
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_timespec
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_timeval
ABSL_ATTRIBUTE_PACKED	./platform/common/bridge_types.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	v	typeref:struct:bridge_utimbuf
ABSL_ATTRIBUTE_PACKED	./platform/storage/secure/aead_handler.h	/^  } ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::platform::storage::AeadHandler	typeref:struct:asylo::platform::storage::AeadHandler::DataDigest
ABSL_ATTRIBUTE_PACKED	./platform/storage/secure/aead_handler.h	/^  } ABSL_ATTRIBUTE_PACKED;$/;"	m	class:asylo::platform::storage::AeadHandler	typeref:struct:asylo::platform::storage::AeadHandler::FileHeader
ABSL_ATTRIBUTE_PACKED	./platform/system_call/message.h	/^} ABSL_ATTRIBUTE_PACKED;$/;"	m	namespace:asylo::system_call	typeref:struct:asylo::system_call::MessageHeader
ADD	./platform/posix/include/arpa/nameser.h	242;"	d
AF_ALG	./platform/posix/include/sys/socket.h	214;"	d
AF_APPLETALK	./platform/posix/include/sys/socket.h	182;"	d
AF_ASH	./platform/posix/include/sys/socket.h	196;"	d
AF_ATMPVC	./platform/posix/include/sys/socket.h	185;"	d
AF_ATMSVC	./platform/posix/include/sys/socket.h	198;"	d
AF_AX25	./platform/posix/include/sys/socket.h	180;"	d
AF_BLUETOOTH	./platform/posix/include/sys/socket.h	207;"	d
AF_BRIDGE	./platform/posix/include/sys/socket.h	184;"	d
AF_CAIF	./platform/posix/include/sys/socket.h	213;"	d
AF_CAN	./platform/posix/include/sys/socket.h	205;"	d
AF_DECnet	./platform/posix/include/sys/socket.h	189;"	d
AF_ECONET	./platform/posix/include/sys/socket.h	197;"	d
AF_FILE	./platform/posix/include/sys/socket.h	178;"	d
AF_IEEE802154	./platform/posix/include/sys/socket.h	212;"	d
AF_INET	./platform/posix/include/sys/socket.h	179;"	d
AF_INET6	./platform/posix/include/sys/socket.h	187;"	d
AF_IPX	./platform/posix/include/sys/socket.h	181;"	d
AF_IRDA	./platform/posix/include/sys/socket.h	201;"	d
AF_ISDN	./platform/posix/include/sys/socket.h	210;"	d
AF_IUCV	./platform/posix/include/sys/socket.h	208;"	d
AF_KEY	./platform/posix/include/sys/socket.h	192;"	d
AF_LLC	./platform/posix/include/sys/socket.h	204;"	d
AF_LOCAL	./platform/posix/include/sys/socket.h	176;"	d
AF_MAX	./platform/posix/include/sys/socket.h	217;"	d
AF_NETBEUI	./platform/posix/include/sys/socket.h	190;"	d
AF_NETLINK	./platform/posix/include/sys/socket.h	193;"	d
AF_NETROM	./platform/posix/include/sys/socket.h	183;"	d
AF_NFC	./platform/posix/include/sys/socket.h	215;"	d
AF_PACKET	./platform/posix/include/sys/socket.h	195;"	d
AF_PHONET	./platform/posix/include/sys/socket.h	211;"	d
AF_PPPOX	./platform/posix/include/sys/socket.h	202;"	d
AF_RDS	./platform/posix/include/sys/socket.h	199;"	d
AF_ROSE	./platform/posix/include/sys/socket.h	188;"	d
AF_ROUTE	./platform/posix/include/sys/socket.h	194;"	d
AF_RXRPC	./platform/posix/include/sys/socket.h	209;"	d
AF_SECURITY	./platform/posix/include/sys/socket.h	191;"	d
AF_SNA	./platform/posix/include/sys/socket.h	200;"	d
AF_TIPC	./platform/posix/include/sys/socket.h	206;"	d
AF_UNIX	./platform/posix/include/sys/socket.h	177;"	d
AF_UNSPEC	./platform/posix/include/sys/socket.h	175;"	d
AF_VSOCK	./platform/posix/include/sys/socket.h	216;"	d
AF_WANPIPE	./platform/posix/include/sys/socket.h	203;"	d
AF_X25	./platform/posix/include/sys/socket.h	186;"	d
AI_ADDRCONFIG	./platform/posix/include/netdb.h	37;"	d
AI_ALL	./platform/posix/include/netdb.h	38;"	d
AI_CANONIDN	./platform/posix/include/netdb.h	42;"	d
AI_CANONNAME	./platform/posix/include/netdb.h	34;"	d
AI_IDN	./platform/posix/include/netdb.h	41;"	d
AI_NUMERICHOST	./platform/posix/include/netdb.h	35;"	d
AI_NUMERICSERV	./platform/posix/include/netdb.h	40;"	d
AI_PASSIVE	./platform/posix/include/netdb.h	39;"	d
AI_V4MAPPED	./platform/posix/include/netdb.h	36;"	d
ASYLO_ASSERT_OK	./test/util/status_matchers.h	263;"	d
ASYLO_ASSERT_OK_AND_ASSIGN	./test/util/status_matchers.h	278;"	d
ASYLO_ASSIGN_OR_RETURN	./util/status_macros.h	76;"	d
ASYLO_BAZEL_APPLICATION_WRAPPER_APPLICATION_WRAPPER_DRIVER_MAIN_H_	./bazel/application_wrapper/application_wrapper_driver_main.h	20;"	d
ASYLO_BAZEL_APPLICATION_WRAPPER_ARGV_H_	./bazel/application_wrapper/argv.h	20;"	d
ASYLO_CHECK_OK	./util/status.h	240;"	d
ASYLO_CLIENT_H_	./client.h	20;"	d
ASYLO_CRYPTO_AEAD_CRYPTOR_H_	./crypto/aead_cryptor.h	20;"	d
ASYLO_CRYPTO_AEAD_KEY_H_	./crypto/aead_key.h	20;"	d
ASYLO_CRYPTO_AEAD_TEST_VECTOR_H_	./crypto/aead_test_vector.h	20;"	d
ASYLO_CRYPTO_AES_GCM_SIV_H_	./crypto/aes_gcm_siv.h	20;"	d
ASYLO_CRYPTO_ASYMMETRIC_ENCRYPTION_KEY_H_	./crypto/asymmetric_encryption_key.h	20;"	d
ASYLO_CRYPTO_CERTIFICATE_UTIL_H_	./crypto/certificate_util.h	20;"	d
ASYLO_CRYPTO_ECDSA_P256_SHA256_SIGNING_KEY_H_	./crypto/ecdsa_p256_sha256_signing_key.h	20;"	d
ASYLO_CRYPTO_HASH_INTERFACE_H_	./crypto/hash_interface.h	20;"	d
ASYLO_CRYPTO_NONCE_GENERATOR_H_	./crypto/nonce_generator.h	20;"	d
ASYLO_CRYPTO_NONCE_GENERATOR_INTERFACE_H_	./crypto/nonce_generator_interface.h	20;"	d
ASYLO_CRYPTO_RANDOM_NONCE_GENERATOR_H_	./crypto/random_nonce_generator.h	20;"	d
ASYLO_CRYPTO_RSA_OAEP_ENCRYPTION_KEY_H_	./crypto/rsa_oaep_encryption_key.h	20;"	d
ASYLO_CRYPTO_SHA256_HASH_H_	./crypto/sha256_hash.h	20;"	d
ASYLO_CRYPTO_SIGNING_KEY_H_	./crypto/signing_key.h	20;"	d
ASYLO_CRYPTO_UTIL_BSSL_UTIL_H_	./crypto/util/bssl_util.h	20;"	d
ASYLO_CRYPTO_UTIL_BYTES_H_	./crypto/util/bytes.h	20;"	d
ASYLO_CRYPTO_UTIL_BYTE_CONTAINER_UTIL_H_	./crypto/util/byte_container_util.h	20;"	d
ASYLO_CRYPTO_UTIL_BYTE_CONTAINER_UTIL_INTERNAL_H_	./crypto/util/byte_container_util_internal.h	20;"	d
ASYLO_CRYPTO_UTIL_BYTE_CONTAINER_VIEW_H_	./crypto/util/byte_container_view.h	20;"	d
ASYLO_CRYPTO_UTIL_BYTE_CONTAINER_VIEW_INTERNAL_H_	./crypto/util/byte_container_view_internal.h	20;"	d
ASYLO_CRYPTO_UTIL_TRIVIAL_OBJECT_UTIL_H_	./crypto/util/trivial_object_util.h	20;"	d
ASYLO_DAEMON_IDENTITY_ATTESTATION_DOMAIN_CLIENT_H_	./daemon/identity/attestation_domain_client.h	20;"	d
ASYLO_DAEMON_IDENTITY_ATTESTATION_DOMAIN_H_	./daemon/identity/attestation_domain.h	20;"	d
ASYLO_DAEMON_IDENTITY_ATTESTATION_DOMAIN_SERVICE_IMPL_H_	./daemon/identity/attestation_domain_service_impl.h	20;"	d
ASYLO_ENCLAVE_MANAGER_H_	./enclave_manager.h	20;"	d
ASYLO_EXAMPLES_GRPC_SERVER_TRANSLATOR_SERVER_IMPL_H_	./examples/grpc_server/translator_server_impl.h	20;"	d
ASYLO_EXPECT_OK	./test/util/status_matchers.h	262;"	d
ASYLO_GRPC_AUTH_CORE_ASSERTION_DESCRIPTION_H_	./grpc/auth/core/assertion_description.h	20;"	d
ASYLO_GRPC_AUTH_CORE_CLIENT_EKEP_HANDSHAKER_H_	./grpc/auth/core/client_ekep_handshaker.h	20;"	d
ASYLO_GRPC_AUTH_CORE_EKEP_CRYPTO_H_	./grpc/auth/core/ekep_crypto.h	20;"	d
ASYLO_GRPC_AUTH_CORE_EKEP_ERROR_SPACE_H_	./grpc/auth/core/ekep_error_space.h	20;"	d
ASYLO_GRPC_AUTH_CORE_EKEP_HANDSHAKER_H_	./grpc/auth/core/ekep_handshaker.h	20;"	d
ASYLO_GRPC_AUTH_CORE_EKEP_HANDSHAKER_UTIL_H_	./grpc/auth/core/ekep_handshaker_util.h	20;"	d
ASYLO_GRPC_AUTH_CORE_ENCLAVE_CREDENTIALS_H_	./grpc/auth/core/enclave_credentials.h	20;"	d
ASYLO_GRPC_AUTH_CORE_ENCLAVE_CREDENTIALS_OPTIONS_H_	./grpc/auth/core/enclave_credentials_options.h	20;"	d
ASYLO_GRPC_AUTH_CORE_ENCLAVE_GRPC_SECURITY_CONSTANTS_H_	./grpc/auth/core/enclave_grpc_security_constants.h	20;"	d
ASYLO_GRPC_AUTH_CORE_ENCLAVE_SECURITY_CONNECTOR_H_	./grpc/auth/core/enclave_security_connector.h	20;"	d
ASYLO_GRPC_AUTH_CORE_ENCLAVE_TRANSPORT_SECURITY_H_	./grpc/auth/core/enclave_transport_security.h	20;"	d
ASYLO_GRPC_AUTH_CORE_SERVER_EKEP_HANDSHAKER_H_	./grpc/auth/core/server_ekep_handshaker.h	20;"	d
ASYLO_GRPC_AUTH_CORE_TRANSCRIPT_H_	./grpc/auth/core/transcript.h	20;"	d
ASYLO_GRPC_AUTH_ENCLAVE_AUTH_CONTEXT_H_	./grpc/auth/enclave_auth_context.h	20;"	d
ASYLO_GRPC_AUTH_ENCLAVE_CHANNEL_CREDENTIALS_H_	./grpc/auth/enclave_channel_credentials.h	20;"	d
ASYLO_GRPC_AUTH_ENCLAVE_CREDENTIALS_OPTIONS_H_	./grpc/auth/enclave_credentials_options.h	20;"	d
ASYLO_GRPC_AUTH_ENCLAVE_SERVER_CREDENTIALS_H_	./grpc/auth/enclave_server_credentials.h	20;"	d
ASYLO_GRPC_AUTH_NULL_CREDENTIALS_OPTIONS_H_	./grpc/auth/null_credentials_options.h	20;"	d
ASYLO_GRPC_AUTH_PEER_IDENTITY_UTIL_H_	./grpc/auth/peer_identity_util.h	20;"	d
ASYLO_GRPC_AUTH_SGX_LOCAL_CREDENTIALS_OPTIONS_H_	./grpc/auth/sgx_local_credentials_options.h	20;"	d
ASYLO_GRPC_AUTH_TEST_MOCK_ENCLAVE_AUTH_CONTEXT_H_	./grpc/auth/test/mock_enclave_auth_context.h	20;"	d
ASYLO_GRPC_AUTH_UTIL_BRIDGE_CPP_TO_C_H_	./grpc/auth/util/bridge_cpp_to_c.h	20;"	d
ASYLO_GRPC_AUTH_UTIL_MULTI_BUFFER_INPUT_STREAM_H_	./grpc/auth/util/multi_buffer_input_stream.h	20;"	d
ASYLO_GRPC_AUTH_UTIL_SAFE_STRING_H_	./grpc/auth/util/safe_string.h	20;"	d
ASYLO_GRPC_UTIL_ENCLAVE_SERVER_H_	./grpc/util/enclave_server.h	20;"	d
ASYLO_GRPC_UTIL_GRPC_SERVER_LAUNCHER_H_	./grpc/util/grpc_server_launcher.h	20;"	d
ASYLO_IDENTITY_ADDITIONAL_AUTHENTICATED_DATA_GENERATOR_H_	./identity/additional_authenticated_data_generator.h	20;"	d
ASYLO_IDENTITY_ASSERTION_DESCRIPTION_UTIL_H_	./identity/assertion_description_util.h	20;"	d
ASYLO_IDENTITY_DELEGATING_IDENTITY_EXPECTATION_MATCHER_H_	./identity/delegating_identity_expectation_matcher.h	20;"	d
ASYLO_IDENTITY_DESCRIPTIONS_H_	./identity/descriptions.h	20;"	d
ASYLO_IDENTITY_ENCLAVE_ASSERTION_AUTHORITY_H_	./identity/enclave_assertion_authority.h	20;"	d
ASYLO_IDENTITY_ENCLAVE_ASSERTION_GENERATOR_H_	./identity/enclave_assertion_generator.h	20;"	d
ASYLO_IDENTITY_ENCLAVE_ASSERTION_VERIFIER_H_	./identity/enclave_assertion_verifier.h	20;"	d
ASYLO_IDENTITY_IDENTITY_ACL_EVALUATOR_H_	./identity/identity_acl_evaluator.h	20;"	d
ASYLO_IDENTITY_IDENTITY_EXPECTATION_MATCHER_H_	./identity/identity_expectation_matcher.h	20;"	d
ASYLO_IDENTITY_INIT_H_	./identity/init.h	20;"	d
ASYLO_IDENTITY_INIT_INTERNAL_H_	./identity/init_internal.h	20;"	d
ASYLO_IDENTITY_NAMED_IDENTITY_EXPECTATION_MATCHER_H_	./identity/named_identity_expectation_matcher.h	20;"	d
ASYLO_IDENTITY_NULL_IDENTITY_NULL_ASSERTION_GENERATOR_H_	./identity/null_identity/null_assertion_generator.h	20;"	d
ASYLO_IDENTITY_NULL_IDENTITY_NULL_ASSERTION_VERIFIER_H_	./identity/null_identity/null_assertion_verifier.h	20;"	d
ASYLO_IDENTITY_NULL_IDENTITY_NULL_IDENTITY_CONSTANTS_H_	./identity/null_identity/null_identity_constants.h	20;"	d
ASYLO_IDENTITY_NULL_IDENTITY_NULL_IDENTITY_EXPECTATION_MATCHER_H_	./identity/null_identity/null_identity_expectation_matcher.h	20;"	d
ASYLO_IDENTITY_NULL_IDENTITY_NULL_IDENTITY_UTIL_H_	./identity/null_identity/null_identity_util.h	20;"	d
ASYLO_IDENTITY_SECRET_SEALER_H_	./identity/secret_sealer.h	20;"	d
ASYLO_IDENTITY_SGX_ATTRIBUTES_UTIL_H_	./identity/sgx/attributes_util.h	20;"	d
ASYLO_IDENTITY_SGX_CODE_IDENTITY_CONSTANTS_H_	./identity/sgx/code_identity_constants.h	20;"	d
ASYLO_IDENTITY_SGX_CODE_IDENTITY_TEST_UTIL_H_	./identity/sgx/code_identity_test_util.h	20;"	d
ASYLO_IDENTITY_SGX_CODE_IDENTITY_UTIL_H_	./identity/sgx/code_identity_util.h	20;"	d
ASYLO_IDENTITY_SGX_DCAP_INTEL_ARCHITECTURAL_ENCLAVE_INTERFACE_H_	./identity/sgx/dcap_intel_architectural_enclave_interface.h	20;"	d
ASYLO_IDENTITY_SGX_FAKE_ENCLAVE_H_	./identity/sgx/fake_enclave.h	20;"	d
ASYLO_IDENTITY_SGX_HARDWARE_INTERFACE_H_	./identity/sgx/hardware_interface.h	20;"	d
ASYLO_IDENTITY_SGX_IDENTITY_KEY_MANAGEMENT_STRUCTS_H_	./identity/sgx/identity_key_management_structs.h	20;"	d
ASYLO_IDENTITY_SGX_INTEL_ARCHITECTURAL_ENCLAVE_INTERFACE_H_	./identity/sgx/intel_architectural_enclave_interface.h	20;"	d
ASYLO_IDENTITY_SGX_INTEL_CERTS_INTEL_SGX_ROOT_CA_CERT_H_	./identity/sgx/intel_certs/intel_sgx_root_ca_cert.h	20;"	d
ASYLO_IDENTITY_SGX_LOCAL_SECRET_SEALER_HELPERS_H_	./identity/sgx/local_secret_sealer_helpers.h	20;"	d
ASYLO_IDENTITY_SGX_PCE_UTIL_H_	./identity/sgx/pce_util.h	20;"	d
ASYLO_IDENTITY_SGX_PLATFORM_PROVISIONING_H_	./identity/sgx/platform_provisioning.h	20;"	d
ASYLO_IDENTITY_SGX_PROTO_FORMAT_H_	./identity/sgx/proto_format.h	20;"	d
ASYLO_IDENTITY_SGX_REMOTE_ASSERTION_UTIL_H_	./identity/sgx/remote_assertion_util.h	20;"	d
ASYLO_IDENTITY_SGX_SECS_ATTRIBUTES_H_	./identity/sgx/secs_attributes.h	20;"	d
ASYLO_IDENTITY_SGX_SECS_MISCSELECT_H_	./identity/sgx/secs_miscselect.h	20;"	d
ASYLO_IDENTITY_SGX_SELF_IDENTITY_H_	./identity/sgx/self_identity.h	20;"	d
ASYLO_IDENTITY_SGX_SELF_IDENTITY_INTERNAL_H_	./identity/sgx/self_identity_internal.h	20;"	d
ASYLO_IDENTITY_SGX_SGX_CODE_IDENTITY_EXPECTATION_MATCHER_H_	./identity/sgx/sgx_code_identity_expectation_matcher.h	20;"	d
ASYLO_IDENTITY_SGX_SGX_LOCAL_ASSERTION_GENERATOR_H_	./identity/sgx/sgx_local_assertion_generator.h	20;"	d
ASYLO_IDENTITY_SGX_SGX_LOCAL_ASSERTION_VERIFIER_H_	./identity/sgx/sgx_local_assertion_verifier.h	20;"	d
ASYLO_IDENTITY_SGX_SGX_LOCAL_SECRET_SEALER_H_	./identity/sgx/sgx_local_secret_sealer.h	20;"	d
ASYLO_IDENTITY_SGX_TCB_H_	./identity/sgx/tcb.h	20;"	d
ASYLO_IDENTITY_SGX_TCB_INFO_FROM_JSON_H_	./identity/sgx/tcb_info_from_json.h	20;"	d
ASYLO_IDENTITY_TEST_MOCK_IDENTITY_EXPECTATION_MATCHER_H_	./identity/test/mock_identity_expectation_matcher.h	20;"	d
ASYLO_IDENTITY_UTIL_ALIGNED_OBJECT_PTR_H_	./identity/util/aligned_object_ptr.h	20;"	d
ASYLO_IDENTITY_UTIL_SHA256_HASH_UTIL_H_	./identity/util/sha256_hash_util.h	20;"	d
ASYLO_MUST_USE_RESULT	./platform/primitives/trusted_primitives.h	/^                              size_t size) ASYLO_MUST_USE_RESULT;$/;"	m	class:asylo::primitives::TrustedPrimitives
ASYLO_MUST_USE_RESULT	./platform/primitives/trusted_primitives.h	/^      ASYLO_MUST_USE_RESULT;$/;"	m	class:asylo::primitives::TrustedPrimitives
ASYLO_MUST_USE_RESULT	./platform/primitives/trusted_primitives.h	/^  static void *UntrustedLocalAlloc(size_t size) ASYLO_MUST_USE_RESULT;$/;"	m	class:asylo::primitives::TrustedPrimitives
ASYLO_MUST_USE_RESULT	./platform/primitives/untrusted_primitives.h	/^                                     Client *client) ASYLO_MUST_USE_RESULT = 0;$/;"	m	class:asylo::primitives::Client::ExitCallProvider
ASYLO_MUST_USE_RESULT	./platform/primitives/untrusted_primitives.h	/^                     NativeParameterStack *params) ASYLO_MUST_USE_RESULT;$/;"	m	class:asylo::primitives::Client
ASYLO_MUST_USE_RESULT	./platform/primitives/untrusted_primitives.h	/^        ASYLO_MUST_USE_RESULT = 0;$/;"	m	class:asylo::primitives::Client::ExitCallProvider
ASYLO_MUST_USE_RESULT	./platform/primitives/untrusted_primitives.h	/^      ASYLO_MUST_USE_RESULT = 0;$/;"	m	class:asylo::primitives::Client
ASYLO_MUST_USE_RESULT	./platform/primitives/util/dispatch_table.h	/^                           Client *client) override ASYLO_MUST_USE_RESULT;$/;"	m	class:asylo::primitives::DispatchTable
ASYLO_MUST_USE_RESULT	./util/asylo_macros.h	27;"	d
ASYLO_MUST_USE_RESULT	./util/asylo_macros.h	29;"	d
ASYLO_PLATFORM_ARCH_INCLUDE_TRUSTED_FORK_H_	./platform/arch/include/trusted/fork.h	20;"	d
ASYLO_PLATFORM_ARCH_INCLUDE_TRUSTED_HARDWARE_RANDOM_H_	./platform/arch/include/trusted/hardware_random.h	20;"	d
ASYLO_PLATFORM_ARCH_INCLUDE_TRUSTED_HOST_CALLS_H_	./platform/arch/include/trusted/host_calls.h	20;"	d
ASYLO_PLATFORM_ARCH_INCLUDE_TRUSTED_REGISTER_SIGNAL_H_	./platform/arch/include/trusted/register_signal.h	20;"	d
ASYLO_PLATFORM_ARCH_INCLUDE_TRUSTED_TIME_H_	./platform/arch/include/trusted/time.h	20;"	d
ASYLO_PLATFORM_ARCH_SGX_UNTRUSTED_SGX_CLIENT_H_	./platform/arch/sgx/untrusted/sgx_client.h	20;"	d
ASYLO_PLATFORM_COMMON_BRIDGE_FUNCTIONS_H_	./platform/common/bridge_functions.h	20;"	d
ASYLO_PLATFORM_COMMON_BRIDGE_PROTO_SERIALIZER_H_	./platform/common/bridge_proto_serializer.h	20;"	d
ASYLO_PLATFORM_COMMON_BRIDGE_TYPES_H_	./platform/common/bridge_types.h	20;"	d
ASYLO_PLATFORM_COMMON_DEBUG_STRINGS_H_	./platform/common/debug_strings.h	20;"	d
ASYLO_PLATFORM_COMMON_FUTEX_H_	./platform/common/futex.h	20;"	d
ASYLO_PLATFORM_COMMON_HASH_COMBINE_H_	./platform/common/hash_combine.h	20;"	d
ASYLO_PLATFORM_COMMON_MEMORY_H_	./platform/common/memory.h	20;"	d
ASYLO_PLATFORM_COMMON_RING_BUFFER_H_	./platform/common/ring_buffer.h	20;"	d
ASYLO_PLATFORM_COMMON_SINGLETON_H_	./platform/common/singleton.h	20;"	d
ASYLO_PLATFORM_COMMON_SPIN_LOCK_H_	./platform/common/spin_lock.h	20;"	d
ASYLO_PLATFORM_COMMON_STATIC_MAP_H_	./platform/common/static_map.h	20;"	d
ASYLO_PLATFORM_COMMON_STATIC_MAP_INTERNAL_H_	./platform/common/static_map_internal.h	20;"	d
ASYLO_PLATFORM_COMMON_TEST_BRIDGE_TYPES_TEST_DATA_H_	./platform/common/test/bridge_types_test_data.h	20;"	d
ASYLO_PLATFORM_COMMON_TIME_UTIL_H_	./platform/common/time_util.h	20;"	d
ASYLO_PLATFORM_CORE_ATOMIC_H_	./platform/core/atomic.h	20;"	d
ASYLO_PLATFORM_CORE_BRIDGE_MSGHDR_WRAPPER_H_	./platform/core/bridge_msghdr_wrapper.h	20;"	d
ASYLO_PLATFORM_CORE_ENCLAVE_CLIENT_H_	./platform/core/enclave_client.h	20;"	d
ASYLO_PLATFORM_CORE_ENCLAVE_CONFIG_UTIL_H_	./platform/core/enclave_config_util.h	20;"	d
ASYLO_PLATFORM_CORE_ENCLAVE_MANAGER_H_	./platform/core/enclave_manager.h	20;"	d
ASYLO_PLATFORM_CORE_ENTRY_POINTS_H_	./platform/core/entry_points.h	20;"	d
ASYLO_PLATFORM_CORE_SHARED_NAME_H_	./platform/core/shared_name.h	20;"	d
ASYLO_PLATFORM_CORE_SHARED_NAME_KIND_H_	./platform/core/shared_name_kind.h	20;"	d
ASYLO_PLATFORM_CORE_SHARED_RESOURCE_MANAGER_H_	./platform/core/shared_resource_manager.h	20;"	d
ASYLO_PLATFORM_CORE_TRUSTED_APPLICATION_H_	./platform/core/trusted_application.h	20;"	d
ASYLO_PLATFORM_CORE_TRUSTED_GLOBAL_STATE_H_	./platform/core/trusted_global_state.h	20;"	d
ASYLO_PLATFORM_CORE_TRUSTED_MUTEX_H_	./platform/core/trusted_mutex.h	20;"	d
ASYLO_PLATFORM_CORE_TRUSTED_SPIN_LOCK_H_	./platform/core/trusted_spin_lock.h	20;"	d
ASYLO_PLATFORM_CORE_UNTRUSTED_CACHE_MALLOC_H_	./platform/core/untrusted_cache_malloc.h	20;"	d
ASYLO_PLATFORM_CORE_UNTRUSTED_MUTEX_H_	./platform/core/untrusted_mutex.h	20;"	d
ASYLO_PLATFORM_CRYPTO_GCMLIB_GCM_CRYPTOR_H_	./platform/crypto/gcmlib/gcm_cryptor.h	20;"	d
ASYLO_PLATFORM_HOST_CALL_EXIT_HANDLER_CONSTANTS_H_	./platform/host_call/exit_handler_constants.h	20;"	d
ASYLO_PLATFORM_HOST_CALL_TEST_ENCLAVE_TEST_SELECTORS_H_	./platform/host_call/test/enclave_test_selectors.h	20;"	d
ASYLO_PLATFORM_HOST_CALL_TRUSTED_HOST_CALLS_H_	./platform/host_call/trusted/host_calls.h	20;"	d
ASYLO_PLATFORM_HOST_CALL_TRUSTED_HOST_CALL_DISPATCHER_H_	./platform/host_call/trusted/host_call_dispatcher.h	20;"	d
ASYLO_PLATFORM_HOST_CALL_UNTRUSTED_HOST_CALL_HANDLERS_H_	./platform/host_call/untrusted/host_call_handlers.h	20;"	d
ASYLO_PLATFORM_HOST_CALL_UNTRUSTED_HOST_CALL_HANDLERS_INITIALIZER_H_	./platform/host_call/untrusted/host_call_handlers_initializer.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_ARPA_INET_H_	./platform/posix/include/arpa/inet.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_ARPA_NAMESER_H_	./platform/posix/include/arpa/nameser.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_BYTESWAP_H_	./platform/posix/include/byteswap.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_DLFCN_H_	./platform/posix/include/dlfcn.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_ENDIAN_H_	./platform/posix/include/endian.h	22;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_ERRNO_H_	./platform/posix/include/errno.h	22;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_FCNTL_H_	./platform/posix/include/fcntl.h	22;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_IFADDRS_H_	./platform/posix/include/ifaddrs.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_INTERNAL_SCHED_H_	./platform/posix/include/internal/sched.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_MATH_H_	./platform/posix/include/math.h	23;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_NETDB_H_	./platform/posix/include/netdb.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_NETINET_IN_H_	./platform/posix/include/netinet/in.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_NETINET_TCP_H_	./platform/posix/include/netinet/tcp.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_NETINET_UDP_H_	./platform/posix/include/netinet/udp.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_NET_IF_H_	./platform/posix/include/net/if.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_POLL_H_	./platform/posix/include/poll.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SCHED_H_	./platform/posix/include/sched.h	22;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SEMAPHORE_H_	./platform/posix/include/semaphore.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SIGNAL_H_	./platform/posix/include/signal.h	22;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYSLOG_H_	./platform/posix/include/syslog.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_EPOLL_H_	./platform/posix/include/sys/epoll.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_EVENTFD_H_	./platform/posix/include/sys/eventfd.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_INOTIFY_H_	./platform/posix/include/sys/inotify.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_IOCTL_H_	./platform/posix/include/sys/ioctl.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_MMAN_H_	./platform/posix/include/sys/mman.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_POLL_H_	./platform/posix/include/sys/poll.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_RESOURCE_H_	./platform/posix/include/sys/resource.h	22;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_SOCKET_H_	./platform/posix/include/sys/socket.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_STAT_H_	./platform/posix/include/sys/stat.h	25;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_SYSLOG_H_	./platform/posix/include/sys/syslog.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_TERMIOS_H_	./platform/posix/include/sys/termios.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_UCONTEXT_H_	./platform/posix/include/sys/ucontext.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_UIO_H_	./platform/posix/include/sys/uio.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_UN_H_	./platform/posix/include/sys/un.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_UTSNAME_H_	./platform/posix/include/sys/utsname.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_SYS_WAIT_H_	./platform/posix/include/sys/wait.h	22;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_TIME_H_	./platform/posix/include/time.h	22;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_UCONTEXT_H_	./platform/posix/include/ucontext.h	20;"	d
ASYLO_PLATFORM_POSIX_INCLUDE_UTIME_H_	./platform/posix/include/utime.h	20;"	d
ASYLO_PLATFORM_POSIX_IO_IO_CONTEXT_EPOLL_H_	./platform/posix/io/io_context_epoll.h	20;"	d
ASYLO_PLATFORM_POSIX_IO_IO_CONTEXT_EVENTFD_H_	./platform/posix/io/io_context_eventfd.h	20;"	d
ASYLO_PLATFORM_POSIX_IO_IO_CONTEXT_INOTIFY_H_	./platform/posix/io/io_context_inotify.h	20;"	d
ASYLO_PLATFORM_POSIX_IO_IO_MANAGER_H_	./platform/posix/io/io_manager.h	20;"	d
ASYLO_PLATFORM_POSIX_IO_NATIVE_PATHS_H_	./platform/posix/io/native_paths.h	20;"	d
ASYLO_PLATFORM_POSIX_IO_RANDOM_DEVICES_H_	./platform/posix/io/random_devices.h	20;"	d
ASYLO_PLATFORM_POSIX_IO_SECURE_PATHS_H_	./platform/posix/io/secure_paths.h	20;"	d
ASYLO_PLATFORM_POSIX_IO_UTIL_H_	./platform/posix/io/util.h	20;"	d
ASYLO_PLATFORM_POSIX_MEMORY_MEMORY_H_	./platform/posix/memory/memory.h	20;"	d
ASYLO_PLATFORM_POSIX_PTHREAD_IMPL_H_	./platform/posix/pthread_impl.h	20;"	d
ASYLO_PLATFORM_POSIX_SIGNAL_SIGNAL_MANAGER_H_	./platform/posix/signal/signal_manager.h	20;"	d
ASYLO_PLATFORM_POSIX_SOCKETS_SOCKET_CLIENT_H_	./platform/posix/sockets/socket_client.h	20;"	d
ASYLO_PLATFORM_POSIX_SOCKETS_SOCKET_SERVER_H_	./platform/posix/sockets/socket_server.h	20;"	d
ASYLO_PLATFORM_POSIX_SOCKETS_SOCKET_TEST_TRANSMIT_H_	./platform/posix/sockets/socket_test_transmit.h	20;"	d
ASYLO_PLATFORM_POSIX_SOCKETS_SOCKET_TRANSMIT_H_	./platform/posix/sockets/socket_transmit.h	20;"	d
ASYLO_PLATFORM_POSIX_THREADING_THREAD_MANAGER_H_	./platform/posix/threading/thread_manager.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_EXAMPLES_HELLO_ENCLAVE_H_	./platform/primitives/examples/hello_enclave.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_EXTENT_H_	./platform/primitives/extent.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_PARAMETER_STACK_H_	./platform/primitives/parameter_stack.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_PRIMITIVES_H_	./platform/primitives/primitives.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_PRIMITIVE_STATUS_H_	./platform/primitives/primitive_status.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_SGX_SGX_ERROR_SPACE_H_	./platform/primitives/sgx/sgx_error_space.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_SGX_TRUSTED_SGX_H_	./platform/primitives/sgx/trusted_sgx.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_SGX_UNTRUSTED_SGX_H_	./platform/primitives/sgx/untrusted_sgx.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_SIM_SHARED_SIM_H_	./platform/primitives/sim/shared_sim.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_SIM_UNTRUSTED_SIM_H_	./platform/primitives/sim/untrusted_sim.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_TEST_SGX_TEST_BACKEND_H_	./platform/primitives/test/sgx_test_backend.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_TEST_SIM_TEST_BACKEND_H_	./platform/primitives/test/sim_test_backend.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_TEST_TEST_BACKEND_H_	./platform/primitives/test/test_backend.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_TEST_TEST_SELECTORS_H_	./platform/primitives/test/test_selectors.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_TRUSTED_PRIMITIVES_H_	./platform/primitives/trusted_primitives.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_TRUSTED_RUNTIME_H_	./platform/primitives/trusted_runtime.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_UNTRUSTED_PRIMITIVES_H_	./platform/primitives/untrusted_primitives.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_UTIL_DISPATCH_TABLE_H_	./platform/primitives/util/dispatch_table.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_UTIL_MESSAGE_H_	./platform/primitives/util/message.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_UTIL_PRIMITIVE_LOCKS_H_	./platform/primitives/util/primitive_locks.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_UTIL_STATUS_CONVERSIONS_H_	./platform/primitives/util/status_conversions.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_UTIL_TRUSTED_MEMORY_H_	./platform/primitives/util/trusted_memory.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_UTIL_TRUSTED_RUNTIME_HELPER_H_	./platform/primitives/util/trusted_runtime_helper.h	20;"	d
ASYLO_PLATFORM_PRIMITIVES_X86_SPIN_LOCK_H_	./platform/primitives/x86/spin_lock.h	20;"	d
ASYLO_PLATFORM_STORAGE_SECURE_AEAD_HANDLER_H_	./platform/storage/secure/aead_handler.h	20;"	d
ASYLO_PLATFORM_STORAGE_SECURE_AUTHENTICATED_DICTIONARY_H_	./platform/storage/secure/authenticated_dictionary.h	20;"	d
ASYLO_PLATFORM_STORAGE_SECURE_CTMMT_AUTHENTICATED_DICTIONARY_H_	./platform/storage/secure/ctmmt_authenticated_dictionary.h	20;"	d
ASYLO_PLATFORM_STORAGE_SECURE_ENCLAVE_STORAGE_SECURE_H_	./platform/storage/secure/enclave_storage_secure.h	20;"	d
ASYLO_PLATFORM_STORAGE_UTILS_FD_CLOSER_H_	./platform/storage/utils/fd_closer.h	20;"	d
ASYLO_PLATFORM_STORAGE_UTILS_OFFSET_TRANSLATOR_H_	./platform/storage/utils/offset_translator.h	20;"	d
ASYLO_PLATFORM_STORAGE_UTILS_RANDOM_ACCESS_STORAGE_H_	./platform/storage/utils/random_access_storage.h	20;"	d
ASYLO_PLATFORM_STORAGE_UTILS_RECORD_STORE_H_	./platform/storage/utils/record_store.h	20;"	d
ASYLO_PLATFORM_STORAGE_UTILS_TEST_UTILS_H_	./platform/storage/utils/test_utils.h	20;"	d
ASYLO_PLATFORM_STORAGE_UTILS_UNTRUSTED_FILE_H_	./platform/storage/utils/untrusted_file.h	20;"	d
ASYLO_PLATFORM_SYSTEM_CALL_MESSAGE_H_	./platform/system_call/message.h	20;"	d
ASYLO_PLATFORM_SYSTEM_CALL_METADATA_H_	./platform/system_call/metadata.h	20;"	d
ASYLO_PLATFORM_SYSTEM_CALL_SERIALIZE_H_	./platform/system_call/serialize.h	20;"	d
ASYLO_PLATFORM_SYSTEM_CALL_SYSTEM_CALL_H_	./platform/system_call/system_call.h	20;"	d
ASYLO_PLATFORM_SYSTEM_CALL_TYPE_CONVERSIONS_MANUAL_TYPES_FUNCTIONS_H_	./platform/system_call/type_conversions/manual_types_functions.h	20;"	d
ASYLO_PLATFORM_SYSTEM_CALL_TYPE_CONVERSIONS_TYPES_FUNCTIONS_H_	./platform/system_call/type_conversions/types_functions.h	20;"	d
ASYLO_PLATFORM_SYSTEM_CALL_TYPE_CONVERSIONS_TYPES_H_	./platform/system_call/type_conversions/types.h	20;"	d
ASYLO_PLATFORM_SYSTEM_CALL_UNTRUSTED_INVOKE_H_	./platform/system_call/untrusted_invoke.h	20;"	d
ASYLO_PLATFORM_SYSTEM_INCLUDE_ARPA_NAMESER_COMPAT_H_	./platform/system/include/arpa/nameser_compat.h	20;"	d
ASYLO_PLATFORM_SYSTEM_INCLUDE_ARPA_NAMESER_H_	./platform/system/include/arpa/nameser.h	20;"	d
ASYLO_PLATFORM_SYSTEM_INCLUDE_SYS_SYSMACROS_H_	./platform/system/include/sys/sysmacros.h	20;"	d
ASYLO_RETURN_IF_ERROR	./util/status_macros.h	36;"	d
ASYLO_RETURN_IF_INCORRECT_ARGUMENTS	./platform/primitives/parameter_stack.h	212;"	d
ASYLO_RETURN_IF_STACK_EMPTY	./platform/primitives/parameter_stack.h	204;"	d
ASYLO_SPIN_LOCK_INITIALIZER	./platform/primitives/x86/spin_lock.h	36;"	d
ASYLO_TEST_GRPC_CLIENT_ENCLAVE_H_	./test/grpc/client_enclave.h	20;"	d
ASYLO_TEST_GRPC_MESSENGER_CLIENT_IMPL_H_	./test/grpc/messenger_client_impl.h	20;"	d
ASYLO_TEST_GRPC_MESSENGER_SERVER_IMPL_H_	./test/grpc/messenger_server_impl.h	20;"	d
ASYLO_TEST_MISC_EXCEPTION_H_	./test/misc/exception.h	20;"	d
ASYLO_TEST_UTIL_ENCLAVE_ASSERTION_AUTHORITY_CONFIGS_H_	./test/util/enclave_assertion_authority_configs.h	20;"	d
ASYLO_TEST_UTIL_ENCLAVE_TEST_APPLICATION_H_	./test/util/enclave_test_application.h	20;"	d
ASYLO_TEST_UTIL_ENCLAVE_TEST_H_	./test/util/enclave_test.h	20;"	d
ASYLO_TEST_UTIL_ENCLAVE_TEST_LAUNCHER_H_	./test/util/enclave_test_launcher.h	20;"	d
ASYLO_TEST_UTIL_EXEC_TESTER_H_	./test/util/exec_tester.h	20;"	d
ASYLO_TEST_UTIL_FAKE_ENCLAVE_LOADER_H_	./test/util/fake_enclave_loader.h	20;"	d
ASYLO_TEST_UTIL_FINITE_DOMAIN_FUZZ_H_	./test/util/finite_domain_fuzz.h	20;"	d
ASYLO_TEST_UTIL_GRPC_DEBUG_CONFIG_H_	./test/util/grpc_debug_config.h	20;"	d
ASYLO_TEST_UTIL_MOCK_ENCLAVE_CLIENT_H_	./test/util/mock_enclave_client.h	20;"	d
ASYLO_TEST_UTIL_MOCK_ENCLAVE_LOADER_H_	./test/util/mock_enclave_loader.h	20;"	d
ASYLO_TEST_UTIL_OUTPUT_COLLECTOR_H_	./test/util/output_collector.h	20;"	d
ASYLO_TEST_UTIL_PROTO_MATCHERS_H_	./test/util/proto_matchers.h	20;"	d
ASYLO_TEST_UTIL_PTHREAD_TEST_UTIL_H_	./test/util/pthread_test_util.h	20;"	d
ASYLO_TEST_UTIL_STATUS_MATCHERS_H_	./test/util/status_matchers.h	20;"	d
ASYLO_TEST_UTIL_TEST_FLAGS_H_	./test/util/test_flags.h	20;"	d
ASYLO_TRUSTED_APPLICATION_H_	./trusted_application.h	20;"	d
ASYLO_UTIL_ASYLO_MACROS_H_	./util/asylo_macros.h	20;"	d
ASYLO_UTIL_BINARY_SEARCH_H_	./util/binary_search.h	20;"	d
ASYLO_UTIL_CLEANSING_ALLOCATOR_H_	./util/cleansing_allocator.h	20;"	d
ASYLO_UTIL_CLEANSING_TYPES_H_	./util/cleansing_types.h	20;"	d
ASYLO_UTIL_CLEANUP_H_	./util/cleanup.h	20;"	d
ASYLO_UTIL_ELF_READER_H_	./util/elf_reader.h	20;"	d
ASYLO_UTIL_ERROR_CODES_H_	./util/error_codes.h	20;"	d
ASYLO_UTIL_ERROR_SPACE_H_	./util/error_space.h	20;"	d
ASYLO_UTIL_FD_UTILS_H_	./util/fd_utils.h	20;"	d
ASYLO_UTIL_FILE_MAPPING_H_	./util/file_mapping.h	20;"	d
ASYLO_UTIL_LOGGING_H_	./util/logging.h	20;"	d
ASYLO_UTIL_MUTEX_GUARDED_H_	./util/mutex_guarded.h	20;"	d
ASYLO_UTIL_PATH_H_	./util/path.h	20;"	d
ASYLO_UTIL_POSIX_ERROR_SPACE_H_	./util/posix_error_space.h	20;"	d
ASYLO_UTIL_PROTO_STRUCT_UTIL_H_	./util/proto_struct_util.h	20;"	d
ASYLO_UTIL_STATUSOR_H_	./util/statusor.h	20;"	d
ASYLO_UTIL_STATUS_ERROR_SPACE_H_	./util/status_error_space.h	20;"	d
ASYLO_UTIL_STATUS_H_	./util/status.h	20;"	d
ASYLO_UTIL_STATUS_INTERNAL_H_	./util/status_internal.h	20;"	d
ASYLO_UTIL_STATUS_MACROS_H_	./util/status_macros.h	20;"	d
ASYLO_UTIL_STD_THREAD_H_	./util/std_thread.h	20;"	d
ASYLO_UTIL_THREAD_H_	./util/thread.h	20;"	d
AVX	./identity/sgx/secs_attributes.h	/^  AVX = 64 + 2,        \/\/ Determines the behavior of certain AVX capabilities.$/;"	m	class:asylo::sgx::SecsAttributeBit
Abort	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus Abort(void *context,$/;"	f	namespace:asylo::host_call::__anon291
Abort	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus Abort(void *context,$/;"	f	namespace:asylo::host_call::__anon37
Abort	./platform/primitives/examples/hello_enclave.cc	/^PrimitiveStatus Abort(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon344
Abort	./platform/primitives/examples/hello_enclave.cc	/^PrimitiveStatus Abort(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon90
Abort	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus Abort(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon335
Abort	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus Abort(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon81
AbortHandshake	./grpc/auth/core/client_ekep_handshaker.cc	/^void ClientEkepHandshaker::AbortHandshake(const Status &abort_status,$/;"	f	class:asylo::ClientEkepHandshaker
AbortHandshake	./grpc/auth/core/server_ekep_handshaker.cc	/^void ServerEkepHandshaker::AbortHandshake(const Status &abort_status,$/;"	f	class:asylo::ServerEkepHandshaker
Accept	./platform/posix/io/io_manager.cc	/^int IOManager::Accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen) {$/;"	f	class:asylo::io::IOManager
Accept	./platform/posix/io/io_manager.h	/^    virtual int Accept(struct sockaddr *addr, socklen_t *addrlen) {$/;"	f	class:asylo::io::IOManager::IOContext
Accept	./platform/posix/io/native_paths.cc	/^int IOContextNative::Accept(struct sockaddr *addr, socklen_t *addrlen) {$/;"	f	class:asylo::io::IOContextNative
Access	./platform/posix/io/io_manager.cc	/^int IOManager::Access(const char *path, int mode) {$/;"	f	class:asylo::io::IOManager
Access	./platform/posix/io/io_manager.h	/^    virtual int Access(const char *path, int mode) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Access	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Access(const char *path, int mode) {$/;"	f	class:asylo::io::NativePathHandler
Acquire	./platform/common/spin_lock.h	/^  void Acquire() {$/;"	f	class:SpinLock
AcquireResource	./platform/core/shared_resource_manager.h	/^  T *AcquireResource(const SharedName &name) {$/;"	f	class:asylo::SharedResourceManager
ActiveEnclaveSignalTest	./test/misc/active_enclave_signal_test_driver.cc	/^class ActiveEnclaveSignalTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon198	file:
ActiveEnclaveSignalTest	./test/misc/active_enclave_signal_test_driver.cc	/^class ActiveEnclaveSignalTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon452	file:
ActiveEnclaveSignalTest	./test/misc/active_enclave_signal_test_enclave.cc	/^class ActiveEnclaveSignalTest : public TrustedApplication {$/;"	c	namespace:asylo	file:
Add	./grpc/auth/core/transcript.cc	/^void Transcript::Add(const void *data, size_t len) {$/;"	f	class:asylo::Transcript
Add	./grpc/auth/core/transcript.cc	/^void Transcript::Add(google::protobuf::io::ZeroCopyInputStream *input) {$/;"	f	class:asylo::Transcript
Add	./grpc/auth/enclave_credentials_options.cc	/^EnclaveCredentialsOptions &EnclaveCredentialsOptions::Add($/;"	f	class:asylo::EnclaveCredentialsOptions
AddAndVerifyIdentities	./grpc/auth/core/assertion_description_test.cc	/^  void AddAndVerifyIdentities(int num_descriptions,$/;"	f	class:asylo::__anon259::AssertionDescriptionTest
AddAndVerifyIdentities	./grpc/auth/core/assertion_description_test.cc	/^  void AddAndVerifyIdentities(int num_descriptions,$/;"	f	class:asylo::__anon513::AssertionDescriptionTest
AddBuffer	./grpc/auth/util/multi_buffer_input_stream.cc	/^void MultiBufferInputStream::AddBuffer(const char *data, size_t size) {$/;"	f	class:asylo::MultiBufferInputStream
AddEnclaveIdentitiesProperty	./grpc/auth/enclave_auth_context_test.cc	/^  void AddEnclaveIdentitiesProperty($/;"	f	class:asylo::__anon248::EnclaveAuthContextTest
AddEnclaveIdentitiesProperty	./grpc/auth/enclave_auth_context_test.cc	/^  void AddEnclaveIdentitiesProperty($/;"	f	class:asylo::__anon502::EnclaveAuthContextTest
AddFdFlags	./util/fd_utils.cc	/^Status AddFdFlags(int fd, int flags) {$/;"	f	namespace:asylo
AddFromString	./grpc/auth/core/transcript_test.cc	/^void AddFromString(const std::string &input, Transcript *transcript) {$/;"	f	namespace:asylo::grpc::auth::__anon261
AddFromString	./grpc/auth/core/transcript_test.cc	/^void AddFromString(const std::string &input, Transcript *transcript) {$/;"	f	namespace:asylo::grpc::auth::__anon515
AddListeningPort	./grpc/util/grpc_server_launcher.cc	/^Status GrpcServerLauncher::AddListeningPort($/;"	f	class:asylo::GrpcServerLauncher
AddPeerIdentity	./grpc/auth/core/ekep_handshaker.cc	/^void EkepHandshaker::AddPeerIdentity(const EnclaveIdentity &identity) {$/;"	f	class:asylo::EkepHandshaker
AddRecordProtocolProperty	./grpc/auth/enclave_auth_context_test.cc	/^  void AddRecordProtocolProperty($/;"	f	class:asylo::__anon248::EnclaveAuthContextTest
AddRecordProtocolProperty	./grpc/auth/enclave_auth_context_test.cc	/^  void AddRecordProtocolProperty($/;"	f	class:asylo::__anon502::EnclaveAuthContextTest
AddToInotifyEventQueue	./platform/common/bridge_proto_serializer.cc	/^void AddToInotifyEventQueue(const InotifyEventList &event_list,$/;"	f	namespace:asylo::__anon109
AddToInotifyEventQueue	./platform/common/bridge_proto_serializer.cc	/^void AddToInotifyEventQueue(const InotifyEventList &event_list,$/;"	f	namespace:asylo::__anon363
AddTranslationMapEntry	./util/error_space.h	/^  void AddTranslationMapEntry(int code, const std::string &error_string,$/;"	f	class:asylo::error::ErrorSpaceImplementationHelper
AddTransportSecurityTypeProperty	./grpc/auth/enclave_auth_context_test.cc	/^  void AddTransportSecurityTypeProperty($/;"	f	class:asylo::__anon248::EnclaveAuthContextTest
AddTransportSecurityTypeProperty	./grpc/auth/enclave_auth_context_test.cc	/^  void AddTransportSecurityTypeProperty($/;"	f	class:asylo::__anon502::EnclaveAuthContextTest
AdditionalAuthenticatedDataGenerator	./identity/additional_authenticated_data_generator.cc	/^AdditionalAuthenticatedDataGenerator::AdditionalAuthenticatedDataGenerator($/;"	f	class:asylo::AdditionalAuthenticatedDataGenerator
AdditionalAuthenticatedDataGenerator	./identity/additional_authenticated_data_generator.h	/^class AdditionalAuthenticatedDataGenerator {$/;"	c	namespace:asylo
AdditionalAuthenticatedDataIsEqual	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool AdditionalAuthenticatedDataIsEqual(const std::string &expected,$/;"	f	namespace:asylo::__anon252
AdditionalAuthenticatedDataIsEqual	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool AdditionalAuthenticatedDataIsEqual(const std::string &expected,$/;"	f	namespace:asylo::__anon506
AddrInfoErrorCode	./platform/common/bridge_types.h	/^enum AddrInfoErrorCode {$/;"	g
AddrInfoFlags	./platform/common/bridge_types.h	/^enum AddrInfoFlags {$/;"	g
AddrInfoTest_IpHints	./platform/posix/sockets/addrinfo_test_enclave.cc	/^  Status AddrInfoTest_IpHints() {$/;"	f	class:asylo::AddrinfoTestEnclave	file:
AddrInfoTest_NoHints	./platform/posix/sockets/addrinfo_test_enclave.cc	/^  Status AddrInfoTest_NoHints() {$/;"	f	class:asylo::AddrinfoTestEnclave	file:
AddrInfoTest_UnspecHints	./platform/posix/sockets/addrinfo_test_enclave.cc	/^  Status AddrInfoTest_UnspecHints() {$/;"	f	class:asylo::AddrinfoTestEnclave	file:
Address	./platform/core/shared_name.h	/^  static SharedName Address(const std::string &name) {$/;"	f	class:asylo::SharedName
AddrinfoTest	./platform/posix/sockets/addrinfo_test_driver.cc	/^class AddrinfoTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon311	file:
AddrinfoTest	./platform/posix/sockets/addrinfo_test_driver.cc	/^class AddrinfoTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon57	file:
AddrinfoTestEnclave	./platform/posix/sockets/addrinfo_test_enclave.cc	/^class AddrinfoTestEnclave : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
AeadCryptor	./crypto/aead_cryptor.cc	/^AeadCryptor::AeadCryptor($/;"	f	class:asylo::experimental::AeadCryptor
AeadCryptor	./crypto/aead_cryptor.h	/^class AeadCryptor {$/;"	c	namespace:asylo::experimental
AeadCryptorParam	./crypto/aead_cryptor_test.cc	/^struct AeadCryptorParam {$/;"	s	namespace:asylo::experimental::__anon11	file:
AeadCryptorParam	./crypto/aead_cryptor_test.cc	/^struct AeadCryptorParam {$/;"	s	namespace:asylo::experimental::__anon265	file:
AeadCryptorTest	./crypto/aead_cryptor_test.cc	/^class AeadCryptorTest : public TestWithParam<AeadCryptorParam> {};$/;"	c	namespace:asylo::experimental::__anon11	file:
AeadCryptorTest	./crypto/aead_cryptor_test.cc	/^class AeadCryptorTest : public TestWithParam<AeadCryptorParam> {};$/;"	c	namespace:asylo::experimental::__anon265	file:
AeadHandler	./platform/storage/secure/aead_handler.cc	/^AeadHandler::AeadHandler()$/;"	f	class:asylo::platform::storage::AeadHandler
AeadHandler	./platform/storage/secure/aead_handler.h	/^class AeadHandler {$/;"	c	namespace:asylo::platform::storage
AeadKey	./crypto/aead_key.cc	/^AeadKey::AeadKey(AeadScheme aead_scheme, ByteContainerView key)$/;"	f	class:asylo::AeadKey
AeadKey	./crypto/aead_key.h	/^class AeadKey {$/;"	c	namespace:asylo
AeadKeyParam	./crypto/aead_key_test.cc	/^struct AeadKeyParam {$/;"	s	namespace:asylo::__anon12	file:
AeadKeyParam	./crypto/aead_key_test.cc	/^struct AeadKeyParam {$/;"	s	namespace:asylo::__anon266	file:
AeadKeyTest	./crypto/aead_key_test.cc	/^class AeadKeyTest : public TestWithParam<AeadKeyParam> {$/;"	c	namespace:asylo::__anon12	file:
AeadKeyTest	./crypto/aead_key_test.cc	/^class AeadKeyTest : public TestWithParam<AeadKeyParam> {$/;"	c	namespace:asylo::__anon266	file:
AeadTestVector	./crypto/aead_test_vector.cc	/^AeadTestVector::AeadTestVector(absl::string_view plaintext_hex,$/;"	f	class:asylo::AeadTestVector
AeadTestVector	./crypto/aead_test_vector.h	/^struct AeadTestVector {$/;"	s	namespace:asylo
AesGcmSivCryptor	./crypto/aes_gcm_siv.h	/^  AesGcmSivCryptor(size_t message_size_limit,$/;"	f	class:asylo::AesGcmSivCryptor
AesGcmSivCryptor	./crypto/aes_gcm_siv.h	/^class AesGcmSivCryptor {$/;"	c	namespace:asylo
AesGcmSivNonceGenerator	./crypto/aes_gcm_siv.h	/^class AesGcmSivNonceGenerator : public NonceGenerator<kAesGcmSivNonceSize> {$/;"	c	namespace:asylo
AfFamily	./platform/common/bridge_types.h	/^enum AfFamily {$/;"	g
AlignedObjectPtr	./identity/util/aligned_object_ptr.h	/^  AlignedObjectPtr(AlignedObjectPtr &&rhs)$/;"	f	class:asylo::AlignedObjectPtr
AlignedObjectPtr	./identity/util/aligned_object_ptr.h	/^  explicit AlignedObjectPtr(Args &&... args)$/;"	f	class:asylo::AlignedObjectPtr
AlignedObjectPtr	./identity/util/aligned_object_ptr.h	/^class AlignedObjectPtr {$/;"	c	namespace:asylo
AlignedObjectPtrTest	./identity/util/aligned_object_ptr_test.cc	/^class AlignedObjectPtrTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon172	file:
AlignedObjectPtrTest	./identity/util/aligned_object_ptr_test.cc	/^class AlignedObjectPtrTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon426	file:
AllocateMemoryOnSwitchedHeap	./platform/posix/memory/memory.cc	/^void *AllocateMemoryOnSwitchedHeap(size_t size, void *pool) {$/;"	f	namespace:__anon316
AllocateMemoryOnSwitchedHeap	./platform/posix/memory/memory.cc	/^void *AllocateMemoryOnSwitchedHeap(size_t size, void *pool) {$/;"	f	namespace:__anon62
AlwaysFailingDispatcher	./platform/system_call/system_call_test.cc	/^asylo::primitives::PrimitiveStatus AlwaysFailingDispatcher($/;"	f	namespace:asylo::system_call::__anon115
AlwaysFailingDispatcher	./platform/system_call/system_call_test.cc	/^asylo::primitives::PrimitiveStatus AlwaysFailingDispatcher($/;"	f	namespace:asylo::system_call::__anon369
AppClientThread	./platform/posix/sockets/domain_socket_test_driver.cc	/^  static void AppClientThread(const std::string &enc_server_socket,$/;"	f	class:asylo::__anon310::DomainSocketDriver
AppClientThread	./platform/posix/sockets/domain_socket_test_driver.cc	/^  static void AppClientThread(const std::string &enc_server_socket,$/;"	f	class:asylo::__anon56::DomainSocketDriver
AppClientThread	./platform/posix/sockets/inet6_socket_test_driver.cc	/^  static void AppClientThread(int enc_server_port) {$/;"	f	class:asylo::__anon313::Inet6SocketDriver
AppClientThread	./platform/posix/sockets/inet6_socket_test_driver.cc	/^  static void AppClientThread(int enc_server_port) {$/;"	f	class:asylo::__anon59::Inet6SocketDriver
AppServerSetup	./platform/posix/sockets/domain_socket_test_driver.cc	/^  static void AppServerSetup(SocketServer *app_socket_server,$/;"	f	class:asylo::__anon310::DomainSocketDriver
AppServerSetup	./platform/posix/sockets/domain_socket_test_driver.cc	/^  static void AppServerSetup(SocketServer *app_socket_server,$/;"	f	class:asylo::__anon56::DomainSocketDriver
AppServerSetup	./platform/posix/sockets/inet6_socket_test_driver.cc	/^  static void AppServerSetup(SocketServer *app_socket_server) {$/;"	f	class:asylo::__anon313::Inet6SocketDriver
AppServerSetup	./platform/posix/sockets/inet6_socket_test_driver.cc	/^  static void AppServerSetup(SocketServer *app_socket_server) {$/;"	f	class:asylo::__anon59::Inet6SocketDriver
AppServerThread	./platform/posix/sockets/domain_socket_test_driver.cc	/^  static void AppServerThread(SocketServer *app_socket_server) {$/;"	f	class:asylo::__anon310::DomainSocketDriver
AppServerThread	./platform/posix/sockets/domain_socket_test_driver.cc	/^  static void AppServerThread(SocketServer *app_socket_server) {$/;"	f	class:asylo::__anon56::DomainSocketDriver
AppServerThread	./platform/posix/sockets/inet6_socket_test_driver.cc	/^  static void AppServerThread(SocketServer *app_socket_server) {$/;"	f	class:asylo::__anon313::Inet6SocketDriver
AppServerThread	./platform/posix/sockets/inet6_socket_test_driver.cc	/^  static void AppServerThread(SocketServer *app_socket_server) {$/;"	f	class:asylo::__anon59::Inet6SocketDriver
AppendLittleEndianInt	./crypto/util/byte_container_util_internal.h	/^inline void AppendLittleEndianInt(size_t value, ByteContainerT *buffer) {$/;"	f	namespace:asylo::internal
AppendSerializedByteContainers	./crypto/util/byte_container_util.h	/^Status AppendSerializedByteContainers(ByteContainerT *serialized,$/;"	f	namespace:asylo
AppendSerializedByteContainers	./crypto/util/byte_container_util_internal.h	/^Status AppendSerializedByteContainers($/;"	f	namespace:asylo::internal
ApplicationWrapperDriverMain	./bazel/application_wrapper/application_wrapper_driver_main.cc	/^StatusOr<int> ApplicationWrapperDriverMain(const EnclaveLoader &loader,$/;"	f	namespace:asylo
ApplicationWrapperDriverMainTest	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  ApplicationWrapperDriverMainTest()$/;"	f	class:asylo::__anon184::ApplicationWrapperDriverMainTest
ApplicationWrapperDriverMainTest	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  ApplicationWrapperDriverMainTest()$/;"	f	class:asylo::__anon438::ApplicationWrapperDriverMainTest
ApplicationWrapperDriverMainTest	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^class ApplicationWrapperDriverMainTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon184	file:
ApplicationWrapperDriverMainTest	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^class ApplicationWrapperDriverMainTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon438	file:
ApplicationWrapperEnclave	./bazel/application_wrapper/application_wrapper_enclave.cc	/^  ApplicationWrapperEnclave() : has_run_(false) {}$/;"	f	class:asylo::final
ApplicationWrapperEnclaveTest	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^class ApplicationWrapperEnclaveTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon182	file:
ApplicationWrapperEnclaveTest	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^class ApplicationWrapperEnclaveTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon436	file:
ApproximatelyEqualsProto	./test/util/proto_matchers.h	/^ApproximatelyEqualsProto(const MessageT &message) {$/;"	f	namespace:asylo
ApproximatelyEquivalentProto	./test/util/proto_matchers.h	/^ApproximatelyEquivalentProto(const MessageT &message) {$/;"	f	namespace:asylo
Argv	./bazel/application_wrapper/argv.cc	/^Argv::Argv() { InitializeArgvCStr(); }$/;"	f	class:asylo::Argv
Argv	./bazel/application_wrapper/argv.cc	/^Argv::Argv(const Argv &other) : argv_(other.argv_) { InitializeArgvCStr(); }$/;"	f	class:asylo::Argv
Argv	./bazel/application_wrapper/argv.h	/^  explicit Argv(const StringViewIterableT &arguments) {$/;"	f	class:asylo::Argv
Argv	./bazel/application_wrapper/argv.h	/^class Argv {$/;"	c	namespace:asylo
As	./platform/primitives/extent.h	/^  T *As() {$/;"	f	class:asylo::primitives::Extent
As	./platform/primitives/extent.h	/^  const T *As() const {$/;"	f	class:asylo::primitives::Extent
AssembleMsgHdr	./platform/posix/sockets/socket_test_transmit.cc	/^void AssembleMsgHdr(struct msghdr *msg, struct iovec *iov, const char *msg1,$/;"	f	namespace:asylo::__anon307
AssembleMsgHdr	./platform/posix/sockets/socket_test_transmit.cc	/^void AssembleMsgHdr(struct msghdr *msg, struct iovec *iov, const char *msg1,$/;"	f	namespace:asylo::__anon53
AssertHeld	./util/mutex_guarded.h	/^  void AssertHeld() const { mu_.AssertHeld(); }$/;"	f	class:asylo::MutexGuarded
AssertReaderHeld	./util/mutex_guarded.h	/^  void AssertReaderHeld() const { mu_.AssertReaderHeld(); }$/;"	f	class:asylo::MutexGuarded
AssertionDescriptionEq	./identity/assertion_description_util.h	/^struct AssertionDescriptionEq {$/;"	s	namespace:asylo
AssertionDescriptionHasher	./identity/assertion_description_util.h	/^struct AssertionDescriptionHasher {$/;"	s	namespace:asylo
AssertionDescriptionIsEqual	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool AssertionDescriptionIsEqual(const AssertionDescription &expected,$/;"	f	namespace:asylo::__anon252
AssertionDescriptionIsEqual	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool AssertionDescriptionIsEqual(const AssertionDescription &expected,$/;"	f	namespace:asylo::__anon506
AssertionDescriptionTest	./grpc/auth/core/assertion_description_test.cc	/^class AssertionDescriptionTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon259	file:
AssertionDescriptionTest	./grpc/auth/core/assertion_description_test.cc	/^class AssertionDescriptionTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon513	file:
AssertionDescriptionsAreEqual	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool AssertionDescriptionsAreEqual(const AssertionDescriptionHashSet &expected,$/;"	f	namespace:asylo::__anon252
AssertionDescriptionsAreEqual	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool AssertionDescriptionsAreEqual(const AssertionDescriptionHashSet &expected,$/;"	f	namespace:asylo::__anon506
AssignStatus	./util/statusor.h	/^  void AssignStatus(U &&status) {$/;"	f	class:asylo::StatusOr
AssignValue	./util/statusor.h	/^  void AssignValue(U &&value) {$/;"	f	class:asylo::StatusOr
AsyloErrorSpaceStaticMap	./util/error_space.h	/^class AsyloErrorSpaceStaticMap$/;"	c	namespace:asylo::error::error_internal
AsymmetricDecryptionKey	./crypto/asymmetric_encryption_key.h	/^class AsymmetricDecryptionKey {$/;"	c	namespace:asylo
AsymmetricEncryptionKey	./crypto/asymmetric_encryption_key.h	/^class AsymmetricEncryptionKey {$/;"	c	namespace:asylo
AsymmetricEncryptionSchemeToPceCryptoSuite	./identity/sgx/pce_util.cc	/^absl::optional<uint8_t> AsymmetricEncryptionSchemeToPceCryptoSuite($/;"	f	namespace:asylo::sgx
AsyncDelayedShutdownInvoker	./grpc/util/grpc_server_launcher_test.cc	/^  explicit AsyncDelayedShutdownInvoker(GrpcServerLauncher *launcher)$/;"	f	class:asylo::__anon263::AsyncDelayedShutdownInvoker
AsyncDelayedShutdownInvoker	./grpc/util/grpc_server_launcher_test.cc	/^  explicit AsyncDelayedShutdownInvoker(GrpcServerLauncher *launcher)$/;"	f	class:asylo::__anon517::AsyncDelayedShutdownInvoker
AsyncDelayedShutdownInvoker	./grpc/util/grpc_server_launcher_test.cc	/^class AsyncDelayedShutdownInvoker {$/;"	c	namespace:asylo::__anon263	file:
AsyncDelayedShutdownInvoker	./grpc/util/grpc_server_launcher_test.cc	/^class AsyncDelayedShutdownInvoker {$/;"	c	namespace:asylo::__anon517	file:
AtomicDecrement	./platform/core/atomic.h	/^inline T AtomicDecrement(volatile T *location) {$/;"	f	namespace:asylo
AtomicRelease	./platform/core/atomic.h	/^inline void AtomicRelease(volatile T *location) {$/;"	f	namespace:asylo
AttestationDomainClient	./daemon/identity/attestation_domain_client.h	/^  explicit AttestationDomainClient($/;"	f	class:asylo::AttestationDomainClient
AttestationDomainClient	./daemon/identity/attestation_domain_client.h	/^class AttestationDomainClient {$/;"	c	namespace:asylo
AttestationDomainServiceImpl	./daemon/identity/attestation_domain_service_impl.h	/^  explicit AttestationDomainServiceImpl(std::string domain_file_path)$/;"	f	class:asylo::final
AttestationDomainTest	./daemon/identity/attestation_domain_test.cc	/^  AttestationDomainTest() {$/;"	f	class:asylo::__anon188::AttestationDomainTest
AttestationDomainTest	./daemon/identity/attestation_domain_test.cc	/^  AttestationDomainTest() {$/;"	f	class:asylo::__anon442::AttestationDomainTest
AttestationDomainTest	./daemon/identity/attestation_domain_test.cc	/^class AttestationDomainTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon188	file:
AttestationDomainTest	./daemon/identity/attestation_domain_test.cc	/^class AttestationDomainTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon442	file:
AttributesFlagsPrinter	./identity/sgx/proto_format.cc	/^class AttributesFlagsPrinter : public TextFormat::FastFieldValuePrinter {$/;"	c	namespace:asylo::sgx::__anon163	file:
AttributesFlagsPrinter	./identity/sgx/proto_format.cc	/^class AttributesFlagsPrinter : public TextFormat::FastFieldValuePrinter {$/;"	c	namespace:asylo::sgx::__anon417	file:
AttributesTest	./identity/sgx/attributes_util_test.cc	/^class AttributesTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon146	file:
AttributesTest	./identity/sgx/attributes_util_test.cc	/^class AttributesTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon400	file:
AttributesXfrmPrinter	./identity/sgx/proto_format.cc	/^class AttributesXfrmPrinter : public TextFormat::FastFieldValuePrinter {$/;"	c	namespace:asylo::sgx::__anon163	file:
AttributesXfrmPrinter	./identity/sgx/proto_format.cc	/^class AttributesXfrmPrinter : public TextFormat::FastFieldValuePrinter {$/;"	c	namespace:asylo::sgx::__anon417	file:
AuthenticatedDictionary	./platform/storage/secure/authenticated_dictionary.h	/^class AuthenticatedDictionary {$/;"	c	namespace:asylo::platform::storage
AuthorityType	./identity/null_identity/null_assertion_generator.cc	/^std::string NullAssertionGenerator::AuthorityType() const {$/;"	f	class:asylo::NullAssertionGenerator
AuthorityType	./identity/null_identity/null_assertion_verifier.cc	/^std::string NullAssertionVerifier::AuthorityType() const {$/;"	f	class:asylo::NullAssertionVerifier
AuthorityType	./identity/sgx/sgx_local_assertion_generator.cc	/^std::string SgxLocalAssertionGenerator::AuthorityType() const {$/;"	f	class:asylo::SgxLocalAssertionGenerator
AuthorityType	./identity/sgx/sgx_local_assertion_verifier.cc	/^std::string SgxLocalAssertionVerifier::AuthorityType() const {$/;"	f	class:asylo::SgxLocalAssertionVerifier
AutoCloseIOContext	./platform/posix/io/io_manager.h	/^      explicit AutoCloseIOContext(IOContext *context)$/;"	f	class:asylo::io::IOManager::FileDescriptorTable::AutoCloseIOContext
AutoCloseIOContext	./platform/posix/io/io_manager.h	/^    class AutoCloseIOContext {$/;"	c	class:asylo::io::IOManager::FileDescriptorTable
AveragePerThread	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus AveragePerThread(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon335
AveragePerThread	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus AveragePerThread(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon81
AveragePerThreadOrDie	./platform/primitives/test/primitives_test.cc	/^int64_t AveragePerThreadOrDie(const std::shared_ptr<Client> &client,$/;"	f	namespace:asylo::primitives::__anon334
AveragePerThreadOrDie	./platform/primitives/test/primitives_test.cc	/^int64_t AveragePerThreadOrDie(const std::shared_ptr<Client> &client,$/;"	f	namespace:asylo::primitives::__anon80
Await	./util/mutex_guarded.h	/^  void Await(std::function<bool(const T &)> cond) {$/;"	f	class:asylo::LockView
Await	./util/mutex_guarded.h	/^  void Await(std::function<bool(const T &)> cond) {$/;"	f	class:asylo::ReaderLockView
AwaitWithDeadline	./util/mutex_guarded.h	/^  bool AwaitWithDeadline(std::function<bool(const T &)> cond,$/;"	f	class:asylo::LockView
AwaitWithDeadline	./util/mutex_guarded.h	/^  bool AwaitWithDeadline(std::function<bool(const T &)> cond,$/;"	f	class:asylo::ReaderLockView
AwaitWithTimeout	./util/mutex_guarded.h	/^  bool AwaitWithTimeout(std::function<bool(const T &)> cond,$/;"	f	class:asylo::LockView
AwaitWithTimeout	./util/mutex_guarded.h	/^  bool AwaitWithTimeout(std::function<bool(const T &)> cond,$/;"	f	class:asylo::ReaderLockView
BNDCSR	./identity/sgx/secs_attributes.h	/^  BNDCSR = 64 + 4,     \/\/ Determines the behavior of the MPX capabilities.$/;"	m	class:asylo::sgx::SecsAttributeBit
BNDREG	./identity/sgx/secs_attributes.h	/^  BNDREG = 64 + 3,     \/\/ Determines the behavior of the MPX capabilities.$/;"	m	class:asylo::sgx::SecsAttributeBit
BRIDGE_AF_ALG	./platform/common/bridge_types.h	/^  BRIDGE_AF_ALG = 13,$/;"	e	enum:AfFamily
BRIDGE_AF_APPLETALK	./platform/common/bridge_types.h	/^  BRIDGE_AF_APPLETALK = 11,$/;"	e	enum:AfFamily
BRIDGE_AF_ATMPVC	./platform/common/bridge_types.h	/^  BRIDGE_AF_ATMPVC = 10,$/;"	e	enum:AfFamily
BRIDGE_AF_AX25	./platform/common/bridge_types.h	/^  BRIDGE_AF_AX25 = 9,$/;"	e	enum:AfFamily
BRIDGE_AF_INET	./platform/common/bridge_types.h	/^  BRIDGE_AF_INET = 1,$/;"	e	enum:AfFamily
BRIDGE_AF_INET6	./platform/common/bridge_types.h	/^  BRIDGE_AF_INET6 = 2,$/;"	e	enum:AfFamily
BRIDGE_AF_IPX	./platform/common/bridge_types.h	/^  BRIDGE_AF_IPX = 6,$/;"	e	enum:AfFamily
BRIDGE_AF_LOCAL	./platform/common/bridge_types.h	/^  BRIDGE_AF_LOCAL = 5,$/;"	e	enum:AfFamily
BRIDGE_AF_NETLINK	./platform/common/bridge_types.h	/^  BRIDGE_AF_NETLINK = 7,$/;"	e	enum:AfFamily
BRIDGE_AF_PACKET	./platform/common/bridge_types.h	/^  BRIDGE_AF_PACKET = 12,$/;"	e	enum:AfFamily
BRIDGE_AF_UNIX	./platform/common/bridge_types.h	/^  BRIDGE_AF_UNIX = 4,$/;"	e	enum:AfFamily
BRIDGE_AF_UNSPEC	./platform/common/bridge_types.h	/^  BRIDGE_AF_UNSPEC = 3,$/;"	e	enum:AfFamily
BRIDGE_AF_UNSUPPORTED	./platform/common/bridge_types.h	/^  BRIDGE_AF_UNSUPPORTED = 0,$/;"	e	enum:AfFamily
BRIDGE_AF_X25	./platform/common/bridge_types.h	/^  BRIDGE_AF_X25 = 8,$/;"	e	enum:AfFamily
BRIDGE_AI_ADDRCONFIG	./platform/common/bridge_types.h	/^  BRIDGE_AI_ADDRCONFIG = 0x0010,$/;"	e	enum:AddrInfoFlags
BRIDGE_AI_ALL	./platform/common/bridge_types.h	/^  BRIDGE_AI_ALL = 0x0020,$/;"	e	enum:AddrInfoFlags
BRIDGE_AI_CANONIDN	./platform/common/bridge_types.h	/^  BRIDGE_AI_CANONIDN = 0x0200,$/;"	e	enum:AddrInfoFlags
BRIDGE_AI_CANONNAME	./platform/common/bridge_types.h	/^  BRIDGE_AI_CANONNAME = 0x0002,$/;"	e	enum:AddrInfoFlags
BRIDGE_AI_IDN	./platform/common/bridge_types.h	/^  BRIDGE_AI_IDN = 0x0100,$/;"	e	enum:AddrInfoFlags
BRIDGE_AI_NUMERICHOST	./platform/common/bridge_types.h	/^  BRIDGE_AI_NUMERICHOST = 0x0004,$/;"	e	enum:AddrInfoFlags
BRIDGE_AI_NUMERICSERV	./platform/common/bridge_types.h	/^  BRIDGE_AI_NUMERICSERV = 0x0080,$/;"	e	enum:AddrInfoFlags
BRIDGE_AI_PASSIVE	./platform/common/bridge_types.h	/^  BRIDGE_AI_PASSIVE = 0x0040,$/;"	e	enum:AddrInfoFlags
BRIDGE_AI_V4MAPPED	./platform/common/bridge_types.h	/^  BRIDGE_AI_V4MAPPED = 0x0008,$/;"	e	enum:AddrInfoFlags
BRIDGE_APPEND	./platform/common/bridge_types.h	/^  BRIDGE_APPEND = 0x400,$/;"	e	enum:FileStatusFlags
BRIDGE_CLOEXEC	./platform/common/bridge_types.h	/^  BRIDGE_CLOEXEC = 0x01,$/;"	e	enum:FileDescriptorFlags
BRIDGE_CPU_SET_MAX_CPUS	./platform/common/bridge_types.h	462;"	d
BRIDGE_CPU_SET_NUM_WORDS	./platform/common/bridge_types.h	466;"	d
BRIDGE_CREAT	./platform/common/bridge_types.h	/^  BRIDGE_CREAT = 0x40,$/;"	e	enum:FileStatusFlags
BRIDGE_DIRECT	./platform/common/bridge_types.h	/^  BRIDGE_DIRECT = 0x1000,$/;"	e	enum:FileStatusFlags
BRIDGE_EAI_ADDRFAMILY	./platform/common/bridge_types.h	/^  BRIDGE_EAI_ADDRFAMILY = 1,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_AGAIN	./platform/common/bridge_types.h	/^  BRIDGE_EAI_AGAIN = 2,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_ALLDONE	./platform/common/bridge_types.h	/^  BRIDGE_EAI_ALLDONE = 15,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_BADFLAGS	./platform/common/bridge_types.h	/^  BRIDGE_EAI_BADFLAGS = 3,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_CANCELED	./platform/common/bridge_types.h	/^  BRIDGE_EAI_CANCELED = 14,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_FAIL	./platform/common/bridge_types.h	/^  BRIDGE_EAI_FAIL = 4,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_FAMILY	./platform/common/bridge_types.h	/^  BRIDGE_EAI_FAMILY = 5,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_IDN_ENCODE	./platform/common/bridge_types.h	/^  BRIDGE_EAI_IDN_ENCODE = 17,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_INPROGRESS	./platform/common/bridge_types.h	/^  BRIDGE_EAI_INPROGRESS = 13,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_INTR	./platform/common/bridge_types.h	/^  BRIDGE_EAI_INTR = 16,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_MEMORY	./platform/common/bridge_types.h	/^  BRIDGE_EAI_MEMORY = 6,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_NODATA	./platform/common/bridge_types.h	/^  BRIDGE_EAI_NODATA = 7,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_NONAME	./platform/common/bridge_types.h	/^  BRIDGE_EAI_NONAME = 8,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_OVERFLOW	./platform/common/bridge_types.h	/^  BRIDGE_EAI_OVERFLOW = 12,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_SERVICE	./platform/common/bridge_types.h	/^  BRIDGE_EAI_SERVICE = 9,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_SOCKTYPE	./platform/common/bridge_types.h	/^  BRIDGE_EAI_SOCKTYPE = 10,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_SUCCESS	./platform/common/bridge_types.h	/^  BRIDGE_EAI_SUCCESS = 0,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_SYSTEM	./platform/common/bridge_types.h	/^  BRIDGE_EAI_SYSTEM = 11,$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EAI_UNKNOWN	./platform/common/bridge_types.h	/^  BRIDGE_EAI_UNKNOWN = 20,  \/\/ The result of a bad translation.$/;"	e	enum:AddrInfoErrorCode
BRIDGE_EXCL	./platform/common/bridge_types.h	/^  BRIDGE_EXCL = 0x80,$/;"	e	enum:FileStatusFlags
BRIDGE_FD_SETSIZE	./platform/common/bridge_types.h	495;"	d
BRIDGE_F_GETFD	./platform/common/bridge_types.h	/^  BRIDGE_F_GETFD = 1,$/;"	e	enum:FcntlCommands
BRIDGE_F_GETFL	./platform/common/bridge_types.h	/^  BRIDGE_F_GETFL = 3,$/;"	e	enum:FcntlCommands
BRIDGE_F_GETPIPE_SZ	./platform/common/bridge_types.h	/^  BRIDGE_F_GETPIPE_SZ = 5,$/;"	e	enum:FcntlCommands
BRIDGE_F_SETFD	./platform/common/bridge_types.h	/^  BRIDGE_F_SETFD = 2,$/;"	e	enum:FcntlCommands
BRIDGE_F_SETFL	./platform/common/bridge_types.h	/^  BRIDGE_F_SETFL = 4,$/;"	e	enum:FcntlCommands
BRIDGE_F_SETPIPE_SZ	./platform/common/bridge_types.h	/^  BRIDGE_F_SETPIPE_SZ = 6,$/;"	e	enum:FcntlCommands
BRIDGE_IPV6_V6ONLY	./platform/common/bridge_types.h	/^  BRIDGE_IPV6_V6ONLY = 1,$/;"	e	enum:IpV6OptionNames
BRIDGE_ITIMER_PROF	./platform/common/bridge_types.h	/^  BRIDGE_ITIMER_PROF = 3,$/;"	e	enum:TimerType
BRIDGE_ITIMER_REAL	./platform/common/bridge_types.h	/^  BRIDGE_ITIMER_REAL = 1,$/;"	e	enum:TimerType
BRIDGE_ITIMER_UNKNOWN	./platform/common/bridge_types.h	/^  BRIDGE_ITIMER_UNKNOWN = 0,$/;"	e	enum:TimerType
BRIDGE_ITIMER_VIRTUAL	./platform/common/bridge_types.h	/^  BRIDGE_ITIMER_VIRTUAL = 2,$/;"	e	enum:TimerType
BRIDGE_LOCK_EX	./platform/common/bridge_types.h	/^  BRIDGE_LOCK_EX = 0x02,$/;"	e	enum:FLockOperations
BRIDGE_LOCK_NB	./platform/common/bridge_types.h	/^  BRIDGE_LOCK_NB = 0x04,$/;"	e	enum:FLockOperations
BRIDGE_LOCK_SH	./platform/common/bridge_types.h	/^  BRIDGE_LOCK_SH = 0x01,$/;"	e	enum:FLockOperations
BRIDGE_LOCK_UN	./platform/common/bridge_types.h	/^  BRIDGE_LOCK_UN = 0x08,$/;"	e	enum:FLockOperations
BRIDGE_LOG_ALERT	./platform/common/bridge_types.h	/^  BRIDGE_LOG_ALERT = 1,$/;"	e	enum:SysLogLevel
BRIDGE_LOG_CONS	./platform/common/bridge_types.h	/^  BRIDGE_LOG_CONS = 0x02,$/;"	e	enum:SysLogOptions
BRIDGE_LOG_CRIT	./platform/common/bridge_types.h	/^  BRIDGE_LOG_CRIT = 2,$/;"	e	enum:SysLogLevel
BRIDGE_LOG_DEBUG	./platform/common/bridge_types.h	/^  BRIDGE_LOG_DEBUG = 7,$/;"	e	enum:SysLogLevel
BRIDGE_LOG_EMERG	./platform/common/bridge_types.h	/^  BRIDGE_LOG_EMERG = 0,$/;"	e	enum:SysLogLevel
BRIDGE_LOG_ERR	./platform/common/bridge_types.h	/^  BRIDGE_LOG_ERR = 3,$/;"	e	enum:SysLogLevel
BRIDGE_LOG_INFO	./platform/common/bridge_types.h	/^  BRIDGE_LOG_INFO = 6,$/;"	e	enum:SysLogLevel
BRIDGE_LOG_LOCAL0	./platform/common/bridge_types.h	/^  BRIDGE_LOG_LOCAL0 = 16 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_LOCAL1	./platform/common/bridge_types.h	/^  BRIDGE_LOG_LOCAL1 = 17 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_LOCAL2	./platform/common/bridge_types.h	/^  BRIDGE_LOG_LOCAL2 = 18 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_LOCAL3	./platform/common/bridge_types.h	/^  BRIDGE_LOG_LOCAL3 = 19 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_LOCAL4	./platform/common/bridge_types.h	/^  BRIDGE_LOG_LOCAL4 = 20 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_LOCAL5	./platform/common/bridge_types.h	/^  BRIDGE_LOG_LOCAL5 = 21 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_LOCAL6	./platform/common/bridge_types.h	/^  BRIDGE_LOG_LOCAL6 = 22 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_LOCAL7	./platform/common/bridge_types.h	/^  BRIDGE_LOG_LOCAL7 = 23 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_NDELAY	./platform/common/bridge_types.h	/^  BRIDGE_LOG_NDELAY = 0x08,$/;"	e	enum:SysLogOptions
BRIDGE_LOG_NOTICE	./platform/common/bridge_types.h	/^  BRIDGE_LOG_NOTICE = 5,$/;"	e	enum:SysLogLevel
BRIDGE_LOG_NOWAIT	./platform/common/bridge_types.h	/^  BRIDGE_LOG_NOWAIT = 0x10,$/;"	e	enum:SysLogOptions
BRIDGE_LOG_ODELAY	./platform/common/bridge_types.h	/^  BRIDGE_LOG_ODELAY = 0x04,$/;"	e	enum:SysLogOptions
BRIDGE_LOG_PERROR	./platform/common/bridge_types.h	/^  BRIDGE_LOG_PERROR = 0x20,$/;"	e	enum:SysLogOptions
BRIDGE_LOG_PID	./platform/common/bridge_types.h	/^  BRIDGE_LOG_PID = 0x01,$/;"	e	enum:SysLogOptions
BRIDGE_LOG_USER	./platform/common/bridge_types.h	/^  BRIDGE_LOG_USER = 1 << 3,$/;"	e	enum:SysLogFacilities
BRIDGE_LOG_WARNING	./platform/common/bridge_types.h	/^  BRIDGE_LOG_WARNING = 4,$/;"	e	enum:SysLogLevel
BRIDGE_NONBLOCK	./platform/common/bridge_types.h	/^  BRIDGE_NONBLOCK = 0x800,$/;"	e	enum:FileStatusFlags
BRIDGE_O_CLOEXEC	./platform/common/bridge_types.h	/^  BRIDGE_O_CLOEXEC = 0x2000,$/;"	e	enum:FileStatusFlags
BRIDGE_PASSWD_FIELD_LENGTH	./platform/common/bridge_types.h	504;"	d
BRIDGE_POLLERR	./platform/common/bridge_types.h	/^  BRIDGE_POLLERR = 0x010,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLHUP	./platform/common/bridge_types.h	/^  BRIDGE_POLLHUP = 0x020,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLIN	./platform/common/bridge_types.h	/^  BRIDGE_POLLIN = 0x001,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLNVAL	./platform/common/bridge_types.h	/^  BRIDGE_POLLNVAL = 0x040,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLOUT	./platform/common/bridge_types.h	/^  BRIDGE_POLLOUT = 0x004,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLPRI	./platform/common/bridge_types.h	/^  BRIDGE_POLLPRI = 0x002,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLRDBAND	./platform/common/bridge_types.h	/^  BRIDGE_POLLRDBAND = 0x100,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLRDHUP	./platform/common/bridge_types.h	/^  BRIDGE_POLLRDHUP = 0x008,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLRDNORM	./platform/common/bridge_types.h	/^  BRIDGE_POLLRDNORM = 0x080,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLWRBAND	./platform/common/bridge_types.h	/^  BRIDGE_POLLWRBAND = 0x400,$/;"	e	enum:BridgePollEvents
BRIDGE_POLLWRNORM	./platform/common/bridge_types.h	/^  BRIDGE_POLLWRNORM = 0x200,$/;"	e	enum:BridgePollEvents
BRIDGE_RDONLY	./platform/common/bridge_types.h	/^  BRIDGE_RDONLY = 0x00,$/;"	e	enum:FileStatusFlags
BRIDGE_RDWR	./platform/common/bridge_types.h	/^  BRIDGE_RDWR = 0x02,$/;"	e	enum:FileStatusFlags
BRIDGE_RUSAGE_CHILDREN	./platform/common/bridge_types.h	/^  BRIDGE_RUSAGE_CHILDREN = 2,$/;"	e	enum:RUsageTarget
BRIDGE_RUSAGE_SELF	./platform/common/bridge_types.h	/^  BRIDGE_RUSAGE_SELF = 1,$/;"	e	enum:RUsageTarget
BRIDGE_RUSAGE_UNKNOWN	./platform/common/bridge_types.h	/^  BRIDGE_RUSAGE_UNKNOWN = 0,$/;"	e	enum:RUsageTarget
BRIDGE_SA_NODEFER	./platform/common/bridge_types.h	/^  BRIDGE_SA_NODEFER = 0x01,$/;"	e	enum:SignalFlags
BRIDGE_SA_RESETHAND	./platform/common/bridge_types.h	/^  BRIDGE_SA_RESETHAND = 0x02,$/;"	e	enum:SignalFlags
BRIDGE_SC_NPROCESSORS_CONF	./platform/common/bridge_types.h	/^  BRIDGE_SC_NPROCESSORS_CONF = 2,$/;"	e	enum:SysconfConstants
BRIDGE_SC_NPROCESSORS_ONLN	./platform/common/bridge_types.h	/^  BRIDGE_SC_NPROCESSORS_ONLN = 1,$/;"	e	enum:SysconfConstants
BRIDGE_SC_UNKNOWN	./platform/common/bridge_types.h	/^  BRIDGE_SC_UNKNOWN = 0,$/;"	e	enum:SysconfConstants
BRIDGE_SIGABRT	./platform/common/bridge_types.h	/^  BRIDGE_SIGABRT = 6,$/;"	e	enum:SignalNumber
BRIDGE_SIGALRM	./platform/common/bridge_types.h	/^  BRIDGE_SIGALRM = 14,$/;"	e	enum:SignalNumber
BRIDGE_SIGBUS	./platform/common/bridge_types.h	/^  BRIDGE_SIGBUS = 7,$/;"	e	enum:SignalNumber
BRIDGE_SIGCHLD	./platform/common/bridge_types.h	/^  BRIDGE_SIGCHLD = 16,$/;"	e	enum:SignalNumber
BRIDGE_SIGCONT	./platform/common/bridge_types.h	/^  BRIDGE_SIGCONT = 17,$/;"	e	enum:SignalNumber
BRIDGE_SIGFPE	./platform/common/bridge_types.h	/^  BRIDGE_SIGFPE = 8,$/;"	e	enum:SignalNumber
BRIDGE_SIGHUP	./platform/common/bridge_types.h	/^  BRIDGE_SIGHUP = 1,$/;"	e	enum:SignalNumber
BRIDGE_SIGILL	./platform/common/bridge_types.h	/^  BRIDGE_SIGILL = 4,$/;"	e	enum:SignalNumber
BRIDGE_SIGINT	./platform/common/bridge_types.h	/^  BRIDGE_SIGINT = 2,$/;"	e	enum:SignalNumber
BRIDGE_SIGKILL	./platform/common/bridge_types.h	/^  BRIDGE_SIGKILL = 9,$/;"	e	enum:SignalNumber
BRIDGE_SIGPIPE	./platform/common/bridge_types.h	/^  BRIDGE_SIGPIPE = 13,$/;"	e	enum:SignalNumber
BRIDGE_SIGPROF	./platform/common/bridge_types.h	/^  BRIDGE_SIGPROF = 26,$/;"	e	enum:SignalNumber
BRIDGE_SIGQUIT	./platform/common/bridge_types.h	/^  BRIDGE_SIGQUIT = 3,$/;"	e	enum:SignalNumber
BRIDGE_SIGRTMAX	./platform/common/bridge_types.h	/^  BRIDGE_SIGRTMAX = 64,$/;"	e	enum:SignalNumber
BRIDGE_SIGRTMIN	./platform/common/bridge_types.h	/^  BRIDGE_SIGRTMIN = 32,$/;"	e	enum:SignalNumber
BRIDGE_SIGSEGV	./platform/common/bridge_types.h	/^  BRIDGE_SIGSEGV = 11,$/;"	e	enum:SignalNumber
BRIDGE_SIGSTOP	./platform/common/bridge_types.h	/^  BRIDGE_SIGSTOP = 18,$/;"	e	enum:SignalNumber
BRIDGE_SIGSYS	./platform/common/bridge_types.h	/^  BRIDGE_SIGSYS = 28,$/;"	e	enum:SignalNumber
BRIDGE_SIGTERM	./platform/common/bridge_types.h	/^  BRIDGE_SIGTERM = 15,$/;"	e	enum:SignalNumber
BRIDGE_SIGTRAP	./platform/common/bridge_types.h	/^  BRIDGE_SIGTRAP = 5,$/;"	e	enum:SignalNumber
BRIDGE_SIGTSTP	./platform/common/bridge_types.h	/^  BRIDGE_SIGTSTP = 19,$/;"	e	enum:SignalNumber
BRIDGE_SIGTTIN	./platform/common/bridge_types.h	/^  BRIDGE_SIGTTIN = 20,$/;"	e	enum:SignalNumber
BRIDGE_SIGTTOU	./platform/common/bridge_types.h	/^  BRIDGE_SIGTTOU = 21,$/;"	e	enum:SignalNumber
BRIDGE_SIGURG	./platform/common/bridge_types.h	/^  BRIDGE_SIGURG = 22,$/;"	e	enum:SignalNumber
BRIDGE_SIGUSR1	./platform/common/bridge_types.h	/^  BRIDGE_SIGUSR1 = 10,$/;"	e	enum:SignalNumber
BRIDGE_SIGUSR2	./platform/common/bridge_types.h	/^  BRIDGE_SIGUSR2 = 12,$/;"	e	enum:SignalNumber
BRIDGE_SIGVTALRM	./platform/common/bridge_types.h	/^  BRIDGE_SIGVTALRM = 25,$/;"	e	enum:SignalNumber
BRIDGE_SIGWINCH	./platform/common/bridge_types.h	/^  BRIDGE_SIGWINCH = 27,$/;"	e	enum:SignalNumber
BRIDGE_SIGXCPU	./platform/common/bridge_types.h	/^  BRIDGE_SIGXCPU = 23,$/;"	e	enum:SignalNumber
BRIDGE_SIGXFSZ	./platform/common/bridge_types.h	/^  BRIDGE_SIGXFSZ = 24,$/;"	e	enum:SignalNumber
BRIDGE_SIG_BLOCK	./platform/common/bridge_types.h	/^  BRIDGE_SIG_BLOCK = 1,$/;"	e	enum:SigMaskAction
BRIDGE_SIG_SETMASK	./platform/common/bridge_types.h	/^  BRIDGE_SIG_SETMASK = 0,$/;"	e	enum:SigMaskAction
BRIDGE_SIG_UNBLOCK	./platform/common/bridge_types.h	/^  BRIDGE_SIG_UNBLOCK = 2,$/;"	e	enum:SigMaskAction
BRIDGE_SI_ASYNCIO	./platform/common/bridge_types.h	/^  BRIDGE_SI_ASYNCIO = 4,$/;"	e	enum:SignalCode
BRIDGE_SI_MESGQ	./platform/common/bridge_types.h	/^  BRIDGE_SI_MESGQ = 5,$/;"	e	enum:SignalCode
BRIDGE_SI_QUEUE	./platform/common/bridge_types.h	/^  BRIDGE_SI_QUEUE = 2,$/;"	e	enum:SignalCode
BRIDGE_SI_TIMER	./platform/common/bridge_types.h	/^  BRIDGE_SI_TIMER = 3,$/;"	e	enum:SignalCode
BRIDGE_SI_USER	./platform/common/bridge_types.h	/^  BRIDGE_SI_USER = 1,$/;"	e	enum:SignalCode
BRIDGE_SOCK_DGRAM	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_DGRAM = 2,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_O_CLOEXEC	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_O_CLOEXEC = 0x0200,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_O_NONBLOCK	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_O_NONBLOCK = 0x0100,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_PACKET	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_PACKET = 6,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_RAW	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_RAW = 4,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_RDM	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_RDM = 5,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_SEQPACKET	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_SEQPACKET = 3,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_STREAM	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_STREAM = 1,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_TYPE_FLAGS	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_TYPE_FLAGS = BRIDGE_SOCK_O_NONBLOCK | BRIDGE_SOCK_O_CLOEXEC,$/;"	e	enum:BridgeSocketType
BRIDGE_SOCK_UNSUPPORTED	./platform/common/bridge_types.h	/^  BRIDGE_SOCK_UNSUPPORTED = 0,$/;"	e	enum:BridgeSocketType
BRIDGE_SO_BROADCAST	./platform/common/bridge_types.h	/^  BRIDGE_SO_BROADCAST = 6,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_BSDCOMPAT	./platform/common/bridge_types.h	/^  BRIDGE_SO_BSDCOMPAT = 14,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_DEBUG	./platform/common/bridge_types.h	/^  BRIDGE_SO_DEBUG = 1,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_DONTROUTE	./platform/common/bridge_types.h	/^  BRIDGE_SO_DONTROUTE = 5,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_ERROR	./platform/common/bridge_types.h	/^  BRIDGE_SO_ERROR = 4,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_KEEPALIVE	./platform/common/bridge_types.h	/^  BRIDGE_SO_KEEPALIVE = 9,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_LINGER	./platform/common/bridge_types.h	/^  BRIDGE_SO_LINGER = 13,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_NO_CHECK	./platform/common/bridge_types.h	/^  BRIDGE_SO_NO_CHECK = 11,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_OOBINLINE	./platform/common/bridge_types.h	/^  BRIDGE_SO_OOBINLINE = 10,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_PRIORITY	./platform/common/bridge_types.h	/^  BRIDGE_SO_PRIORITY = 12,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_RCVBUF	./platform/common/bridge_types.h	/^  BRIDGE_SO_RCVBUF = 8,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_RCVBUFFORCE	./platform/common/bridge_types.h	/^  BRIDGE_SO_RCVBUFFORCE = 33,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_RCVTIMEO	./platform/common/bridge_types.h	/^  BRIDGE_SO_RCVTIMEO = 20,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_REUSEADDR	./platform/common/bridge_types.h	/^  BRIDGE_SO_REUSEADDR = 2,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_REUSEPORT	./platform/common/bridge_types.h	/^  BRIDGE_SO_REUSEPORT = 15,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_SNDBUF	./platform/common/bridge_types.h	/^  BRIDGE_SO_SNDBUF = 7,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_SNDBUFFORCE	./platform/common/bridge_types.h	/^  BRIDGE_SO_SNDBUFFORCE = 32,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_SNDTIMEO	./platform/common/bridge_types.h	/^  BRIDGE_SO_SNDTIMEO = 21,$/;"	e	enum:SocketOptionNames
BRIDGE_SO_TYPE	./platform/common/bridge_types.h	/^  BRIDGE_SO_TYPE = 3,$/;"	e	enum:SocketOptionNames
BRIDGE_TCP_KEEPCNT	./platform/common/bridge_types.h	/^  BRIDGE_TCP_KEEPCNT = 6,$/;"	e	enum:TcpOptionNames
BRIDGE_TCP_KEEPIDLE	./platform/common/bridge_types.h	/^  BRIDGE_TCP_KEEPIDLE = 4,$/;"	e	enum:TcpOptionNames
BRIDGE_TCP_KEEPINTVL	./platform/common/bridge_types.h	/^  BRIDGE_TCP_KEEPINTVL = 5,$/;"	e	enum:TcpOptionNames
BRIDGE_TCP_NODELAY	./platform/common/bridge_types.h	/^  BRIDGE_TCP_NODELAY = 1,$/;"	e	enum:TcpOptionNames
BRIDGE_TRUNC	./platform/common/bridge_types.h	/^  BRIDGE_TRUNC = 0x200,$/;"	e	enum:FileStatusFlags
BRIDGE_UTSNAME_FIELD_LENGTH	./platform/common/bridge_types.h	480;"	d
BRIDGE_WCODEBYTE	./platform/common/bridge_types.h	/^  BRIDGE_WCODEBYTE = 0xff,$/;"	e	enum:WStatusCode
BRIDGE_WNOHANG	./platform/common/bridge_types.h	/^  BRIDGE_WNOHANG = 1,$/;"	e	enum:WaitOptions
BRIDGE_WRONLY	./platform/common/bridge_types.h	/^  BRIDGE_WRONLY = 0x01,$/;"	e	enum:FileStatusFlags
BRIDGE_WSTOPPED	./platform/common/bridge_types.h	/^  BRIDGE_WSTOPPED = 0x7f,$/;"	e	enum:WStatusCode
BRKINT	./platform/posix/include/sys/termios.h	46;"	d
BackUp	./grpc/auth/util/multi_buffer_input_stream.cc	/^void MultiBufferInputStream::BackUp(int count) {$/;"	f	class:asylo::MultiBufferInputStream
Bar	./platform/common/static_map_test.cc	/^class Bar : public Foo {$/;"	c	namespace:asylo::__anon101	file:
Bar	./platform/common/static_map_test.cc	/^class Bar : public Foo {$/;"	c	namespace:asylo::__anon355	file:
BarNamer	./platform/common/static_map_test.cc	/^struct BarNamer {$/;"	s	namespace:asylo::__anon101	file:
BarNamer	./platform/common/static_map_test.cc	/^struct BarNamer {$/;"	s	namespace:asylo::__anon355	file:
BasicEpollTest	./platform/posix/io/epoll_test.cc	/^  void BasicEpollTest(bool edge_triggered) {$/;"	f	class:asylo::__anon318::EpollTest
BasicEpollTest	./platform/posix/io/epoll_test.cc	/^  void BasicEpollTest(bool edge_triggered) {$/;"	f	class:asylo::__anon64::EpollTest
Baz	./platform/common/static_map_test.cc	/^class Baz : public Bar {$/;"	c	namespace:asylo::__anon101	file:
Baz	./platform/common/static_map_test.cc	/^class Baz : public Bar {$/;"	c	namespace:asylo::__anon355	file:
BeToHost	./platform/posix/endian_test.cc	/^uint16_t BeToHost(uint16_t value) { return be16toh(value); }$/;"	f	namespace:asylo::__anon298
BeToHost	./platform/posix/endian_test.cc	/^uint16_t BeToHost(uint16_t value) { return be16toh(value); }$/;"	f	namespace:asylo::__anon44
BeToHost	./platform/posix/endian_test.cc	/^uint32_t BeToHost(uint32_t value) { return be32toh(value); }$/;"	f	namespace:asylo::__anon298
BeToHost	./platform/posix/endian_test.cc	/^uint32_t BeToHost(uint32_t value) { return be32toh(value); }$/;"	f	namespace:asylo::__anon44
BeToHost	./platform/posix/endian_test.cc	/^uint64_t BeToHost(uint64_t value) { return be64toh(value); }$/;"	f	namespace:asylo::__anon298
BeToHost	./platform/posix/endian_test.cc	/^uint64_t BeToHost(uint64_t value) { return be64toh(value); }$/;"	f	namespace:asylo::__anon44
BestEffortAbort	./platform/primitives/sgx/trusted_sgx.cc	/^void TrustedPrimitives::BestEffortAbort(const char *message) {$/;"	f	class:asylo::primitives::TrustedPrimitives
BestEffortAbort	./platform/primitives/sim/trusted_sim.cc	/^void TrustedPrimitives::BestEffortAbort(const char *message) {$/;"	f	class:asylo::primitives::TrustedPrimitives
BidirectionalNullCredentialsOptions	./grpc/auth/null_credentials_options.cc	/^EnclaveCredentialsOptions BidirectionalNullCredentialsOptions() {$/;"	f	namespace:asylo
BidirectionalSgxLocalCredentialsOptions	./grpc/auth/sgx_local_credentials_options.cc	/^EnclaveCredentialsOptions BidirectionalSgxLocalCredentialsOptions() {$/;"	f	namespace:asylo
BinarySearch	./util/binary_search.h	/^size_t BinarySearch(Func f) {$/;"	f	namespace:asylo
Bind	./platform/posix/io/io_manager.cc	/^int IOManager::Bind(int sockfd, const struct sockaddr *addr,$/;"	f	class:asylo::io::IOManager
Bind	./platform/posix/io/io_manager.h	/^    virtual int Bind(const struct sockaddr *addr, socklen_t addrlen) {$/;"	f	class:asylo::io::IOManager::IOContext
Bind	./platform/posix/io/native_paths.cc	/^int IOContextNative::Bind(const struct sockaddr *addr, socklen_t addrlen) {$/;"	f	class:asylo::io::IOContextNative
BitNum	./platform/posix/sched.cc	/^inline CpuSetWord BitNum(int cpu) { return cpu % (8 * sizeof(CpuSetWord)); }$/;"	f
BlockEnclaveEntriesTest	./test/misc/block_enclave_entries_test_driver.cc	/^class BlockEnclaveEntriesTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon203	file:
BlockEnclaveEntriesTest	./test/misc/block_enclave_entries_test_driver.cc	/^class BlockEnclaveEntriesTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon457	file:
BlockEnclaveEntriesTest	./test/misc/block_enclave_entries_test_enclave.cc	/^class BlockEnclaveEntriesTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
BlockSignals	./platform/posix/signal/signal_manager.cc	/^void SignalManager::BlockSignals(const sigset_t &set) {$/;"	f	class:asylo::SignalManager
BoundsTable	./platform/system_call/generate_tables.cc	/^absl::flat_hash_map<std::pair<std::string, std::string>, int> *BoundsTable() {$/;"	f
BridgeCppToCTest	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^class BridgeCppToCTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon252	file:
BridgeCppToCTest	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^class BridgeCppToCTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon506	file:
BridgeCpuSet	./platform/common/bridge_types.h	/^struct BridgeCpuSet {$/;"	s
BridgeCpuSetWord	./platform/common/bridge_types.h	/^typedef uint64_t BridgeCpuSetWord;$/;"	t
BridgeFDIsSet	./platform/common/bridge_functions.cc	/^uint8_t BridgeFDIsSet(int fd, const struct BridgeFDSet *bridge_fds) {$/;"	f	namespace:asylo::__anon103
BridgeFDIsSet	./platform/common/bridge_functions.cc	/^uint8_t BridgeFDIsSet(int fd, const struct BridgeFDSet *bridge_fds) {$/;"	f	namespace:asylo::__anon357
BridgeFDSet	./platform/common/bridge_functions.cc	/^void BridgeFDSet(int fd, struct BridgeFDSet *bridge_fds) {$/;"	f	namespace:asylo::__anon103
BridgeFDSet	./platform/common/bridge_functions.cc	/^void BridgeFDSet(int fd, struct BridgeFDSet *bridge_fds) {$/;"	f	namespace:asylo::__anon357
BridgeFDSet	./platform/common/bridge_types.h	/^struct BridgeFDSet {$/;"	s
BridgeFDZero	./platform/common/bridge_functions.cc	/^void BridgeFDZero(struct BridgeFDSet *bridge_fds) {$/;"	f	namespace:asylo::__anon103
BridgeFDZero	./platform/common/bridge_functions.cc	/^void BridgeFDZero(struct BridgeFDSet *bridge_fds) {$/;"	f	namespace:asylo::__anon357
BridgeITimerVal	./platform/common/bridge_types.h	/^struct BridgeITimerVal {$/;"	s
BridgeMsghdrWrapper	./platform/core/bridge_msghdr_wrapper.cc	/^asylo::BridgeMsghdrWrapper::BridgeMsghdrWrapper(const struct msghdr *in) {$/;"	f	class:asylo::BridgeMsghdrWrapper
BridgeMsghdrWrapper	./platform/core/bridge_msghdr_wrapper.h	/^class BridgeMsghdrWrapper {$/;"	c	namespace:asylo
BridgePassWd	./platform/common/bridge_types.h	/^struct BridgePassWd {$/;"	s
BridgePollEvents	./platform/common/bridge_types.h	/^enum BridgePollEvents {$/;"	g
BridgeRUsage	./platform/common/bridge_types.h	/^struct BridgeRUsage {$/;"	s
BridgeSigAddSet	./platform/common/bridge_functions.cc	/^void BridgeSigAddSet(bridge_sigset_t *bridge_set, const int sig) {$/;"	f	namespace:asylo::__anon103
BridgeSigAddSet	./platform/common/bridge_functions.cc	/^void BridgeSigAddSet(bridge_sigset_t *bridge_set, const int sig) {$/;"	f	namespace:asylo::__anon357
BridgeSigEmptySet	./platform/common/bridge_functions.cc	/^void BridgeSigEmptySet(bridge_sigset_t *bridge_set) { *bridge_set = 0; }$/;"	f	namespace:asylo::__anon103
BridgeSigEmptySet	./platform/common/bridge_functions.cc	/^void BridgeSigEmptySet(bridge_sigset_t *bridge_set) { *bridge_set = 0; }$/;"	f	namespace:asylo::__anon357
BridgeSigIsMember	./platform/common/bridge_functions.cc	/^bool BridgeSigIsMember(const bridge_sigset_t *bridge_set, const int sig) {$/;"	f	namespace:asylo::__anon103
BridgeSigIsMember	./platform/common/bridge_functions.cc	/^bool BridgeSigIsMember(const bridge_sigset_t *bridge_set, const int sig) {$/;"	f	namespace:asylo::__anon357
BridgeSignalHandler	./platform/common/bridge_types.h	/^struct BridgeSignalHandler {$/;"	s
BridgeSocketType	./platform/common/bridge_types.h	/^enum BridgeSocketType {$/;"	g
BridgeTest	./platform/common/bridge_functions_test.cc	/^class BridgeTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon113	file:
BridgeTest	./platform/common/bridge_functions_test.cc	/^class BridgeTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon367	file:
BridgeTms	./platform/common/bridge_types.h	/^struct BridgeTms {$/;"	s
BridgeTypesTest	./platform/common/test/bridge_types_test_driver.cc	/^class BridgeTypesTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon106	file:
BridgeTypesTest	./platform/common/test/bridge_types_test_driver.cc	/^class BridgeTypesTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon360	file:
BridgeUtsName	./platform/common/bridge_types.h	/^struct BridgeUtsName {$/;"	s
BridgeWIfExited	./platform/common/bridge_functions.cc	/^bool BridgeWIfExited(BridgeWStatus bridge_wstatus) {$/;"	f	namespace:asylo::__anon103
BridgeWIfExited	./platform/common/bridge_functions.cc	/^bool BridgeWIfExited(BridgeWStatus bridge_wstatus) {$/;"	f	namespace:asylo::__anon357
BridgeWIfStopped	./platform/common/bridge_functions.cc	/^bool BridgeWIfStopped(BridgeWStatus bridge_wstatus) {$/;"	f	namespace:asylo::__anon103
BridgeWIfStopped	./platform/common/bridge_functions.cc	/^bool BridgeWIfStopped(BridgeWStatus bridge_wstatus) {$/;"	f	namespace:asylo::__anon357
BridgeWStatus	./platform/common/bridge_types.h	/^struct BridgeWStatus {$/;"	s
BroadcastTest	./test/misc/condvar_test.cc	/^class BroadcastTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon194	file:
BroadcastTest	./test/misc/condvar_test.cc	/^class BroadcastTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon448	file:
BsslLastErrorString	./crypto/util/bssl_util.cc	/^std::string BsslLastErrorString() {$/;"	f	namespace:asylo
BuildEnclaveInput	./platform/posix/sockets/domain_socket_test_driver.cc	/^  EnclaveInput BuildEnclaveInput(const SocketTestInput::SocketAction &action,$/;"	f	class:asylo::__anon310::DomainSocketDriver
BuildEnclaveInput	./platform/posix/sockets/domain_socket_test_driver.cc	/^  EnclaveInput BuildEnclaveInput(const SocketTestInput::SocketAction &action,$/;"	f	class:asylo::__anon56::DomainSocketDriver
BuildEnclaveInput	./platform/posix/sockets/inet6_socket_test_driver.cc	/^  EnclaveInput BuildEnclaveInput(const SocketTestInput::SocketAction &action,$/;"	f	class:asylo::__anon313::Inet6SocketDriver
BuildEnclaveInput	./platform/posix/sockets/inet6_socket_test_driver.cc	/^  EnclaveInput BuildEnclaveInput(const SocketTestInput::SocketAction &action,$/;"	f	class:asylo::__anon59::Inet6SocketDriver
BuildFilename	./util/logging.cc	/^const std::string BuildFilename(std::string filename) {$/;"	f	namespace:asylo::__anon236
BuildFilename	./util/logging.cc	/^const std::string BuildFilename(std::string filename) {$/;"	f	namespace:asylo::__anon490
BuildSiblingPath	./test/util/exec_tester.cc	/^std::string ExecTester::BuildSiblingPath(const std::string &path,$/;"	f	class:asylo::experimental::ExecTester
BuildTrustedApplication	./bazel/application_wrapper/application_wrapper_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./bazel/test_shim_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new TestShimEnclave; }$/;"	f	namespace:asylo
BuildTrustedApplication	./examples/grpc_server/grpc_server_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./examples/hello_world/hello_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new HelloApplication; }$/;"	f	namespace:asylo
BuildTrustedApplication	./examples/quickstart/demo_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new EnclaveDemo; }$/;"	f	namespace:asylo
BuildTrustedApplication	./examples/quickstart/solution/demo_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new EnclaveDemo; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/common/test/bridge_types_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new EnclaveBridgeTypes; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/core/test/enclave_api_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new EnclaveApi; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/core/test/getenv_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new EnclaveGetenvTest; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/core/test/proto_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new EnclaveProtoTest; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/posix/fork_security_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new ForkSecurityTest; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/posix/fork_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new ForkTest; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/posix/io/pipe_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new PipeTest; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/posix/sockets/addrinfo_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/posix/sockets/domain_socket_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new DomainSocketTest; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/posix/sockets/inet6_socket_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new Inet6SocketTest; }$/;"	f	namespace:asylo
BuildTrustedApplication	./platform/posix/syscalls_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new SyscallsEnclave; }$/;"	f	namespace:asylo
BuildTrustedApplication	./test/grpc/client_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new ClientEnclave(); }$/;"	f	namespace:asylo
BuildTrustedApplication	./test/grpc/enclave_insecure_server.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/grpc/enclave_secure_server.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/grpc/server_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/active_enclave_signal_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/block_enclave_entries_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/die.cc	/^TrustedApplication *BuildTrustedApplication() { return new TestDie; }$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/enclave_entry_count_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/error_propagation_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/exception_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new Exception; }$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/exhaust_sgx_tcs.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/fail_finalize_enclave.cc	/^TrustedApplication* BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/hello_world.cc	/^TrustedApplication *BuildTrustedApplication() { return new HelloWorld; }$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/inactive_enclave_signal_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() {$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/initfini.cc	/^TrustedApplication *BuildTrustedApplication() { return new Initfini; }$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/logging_test_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new Logging; }$/;"	f	namespace:asylo
BuildTrustedApplication	./test/misc/threaded_finalize.cc	/^TrustedApplication *BuildTrustedApplication() { return new ThreadedFinalize(); }$/;"	f	namespace:asylo
BuildTrustedApplication	./test/util/do_nothing_enclave.cc	/^TrustedApplication *BuildTrustedApplication() { return new TrustedApplication; }$/;"	f	namespace:asylo
BusyWork	./test/util/pthread_test_util.cc	/^void BusyWork() {$/;"	f	namespace:asylo
ByteContainerUtilTypedTest	./crypto/util/byte_container_util_test.cc	/^class ByteContainerUtilTypedTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon21	file:
ByteContainerUtilTypedTest	./crypto/util/byte_container_util_test.cc	/^class ByteContainerUtilTypedTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon275	file:
ByteContainerView	./crypto/util/byte_container_view.h	/^  ByteContainerView(absl::string_view v)$/;"	f	class:asylo::ByteContainerView
ByteContainerView	./crypto/util/byte_container_view.h	/^  ByteContainerView(const ByteContainerT &container)$/;"	f	class:asylo::ByteContainerView
ByteContainerView	./crypto/util/byte_container_view.h	/^  ByteContainerView(const char *cstr)$/;"	f	class:asylo::ByteContainerView
ByteContainerView	./crypto/util/byte_container_view.h	/^  ByteContainerView(void const *data, size_t size)$/;"	f	class:asylo::ByteContainerView
ByteContainerView	./crypto/util/byte_container_view.h	/^class ByteContainerView {$/;"	c	namespace:asylo
ByteCount	./grpc/auth/util/multi_buffer_input_stream.cc	/^    -> decltype(static_cast<ZeroCopyInputStream *>(nullptr)->ByteCount()) {$/;"	f	namespace:asylo
Bytes	./crypto/util/bytes.h	/^  Bytes(ByteContainerView view) {$/;"	f	class:asylo::Bytes
Bytes	./crypto/util/bytes.h	/^  Bytes(Iterator start, Iterator end) {$/;"	f	class:asylo::Bytes
Bytes	./crypto/util/bytes.h	/^  Bytes(const uint8_t *data, size_t size) {$/;"	f	class:asylo::Bytes
Bytes	./crypto/util/bytes.h	/^class Bytes {$/;"	c	namespace:asylo
BytesPrinter	./identity/sgx/proto_format.cc	/^class BytesPrinter : public TextFormat::FastFieldValuePrinter {$/;"	c	namespace:asylo::sgx::__anon163	file:
BytesPrinter	./identity/sgx/proto_format.cc	/^class BytesPrinter : public TextFormat::FastFieldValuePrinter {$/;"	c	namespace:asylo::sgx::__anon417	file:
Byteswap	./platform/posix/endian_test.cc	/^uint16_t Byteswap(uint16_t value) { return bswap_16(value); }$/;"	f	namespace:asylo::__anon298
Byteswap	./platform/posix/endian_test.cc	/^uint16_t Byteswap(uint16_t value) { return bswap_16(value); }$/;"	f	namespace:asylo::__anon44
Byteswap	./platform/posix/endian_test.cc	/^uint32_t Byteswap(uint32_t value) { return bswap_32(value); }$/;"	f	namespace:asylo::__anon298
Byteswap	./platform/posix/endian_test.cc	/^uint32_t Byteswap(uint32_t value) { return bswap_32(value); }$/;"	f	namespace:asylo::__anon44
Byteswap	./platform/posix/endian_test.cc	/^uint64_t Byteswap(uint64_t value) { return bswap_64(value); }$/;"	f	namespace:asylo::__anon298
Byteswap	./platform/posix/endian_test.cc	/^uint64_t Byteswap(uint64_t value) { return bswap_64(value); }$/;"	f	namespace:asylo::__anon44
CACHE_ALIGNED	./platform/posix/malloc_lock.cc	/^static int lock_count CACHE_ALIGNED = 0;$/;"	v	file:
CACHE_ALIGNED	./platform/posix/malloc_lock.cc	/^static volatile uint64_t lock_owner CACHE_ALIGNED = kInvalidThread;$/;"	v	file:
CACHE_ALIGNED	./platform/posix/malloc_lock.cc	29;"	d	file:
CHECK	./util/logging.h	99;"	d
CHECK_EQ	./util/logging.h	251;"	d
CHECK_GE	./util/logging.h	259;"	d
CHECK_GT	./util/logging.h	261;"	d
CHECK_LE	./util/logging.h	255;"	d
CHECK_LT	./util/logging.h	257;"	d
CHECK_NE	./util/logging.h	253;"	d
CHECK_NOTNULL	./util/logging.h	278;"	d
CHECK_OCALL	./platform/arch/sgx/trusted/host_calls.cc	61;"	d	file:
CHECK_OCALL	./platform/primitives/sgx/trusted_sgx.cc	52;"	d	file:
CHECK_OP	./util/logging.h	247;"	d
CHECK_OP_LOG	./util/logging.h	233;"	d
COMPACT_ASYLO_LOG_DFATAL	./util/logging.h	39;"	d
COMPACT_ASYLO_LOG_DFATAL	./util/logging.h	41;"	d
COMPACT_ASYLO_LOG_ERROR	./util/logging.h	34;"	d
COMPACT_ASYLO_LOG_FATAL	./util/logging.h	35;"	d
COMPACT_ASYLO_LOG_INFO	./util/logging.h	31;"	d
COMPACT_ASYLO_LOG_QFATAL	./util/logging.h	36;"	d
COMPACT_ASYLO_LOG_WARNING	./util/logging.h	32;"	d
COMPLETED	./grpc/auth/core/ekep_handshaker.h	/^    COMPLETED = 2,$/;"	m	class:asylo::EkepHandshaker::HandshakeState
COMPLETED	./grpc/auth/core/ekep_handshaker.h	/^    COMPLETED = 2,$/;"	m	class:asylo::EkepHandshaker::Result
CPU_CLR	./platform/posix/include/sched.h	43;"	d
CPU_COUNT	./platform/posix/include/sched.h	47;"	d
CPU_EQUAL	./platform/posix/include/sched.h	49;"	d
CPU_ISSET	./platform/posix/include/sched.h	45;"	d
CPU_SET	./platform/posix/include/sched.h	41;"	d
CPU_SETSIZE	./platform/posix/include/sched.h	32;"	d
CPU_SET_MAX_CPUS	./platform/posix/include/internal/sched.h	30;"	d
CPU_SET_T_NUM_WORDS	./platform/posix/include/internal/sched.h	34;"	d
CPU_ZERO	./platform/posix/include/sched.h	39;"	d
CS8	./platform/posix/include/sys/termios.h	54;"	d
CStyleBody	./util/thread_test.cc	/^void CStyleBody(bool* executed) { *executed = true; }$/;"	f	namespace:asylo::__anon233
CStyleBody	./util/thread_test.cc	/^void CStyleBody(bool* executed) { *executed = true; }$/;"	f	namespace:asylo::__anon487
CStyleDetachedBody	./util/thread_test.cc	/^void CStyleDetachedBody(bool* executed) {$/;"	f	namespace:asylo::__anon233
CStyleDetachedBody	./util/thread_test.cc	/^void CStyleDetachedBody(bool* executed) {$/;"	f	namespace:asylo::__anon487
CTMMTAuthenticatedDictionary	./platform/storage/secure/ctmmt_authenticated_dictionary.h	/^  CTMMTAuthenticatedDictionary()$/;"	f	class:asylo::platform::storage::CTMMTAuthenticatedDictionary
CTMMTAuthenticatedDictionary	./platform/storage/secure/ctmmt_authenticated_dictionary.h	/^class CTMMTAuthenticatedDictionary : public AuthenticatedDictionary {$/;"	c	namespace:asylo::platform::storage
C_ANY	./platform/posix/include/arpa/nameser.h	239;"	d
C_CHAOS	./platform/posix/include/arpa/nameser.h	236;"	d
C_HS	./platform/posix/include/arpa/nameser.h	237;"	d
C_IN	./platform/posix/include/arpa/nameser.h	235;"	d
C_IN	./platform/system/include/arpa/nameser_compat.h	45;"	d
C_NONE	./platform/posix/include/arpa/nameser.h	238;"	d
CacheEntry	./platform/storage/utils/record_store.h	/^  struct CacheEntry {$/;"	s	class:asylo::RecordStore
CalculateAlignment	./platform/arch/sgx/trusted/hardware_random.cc	/^static void CalculateAlignment(const void *buf, size_t size, size_t align_size,$/;"	f	namespace:asylo::__anon285
CalculateAlignment	./platform/arch/sgx/trusted/hardware_random.cc	/^static void CalculateAlignment(const void *buf, size_t size, size_t align_size,$/;"	f	namespace:asylo::__anon31
CallServices	./grpc/util/grpc_server_launcher_test.cc	/^  Status CallServices() {$/;"	f	class:asylo::__anon263::GrpcServerLauncherTest
CallServices	./grpc/util/grpc_server_launcher_test.cc	/^  Status CallServices() {$/;"	f	class:asylo::__anon517::GrpcServerLauncherTest
CallWithContext	./platform/posix/io/io_manager.cc	/^ReturnType IOManager::CallWithContext(int fd, IOAction action) {$/;"	f	class:asylo::io::IOManager
CallWithHandler	./platform/posix/io/io_manager.cc	/^ReturnType IOManager::CallWithHandler(const char *path, IOAction action) {$/;"	f	class:asylo::io::IOManager
CallWithHandler	./platform/posix/io/io_manager.cc	/^ReturnType IOManager::CallWithHandler(const char *path1, const char *path2,$/;"	f	class:asylo::io::IOManager
CanBeTimestampProto	./identity/sgx/tcb_info_from_json.cc	/^bool CanBeTimestampProto(absl::Time time) {$/;"	f	namespace:asylo::sgx::__anon158
CanBeTimestampProto	./identity/sgx/tcb_info_from_json.cc	/^bool CanBeTimestampProto(absl::Time time) {$/;"	f	namespace:asylo::sgx::__anon412
CanGenerate	./identity/null_identity/null_assertion_generator.cc	/^StatusOr<bool> NullAssertionGenerator::CanGenerate($/;"	f	class:asylo::NullAssertionGenerator
CanGenerate	./identity/sgx/sgx_local_assertion_generator.cc	/^StatusOr<bool> SgxLocalAssertionGenerator::CanGenerate($/;"	f	class:asylo::SgxLocalAssertionGenerator
CanVerify	./identity/null_identity/null_assertion_verifier.cc	/^StatusOr<bool> NullAssertionVerifier::CanVerify($/;"	f	class:asylo::NullAssertionVerifier
CanVerify	./identity/sgx/sgx_local_assertion_verifier.cc	/^StatusOr<bool> SgxLocalAssertionVerifier::CanVerify($/;"	f	class:asylo::SgxLocalAssertionVerifier
CanonicalCode	./util/status.cc	/^error::GoogleError Status::CanonicalCode() const {$/;"	f	class:asylo::Status
CanonicalCode	./util/status_internal.h	/^  static error::GoogleError CanonicalCode(const StatusT &status) {$/;"	f	struct:asylo::status_internal::status_type_traits
CanonicalCode	./util/status_internal.h	/^  static error::GoogleError CanonicalCode(const StatusT &status,$/;"	f	struct:asylo::status_internal::status_type_traits
CanonicalizePath	./platform/posix/io/io_manager.cc	/^StatusOr<std::string> IOManager::CanonicalizePath($/;"	f	class:asylo::io::IOManager
CastToWord	./platform/system_call/message_test.cc	/^uint64_t CastToWord(T *value) {$/;"	f	namespace:asylo::system_call::__anon122
CastToWord	./platform/system_call/message_test.cc	/^uint64_t CastToWord(T *value) {$/;"	f	namespace:asylo::system_call::__anon376
CastToWord	./platform/system_call/message_test.cc	/^uint64_t CastToWord(T value) {$/;"	f	namespace:asylo::system_call::__anon122
CastToWord	./platform/system_call/message_test.cc	/^uint64_t CastToWord(T value) {$/;"	f	namespace:asylo::system_call::__anon376
CastToWord	./platform/system_call/message_test.cc	/^uint64_t CastToWord(std::nullptr_t value) { return 0; }$/;"	f	namespace:asylo::system_call::__anon122
CastToWord	./platform/system_call/message_test.cc	/^uint64_t CastToWord(std::nullptr_t value) { return 0; }$/;"	f	namespace:asylo::system_call::__anon376
ChMod	./platform/posix/io/io_manager.cc	/^int IOManager::ChMod(const char *pathname, mode_t mode) {$/;"	f	class:asylo::io::IOManager
ChMod	./platform/posix/io/io_manager.h	/^    virtual int ChMod(const char *pathname, mode_t mode) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
ChMod	./platform/posix/io/native_paths.cc	/^int NativePathHandler::ChMod(const char *path, mode_t mode) {$/;"	f	class:asylo::io::NativePathHandler
ChannelTest	./test/grpc/channel_test.cc	/^class ChannelTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon224	file:
ChannelTest	./test/grpc/channel_test.cc	/^class ChannelTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon478	file:
CheckAlign	./identity/util/aligned_object_ptr_test.cc	/^void CheckAlign(const AlignedObjectPtr<T, Align> &t) {$/;"	f	namespace:asylo::__anon172
CheckAlign	./identity/util/aligned_object_ptr_test.cc	/^void CheckAlign(const AlignedObjectPtr<T, Align> &t) {$/;"	f	namespace:asylo::__anon426
CheckArrayEquality	./grpc/auth/core/assertion_description_test.cc	/^  void CheckArrayEquality(const assertion_description_array &expected,$/;"	f	class:asylo::__anon259::AssertionDescriptionTest
CheckArrayEquality	./grpc/auth/core/assertion_description_test.cc	/^  void CheckArrayEquality(const assertion_description_array &expected,$/;"	f	class:asylo::__anon513::AssertionDescriptionTest
CheckCounter	./test/misc/rwlock_test.cc	/^  void CheckCounter() {$/;"	f	class:asylo::__anon213::RwLockTest
CheckCounter	./test/misc/rwlock_test.cc	/^  void CheckCounter() {$/;"	f	class:asylo::__anon467::RwLockTest
CheckDescriptionEquality	./grpc/auth/core/assertion_description_test.cc	/^  void CheckDescriptionEquality(const assertion_description &expected,$/;"	f	class:asylo::__anon259::AssertionDescriptionTest
CheckDescriptionEquality	./grpc/auth/core/assertion_description_test.cc	/^  void CheckDescriptionEquality(const assertion_description &expected,$/;"	f	class:asylo::__anon513::AssertionDescriptionTest
CheckEkepVersionEquality	./grpc/auth/core/server_ekep_handshaker.cc	/^bool CheckEkepVersionEquality(const EkepVersion &ekep_version,$/;"	f	namespace:asylo::__anon260
CheckEkepVersionEquality	./grpc/auth/core/server_ekep_handshaker.cc	/^bool CheckEkepVersionEquality(const EkepVersion &ekep_version,$/;"	f	namespace:asylo::__anon514
CheckFD	./test/util/exec_tester.cc	/^void ExecTester::CheckFD(int fd, absl::Span<char> buffer,$/;"	f	class:asylo::experimental::ExecTester
CheckHostErrno	./platform/posix/errno_test.cc	/^void CheckHostErrno(const char *path, int expected_errno) {$/;"	f	namespace:asylo::__anon330
CheckHostErrno	./platform/posix/errno_test.cc	/^void CheckHostErrno(const char *path, int expected_errno) {$/;"	f	namespace:asylo::__anon76
CheckInRange	./test/util/pthread_test_util.cc	/^Status CheckInRange(const int value, absl::string_view debug_name,$/;"	f	namespace:asylo
CheckInvariants	./test/misc/condvar_test.cc	/^  Status CheckInvariants() {$/;"	f	class:asylo::__anon194::ProducerConsumerTest
CheckInvariants	./test/misc/condvar_test.cc	/^  Status CheckInvariants() {$/;"	f	class:asylo::__anon448::ProducerConsumerTest
CheckInvariants	./test/misc/sem_test.cc	/^  void CheckInvariants() {$/;"	f	class:asylo::__anon205::ProducerConsumerTest
CheckInvariants	./test/misc/sem_test.cc	/^  void CheckInvariants() {$/;"	f	class:asylo::__anon459::ProducerConsumerTest
CheckKeySize	./crypto/rsa_oaep_encryption_key.cc	/^Status CheckKeySize(int key_size) {$/;"	f	namespace:asylo::__anon13
CheckKeySize	./crypto/rsa_oaep_encryption_key.cc	/^Status CheckKeySize(int key_size) {$/;"	f	namespace:asylo::__anon267
CheckLayout	./platform/primitives/extent.h	/^  static void CheckLayout() {$/;"	f	class:asylo::primitives::Extent
CheckLayout	./platform/primitives/parameter_stack.h	/^    static void CheckLayout() {$/;"	f	struct:asylo::primitives::ParameterStack::Item
CheckLayout	./platform/primitives/parameter_stack.h	/^  static void CheckLayout() {$/;"	f	class:asylo::primitives::ParameterStack
CheckLayout	./platform/primitives/primitive_status.h	/^  static void CheckLayout() {$/;"	f	class:asylo::primitives::PrimitiveStatus
CheckLine	./test/util/exec_tester.h	/^  virtual bool CheckLine(const std::string &line) { return true; }$/;"	f	class:asylo::experimental::ExecTester
CheckMacEquality	./grpc/auth/core/ekep_crypto.cc	/^bool CheckMacEquality(CleansingVector<uint8_t> mac1,$/;"	f	namespace:asylo
CheckNotNull	./util/logging.h	/^T CheckNotNull(const char *file, int line, const char *exprtext, T &&t) {$/;"	f	namespace:asylo
CheckOpMessageBuilder	./util/logging.cc	/^CheckOpMessageBuilder::CheckOpMessageBuilder(const char *exprtext)$/;"	f	class:asylo::CheckOpMessageBuilder
CheckOpMessageBuilder	./util/logging.h	/^class CheckOpMessageBuilder {$/;"	c	namespace:asylo
CheckStdout	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  void CheckStdout(const std::string &expected_stdout,$/;"	f	class:asylo::__anon182::ApplicationWrapperEnclaveTest	file:
CheckStdout	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  void CheckStdout(const std::string &expected_stdout,$/;"	f	class:asylo::__anon436::ApplicationWrapperEnclaveTest	file:
Chown	./platform/posix/io/io_manager.cc	/^int IOManager::Chown(const char *path, uid_t owner, gid_t group) {$/;"	f	class:asylo::io::IOManager
Chown	./platform/posix/io/io_manager.h	/^    virtual int Chown(const char *path, uid_t owner, gid_t group) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Chown	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Chown(const char *path, uid_t owner, gid_t group) {$/;"	f	class:asylo::io::NativePathHandler
Chown	./platform/posix/io/random_devices.cc	/^int RandomPathHandler::Chown(const char *path, uid_t owner, gid_t group) {$/;"	f	class:asylo::RandomPathHandler
CipherSuiteToAeadScheme	./identity/sgx/local_secret_sealer_helpers.cc	/^AeadScheme CipherSuiteToAeadScheme(CipherSuite cipher_suite) {$/;"	f	namespace:asylo::sgx::internal
Cleanse	./crypto/util/bytes.h	/^  void Cleanse() { OPENSSL_cleanse(data_, Size); }$/;"	f	class:asylo::Bytes
CleansingAllocator	./util/cleansing_allocator.h	/^  CleansingAllocator(const A &alloc = A()) : alloc_{alloc} {};$/;"	f	class:asylo::CleansingAllocator
CleansingAllocator	./util/cleansing_allocator.h	/^  explicit CleansingAllocator(const CleansingAllocator<U, B> &a)$/;"	f	class:asylo::CleansingAllocator
CleansingAllocator	./util/cleansing_allocator.h	/^class CleansingAllocator {$/;"	c	namespace:asylo
Cleanup	./util/cleanup.h	/^  Cleanup() : cleanup_function_() {}$/;"	f	class:asylo::Cleanup
Cleanup	./util/cleanup.h	/^  explicit Cleanup(std::function<void()> cleanup_function)$/;"	f	class:asylo::Cleanup
Cleanup	./util/cleanup.h	/^class Cleanup {$/;"	c	namespace:asylo
CleanupFunc	./test/misc/pthread_test.cc	/^  static void CleanupFunc(void *arg) { run_log_.emplace_back((char *)arg); }$/;"	f	class:asylo::pthread_impl::__anon201::PthreadCleanupTest
CleanupFunc	./test/misc/pthread_test.cc	/^  static void CleanupFunc(void *arg) { run_log_.emplace_back((char *)arg); }$/;"	f	class:asylo::pthread_impl::__anon455::PthreadCleanupTest
Clear	./platform/posix/pthread.cc	/^void QueueOperations::Clear() {$/;"	f	class:asylo::pthread_impl::QueueOperations
Clear	./util/mutex_guarded.h	/^  void Clear() {$/;"	f	class:asylo::LockView
Clear	./util/mutex_guarded.h	/^  void Clear() {$/;"	f	class:asylo::ReaderLockView
ClearForkRequested	./platform/arch/sgx/trusted/fork.cc	/^bool ClearForkRequested() { return fork_requested.exchange(false); }$/;"	f	namespace:asylo::__anon284
ClearForkRequested	./platform/arch/sgx/trusted/fork.cc	/^bool ClearForkRequested() { return fork_requested.exchange(false); }$/;"	f	namespace:asylo::__anon30
ClearSecsAttributeSet	./identity/sgx/secs_attributes.cc	/^void ClearSecsAttributeSet(SecsAttributeSet *attributes) {$/;"	f	namespace:asylo::sgx
ClearSigAction	./platform/posix/signal/signal_manager.cc	/^void SignalManager::ClearSigAction(int signum) {$/;"	f	class:asylo::SignalManager
ClearSnapshotKeyTransferRequested	./platform/arch/sgx/trusted/fork.cc	/^bool ClearSnapshotKeyTransferRequested() {$/;"	f	namespace:asylo::__anon284
ClearSnapshotKeyTransferRequested	./platform/arch/sgx/trusted/fork.cc	/^bool ClearSnapshotKeyTransferRequested() {$/;"	f	namespace:asylo::__anon30
Client	./platform/primitives/untrusted_primitives.h	/^  Client(const absl::string_view name,$/;"	f	class:asylo::primitives::Client
Client	./platform/primitives/untrusted_primitives.h	/^class Client : public std::enable_shared_from_this<Client> {$/;"	c	namespace:asylo::primitives
ClientApiTest	./platform/core/test/enclave_api_test_driver.cc	/^class ClientApiTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon133	file:
ClientApiTest	./platform/core/test/enclave_api_test_driver.cc	/^class ClientApiTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon387	file:
ClientConnection	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::ClientConnection(int fd, struct sockaddr *serv_addr,$/;"	f	class:asylo::SocketClient
ClientEkepHandshaker	./grpc/auth/core/client_ekep_handshaker.cc	/^ClientEkepHandshaker::ClientEkepHandshaker(const EkepHandshakerOptions &options)$/;"	f	class:asylo::ClientEkepHandshaker
ClientEnclave	./test/grpc/client_enclave.h	/^class ClientEnclave : public TrustedApplication {$/;"	c	namespace:asylo
ClientRoundtripTransmit	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::ClientRoundtripTransmit(int buf_len, int round_trip) {$/;"	f	class:asylo::SocketClient
ClientSetup	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::ClientSetup(const std::string &server_ip, int server_port,$/;"	f	class:asylo::SocketClient
ClientSetup	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::ClientSetup(const std::string &socket_name,$/;"	f	class:asylo::SocketClient
ClientTransmit	./platform/posix/sockets/socket_test_transmit.cc	/^Status ClientTransmit(SocketClient *socket_client) {$/;"	f	namespace:asylo
Close	./platform/posix/io/io_context_epoll.cc	/^int IOContextEpoll::Close() { return enc_untrusted_close(host_fd_); }$/;"	f	class:asylo::io::IOContextEpoll
Close	./platform/posix/io/io_context_eventfd.cc	/^int IOContextEventFd::Close() {$/;"	f	class:asylo::io::IOContextEventFd
Close	./platform/posix/io/io_context_inotify.cc	/^int IOContextInotify::Close() { return enc_untrusted_close(host_fd_); }$/;"	f	class:asylo::io::IOContextInotify
Close	./platform/posix/io/io_manager.cc	/^int IOManager::Close(int fd) {$/;"	f	class:asylo::io::IOManager
Close	./platform/posix/io/native_paths.cc	/^int IOContextNative::Close() { return enc_untrusted_close(host_fd_); }$/;"	f	class:asylo::io::IOContextNative
Close	./platform/posix/io/random_devices.cc	/^int RandomIOContext::Close() {$/;"	f	class:asylo::RandomIOContext
Close	./platform/posix/io/secure_paths.cc	/^int IOContextSecure::Close() {$/;"	f	class:asylo::io::IOContextSecure
CloseFds	./platform/posix/io/inotify_test.cc	/^  void CloseFds() {$/;"	f	class:asylo::__anon321::InotifyTest
CloseFds	./platform/posix/io/inotify_test.cc	/^  void CloseFds() {$/;"	f	class:asylo::__anon67::InotifyTest
CloseFileDescriptor	./platform/posix/io/io_manager.cc	/^int IOManager::CloseFileDescriptor(int fd) {$/;"	f	class:asylo::io::IOManager
CloseFunction	./platform/storage/utils/fd_closer.h	/^typedef int (*CloseFunction)(int);$/;"	t	namespace:asylo::platform::storage
ClosePipes	./platform/posix/io/epoll_test.cc	/^  void ClosePipes() {$/;"	f	class:asylo::__anon318::EpollTest
ClosePipes	./platform/posix/io/epoll_test.cc	/^  void ClosePipes() {$/;"	f	class:asylo::__anon64::EpollTest
CloseReadFd	./util/fd_utils.cc	/^Status Pipe::CloseReadFd() {$/;"	f	class:asylo::Pipe
CloseWriteFd	./util/fd_utils.cc	/^Status Pipe::CloseWriteFd() {$/;"	f	class:asylo::Pipe
Code	./test/misc/exception.h	/^  int Code() const { return code_; }$/;"	f	class:asylo::TestException
CodeIdentityUtilTest	./identity/sgx/code_identity_util_test.cc	/^class CodeIdentityUtilTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon152	file:
CodeIdentityUtilTest	./identity/sgx/code_identity_util_test.cc	/^class CodeIdentityUtilTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon406	file:
CollectAllOutputAndRestore	./test/util/output_collector.cc	/^StatusOr<std::string> OutputCollector::CollectAllOutputAndRestore() {$/;"	f	class:asylo::OutputCollector
CollectOutputSoFar	./test/util/output_collector.cc	/^StatusOr<std::string> OutputCollector::CollectOutputSoFar() const {$/;"	f	class:asylo::OutputCollector
CollectParameters	./platform/system_call/message_test.cc	/^void CollectParameters(uint64_t *parameters) {}$/;"	f	namespace:asylo::system_call::__anon122
CollectParameters	./platform/system_call/message_test.cc	/^void CollectParameters(uint64_t *parameters) {}$/;"	f	namespace:asylo::system_call::__anon376
CollectParameters	./platform/system_call/message_test.cc	/^void CollectParameters(uint64_t *parameters, T first, Args &&... rest) {$/;"	f	namespace:asylo::system_call::__anon122
CollectParameters	./platform/system_call/message_test.cc	/^void CollectParameters(uint64_t *parameters, T first, Args &&... rest) {$/;"	f	namespace:asylo::system_call::__anon376
Commit	./platform/storage/utils/record_store.h	/^  ASYLO_MUST_USE_RESULT Status Commit(NodeRef entry) {$/;"	f	class:asylo::RecordStore
CompareAndSwap	./platform/core/atomic.h	/^inline T CompareAndSwap(volatile T *location, T expected, T desired) {$/;"	f	namespace:asylo
CompareFiles	./platform/posix/syscalls_test_enclave.cc	/^  Status CompareFiles(int fd1, int fd2, int size) {$/;"	f	class:asylo::SyscallsEnclave	file:
ComparePassWd	./platform/posix/syscalls_test_driver.cc	/^bool ComparePassWd(const SyscallsTestOutput &test_output,$/;"	f	namespace:asylo::__anon302
ComparePassWd	./platform/posix/syscalls_test_driver.cc	/^bool ComparePassWd(const SyscallsTestOutput &test_output,$/;"	f	namespace:asylo::__anon48
ComparePeerAndSelfIdentity	./platform/arch/sgx/trusted/fork.cc	/^Status ComparePeerAndSelfIdentity(const EnclaveIdentity &peer_identity) {$/;"	f	namespace:asylo
CompareTcbs	./identity/sgx/tcb.cc	/^PartialOrder CompareTcbs(const Tcb &lhs, const Tcb &rhs) {$/;"	f	namespace:asylo::sgx
CompareTotal	./identity/sgx/tcb.cc	/^PartialOrder CompareTotal(const T &lhs, const T &rhs) {$/;"	f	namespace:asylo::sgx::__anon145
CompareTotal	./identity/sgx/tcb.cc	/^PartialOrder CompareTotal(const T &lhs, const T &rhs) {$/;"	f	namespace:asylo::sgx::__anon399
ComputeClientHandshakeAuthenticator	./grpc/auth/core/ekep_crypto.cc	/^Status ComputeClientHandshakeAuthenticator($/;"	f	namespace:asylo
ComputeServerHandshakeAuthenticator	./grpc/auth/core/ekep_crypto.cc	/^Status ComputeServerHandshakeAuthenticator($/;"	f	namespace:asylo
ConfigServerConnectionAttributes	./platform/core/enclave_manager.h	/^    ConfigServerConnectionAttributes(std::string address,$/;"	f	struct:asylo::EnclaveManagerOptions::ConfigServerConnectionAttributes
ConfigServerConnectionAttributes	./platform/core/enclave_manager.h	/^  struct ConfigServerConnectionAttributes {$/;"	s	class:asylo::EnclaveManagerOptions
Configure	./platform/core/enclave_manager.cc	/^Status EnclaveManager::Configure(const EnclaveManagerOptions &options) {$/;"	f	class:asylo::EnclaveManager
Connect	./platform/posix/io/io_manager.cc	/^int IOManager::Connect(int sockfd, const struct sockaddr *addr,$/;"	f	class:asylo::io::IOManager
Connect	./platform/posix/io/io_manager.h	/^    virtual int Connect(const struct sockaddr *addr, socklen_t addrlen) {$/;"	f	class:asylo::io::IOManager::IOContext
Connect	./platform/posix/io/native_paths.cc	/^int IOContextNative::Connect(const struct sockaddr *addr, socklen_t addrlen) {$/;"	f	class:asylo::io::IOContextNative
ConnectChannel	./grpc/util/grpc_server_launcher_test.cc	/^  bool ConnectChannel() {$/;"	f	class:asylo::__anon263::GrpcServerLauncherTest
ConnectChannel	./grpc/util/grpc_server_launcher_test.cc	/^  bool ConnectChannel() {$/;"	f	class:asylo::__anon517::GrpcServerLauncherTest
Construct	./identity/sgx/fake_enclave.h	/^  static FakeEnclave *Construct() {$/;"	f	struct:asylo::sgx::RandomFakeEnclaveFactory
Construct	./platform/common/singleton.h	/^  static T *Construct() { return new T(); }$/;"	f	struct:asylo::DefaultFactory
Construct	./platform/common/singleton_test.cc	/^  static T *Construct() {$/;"	f	struct:asylo::__anon112::LethargicFactory
Construct	./platform/common/singleton_test.cc	/^  static T *Construct() {$/;"	f	struct:asylo::__anon366::LethargicFactory
ConsumerRoutine	./test/misc/condvar_test.cc	/^  void ConsumerRoutine() {$/;"	f	class:asylo::__anon194::ProducerConsumerTest
ConsumerRoutine	./test/misc/condvar_test.cc	/^  void ConsumerRoutine() {$/;"	f	class:asylo::__anon448::ProducerConsumerTest
ConsumerRoutine	./test/misc/sem_test.cc	/^  void ConsumerRoutine() {$/;"	f	class:asylo::__anon205::ProducerConsumerTest
ConsumerRoutine	./test/misc/sem_test.cc	/^  void ConsumerRoutine() {$/;"	f	class:asylo::__anon459::ProducerConsumerTest
ConsumerTrampoline	./test/misc/condvar_test.cc	/^  static void *ConsumerTrampoline(void *arg) {$/;"	f	class:asylo::__anon194::ProducerConsumerTest
ConsumerTrampoline	./test/misc/condvar_test.cc	/^  static void *ConsumerTrampoline(void *arg) {$/;"	f	class:asylo::__anon448::ProducerConsumerTest
ConsumerTrampoline	./test/misc/sem_test.cc	/^  static void *ConsumerTrampoline(void *arg) {$/;"	f	class:asylo::__anon205::ProducerConsumerTest
ConsumerTrampoline	./test/misc/sem_test.cc	/^  static void *ConsumerTrampoline(void *arg) {$/;"	f	class:asylo::__anon459::ProducerConsumerTest
Contains	./platform/posix/pthread.cc	/^bool QueueOperations::Contains(const pthread_t id) const {$/;"	f	class:asylo::pthread_impl::QueueOperations
ContainsEquivalent	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool ContainsEquivalent(const assertion_description_array &array,$/;"	f	namespace:asylo::__anon252
ContainsEquivalent	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool ContainsEquivalent(const assertion_description_array &array,$/;"	f	namespace:asylo::__anon506
ConventionFlag	./platform/system_call/generate_tables.cc	/^enum ConventionFlag { kIn = 1, kOut = 2 };$/;"	g	file:
ConventionTable	./platform/system_call/generate_tables.cc	/^    *ConventionTable() {$/;"	f
ConvertFromInotifyMaskProto	./platform/common/bridge_proto_serializer.cc	/^uint32_t ConvertFromInotifyMaskProto($/;"	f	namespace:asylo::__anon109
ConvertFromInotifyMaskProto	./platform/common/bridge_proto_serializer.cc	/^uint32_t ConvertFromInotifyMaskProto($/;"	f	namespace:asylo::__anon363
ConvertFromRecvFromArgsProto	./platform/common/bridge_proto_serializer.cc	/^bool ConvertFromRecvFromArgsProto(const RecvFromArgs &args, int *sockfd,$/;"	f	namespace:asylo::__anon109
ConvertFromRecvFromArgsProto	./platform/common/bridge_proto_serializer.cc	/^bool ConvertFromRecvFromArgsProto(const RecvFromArgs &args, int *sockfd,$/;"	f	namespace:asylo::__anon363
ConvertMatchSpecToKeypolicy	./identity/sgx/local_secret_sealer_helpers.cc	/^uint16_t ConvertMatchSpecToKeypolicy(const CodeIdentityMatchSpec &spec) {$/;"	f	namespace:asylo::sgx::internal
ConvertReportProtoToHardwareReport	./identity/sgx/platform_provisioning.cc	/^StatusOr<Report> ConvertReportProtoToHardwareReport($/;"	f	namespace:asylo::sgx
ConvertSecsAttributeRepresentation	./identity/sgx/secs_attributes.cc	/^bool ConvertSecsAttributeRepresentation($/;"	f	namespace:asylo::sgx
ConvertSecsAttributeRepresentation	./identity/sgx/secs_attributes.cc	/^bool ConvertSecsAttributeRepresentation(const Attributes &attributes,$/;"	f	namespace:asylo::sgx
ConvertSecsAttributeRepresentation	./identity/sgx/secs_attributes.cc	/^bool ConvertSecsAttributeRepresentation(const SecsAttributeSet &attributes_set,$/;"	f	namespace:asylo::sgx
ConvertTargetInfoProtoToTargetinfo	./identity/sgx/platform_provisioning.cc	/^StatusOr<Targetinfo> ConvertTargetInfoProtoToTargetinfo($/;"	f	namespace:asylo::sgx
ConvertToAddrinfo	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToAddrinfo(const AddrinfosProto *in, struct addrinfo **out) {$/;"	f	namespace:asylo::__anon109
ConvertToAddrinfo	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToAddrinfo(const AddrinfosProto *in, struct addrinfo **out) {$/;"	f	namespace:asylo::__anon363
ConvertToAddrinfoProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToAddrinfoProtobuf(const struct addrinfo *in, AddrinfosProto *out,$/;"	f	namespace:asylo::__anon109
ConvertToAddrinfoProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToAddrinfoProtobuf(const struct addrinfo *in, AddrinfosProto *out,$/;"	f	namespace:asylo::__anon363
ConvertToEpollCtlArgsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToEpollCtlArgsProtobuf(int epfd, int op, int fd,$/;"	f	namespace:asylo::__anon109
ConvertToEpollCtlArgsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToEpollCtlArgsProtobuf(int epfd, int op, int fd,$/;"	f	namespace:asylo::__anon363
ConvertToEpollEvent	./platform/common/bridge_proto_serializer.cc	/^void ConvertToEpollEvent(const EpollEvent &event_proto,$/;"	f	namespace:asylo::__anon109
ConvertToEpollEvent	./platform/common/bridge_proto_serializer.cc	/^void ConvertToEpollEvent(const EpollEvent &event_proto,$/;"	f	namespace:asylo::__anon363
ConvertToEpollEventList	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToEpollEventList(const struct epoll_event *events, int numevents,$/;"	f	namespace:asylo::__anon109
ConvertToEpollEventList	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToEpollEventList(const struct epoll_event *events, int numevents,$/;"	f	namespace:asylo::__anon363
ConvertToEpollEventProtobuf	./platform/common/bridge_proto_serializer.cc	/^void ConvertToEpollEventProtobuf(const struct epoll_event *event,$/;"	f	namespace:asylo::__anon109
ConvertToEpollEventProtobuf	./platform/common/bridge_proto_serializer.cc	/^void ConvertToEpollEventProtobuf(const struct epoll_event *event,$/;"	f	namespace:asylo::__anon363
ConvertToEpollEventStructs	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToEpollEventStructs(const EpollEventList &event_list,$/;"	f	namespace:asylo::__anon109
ConvertToEpollEventStructs	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToEpollEventStructs(const EpollEventList &event_list,$/;"	f	namespace:asylo::__anon363
ConvertToEpollWaitArgsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToEpollWaitArgsProtobuf(int epfd, int maxevents, int timeout,$/;"	f	namespace:asylo::__anon109
ConvertToEpollWaitArgsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToEpollWaitArgsProtobuf(int epfd, int maxevents, int timeout,$/;"	f	namespace:asylo::__anon363
ConvertToErrno	./platform/posix/pthread.cc	/^int ConvertToErrno(int err_value) {$/;"	f	namespace:__anon296
ConvertToErrno	./platform/posix/pthread.cc	/^int ConvertToErrno(int err_value) {$/;"	f	namespace:__anon42
ConvertToHostOp	./platform/common/bridge_proto_serializer.cc	/^int ConvertToHostOp(EpollCtlArgs::EpollCtlOp proto_op) {$/;"	f	namespace:asylo::__anon109
ConvertToHostOp	./platform/common/bridge_proto_serializer.cc	/^int ConvertToHostOp(EpollCtlArgs::EpollCtlOp proto_op) {$/;"	f	namespace:asylo::__anon363
ConvertToId	./util/std_thread.h	/^  static Id ConvertToId(std::thread::id id) {$/;"	f	class:asylo::Thread
ConvertToIfAddrs	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToIfAddrs(const IfAddrsProto &in, struct ifaddrs **out) {$/;"	f	namespace:asylo::__anon109
ConvertToIfAddrs	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToIfAddrs(const IfAddrsProto &in, struct ifaddrs **out) {$/;"	f	namespace:asylo::__anon363
ConvertToIfAddrsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToIfAddrsProtobuf(const struct ifaddrs *in, IfAddrsProto *out) {$/;"	f	namespace:asylo::__anon109
ConvertToIfAddrsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToIfAddrsProtobuf(const struct ifaddrs *in, IfAddrsProto *out) {$/;"	f	namespace:asylo::__anon363
ConvertToInotifyAddWatchArgsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToInotifyAddWatchArgsProtobuf(int fd, absl::string_view pathname,$/;"	f	namespace:asylo::__anon109
ConvertToInotifyAddWatchArgsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToInotifyAddWatchArgsProtobuf(int fd, absl::string_view pathname,$/;"	f	namespace:asylo::__anon363
ConvertToInotifyEventList	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToInotifyEventList(char *buf, size_t buf_len,$/;"	f	namespace:asylo::__anon109
ConvertToInotifyEventList	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToInotifyEventList(char *buf, size_t buf_len,$/;"	f	namespace:asylo::__anon363
ConvertToInotifyEventProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToInotifyEventProtobuf(const struct inotify_event *event,$/;"	f	namespace:asylo::__anon109
ConvertToInotifyEventProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToInotifyEventProtobuf(const struct inotify_event *event,$/;"	f	namespace:asylo::__anon363
ConvertToInotifyMaskProto	./platform/common/bridge_proto_serializer.cc	/^void ConvertToInotifyMaskProto(uint32_t mask,$/;"	f	namespace:asylo::__anon109
ConvertToInotifyMaskProto	./platform/common/bridge_proto_serializer.cc	/^void ConvertToInotifyMaskProto(uint32_t mask,$/;"	f	namespace:asylo::__anon363
ConvertToInotifyRmWatchArgsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToInotifyRmWatchArgsProtobuf(int fd, int wd,$/;"	f	namespace:asylo::__anon109
ConvertToInotifyRmWatchArgsProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToInotifyRmWatchArgsProtobuf(int fd, int wd,$/;"	f	namespace:asylo::__anon363
ConvertToProtoOp	./platform/common/bridge_proto_serializer.cc	/^EpollCtlArgs::EpollCtlOp ConvertToProtoOp(int host_op) {$/;"	f	namespace:asylo::__anon109
ConvertToProtoOp	./platform/common/bridge_proto_serializer.cc	/^EpollCtlArgs::EpollCtlOp ConvertToProtoOp(int host_op) {$/;"	f	namespace:asylo::__anon363
ConvertToRecvFromArgs	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToRecvFromArgs(int sockfd, size_t len, int flags,$/;"	f	namespace:asylo::__anon109
ConvertToRecvFromArgs	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToRecvFromArgs(int sockfd, size_t len, int flags,$/;"	f	namespace:asylo::__anon363
ConvertToSockaddr	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToSockaddr(const SockaddrProto &in, struct sockaddr **out,$/;"	f	namespace:asylo::__anon109
ConvertToSockaddr	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToSockaddr(const SockaddrProto &in, struct sockaddr **out,$/;"	f	namespace:asylo::__anon363
ConvertToSockaddrProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToSockaddrProtobuf(const struct sockaddr *in, SockaddrProto *out,$/;"	f	namespace:asylo::__anon109
ConvertToSockaddrProtobuf	./platform/common/bridge_proto_serializer.cc	/^bool ConvertToSockaddrProtobuf(const struct sockaddr *in, SockaddrProto *out,$/;"	f	namespace:asylo::__anon363
ConvertTrivialObjectToBinaryString	./crypto/util/trivial_object_util.h	/^std::string ConvertTrivialObjectToBinaryString(const T &obj) {$/;"	f	namespace:asylo
ConvertTrivialObjectToHexString	./crypto/util/trivial_object_util.h	/^std::string ConvertTrivialObjectToHexString(const T &obj) {$/;"	f	namespace:asylo
ConvertUtsName	./platform/common/bridge_functions.h	/^bool ConvertUtsName(const SrcUtsNameType &source_utsname,$/;"	f	namespace:asylo
Copy	./platform/arch/sgx/untrusted/sgx_client.cc	/^StatusOr<std::unique_ptr<EnclaveLoader>> SgxEmbeddedLoader::Copy() const {$/;"	f	class:asylo::SgxEmbeddedLoader
Copy	./platform/arch/sgx/untrusted/sgx_client.cc	/^StatusOr<std::unique_ptr<EnclaveLoader>> SgxLoader::Copy() const {$/;"	f	class:asylo::SgxLoader
Copy	./test/util/fake_enclave_loader.cc	/^StatusOr<std::unique_ptr<EnclaveLoader>> FakeEnclaveLoader::Copy() const {$/;"	f	class:asylo::FakeEnclaveLoader
CopyAllBuffers	./platform/core/bridge_msghdr_wrapper.cc	/^bool asylo::BridgeMsghdrWrapper::CopyAllBuffers() {$/;"	f	class:asylo::BridgeMsghdrWrapper
CopyAssertionDescriptions	./grpc/auth/util/bridge_cpp_to_c.cc	/^void CopyAssertionDescriptions(const AssertionDescriptionHashSet &src,$/;"	f	namespace:asylo::__anon251
CopyAssertionDescriptions	./grpc/auth/util/bridge_cpp_to_c.cc	/^void CopyAssertionDescriptions(const AssertionDescriptionHashSet &src,$/;"	f	namespace:asylo::__anon505
CopyEnclaveCredentialsOptions	./grpc/auth/util/bridge_cpp_to_c.cc	/^void CopyEnclaveCredentialsOptions(const EnclaveCredentialsOptions &src,$/;"	f	namespace:asylo
CopyFileDescriptor	./platform/posix/io/io_manager.cc	/^int IOManager::FileDescriptorTable::CopyFileDescriptor(int oldfd, int startfd) {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
CopyFileDescriptorToSpecifiedTarget	./platform/posix/io/io_manager.cc	/^int IOManager::FileDescriptorTable::CopyFileDescriptorToSpecifiedTarget($/;"	f	class:asylo::io::IOManager::FileDescriptorTable
CopyMsgControl	./platform/core/bridge_msghdr_wrapper.cc	/^bool asylo::BridgeMsghdrWrapper::CopyMsgControl() {$/;"	f	class:asylo::BridgeMsghdrWrapper
CopyMsgIov	./platform/core/bridge_msghdr_wrapper.cc	/^bool asylo::BridgeMsghdrWrapper::CopyMsgIov() {$/;"	f	class:asylo::BridgeMsghdrWrapper
CopyMsgIovBase	./platform/core/bridge_msghdr_wrapper.cc	/^bool asylo::BridgeMsghdrWrapper::CopyMsgIovBase() {$/;"	f	class:asylo::BridgeMsghdrWrapper
CopyMsgName	./platform/core/bridge_msghdr_wrapper.cc	/^bool asylo::BridgeMsghdrWrapper::CopyMsgName() {$/;"	f	class:asylo::BridgeMsghdrWrapper
CopyMultipleParams	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus CopyMultipleParams(void *context,$/;"	f	namespace:asylo::primitives::__anon335
CopyMultipleParams	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus CopyMultipleParams(void *context,$/;"	f	namespace:asylo::primitives::__anon81
CopyNonOkStatus	./platform/arch/sgx/trusted/fork.cc	/^void CopyNonOkStatus(const Status &non_ok_status,$/;"	f	namespace:asylo::__anon284
CopyNonOkStatus	./platform/arch/sgx/trusted/fork.cc	/^void CopyNonOkStatus(const Status &non_ok_status,$/;"	f	namespace:asylo::__anon30
CopyOnlyDataType	./util/statusor_test.cc	/^  explicit CopyOnlyDataType(int x) : data(x) {}$/;"	f	struct:asylo::__anon231::CopyOnlyDataType
CopyOnlyDataType	./util/statusor_test.cc	/^  explicit CopyOnlyDataType(int x) : data(x) {}$/;"	f	struct:asylo::__anon485::CopyOnlyDataType
CopyOnlyDataType	./util/statusor_test.cc	/^struct CopyOnlyDataType {$/;"	s	namespace:asylo::__anon231	file:
CopyOnlyDataType	./util/statusor_test.cc	/^struct CopyOnlyDataType {$/;"	s	namespace:asylo::__anon485	file:
CopyToByteContainer	./crypto/util/byte_container_util.h	/^ByteContainerT CopyToByteContainer(ByteContainerView view) {$/;"	f	namespace:asylo
CopyToUntrustedMemory	./platform/core/bridge_msghdr_wrapper.cc	/^bool CopyToUntrustedMemory(void **addr, void *data, size_t size) {$/;"	f	namespace:asylo::__anon139
CopyToUntrustedMemory	./platform/core/bridge_msghdr_wrapper.cc	/^bool CopyToUntrustedMemory(void **addr, void *data, size_t size) {$/;"	f	namespace:asylo::__anon393
CountsTable	./platform/system_call/generate_tables.cc	/^absl::flat_hash_map<std::pair<std::string, std::string>, int> *CountsTable() {$/;"	f
CpuSet	./platform/posix/include/internal/sched.h	/^typedef struct CpuSet {$/;"	s
CpuSet	./platform/posix/include/internal/sched.h	/^} CpuSet;$/;"	t	typeref:struct:CpuSet
CpuSetAddBit	./platform/posix/sched.cc	/^void CpuSetAddBit(int cpu, CpuSet *set) {$/;"	f
CpuSetCheckBit	./platform/posix/sched.cc	/^int CpuSetCheckBit(int cpu, CpuSet *set) {$/;"	f
CpuSetClearBit	./platform/posix/sched.cc	/^void CpuSetClearBit(int cpu, CpuSet *set) {$/;"	f
CpuSetCountBits	./platform/posix/sched.cc	/^int CpuSetCountBits(CpuSet *set) {$/;"	f
CpuSetEqual	./platform/posix/sched.cc	/^int CpuSetEqual(CpuSet *set1, CpuSet *set2) {$/;"	f
CpuSetWord	./platform/posix/include/internal/sched.h	/^typedef uint64_t CpuSetWord;$/;"	t
CpuSetZero	./platform/posix/sched.cc	/^void CpuSetZero(CpuSet *set) { memset(set->words, 0, sizeof(set->words)); }$/;"	f
CpuidRegisters	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	g	struct:__anon282::CpuidResult	file:
CpuidRegisters	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	g	struct:__anon28::CpuidResult	file:
CpuidResult	./platform/arch/sgx/trusted/exceptions.cc	/^struct CpuidResult {$/;"	s	namespace:__anon28	file:
CpuidResult	./platform/arch/sgx/trusted/exceptions.cc	/^struct CpuidResult {$/;"	s	namespace:__anon282	file:
Create	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256SigningKey::Create() {$/;"	f	class:asylo::EcdsaP256Sha256SigningKey
Create	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256SigningKey::Create(bssl::UniquePtr<EC_KEY> private_key) {$/;"	f	class:asylo::EcdsaP256Sha256SigningKey
Create	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256VerifyingKey::Create(bssl::UniquePtr<EC_KEY> public_key) {$/;"	f	class:asylo::EcdsaP256Sha256VerifyingKey
Create	./crypto/rsa_oaep_encryption_key.cc	/^StatusOr<std::unique_ptr<RsaOaepEncryptionKey>> RsaOaepEncryptionKey::Create($/;"	f	class:asylo::RsaOaepEncryptionKey
Create	./grpc/auth/core/client_ekep_handshaker.cc	/^std::unique_ptr<EkepHandshaker> ClientEkepHandshaker::Create($/;"	f	class:asylo::ClientEkepHandshaker
Create	./grpc/auth/core/server_ekep_handshaker.cc	/^std::unique_ptr<EkepHandshaker> ServerEkepHandshaker::Create($/;"	f	class:asylo::ServerEkepHandshaker
Create	./platform/crypto/gcmlib/gcm_cryptor.cc	/^std::unique_ptr<GcmCryptor> GcmCryptor::Create($/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptor
Create	./platform/posix/io/secure_paths.h	/^  static std::unique_ptr<IOManager::IOContext> Create(const char *path,$/;"	f	class:asylo::io::IOContextSecure
Create	./platform/storage/utils/offset_translator.cc	/^std::unique_ptr<OffsetTranslator> OffsetTranslator::Create(size_t header_len,$/;"	f	class:asylo::platform::storage::OffsetTranslator
Create	./util/elf_reader.cc	/^StatusOr<ElfReader> ElfReaderCreator::Create() {$/;"	f	class:asylo::ElfReaderCreator
CreateAesGcmCryptor	./crypto/aead_cryptor.cc	/^StatusOr<std::unique_ptr<AeadCryptor>> AeadCryptor::CreateAesGcmCryptor($/;"	f	class:asylo::experimental::AeadCryptor
CreateAesGcmKey	./crypto/aead_key.cc	/^StatusOr<std::unique_ptr<AeadKey>> AeadKey::CreateAesGcmKey($/;"	f	class:asylo::AeadKey
CreateAesGcmNonceGenerator	./crypto/random_nonce_generator.cc	/^RandomNonceGenerator::CreateAesGcmNonceGenerator() {$/;"	f	class:asylo::RandomNonceGenerator
CreateAesGcmSivCryptor	./crypto/aead_cryptor.cc	/^StatusOr<std::unique_ptr<AeadCryptor>> AeadCryptor::CreateAesGcmSivCryptor($/;"	f	class:asylo::experimental::AeadCryptor
CreateAesGcmSivKey	./crypto/aead_key.cc	/^StatusOr<std::unique_ptr<AeadKey>> AeadKey::CreateAesGcmSivKey($/;"	f	class:asylo::AeadKey
CreateAndWriteNewAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status CreateAndWriteNewAttestationDomain(const char *domain_file_path,$/;"	f	namespace:asylo::__anon186
CreateAndWriteNewAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status CreateAndWriteNewAttestationDomain(const char *domain_file_path,$/;"	f	namespace:asylo::__anon440
CreateAssertionDescriptionVector	./grpc/auth/core/enclave_transport_security.cc	/^std::vector<AssertionDescription> CreateAssertionDescriptionVector($/;"	f	namespace:asylo::__anon254
CreateAssertionDescriptionVector	./grpc/auth/core/enclave_transport_security.cc	/^std::vector<AssertionDescription> CreateAssertionDescriptionVector($/;"	f	namespace:asylo::__anon508
CreateAssertionOffer	./identity/null_identity/null_assertion_generator.cc	/^Status NullAssertionGenerator::CreateAssertionOffer($/;"	f	class:asylo::NullAssertionGenerator
CreateAssertionOffer	./identity/sgx/sgx_local_assertion_generator.cc	/^Status SgxLocalAssertionGenerator::CreateAssertionOffer($/;"	f	class:asylo::SgxLocalAssertionGenerator
CreateAssertionRequest	./identity/null_identity/null_assertion_verifier.cc	/^Status NullAssertionVerifier::CreateAssertionRequest($/;"	f	class:asylo::NullAssertionVerifier
CreateAssertionRequest	./identity/sgx/sgx_local_assertion_verifier.cc	/^Status SgxLocalAssertionVerifier::CreateAssertionRequest($/;"	f	class:asylo::SgxLocalAssertionVerifier
CreateBridgeSignalMap	./platform/common/bridge_functions.cc	/^const std::unordered_map<int, int> *CreateBridgeSignalMap() {$/;"	f	namespace:asylo::__anon103
CreateBridgeSignalMap	./platform/common/bridge_functions.cc	/^const std::unordered_map<int, int> *CreateBridgeSignalMap() {$/;"	f	namespace:asylo::__anon357
CreateByteContainerViewVector	./crypto/util/byte_container_util_internal.h	/^inline std::vector<ByteContainerView> CreateByteContainerViewVector($/;"	f	namespace:asylo::internal
CreateByteContainerViewVector	./crypto/util/byte_container_util_internal.h	/^inline std::vector<ByteContainerView> CreateByteContainerViewVector() {$/;"	f	namespace:asylo::internal
CreateByteContainerViewVector	./crypto/util/byte_container_util_internal.h	/^std::vector<ByteContainerView> CreateByteContainerViewVector($/;"	f	namespace:asylo::internal
CreateCleansingVectorFromHexString	./crypto/aead_test_vector.cc	/^CleansingVector<uint8_t> CreateCleansingVectorFromHexString($/;"	f	namespace:asylo::__anon20
CreateCleansingVectorFromHexString	./crypto/aead_test_vector.cc	/^CleansingVector<uint8_t> CreateCleansingVectorFromHexString($/;"	f	namespace:asylo::__anon274
CreateDefaultEnclaveConfig	./platform/core/enclave_config_util.cc	/^EnclaveConfig CreateDefaultEnclaveConfig(const HostConfig &host_config) {$/;"	f	namespace:asylo
CreateEkepAadGenerator	./identity/additional_authenticated_data_generator.cc	/^AdditionalAuthenticatedDataGenerator::CreateEkepAadGenerator() {$/;"	f	class:asylo::AdditionalAuthenticatedDataGenerator
CreateEmptyTempFileOrDie	./platform/storage/utils/test_utils.cc	/^int CreateEmptyTempFileOrDie(absl::string_view basename) {$/;"	f	namespace:asylo
CreateFixtureSecureFullstack	./grpc/auth/test/h2_enclave_security_test.cc	/^grpc_end2end_test_fixture CreateFixtureSecureFullstack($/;"	f	namespace:asylo::__anon247
CreateFixtureSecureFullstack	./grpc/auth/test/h2_enclave_security_test.cc	/^grpc_end2end_test_fixture CreateFixtureSecureFullstack($/;"	f	namespace:asylo::__anon501
CreateFrameProtector	./grpc/auth/core/enclave_transport_security.cc	/^  tsi_result CreateFrameProtector(size_t *max_output_protected_frame_size,$/;"	f	class:asylo::TsiEnclaveHandshakerResult
CreateFromAuthContext	./grpc/auth/enclave_auth_context.cc	/^StatusOr<EnclaveAuthContext> EnclaveAuthContext::CreateFromAuthContext($/;"	f	class:asylo::EnclaveAuthContext
CreateFromDer	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256SigningKey::CreateFromDer(ByteContainerView serialized_key) {$/;"	f	class:asylo::EcdsaP256Sha256SigningKey
CreateFromDer	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256VerifyingKey::CreateFromDer(ByteContainerView serialized_key) {$/;"	f	class:asylo::EcdsaP256Sha256VerifyingKey
CreateFromDer	./crypto/rsa_oaep_encryption_key.cc	/^RsaOaepDecryptionKey::CreateFromDer(ByteContainerView serialized_key) {$/;"	f	class:asylo::RsaOaepDecryptionKey
CreateFromDer	./crypto/rsa_oaep_encryption_key.cc	/^RsaOaepEncryptionKey::CreateFromDer(ByteContainerView serialized_key) {$/;"	f	class:asylo::RsaOaepEncryptionKey
CreateFromFile	./util/file_mapping.cc	/^StatusOr<FileMapping> FileMapping::CreateFromFile(absl::string_view file_name) {$/;"	f	class:asylo::FileMapping
CreateFromPem	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256SigningKey::CreateFromPem(ByteContainerView serialized_key) {$/;"	f	class:asylo::EcdsaP256Sha256SigningKey
CreateFromPem	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256VerifyingKey::CreateFromPem(ByteContainerView serialized_key) {$/;"	f	class:asylo::EcdsaP256Sha256VerifyingKey
CreateFromPem	./crypto/rsa_oaep_encryption_key.cc	/^RsaOaepEncryptionKey::CreateFromPem(ByteContainerView serialized_key) {$/;"	f	class:asylo::RsaOaepEncryptionKey
CreateFromServerContext	./grpc/auth/enclave_auth_context.cc	/^StatusOr<EnclaveAuthContext> EnclaveAuthContext::CreateFromServerContext($/;"	f	class:asylo::EnclaveAuthContext
CreateFromSpan	./util/elf_reader.cc	/^StatusOr<ElfReader> ElfReader::CreateFromSpan($/;"	f	class:asylo::ElfReader
CreateGetPceInfoAadGenerator	./identity/additional_authenticated_data_generator.cc	/^AdditionalAuthenticatedDataGenerator::CreateGetPceInfoAadGenerator() {$/;"	f	class:asylo::AdditionalAuthenticatedDataGenerator
CreateHandshakeMessage	./grpc/auth/core/ekep_handshaker.cc	/^std::unique_ptr<google::protobuf::Message> CreateHandshakeMessage($/;"	f	namespace:asylo::__anon256
CreateHandshakeMessage	./grpc/auth/core/ekep_handshaker.cc	/^std::unique_ptr<google::protobuf::Message> CreateHandshakeMessage($/;"	f	namespace:asylo::__anon510
CreateMrenclaveSecretSealer	./identity/sgx/sgx_local_secret_sealer.cc	/^SgxLocalSecretSealer::CreateMrenclaveSecretSealer() {$/;"	f	class:asylo::SgxLocalSecretSealer
CreateMrsignerSecretSealer	./identity/sgx/sgx_local_secret_sealer.cc	/^SgxLocalSecretSealer::CreateMrsignerSecretSealer() {$/;"	f	class:asylo::SgxLocalSecretSealer
CreateOptions	./platform/posix/pthread.cc	/^asylo::ThreadManager::ThreadOptions CreateOptions($/;"	f	namespace:__anon296
CreateOptions	./platform/posix/pthread.cc	/^asylo::ThreadManager::ThreadOptions CreateOptions($/;"	f	namespace:__anon42
CreatePceSignReportAadGenerator	./identity/additional_authenticated_data_generator.cc	/^AdditionalAuthenticatedDataGenerator::CreatePceSignReportAadGenerator() {$/;"	f	class:asylo::AdditionalAuthenticatedDataGenerator
CreatePipe	./util/fd_utils.cc	/^StatusOr<Pipe> Pipe::CreatePipe(int flags) {$/;"	f	class:asylo::Pipe
CreatePublicKeyFromPrivateKey	./crypto/ecdsa_p256_sha256_signing_key.cc	/^StatusOr<bssl::UniquePtr<EC_KEY>> CreatePublicKeyFromPrivateKey($/;"	f	namespace:asylo::__anon27
CreatePublicKeyFromPrivateKey	./crypto/ecdsa_p256_sha256_signing_key.cc	/^StatusOr<bssl::UniquePtr<EC_KEY>> CreatePublicKeyFromPrivateKey($/;"	f	namespace:asylo::__anon281
CreateReportdataForGetPceInfo	./identity/sgx/pce_util.cc	/^StatusOr<Reportdata> CreateReportdataForGetPceInfo($/;"	f	namespace:asylo::sgx
CreateRsa3072OaepDecryptionKey	./crypto/rsa_oaep_encryption_key.cc	/^RsaOaepDecryptionKey::CreateRsa3072OaepDecryptionKey() {$/;"	f	class:asylo::RsaOaepDecryptionKey
CreateRsaKey	./crypto/rsa_oaep_encryption_key.cc	/^StatusOr<bssl::UniquePtr<RSA>> CreateRsaKey(int number_of_bits) {$/;"	f	namespace:asylo::__anon13
CreateRsaKey	./crypto/rsa_oaep_encryption_key.cc	/^StatusOr<bssl::UniquePtr<RSA>> CreateRsaKey(int number_of_bits) {$/;"	f	namespace:asylo::__anon267
CreateRsaPublicKey	./identity/sgx/pce_util_test.cc	/^  StatusOr<bssl::UniquePtr<RSA>> CreateRsaPublicKey(int number_of_bits) {$/;"	f	class:asylo::sgx::__anon151::PceUtilTest
CreateRsaPublicKey	./identity/sgx/pce_util_test.cc	/^  StatusOr<bssl::UniquePtr<RSA>> CreateRsaPublicKey(int number_of_bits) {$/;"	f	class:asylo::sgx::__anon405::PceUtilTest
CreateServer	./grpc/util/enclave_server.h	/^  StatusOr<std::unique_ptr<::grpc::Server>> CreateServer() {$/;"	f	class:asylo::final
CreateSgxProtoPrinter	./identity/sgx/proto_format.cc	/^std::unique_ptr<TextFormat::Printer> CreateSgxProtoPrinter() {$/;"	f	namespace:asylo::sgx::__anon163
CreateSgxProtoPrinter	./identity/sgx/proto_format.cc	/^std::unique_ptr<TextFormat::Printer> CreateSgxProtoPrinter() {$/;"	f	namespace:asylo::sgx::__anon417
CreateThread	./platform/posix/threading/thread_manager.cc	/^int ThreadManager::CreateThread(const std::function<void *()> &start_routine,$/;"	f	class:asylo::ThreadManager
CreateUntrustedBuffer	./platform/posix/io/native_paths.cc	/^bool IOContextNative::CreateUntrustedBuffer(const struct iovec *iov, int iovcnt,$/;"	f	class:asylo::io::IOContextNative
CreateValidCertificate	./crypto/certificate_util_test.cc	/^Certificate CreateValidCertificate() {$/;"	f	namespace:asylo::__anon17
CreateValidCertificate	./crypto/certificate_util_test.cc	/^Certificate CreateValidCertificate() {$/;"	f	namespace:asylo::__anon271
CreateValidCertificateChain	./crypto/certificate_util_test.cc	/^CertificateChain CreateValidCertificateChain(int length) {$/;"	f	namespace:asylo::__anon17
CreateValidCertificateChain	./crypto/certificate_util_test.cc	/^CertificateChain CreateValidCertificateChain(int length) {$/;"	f	namespace:asylo::__anon271
CreateValidCertificateRevocationList	./crypto/certificate_util_test.cc	/^CertificateRevocationList CreateValidCertificateRevocationList() {$/;"	f	namespace:asylo::__anon17
CreateValidCertificateRevocationList	./crypto/certificate_util_test.cc	/^CertificateRevocationList CreateValidCertificateRevocationList() {$/;"	f	namespace:asylo::__anon271
CreateValidCertificateSigningRequest	./crypto/certificate_util_test.cc	/^CertificateSigningRequest CreateValidCertificateSigningRequest() {$/;"	f	namespace:asylo::__anon17
CreateValidCertificateSigningRequest	./crypto/certificate_util_test.cc	/^CertificateSigningRequest CreateValidCertificateSigningRequest() {$/;"	f	namespace:asylo::__anon271
CreateValidRawTcb	./identity/sgx/tcb_test.cc	/^RawTcb CreateValidRawTcb() {$/;"	f	namespace:asylo::sgx::__anon167
CreateValidRawTcb	./identity/sgx/tcb_test.cc	/^RawTcb CreateValidRawTcb() {$/;"	f	namespace:asylo::sgx::__anon421
CreateValidTcb	./identity/sgx/tcb_test.cc	/^Tcb CreateValidTcb() {$/;"	f	namespace:asylo::sgx::__anon167
CreateValidTcb	./identity/sgx/tcb_test.cc	/^Tcb CreateValidTcb() {$/;"	f	namespace:asylo::sgx::__anon421
CreateValidTcbInfo	./identity/sgx/tcb_test.cc	/^TcbInfo CreateValidTcbInfo() {$/;"	f	namespace:asylo::sgx::__anon167
CreateValidTcbInfo	./identity/sgx/tcb_test.cc	/^TcbInfo CreateValidTcbInfo() {$/;"	f	namespace:asylo::sgx::__anon421
CreateValidTcbInfoJson	./identity/sgx/tcb_info_from_json_test.cc	/^google::protobuf::Value CreateValidTcbInfoJson() {$/;"	f	namespace:asylo::sgx::__anon150
CreateValidTcbInfoJson	./identity/sgx/tcb_info_from_json_test.cc	/^google::protobuf::Value CreateValidTcbInfoJson() {$/;"	f	namespace:asylo::sgx::__anon404
CreateValidTcbJson	./identity/sgx/tcb_info_from_json_test.cc	/^google::protobuf::Value CreateValidTcbJson() {$/;"	f	namespace:asylo::sgx::__anon150
CreateValidTcbJson	./identity/sgx/tcb_info_from_json_test.cc	/^google::protobuf::Value CreateValidTcbJson() {$/;"	f	namespace:asylo::sgx::__anon404
CredentialsConfig	./test/grpc/channel_test.cc	/^struct CredentialsConfig {$/;"	s	namespace:asylo::__anon224	file:
CredentialsConfig	./test/grpc/channel_test.cc	/^struct CredentialsConfig {$/;"	s	namespace:asylo::__anon478	file:
CredentialsOptionsAreEqual	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool CredentialsOptionsAreEqual($/;"	f	namespace:asylo::__anon252
CredentialsOptionsAreEqual	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^bool CredentialsOptionsAreEqual($/;"	f	namespace:asylo::__anon506
CumulativeHash	./crypto/sha256_hash.cc	/^Status Sha256Hash::CumulativeHash(std::vector<uint8_t> *digest) const {$/;"	f	class:asylo::Sha256Hash
CustomConfigSyscallsTest	./platform/posix/syscalls_test_driver.cc	/^class CustomConfigSyscallsTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon302	file:
CustomConfigSyscallsTest	./platform/posix/syscalls_test_driver.cc	/^class CustomConfigSyscallsTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon48	file:
DEBUG	./identity/sgx/secs_attributes.h	/^  DEBUG = 1,      \/\/ Indicates whether enclave is a debug enclave (=1)$/;"	m	class:asylo::sgx::SecsAttributeBit
DEFINE_CHECK_OP_IMPL	./util/logging.h	181;"	d
DEFINE_CHECK_OP_IMPL	./util/logging.h	203;"	d
DEFINE_STATIC_MAP_OF_BASE_TYPE	./platform/common/static_map.h	133;"	d
DELETE	./platform/posix/include/arpa/nameser.h	241;"	d
DONE	./platform/posix/threading/thread_manager.h	/^    enum class ThreadState { QUEUED, RUNNING, DONE, JOINED };$/;"	m	class:asylo::ThreadManager::Thread::ThreadState
DataDigest	./platform/storage/secure/aead_handler.h	/^  struct DataDigest {$/;"	s	class:asylo::platform::storage::AeadHandler
DataSafety	./crypto/util/bytes.h	/^enum class DataSafety { SAFE, UNSAFE };$/;"	c	namespace:asylo
Date	./identity/sgx/identity_key_management_structs.h	/^struct Date {$/;"	s	namespace:asylo::sgx
DcapIntelArchitecturalEnclaveInterface	./identity/sgx/dcap_intel_architectural_enclave_interface.h	/^class DcapIntelArchitecturalEnclaveInterface$/;"	c	namespace:asylo::sgx
DebugPuts	./platform/primitives/sgx/trusted_sgx.cc	/^void TrustedPrimitives::DebugPuts(const char *message) {$/;"	f	class:asylo::primitives::TrustedPrimitives
DebugPuts	./platform/primitives/sim/trusted_sim.cc	/^void TrustedPrimitives::DebugPuts(const char *message) {$/;"	f	class:asylo::primitives::TrustedPrimitives
DecodeAndHandleFrame	./grpc/auth/core/ekep_handshaker.cc	/^EkepHandshaker::Result EkepHandshaker::DecodeAndHandleFrame($/;"	f	class:asylo::EkepHandshaker
Decrypt	./crypto/rsa_oaep_encryption_key.cc	/^Status RsaOaepDecryptionKey::Decrypt($/;"	f	class:asylo::RsaOaepDecryptionKey
DecryptAndRestoreEnclaveDataBssHeap	./platform/arch/sgx/trusted/fork.cc	/^Status DecryptAndRestoreEnclaveDataBssHeap($/;"	f	namespace:asylo
DecryptAndRestoreThreadStack	./platform/arch/sgx/trusted/fork.cc	/^Status DecryptAndRestoreThreadStack($/;"	f	namespace:asylo
DecryptAndVerify	./platform/storage/secure/aead_handler.cc	/^ssize_t AeadHandler::DecryptAndVerify(int fd, void *buf, size_t count) {$/;"	f	class:asylo::platform::storage::AeadHandler
DecryptAndVerifyInternal	./platform/storage/secure/aead_handler.cc	/^ssize_t AeadHandler::DecryptAndVerifyInternal(int fd, void *buf, size_t count,$/;"	f	class:asylo::platform::storage::AeadHandler
DecryptBlock	./platform/crypto/gcmlib/gcm_cryptor.cc	/^bool GcmCryptor::DecryptBlock(const uint8_t *ciphertext_data,$/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptor
DecryptFromSnapshot	./platform/arch/sgx/trusted/fork.cc	/^Status DecryptFromSnapshot($/;"	f	namespace:asylo::__anon284
DecryptFromSnapshot	./platform/arch/sgx/trusted/fork.cc	/^Status DecryptFromSnapshot($/;"	f	namespace:asylo::__anon30
DecryptFromUntrustedMemory	./platform/arch/sgx/trusted/fork.cc	/^Status DecryptFromUntrustedMemory(AeadCryptor *cryptor,$/;"	f	namespace:asylo::__anon284
DecryptFromUntrustedMemory	./platform/arch/sgx/trusted/fork.cc	/^Status DecryptFromUntrustedMemory(AeadCryptor *cryptor,$/;"	f	namespace:asylo::__anon30
DecryptMessage	./examples/quickstart/demo_enclave.cc	/^const StatusOr<std::string> DecryptMessage($/;"	f	namespace:asylo::__anon245
DecryptMessage	./examples/quickstart/demo_enclave.cc	/^const StatusOr<std::string> DecryptMessage($/;"	f	namespace:asylo::__anon499
DecryptMessage	./examples/quickstart/solution/demo_enclave.cc	/^const StatusOr<std::string> DecryptMessage($/;"	f	namespace:asylo::__anon246
DecryptMessage	./examples/quickstart/solution/demo_enclave.cc	/^const StatusOr<std::string> DecryptMessage($/;"	f	namespace:asylo::__anon500
DefaultFactory	./platform/common/singleton.h	/^struct DefaultFactory {$/;"	s	namespace:asylo
DelayedShutdown	./grpc/util/grpc_server_launcher_test.cc	/^  static void DelayedShutdown(GrpcServerLauncher *launcher) {$/;"	f	class:asylo::__anon263::AsyncDelayedShutdownInvoker	file:
DelayedShutdown	./grpc/util/grpc_server_launcher_test.cc	/^  static void DelayedShutdown(GrpcServerLauncher *launcher) {$/;"	f	class:asylo::__anon517::AsyncDelayedShutdownInvoker	file:
Delete	./platform/posix/io/io_manager.cc	/^int IOManager::FileDescriptorTable::Delete(int fd) {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
Delete	./platform/primitives/parameter_stack.h	/^    void Delete() {$/;"	f	struct:asylo::primitives::ParameterStack::Item
DeleteSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^void DeleteSnapshotKey() {$/;"	f	namespace:asylo::__anon284
DeleteSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^void DeleteSnapshotKey() {$/;"	f	namespace:asylo::__anon30
Dequeue	./platform/posix/pthread.cc	/^void QueueOperations::Dequeue() {$/;"	f	class:asylo::pthread_impl::QueueOperations
DequeueThread	./platform/posix/threading/thread_manager.cc	/^std::shared_ptr<ThreadManager::Thread> ThreadManager::DequeueThread() {$/;"	f	class:asylo::ThreadManager
DeregisterAllSignalsForClient	./platform/core/enclave_manager.cc	/^Status EnclaveSignalDispatcher::DeregisterAllSignalsForClient($/;"	f	class:asylo::EnclaveSignalDispatcher
DeregisterVirtualPathHandler	./platform/posix/io/io_manager.cc	/^void IOManager::DeregisterVirtualPathHandler(const std::string &path_prefix) {$/;"	f	class:asylo::io::IOManager
DeregisterVirtualPathHandler	./platform/posix/io/virtual_test.cc	/^  void DeregisterVirtualPathHandler(const std::string &path) {$/;"	f	class:asylo::__anon326::VirtualHandlerTest
DeregisterVirtualPathHandler	./platform/posix/io/virtual_test.cc	/^  void DeregisterVirtualPathHandler(const std::string &path) {$/;"	f	class:asylo::__anon72::VirtualHandlerTest
DeriveAndSetRecordProtocolKey	./grpc/auth/core/ekep_handshaker.cc	/^Status EkepHandshaker::DeriveAndSetRecordProtocolKey($/;"	f	class:asylo::EkepHandshaker
DeriveKey	./identity/sgx/fake_enclave.cc	/^Status FakeEnclave::DeriveKey(const KeyDependencies &key_dependencies,$/;"	f	class:asylo::sgx::FakeEnclave
DeriveRecordProtocolKey	./grpc/auth/core/ekep_crypto.cc	/^Status DeriveRecordProtocolKey(const HandshakeCipher &ciphersuite,$/;"	f	namespace:asylo
DeriveSecrets	./grpc/auth/core/ekep_crypto.cc	/^Status DeriveSecrets(const HandshakeCipher &ciphersuite,$/;"	f	namespace:asylo
DescribeNegationTo	./test/util/finite_domain_fuzz.h	/^  void DescribeNegationTo(std::ostream* os) const {$/;"	f	class:asylo::FiniteDomainMatcher
DescribeNegationTo	./test/util/proto_matchers.h	/^  void DescribeNegationTo(std::ostream *os) const { *os << "does not match"; }$/;"	f	class:asylo::internal::ProtoMatcher
DescribeTo	./test/util/finite_domain_fuzz.h	/^  void DescribeTo(std::ostream* os) const {$/;"	f	class:asylo::FiniteDomainMatcher
DescribeTo	./test/util/proto_matchers.h	/^  void DescribeTo(std::ostream *os) const { *os << "matches"; }$/;"	f	class:asylo::internal::ProtoMatcher
Description	./identity/null_identity/null_identity_expectation_matcher.cc	/^EnclaveIdentityDescription NullIdentityExpectationMatcher::Description() const {$/;"	f	class:asylo::NullIdentityExpectationMatcher
Description	./identity/sgx/sgx_code_identity_expectation_matcher.cc	/^EnclaveIdentityDescription SgxCodeIdentityExpectationMatcher::Description()$/;"	f	class:asylo::SgxCodeIdentityExpectationMatcher
Deserialize	./platform/storage/secure/aead_handler.cc	/^bool AeadHandler::Deserialize(FileControl *file_ctrl) {$/;"	f	class:asylo::platform::storage::AeadHandler
DeserializeAddrinfo	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeAddrinfo(const std::string *in, struct addrinfo **out) {$/;"	f	namespace:asylo
DeserializeEpollCtlArgs	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeEpollCtlArgs(absl::string_view in, int *epfd, int *op, int *fd,$/;"	f	namespace:asylo
DeserializeEpollWaitArgs	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeEpollWaitArgs(absl::string_view in, int *epfd, int *maxevents,$/;"	f	namespace:asylo
DeserializeEvents	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeEvents(absl::string_view in, struct epoll_event *events,$/;"	f	namespace:asylo
DeserializeIfAddrs	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeIfAddrs(absl::string_view in, struct ifaddrs **out) {$/;"	f	namespace:asylo
DeserializeInotifyAddWatchArgs	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeInotifyAddWatchArgs(absl::string_view in, int *fd,$/;"	f	namespace:asylo
DeserializeInotifyEvents	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeInotifyEvents(absl::string_view in,$/;"	f	namespace:asylo
DeserializeInotifyRmWatchArgs	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeInotifyRmWatchArgs(absl::string_view in, int *fd, int *wd) {$/;"	f	namespace:asylo
DeserializeRecvFromArgs	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeRecvFromArgs(absl::string_view in, int *sockfd, size_t *len,$/;"	f	namespace:asylo
DeserializeRecvFromSrcAddr	./platform/common/bridge_proto_serializer.cc	/^bool DeserializeRecvFromSrcAddr(absl::string_view in,$/;"	f	namespace:asylo
Destroy	./platform/primitives/sgx/untrusted_sgx.cc	/^Status SgxEnclaveClient::Destroy() {$/;"	f	class:asylo::primitives::SgxEnclaveClient
Destroy	./platform/primitives/sim/untrusted_sim.cc	/^Status SimEnclaveClient::Destroy() {$/;"	f	class:asylo::primitives::SimEnclaveClient
DestroyEnclave	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  Status DestroyEnclave() {$/;"	f	class:asylo::__anon182::ApplicationWrapperEnclaveTest
DestroyEnclave	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  Status DestroyEnclave() {$/;"	f	class:asylo::__anon436::ApplicationWrapperEnclaveTest
DestroyEnclave	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::DestroyEnclave() { return primitive_sgx_client_->Destroy(); }$/;"	f	class:asylo::SgxClient
DestroyEnclave	./platform/core/enclave_manager.cc	/^Status EnclaveManager::DestroyEnclave(EnclaveClient *client,$/;"	f	class:asylo::EnclaveManager
Destruct	./identity/sgx/fake_enclave.h	/^  static void Destruct(FakeEnclave *enclave) { delete enclave; }$/;"	f	struct:asylo::sgx::RandomFakeEnclaveFactory
Destruct	./platform/common/singleton.h	/^  static void Destruct(T *t) { delete t; }$/;"	f	struct:asylo::DefaultFactory
Detach	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::Detach() {$/;"	f	class:asylo::ThreadManager::Thread
DetachThread	./platform/posix/threading/thread_manager.cc	/^int ThreadManager::DetachThread(const pthread_t thread_id) {$/;"	f	class:asylo::ThreadManager
DieTest	./test/misc/die_test.cc	/^  DieTest()$/;"	f	class:asylo::__anon204::DieTest
DieTest	./test/misc/die_test.cc	/^  DieTest()$/;"	f	class:asylo::__anon458::DieTest
DieTest	./test/misc/die_test.cc	/^class DieTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon204	file:
DieTest	./test/misc/die_test.cc	/^class DieTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon458	file:
DieTest	./test/misc/double_die.cc	/^class DieTest {$/;"	c	namespace:asylo::__anon192	file:
DieTest	./test/misc/double_die.cc	/^class DieTest {$/;"	c	namespace:asylo::__anon446	file:
DiffToHost	./platform/posix/endian_test.cc	/^  UIntT DiffToHost(UIntT value) {$/;"	f	class:asylo::__anon298::EndianTest
DiffToHost	./platform/posix/endian_test.cc	/^  UIntT DiffToHost(UIntT value) {$/;"	f	class:asylo::__anon44::EndianTest
DigestSize	./crypto/sha256_hash.cc	/^size_t Sha256Hash::DigestSize() const { return SHA256_DIGEST_LENGTH; }$/;"	f	class:asylo::Sha256Hash
DispatchTable	./platform/primitives/util/dispatch_table.h	/^  DispatchTable() : exit_table_(absl::flat_hash_map<uint64_t, ExitHandler>()) {}$/;"	f	class:asylo::primitives::DispatchTable
DispatchTable	./platform/primitives/util/dispatch_table.h	/^class DispatchTable : public Client::ExitCallProvider {$/;"	c	namespace:asylo::primitives
DispatchWithCustomAllocator	./platform/system_call/system_call_test.cc	/^asylo::primitives::PrimitiveStatus DispatchWithCustomAllocator($/;"	f	namespace:asylo::system_call::__anon115
DispatchWithCustomAllocator	./platform/system_call/system_call_test.cc	/^asylo::primitives::PrimitiveStatus DispatchWithCustomAllocator($/;"	f	namespace:asylo::system_call::__anon369
DoExec	./test/util/exec_tester.cc	/^void ExecTester::DoExec(int read_stdin, int write_stdin, int read_fd_to_check,$/;"	f	class:asylo::experimental::ExecTester
DoNotOptimize	./util/error_space.h	/^  InserterType *DoNotOptimize(InserterType *inserter) { return inserter; }$/;"	f	class:asylo::error::ErrorSpaceImplementationHelper
DoSnapshotKeyTransfer	./platform/arch/sgx/untrusted/ocalls.cc	/^asylo::Status DoSnapshotKeyTransfer(asylo::EnclaveManager *manager,$/;"	f	namespace:__anon286
DoSnapshotKeyTransfer	./platform/arch/sgx/untrusted/ocalls.cc	/^asylo::Status DoSnapshotKeyTransfer(asylo::EnclaveManager *manager,$/;"	f	namespace:__anon32
DomainSocketDriver	./platform/posix/sockets/domain_socket_test_driver.cc	/^class DomainSocketDriver : public EnclaveTest {$/;"	c	namespace:asylo::__anon310	file:
DomainSocketDriver	./platform/posix/sockets/domain_socket_test_driver.cc	/^class DomainSocketDriver : public EnclaveTest {$/;"	c	namespace:asylo::__anon56	file:
DomainSocketTest	./platform/posix/sockets/domain_socket_test_enclave.cc	/^class DomainSocketTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
DonateThread	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus DonateThread(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon336
DonateThread	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus DonateThread(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon82
Dup	./platform/posix/io/io_manager.cc	/^int IOManager::Dup(int oldfd) {$/;"	f	class:asylo::io::IOManager
Dup2	./platform/posix/io/io_manager.cc	/^int IOManager::Dup2(int oldfd, int newfd) {$/;"	f	class:asylo::io::IOManager
EAI_ADDRFAMILY	./platform/posix/include/netdb.h	56;"	d
EAI_AGAIN	./platform/posix/include/netdb.h	47;"	d
EAI_ALLDONE	./platform/posix/include/netdb.h	60;"	d
EAI_BADFLAGS	./platform/posix/include/netdb.h	45;"	d
EAI_CANCELED	./platform/posix/include/netdb.h	58;"	d
EAI_FAIL	./platform/posix/include/netdb.h	48;"	d
EAI_FAMILY	./platform/posix/include/netdb.h	49;"	d
EAI_IDN_ENCODE	./platform/posix/include/netdb.h	62;"	d
EAI_INPROGRESS	./platform/posix/include/netdb.h	57;"	d
EAI_INTR	./platform/posix/include/netdb.h	61;"	d
EAI_MEMORY	./platform/posix/include/netdb.h	52;"	d
EAI_NODATA	./platform/posix/include/netdb.h	55;"	d
EAI_NONAME	./platform/posix/include/netdb.h	46;"	d
EAI_NOTCANCELED	./platform/posix/include/netdb.h	59;"	d
EAI_OVERFLOW	./platform/posix/include/netdb.h	54;"	d
EAI_SERVICE	./platform/posix/include/netdb.h	51;"	d
EAI_SOCKTYPE	./platform/posix/include/netdb.h	50;"	d
EAI_SYSTEM	./platform/posix/include/netdb.h	53;"	d
EAX	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	e	enum:__anon282::CpuidResult::CpuidRegisters	file:
EAX	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	e	enum:__anon28::CpuidResult::CpuidRegisters	file:
EBX	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	e	enum:__anon282::CpuidResult::CpuidRegisters	file:
EBX	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	e	enum:__anon28::CpuidResult::CpuidRegisters	file:
ECHO	./platform/posix/include/sys/termios.h	56;"	d
ECX	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	e	enum:__anon282::CpuidResult::CpuidRegisters	file:
ECX	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	e	enum:__anon28::CpuidResult::CpuidRegisters	file:
EDX	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	e	enum:__anon282::CpuidResult::CpuidRegisters	file:
EDX	./platform/arch/sgx/trusted/exceptions.cc	/^  enum CpuidRegisters { EAX = 0, EBX = 1, ECX = 2, EDX = 3 };$/;"	e	enum:__anon28::CpuidResult::CpuidRegisters	file:
EFD_CLOEXEC	./platform/posix/include/sys/eventfd.h	26;"	d
EFD_NONBLOCK	./platform/posix/include/sys/eventfd.h	27;"	d
EFD_SEMAPHORE	./platform/posix/include/sys/eventfd.h	28;"	d
EINITTOKEN_KEY	./identity/sgx/identity_key_management_structs.h	/^  EINITTOKEN_KEY = 0,$/;"	m	class:asylo::sgx::KeyrequestKeyname
ENCLAVE_STORAGE_IOCTL_TYPE	./platform/posix/include/sys/ioctl.h	29;"	d
ENCLAVE_STORAGE_SET_KEY	./platform/posix/include/sys/ioctl.h	32;"	d
EPOLLERR	./platform/posix/include/sys/epoll.h	33;"	d
EPOLLET	./platform/posix/include/sys/epoll.h	38;"	d
EPOLLHUP	./platform/posix/include/sys/epoll.h	34;"	d
EPOLLIN	./platform/posix/include/sys/epoll.h	29;"	d
EPOLLMSG	./platform/posix/include/sys/epoll.h	32;"	d
EPOLLONESHOT	./platform/posix/include/sys/epoll.h	37;"	d
EPOLLOUT	./platform/posix/include/sys/epoll.h	31;"	d
EPOLLPRI	./platform/posix/include/sys/epoll.h	30;"	d
EPOLLRDHUP	./platform/posix/include/sys/epoll.h	35;"	d
EPOLLWAKEUP	./platform/posix/include/sys/epoll.h	36;"	d
EPOLL_CLOEXEC	./platform/posix/include/sys/epoll.h	41;"	d
EPOLL_CTL_ADD	./platform/posix/include/sys/epoll.h	44;"	d
EPOLL_CTL_DEL	./platform/posix/include/sys/epoll.h	45;"	d
EPOLL_CTL_MOD	./platform/posix/include/sys/epoll.h	46;"	d
ERROR	./util/logging.h	/^enum LogSeverity { INFO, WARNING, ERROR, FATAL, QFATAL };$/;"	e	enum:LogSeverity
EXCLUSIVE_LOCKS_REQUIRED	./platform/common/static_map.h	/^  static void Initialize() EXCLUSIVE_LOCKS_REQUIRED(mu_) {$/;"	f	class:asylo::StaticMap
EXINFO	./identity/sgx/secs_miscselect.h	/^  EXINFO = 0,$/;"	m	class:asylo::sgx::SecsMiscselectBit
EXPECT_LOG	./identity/sgx/secs_attributes_test.cc	92;"	d	file:
EcdsaP256Sha256SigningKey	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256SigningKey::EcdsaP256Sha256SigningKey($/;"	f	class:asylo::EcdsaP256Sha256SigningKey
EcdsaP256Sha256SigningKey	./crypto/ecdsa_p256_sha256_signing_key.h	/^class EcdsaP256Sha256SigningKey : public SigningKey {$/;"	c	namespace:asylo
EcdsaP256Sha256SigningKeyTest	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^class EcdsaP256Sha256SigningKeyTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon19	file:
EcdsaP256Sha256SigningKeyTest	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^class EcdsaP256Sha256SigningKeyTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon273	file:
EcdsaP256Sha256VerifyingKey	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256VerifyingKey::EcdsaP256Sha256VerifyingKey($/;"	f	class:asylo::EcdsaP256Sha256VerifyingKey
EcdsaP256Sha256VerifyingKey	./crypto/ecdsa_p256_sha256_signing_key.h	/^class EcdsaP256Sha256VerifyingKey : public VerifyingKey {$/;"	c	namespace:asylo
EcdsaP256Sha256VerifyingKeyTest	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^class EcdsaP256Sha256VerifyingKeyTest$/;"	c	namespace:asylo::__anon19	file:
EcdsaP256Sha256VerifyingKeyTest	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^class EcdsaP256Sha256VerifyingKeyTest$/;"	c	namespace:asylo::__anon273	file:
EkepErrorSpace	./grpc/auth/core/ekep_error_space.cc	/^EkepErrorSpace::EkepErrorSpace()$/;"	f	class:asylo::EkepErrorSpace
EkepErrorSpace	./grpc/auth/core/ekep_error_space.h	/^class EkepErrorSpace$/;"	c	namespace:asylo
EkepHandshaker	./grpc/auth/core/ekep_handshaker.cc	/^EkepHandshaker::EkepHandshaker(int max_frame_size)$/;"	f	class:asylo::EkepHandshaker
EkepHandshaker	./grpc/auth/core/ekep_handshaker.h	/^class EkepHandshaker {$/;"	c	namespace:asylo
EkepHandshakerOptions	./grpc/auth/core/ekep_handshaker_util.h	/^struct EkepHandshakerOptions {$/;"	s	namespace:asylo
EkepHandshakerUtilTest	./grpc/auth/core/ekep_handshaker_util_test.cc	/^class EkepHandshakerUtilTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon257	file:
EkepHandshakerUtilTest	./grpc/auth/core/ekep_handshaker_util_test.cc	/^class EkepHandshakerUtilTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon511	file:
ElfHeader	./util/elf_reader.cc	/^StatusOr<const Elf64_Ehdr *> ElfReaderCreator::ElfHeader() const {$/;"	f	class:asylo::ElfReaderCreator
ElfReader	./util/elf_reader.h	/^  ElfReader($/;"	f	class:asylo::ElfReader
ElfReader	./util/elf_reader.h	/^class ElfReader {$/;"	c	namespace:asylo
ElfReaderCreator	./util/elf_reader.cc	/^  explicit ElfReaderCreator(absl::Span<const uint8_t> elf_file)$/;"	f	class:asylo::ElfReaderCreator
ElfReaderCreator	./util/elf_reader.cc	/^class ElfReaderCreator {$/;"	c	namespace:asylo	file:
ElfReaderTest	./util/elf_reader_test.cc	/^  ElfReaderTest() : ElfReaderTest(ElfReaderTestMembers()) {}$/;"	f	class:asylo::__anon226::ElfReaderTest
ElfReaderTest	./util/elf_reader_test.cc	/^  ElfReaderTest() : ElfReaderTest(ElfReaderTestMembers()) {}$/;"	f	class:asylo::__anon480::ElfReaderTest
ElfReaderTest	./util/elf_reader_test.cc	/^  explicit ElfReaderTest(ElfReaderTestMembers members)$/;"	f	class:asylo::__anon226::ElfReaderTest
ElfReaderTest	./util/elf_reader_test.cc	/^  explicit ElfReaderTest(ElfReaderTestMembers members)$/;"	f	class:asylo::__anon480::ElfReaderTest
ElfReaderTest	./util/elf_reader_test.cc	/^class ElfReaderTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon226	file:
ElfReaderTest	./util/elf_reader_test.cc	/^class ElfReaderTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon480	file:
ElfReaderTestMembers	./util/elf_reader_test.cc	/^    ElfReaderTestMembers() {$/;"	f	struct:asylo::__anon226::ElfReaderTest::ElfReaderTestMembers
ElfReaderTestMembers	./util/elf_reader_test.cc	/^    ElfReaderTestMembers() {$/;"	f	struct:asylo::__anon480::ElfReaderTest::ElfReaderTestMembers
ElfReaderTestMembers	./util/elf_reader_test.cc	/^  struct ElfReaderTestMembers {$/;"	s	class:asylo::__anon226::ElfReaderTest	file:
ElfReaderTestMembers	./util/elf_reader_test.cc	/^  struct ElfReaderTestMembers {$/;"	s	class:asylo::__anon480::ElfReaderTest	file:
EmitParameterTable	./platform/system_call/generate_tables.cc	/^void EmitParameterTable(std::ostream *os) {$/;"	f
EmitSystemCallTable	./platform/system_call/generate_tables.cc	/^void EmitSystemCallTable(std::ostream *os) {$/;"	f
Empty	./platform/posix/pthread.cc	/^bool QueueOperations::Empty() const {$/;"	f	class:asylo::pthread_impl::QueueOperations
EmptySigSet	./platform/posix/signal/signal_manager.cc	/^sigset_t EmptySigSet() {$/;"	f	namespace:asylo::__anon294
EmptySigSet	./platform/posix/signal/signal_manager.cc	/^sigset_t EmptySigSet() {$/;"	f	namespace:asylo::__anon40
EmulateSetKeyIoctl	./platform/storage/secure/enclave_storage_secure_test.cc	/^  int EmulateSetKeyIoctl(int fd) const {$/;"	f	class:asylo::__anon100::EnclaveStorageSecureTest
EmulateSetKeyIoctl	./platform/storage/secure/enclave_storage_secure_test.cc	/^  int EmulateSetKeyIoctl(int fd) const {$/;"	f	class:asylo::__anon354::EnclaveStorageSecureTest
EncRunClient	./platform/posix/sockets/domain_socket_test_enclave.cc	/^  Status EncRunClient(const std::string &socket_name, bool use_path_len) {$/;"	f	class:asylo::DomainSocketTest	file:
EncRunClient	./platform/posix/sockets/inet6_socket_test_enclave.cc	/^  Status EncRunClient(int app_server_port) {$/;"	f	class:asylo::Inet6SocketTest	file:
EncRunServer	./platform/posix/sockets/domain_socket_test_enclave.cc	/^  Status EncRunServer() {$/;"	f	class:asylo::DomainSocketTest	file:
EncRunServer	./platform/posix/sockets/inet6_socket_test_enclave.cc	/^  Status EncRunServer() {$/;"	f	class:asylo::Inet6SocketTest	file:
EncSetupServer	./platform/posix/sockets/domain_socket_test_enclave.cc	/^  Status EncSetupServer(const std::string &socket_name, bool use_path_len) {$/;"	f	class:asylo::DomainSocketTest	file:
EncSetupServer	./platform/posix/sockets/inet6_socket_test_enclave.cc	/^  Status EncSetupServer(int enc_server_port, SocketTestOutput *output) {$/;"	f	class:asylo::Inet6SocketTest	file:
EnclaveApi	./platform/core/test/enclave_api_test_enclave.cc	/^class EnclaveApi : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
EnclaveAssertionAuthority	./identity/enclave_assertion_authority.h	/^class EnclaveAssertionAuthority {$/;"	c	namespace:asylo
EnclaveAssertionGenerator	./identity/enclave_assertion_generator.h	/^class EnclaveAssertionGenerator : public EnclaveAssertionAuthority {$/;"	c	namespace:asylo
EnclaveAssertionVerifier	./identity/enclave_assertion_verifier.h	/^class EnclaveAssertionVerifier : public EnclaveAssertionAuthority {$/;"	c	namespace:asylo
EnclaveAuthContext	./grpc/auth/enclave_auth_context.cc	/^EnclaveAuthContext::EnclaveAuthContext(EnclaveIdentities identities,$/;"	f	class:asylo::EnclaveAuthContext
EnclaveAuthContext	./grpc/auth/enclave_auth_context.h	/^  EnclaveAuthContext()$/;"	f	class:asylo::EnclaveAuthContext
EnclaveAuthContext	./grpc/auth/enclave_auth_context.h	/^class EnclaveAuthContext {$/;"	c	namespace:asylo
EnclaveAuthContextTest	./grpc/auth/enclave_auth_context_test.cc	/^  EnclaveAuthContextTest()$/;"	f	class:asylo::__anon248::EnclaveAuthContextTest
EnclaveAuthContextTest	./grpc/auth/enclave_auth_context_test.cc	/^  EnclaveAuthContextTest()$/;"	f	class:asylo::__anon502::EnclaveAuthContextTest
EnclaveAuthContextTest	./grpc/auth/enclave_auth_context_test.cc	/^class EnclaveAuthContextTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon248	file:
EnclaveAuthContextTest	./grpc/auth/enclave_auth_context_test.cc	/^class EnclaveAuthContextTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon502	file:
EnclaveBridgeTypes	./platform/common/test/bridge_types_test_enclave.cc	/^class EnclaveBridgeTypes : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
EnclaveCall	./platform/primitives/untrusted_primitives.cc	/^Status Client::EnclaveCall(uint64_t selector, NativeParameterStack *params) {$/;"	f	class:asylo::primitives::Client
EnclaveCallInternal	./platform/primitives/sgx/untrusted_sgx.cc	/^Status SgxEnclaveClient::EnclaveCallInternal(uint64_t selector,$/;"	f	class:asylo::primitives::SgxEnclaveClient
EnclaveCallInternal	./platform/primitives/sim/untrusted_sim.cc	/^Status SimEnclaveClient::EnclaveCallInternal(uint64_t selector,$/;"	f	class:asylo::primitives::SimEnclaveClient
EnclaveChannelCredentials	./grpc/auth/enclave_channel_credentials.cc	/^std::shared_ptr<::grpc::ChannelCredentials> EnclaveChannelCredentials($/;"	f	namespace:asylo
EnclaveClient	./platform/core/enclave_client.h	/^  explicit EnclaveClient(const std::string &name) : name_(name) {}$/;"	f	class:asylo::EnclaveClient
EnclaveClient	./platform/core/enclave_client.h	/^class EnclaveClient {$/;"	c	namespace:asylo
EnclaveCommunicationTest	./test/grpc/enclave_communication_test.cc	/^class EnclaveCommunicationTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon221	file:
EnclaveCommunicationTest	./test/grpc/enclave_communication_test.cc	/^class EnclaveCommunicationTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon475	file:
EnclaveCredentialsConfig	./test/grpc/channel_test.cc	/^  EnclaveCredentialsConfig() {$/;"	f	struct:asylo::__anon224::EnclaveCredentialsConfig
EnclaveCredentialsConfig	./test/grpc/channel_test.cc	/^  EnclaveCredentialsConfig() {$/;"	f	struct:asylo::__anon478::EnclaveCredentialsConfig
EnclaveCredentialsConfig	./test/grpc/channel_test.cc	/^struct EnclaveCredentialsConfig : public CredentialsConfig {$/;"	s	namespace:asylo::__anon224	file:
EnclaveCredentialsConfig	./test/grpc/channel_test.cc	/^struct EnclaveCredentialsConfig : public CredentialsConfig {$/;"	s	namespace:asylo::__anon478	file:
EnclaveCredentialsOptions	./grpc/auth/enclave_credentials_options.h	/^struct EnclaveCredentialsOptions {$/;"	s	namespace:asylo
EnclaveCredentialsOptionsTest	./grpc/auth/enclave_credentials_options_test.cc	/^  EnclaveCredentialsOptionsTest() {$/;"	f	class:asylo::__anon249::EnclaveCredentialsOptionsTest
EnclaveCredentialsOptionsTest	./grpc/auth/enclave_credentials_options_test.cc	/^  EnclaveCredentialsOptionsTest() {$/;"	f	class:asylo::__anon503::EnclaveCredentialsOptionsTest
EnclaveCredentialsOptionsTest	./grpc/auth/enclave_credentials_options_test.cc	/^class EnclaveCredentialsOptionsTest : public Test {$/;"	c	namespace:asylo::__anon249	file:
EnclaveCredentialsOptionsTest	./grpc/auth/enclave_credentials_options_test.cc	/^class EnclaveCredentialsOptionsTest : public Test {$/;"	c	namespace:asylo::__anon503	file:
EnclaveDemo	./examples/quickstart/demo_enclave.cc	/^class EnclaveDemo : public TrustedApplication {$/;"	c	namespace:asylo	file:
EnclaveDemo	./examples/quickstart/solution/demo_enclave.cc	/^class EnclaveDemo : public TrustedApplication {$/;"	c	namespace:asylo	file:
EnclaveEntryCountTest	./test/misc/enclave_entry_count_test_driver.cc	/^class EnclaveEntryCountTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon211	file:
EnclaveEntryCountTest	./test/misc/enclave_entry_count_test_driver.cc	/^class EnclaveEntryCountTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon465	file:
EnclaveEntryCountTest	./test/misc/enclave_entry_count_test_enclave.cc	/^class EnclaveEntryCountTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
EnclaveFullStackFixtureData	./grpc/auth/test/h2_enclave_security_test.cc	/^struct EnclaveFullStackFixtureData {$/;"	s	namespace:asylo::__anon247	file:
EnclaveFullStackFixtureData	./grpc/auth/test/h2_enclave_security_test.cc	/^struct EnclaveFullStackFixtureData {$/;"	s	namespace:asylo::__anon501	file:
EnclaveGetenvTest	./platform/core/test/getenv_test_driver.cc	/^class EnclaveGetenvTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon132	file:
EnclaveGetenvTest	./platform/core/test/getenv_test_driver.cc	/^class EnclaveGetenvTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon386	file:
EnclaveGetenvTest	./platform/core/test/getenv_test_enclave.cc	/^class EnclaveGetenvTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
EnclaveLoader	./platform/core/enclave_manager.h	/^class EnclaveLoader {$/;"	c	namespace:asylo
EnclaveLoggingTest	./test/misc/logging_test_driver.cc	/^class EnclaveLoggingTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon206	file:
EnclaveLoggingTest	./test/misc/logging_test_driver.cc	/^class EnclaveLoggingTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon460	file:
EnclaveManager	./platform/core/enclave_manager.cc	/^EnclaveManager::EnclaveManager() : host_config_(GetHostConfig()) {$/;"	f	class:asylo::EnclaveManager
EnclaveManager	./platform/core/enclave_manager.h	/^class EnclaveManager {$/;"	c	namespace:asylo
EnclaveManagerOptions	./platform/core/enclave_manager.cc	/^EnclaveManagerOptions::EnclaveManagerOptions()$/;"	f	class:asylo::EnclaveManagerOptions
EnclaveManagerOptions	./platform/core/enclave_manager.h	/^class EnclaveManagerOptions {$/;"	c	namespace:asylo
EnclaveMemoryLayout	./platform/primitives/trusted_runtime.h	/^struct EnclaveMemoryLayout {$/;"	s
EnclaveProtoTest	./platform/core/test/proto_test_driver.cc	/^class EnclaveProtoTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon131	file:
EnclaveProtoTest	./platform/core/test/proto_test_driver.cc	/^class EnclaveProtoTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon385	file:
EnclaveProtoTest	./platform/core/test/proto_test_enclave.cc	/^class EnclaveProtoTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
EnclaveRunAllTests	./bazel/test_shim_enclave.cc	/^  void EnclaveRunAllTests() {$/;"	f	class:asylo::TestShimEnclave	file:
EnclaveSecureGrpcTest	./test/grpc/enclave_secure_server_test.cc	/^class EnclaveSecureGrpcTest : public EnclaveTest {$/;"	c	namespace:asylo::test::__anon225	file:
EnclaveSecureGrpcTest	./test/grpc/enclave_secure_server_test.cc	/^class EnclaveSecureGrpcTest : public EnclaveTest {$/;"	c	namespace:asylo::test::__anon479	file:
EnclaveServer	./grpc/util/enclave_server.h	/^  EnclaveServer(GrpcServiceFactory service_factory,$/;"	f	class:asylo::final
EnclaveServer	./grpc/util/enclave_server.h	/^  EnclaveServer(std::unique_ptr<::grpc::Service> service,$/;"	f	class:asylo::final
EnclaveServerCredentials	./grpc/auth/enclave_server_credentials.cc	/^std::shared_ptr<::grpc::ServerCredentials> EnclaveServerCredentials($/;"	f	namespace:asylo
EnclaveServerTest	./test/grpc/enclave_insecure_server_test.cc	/^class EnclaveServerTest : public EnclaveTest {$/;"	c	namespace:asylo::test::__anon223	file:
EnclaveServerTest	./test/grpc/enclave_insecure_server_test.cc	/^class EnclaveServerTest : public EnclaveTest {$/;"	c	namespace:asylo::test::__anon477	file:
EnclaveSignalDispatcher	./platform/core/enclave_manager.h	/^class EnclaveSignalDispatcher {$/;"	c	namespace:asylo
EnclaveStorageSecureTest	./platform/storage/secure/enclave_storage_secure_test.cc	/^class EnclaveStorageSecureTest : public ::testing::Test,$/;"	c	namespace:asylo::__anon100	file:
EnclaveStorageSecureTest	./platform/storage/secure/enclave_storage_secure_test.cc	/^class EnclaveStorageSecureTest : public ::testing::Test,$/;"	c	namespace:asylo::__anon354	file:
EnclaveTest	./test/util/enclave_test.h	/^class EnclaveTest : public ::testing::Test {$/;"	c	namespace:asylo
EnclaveTestCase	./test/util/enclave_test_application.h	/^class EnclaveTestCase : public TrustedApplication {$/;"	c	namespace:asylo
EnclaveTestLauncher	./test/util/enclave_test_launcher.cc	/^EnclaveTestLauncher::EnclaveTestLauncher()$/;"	f	class:asylo::EnclaveTestLauncher
EnclaveTestLauncher	./test/util/enclave_test_launcher.h	/^class EnclaveTestLauncher {$/;"	c	namespace:asylo
EncodeCpuSetInTestOutput	./platform/posix/syscalls_test_enclave.cc	/^  void EncodeCpuSetInTestOutput(cpu_set_t &mask,$/;"	f	class:asylo::SyscallsEnclave	file:
EncodeErrnoValueInTestOutput	./platform/posix/syscalls_test_enclave.cc	/^  void EncodeErrnoValueInTestOutput(int errno_value,$/;"	f	class:asylo::SyscallsEnclave	file:
EncodeFrame	./grpc/auth/core/ekep_handshaker.cc	/^Status EkepHandshaker::EncodeFrame($/;"	f	class:asylo::EkepHandshaker
EncodeLittleEndian	./crypto/util/byte_container_util_test.cc	/^uint32_t EncodeLittleEndian(size_t value) {$/;"	f	namespace:asylo::__anon21
EncodeLittleEndian	./crypto/util/byte_container_util_test.cc	/^uint32_t EncodeLittleEndian(size_t value) {$/;"	f	namespace:asylo::__anon275
EncodePassWdInTestOutput	./platform/posix/syscalls_test_enclave.cc	/^  bool EncodePassWdInTestOutput(struct passwd *password,$/;"	f	class:asylo::SyscallsEnclave	file:
EncodeStatBufferInTestOutput	./platform/posix/syscalls_test_enclave.cc	/^  void EncodeStatBufferInTestOutput(const struct stat &stat_buffer,$/;"	f	class:asylo::SyscallsEnclave	file:
EncodeUtsNameInTestOutput	./platform/posix/syscalls_test_enclave.cc	/^  void EncodeUtsNameInTestOutput(struct utsname &utsname_buf,$/;"	f	class:asylo::SyscallsEnclave	file:
EncodingSize	./platform/system_call/generate_tables.cc	/^size_t EncodingSize(const std::string &syscall, const std::string &name) {$/;"	f
Encrypt	./crypto/rsa_oaep_encryption_key.cc	/^Status RsaOaepEncryptionKey::Encrypt(ByteContainerView plaintext,$/;"	f	class:asylo::RsaOaepEncryptionKey
EncryptAndPersist	./platform/storage/secure/aead_handler.cc	/^ssize_t AeadHandler::EncryptAndPersist(int fd, const void *buf, size_t count) {$/;"	f	class:asylo::platform::storage::AeadHandler
EncryptAndSendSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^Status EncryptAndSendSnapshotKey(std::unique_ptr<AeadCryptor> cryptor,$/;"	f	namespace:asylo
EncryptBlock	./platform/crypto/gcmlib/gcm_cryptor.cc	/^bool GcmCryptor::EncryptBlock(const uint8_t *plaintext_data, uint8_t *token,$/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptor
EncryptMessage	./examples/quickstart/demo_enclave.cc	/^const StatusOr<std::string> EncryptMessage(const std::string &message) {$/;"	f	namespace:asylo::__anon245
EncryptMessage	./examples/quickstart/demo_enclave.cc	/^const StatusOr<std::string> EncryptMessage(const std::string &message) {$/;"	f	namespace:asylo::__anon499
EncryptMessage	./examples/quickstart/solution/demo_enclave.cc	/^const StatusOr<std::string> EncryptMessage(const std::string &message) {$/;"	f	namespace:asylo::__anon246
EncryptMessage	./examples/quickstart/solution/demo_enclave.cc	/^const StatusOr<std::string> EncryptMessage(const std::string &message) {$/;"	f	namespace:asylo::__anon500
EncryptToSnapshot	./platform/arch/sgx/trusted/fork.cc	/^Status EncryptToSnapshot(AeadCryptor *cryptor, void *source_base,$/;"	f	namespace:asylo::__anon284
EncryptToSnapshot	./platform/arch/sgx/trusted/fork.cc	/^Status EncryptToSnapshot(AeadCryptor *cryptor, void *source_base,$/;"	f	namespace:asylo::__anon30
EncryptToUntrustedMemory	./platform/arch/sgx/trusted/fork.cc	/^Status EncryptToUntrustedMemory(AeadCryptor *cryptor, const void *source_base,$/;"	f	namespace:asylo::__anon284
EncryptToUntrustedMemory	./platform/arch/sgx/trusted/fork.cc	/^Status EncryptToUntrustedMemory(AeadCryptor *cryptor, const void *source_base,$/;"	f	namespace:asylo::__anon30
EndianTest	./platform/posix/endian_test.cc	/^class EndianTest : public Test {$/;"	c	namespace:asylo::__anon298	file:
EndianTest	./platform/posix/endian_test.cc	/^class EndianTest : public Test {$/;"	c	namespace:asylo::__anon44	file:
Enqueue	./platform/posix/pthread.cc	/^void QueueOperations::Enqueue(const pthread_t id) {$/;"	f	class:asylo::pthread_impl::QueueOperations
EnqueueThread	./platform/posix/threading/thread_manager.cc	/^std::shared_ptr<ThreadManager::Thread> ThreadManager::EnqueueThread($/;"	f	class:asylo::ThreadManager
EnsureDirectory	./util/logging.cc	/^bool EnsureDirectory(const char *path) {$/;"	f	namespace:asylo
EnsureInitialized	./platform/primitives/util/trusted_runtime_helper.cc	/^void EnsureInitialized() {$/;"	f	namespace:asylo::primitives::__anon340
EnsureInitialized	./platform/primitives/util/trusted_runtime_helper.cc	/^void EnsureInitialized() {$/;"	f	namespace:asylo::primitives::__anon86
EnterAndDonateThread	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::EnterAndDonateThread() {$/;"	f	class:asylo::SgxClient
EnterAndFinalize	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::EnterAndFinalize(const EnclaveFinal &final_input) {$/;"	f	class:asylo::SgxClient
EnterAndHandleSignal	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::EnterAndHandleSignal(const EnclaveSignal &signal) {$/;"	f	class:asylo::SgxClient
EnterAndInitialize	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::EnterAndInitialize(const EnclaveConfig &config) {$/;"	f	class:asylo::SgxClient
EnterAndRestore	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::EnterAndRestore(const SnapshotLayout &snapshot_layout) {$/;"	f	class:asylo::SgxClient
EnterAndRun	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::EnterAndRun(const EnclaveInput &input,$/;"	f	class:asylo::SgxClient
EnterAndTakeSnapshot	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::EnterAndTakeSnapshot(SnapshotLayout *snapshot_layout) {$/;"	f	class:asylo::SgxClient
EnterAndTransferSecureSnapshotKey	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::EnterAndTransferSecureSnapshotKey($/;"	f	class:asylo::SgxClient
EnterEnclave	./identity/sgx/fake_enclave.cc	/^void FakeEnclave::EnterEnclave(const FakeEnclave &enclave) {$/;"	f	class:asylo::sgx::FakeEnclave
EnterEnclave	./test/misc/enclave_entry_count_test_driver.cc	/^void EnterEnclave(EnclaveClient *client, const EnclaveInput &enclave_input) {$/;"	f	namespace:asylo::__anon211
EnterEnclave	./test/misc/enclave_entry_count_test_driver.cc	/^void EnterEnclave(EnclaveClient *client, const EnclaveInput &enclave_input) {$/;"	f	namespace:asylo::__anon465
EnterEnclaveAndHandleSignal	./platform/arch/sgx/untrusted/ocalls.cc	/^void EnterEnclaveAndHandleSignal(int signum, siginfo_t *info, void *ucontext) {$/;"	f	namespace:__anon286
EnterEnclaveAndHandleSignal	./platform/arch/sgx/untrusted/ocalls.cc	/^void EnterEnclaveAndHandleSignal(int signum, siginfo_t *info, void *ucontext) {$/;"	f	namespace:__anon32
EnterEnclaveAndHandleSignal	./platform/core/enclave_manager.cc	/^Status EnclaveSignalDispatcher::EnterEnclaveAndHandleSignal(int signum,$/;"	f	class:asylo::EnclaveSignalDispatcher
EnterEnclaveToBlockEntries	./test/misc/block_enclave_entries_test_driver.cc	/^void EnterEnclaveToBlockEntries(EnclaveClient *client,$/;"	f	namespace:asylo::__anon203
EnterEnclaveToBlockEntries	./test/misc/block_enclave_entries_test_driver.cc	/^void EnterEnclaveToBlockEntries(EnclaveClient *client,$/;"	f	namespace:asylo::__anon457
EntryHandler	./platform/primitives/trusted_primitives.h	/^  EntryHandler() : callback(nullptr), context(nullptr) {}$/;"	f	struct:asylo::primitives::EntryHandler
EntryHandler	./platform/primitives/trusted_primitives.h	/^  EntryHandler(Callback callback, void *context)$/;"	f	struct:asylo::primitives::EntryHandler
EntryHandler	./platform/primitives/trusted_primitives.h	/^  explicit EntryHandler(Callback callback)$/;"	f	struct:asylo::primitives::EntryHandler
EntryHandler	./platform/primitives/trusted_primitives.h	/^struct EntryHandler {$/;"	s	namespace:asylo::primitives
EntrySize	./util/elf_reader.cc	/^StatusOr<uint16_t> ElfReaderCreator::EntrySize($/;"	f	class:asylo::ElfReaderCreator
EnumProperties	./platform/system_call/type_conversions/types_conversions_generator.cc	/^struct EnumProperties {$/;"	s	file:
EnvironmentVariableFormatter	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  struct EnvironmentVariableFormatter {$/;"	s	class:asylo::__anon182::ApplicationWrapperEnclaveTest	file:
EnvironmentVariableFormatter	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  struct EnvironmentVariableFormatter {$/;"	s	class:asylo::__anon436::ApplicationWrapperEnclaveTest	file:
EpollCreate	./platform/posix/io/io_manager.cc	/^int IOManager::EpollCreate(int size) {$/;"	f	class:asylo::io::IOManager
EpollCtl	./platform/posix/io/io_context_epoll.cc	/^int IOContextEpoll::EpollCtl(int op, int hostfd, struct epoll_event *event) {$/;"	f	class:asylo::io::IOContextEpoll
EpollCtl	./platform/posix/io/io_manager.cc	/^int IOManager::EpollCtl(int epfd, int op, int fd, struct epoll_event *event) {$/;"	f	class:asylo::io::IOManager
EpollCtl	./platform/posix/io/io_manager.h	/^    virtual int EpollCtl(int op, int hostfd, struct epoll_event *event) {$/;"	f	class:asylo::io::IOManager::IOContext
EpollTest	./platform/posix/io/epoll_test.cc	/^class EpollTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon318	file:
EpollTest	./platform/posix/io/epoll_test.cc	/^class EpollTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon64	file:
EpollWait	./platform/posix/io/io_context_epoll.cc	/^int IOContextEpoll::EpollWait(struct epoll_event *events, int maxevents,$/;"	f	class:asylo::io::IOContextEpoll
EpollWait	./platform/posix/io/io_manager.cc	/^int IOManager::EpollWait(int epfd, struct epoll_event *events, int maxevents,$/;"	f	class:asylo::io::IOManager
EpollWait	./platform/posix/io/io_manager.h	/^    virtual int EpollWait(struct epoll_event *events, int maxevents,$/;"	f	class:asylo::io::IOManager::IOContext
Eq	./platform/core/shared_name.h	/^  struct Eq : std::binary_function<SharedName, SharedName, bool> {$/;"	s	class:asylo::SharedName
Equals	./crypto/util/bytes.h	/^  bool Equals(const void *data, size_t size) const {$/;"	f	class:asylo::Bytes
EqualsProto	./test/util/proto_matchers.h	/^::testing::PolymorphicMatcher<internal::ProtoMatcher<MessageT>> EqualsProto($/;"	f	namespace:asylo
EquivalentProto	./test/util/proto_matchers.h	/^::testing::PolymorphicMatcher<internal::ProtoMatcher<MessageT>> EquivalentProto($/;"	f	namespace:asylo
ErrorCodeHolder	./util/status_internal.h	/^  explicit ErrorCodeHolder(int code) : error_code(code) {}$/;"	f	struct:asylo::status_internal::ErrorCodeHolder
ErrorCodeHolder	./util/status_internal.h	/^struct ErrorCodeHolder {$/;"	s	namespace:asylo::status_internal
ErrorPropagationEnclave	./test/misc/error_propagation_enclave.cc	/^class ErrorPropagationEnclave : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
ErrorPropagationTest	./test/misc/error_propagation_test.cc	/^class ErrorPropagationTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon207	file:
ErrorPropagationTest	./test/misc/error_propagation_test.cc	/^class ErrorPropagationTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon461	file:
ErrorSpace	./util/error_space.h	/^class ErrorSpace {$/;"	c	namespace:asylo::error
ErrorSpaceAdlTag	./util/error_space.h	/^struct ErrorSpaceAdlTag {$/;"	s	namespace:asylo::error
ErrorSpaceImplementationHelper	./util/error_space.h	/^  ErrorSpaceImplementationHelper($/;"	f	class:asylo::error::ErrorSpaceImplementationHelper
ErrorSpaceImplementationHelper	./util/error_space.h	/^class ErrorSpaceImplementationHelper : public ErrorSpace {$/;"	c	namespace:asylo::error
ErrorSpaceNamer	./util/error_space.h	/^struct ErrorSpaceNamer {$/;"	s	namespace:asylo::error::error_internal
ErrorSpaceTest	./util/error_space_test.cc	/^class ErrorSpaceTest : public ::testing::Test {};$/;"	c	namespace:asylo::error::__anon238	file:
ErrorSpaceTest	./util/error_space_test.cc	/^class ErrorSpaceTest : public ::testing::Test {};$/;"	c	namespace:asylo::error::__anon492	file:
ErrorValue	./platform/posix/io/io_manager.cc	/^struct ErrorValue<Type,$/;"	s	namespace:asylo::io::__anon320	file:
ErrorValue	./platform/posix/io/io_manager.cc	/^struct ErrorValue<Type,$/;"	s	namespace:asylo::io::__anon66	file:
EvaluateAclAndPredicateGroup	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclAndPredicateGroup($/;"	f	namespace:asylo::__anon140
EvaluateAclAndPredicateGroup	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclAndPredicateGroup($/;"	f	namespace:asylo::__anon394
EvaluateAclExpectation	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclExpectation($/;"	f	namespace:asylo::__anon140
EvaluateAclExpectation	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclExpectation($/;"	f	namespace:asylo::__anon394
EvaluateAclNotPredicateGroup	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclNotPredicateGroup($/;"	f	namespace:asylo::__anon140
EvaluateAclNotPredicateGroup	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclNotPredicateGroup($/;"	f	namespace:asylo::__anon394
EvaluateAclOrPredicateGroup	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclOrPredicateGroup($/;"	f	namespace:asylo::__anon140
EvaluateAclOrPredicateGroup	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclOrPredicateGroup($/;"	f	namespace:asylo::__anon394
EvaluateAclPredicateGroup	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclPredicateGroup($/;"	f	namespace:asylo::__anon140
EvaluateAclPredicateGroup	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateAclPredicateGroup($/;"	f	namespace:asylo::__anon394
EvaluateIdentityAcl	./identity/identity_acl_evaluator.cc	/^StatusOr<bool> EvaluateIdentityAcl($/;"	f	namespace:asylo
EventFd	./platform/posix/io/io_manager.cc	/^int IOManager::EventFd(unsigned int initval, int flags) {$/;"	f	class:asylo::io::IOManager
EventFdTest	./platform/posix/io/eventfd_test.cc	/^class EventFdTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon327	file:
EventFdTest	./platform/posix/io/eventfd_test.cc	/^class EventFdTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon73	file:
Evict	./platform/storage/utils/record_store.h	/^  ASYLO_MUST_USE_RESULT Status Evict() {$/;"	f	class:asylo::RecordStore
EvpAead	./crypto/aes_gcm_siv.h	/^  StatusOr<EVP_AEAD const *> EvpAead(size_t key_size) {$/;"	f	class:asylo::AesGcmSivCryptor
Exception	./test/misc/exception_enclave.cc	/^class Exception : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
ExceptionTest	./test/misc/exception_app.cc	/^  ExceptionTest() : client_(nullptr) {}$/;"	f	class:asylo::__anon190::ExceptionTest
ExceptionTest	./test/misc/exception_app.cc	/^  ExceptionTest() : client_(nullptr) {}$/;"	f	class:asylo::__anon444::ExceptionTest
ExceptionTest	./test/misc/exception_app.cc	/^class ExceptionTest {$/;"	c	namespace:asylo::__anon190	file:
ExceptionTest	./test/misc/exception_app.cc	/^class ExceptionTest {$/;"	c	namespace:asylo::__anon444	file:
ExceptionTest	./test/misc/exception_test.cc	/^class ExceptionTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon214	file:
ExceptionTest	./test/misc/exception_test.cc	/^class ExceptionTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon468	file:
ExecTester	./test/util/exec_tester.cc	/^ExecTester::ExecTester(const std::vector<std::string> &args, int fd_to_check)$/;"	f	class:asylo::experimental::ExecTester
ExecTester	./test/util/exec_tester.h	/^class ExecTester {$/;"	c	namespace:asylo::experimental
ExecTesterTest	./test/util/exec_tester_test.cc	/^class ExecTesterTest : public ::testing::Test {$/;"	c	namespace:asylo::experimental::__anon216	file:
ExecTesterTest	./test/util/exec_tester_test.cc	/^class ExecTesterTest : public ::testing::Test {$/;"	c	namespace:asylo::experimental::__anon470	file:
ExhaustSgxTcsTest	./test/misc/exhaust_sgx_tcs_test.cc	/^class ExhaustSgxTcsTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon212	file:
ExhaustSgxTcsTest	./test/misc/exhaust_sgx_tcs_test.cc	/^class ExhaustSgxTcsTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon466	file:
ExhaustTcsEnclave	./test/misc/exhaust_sgx_tcs.cc	/^class ExhaustTcsEnclave : public TrustedApplication {$/;"	c	namespace:asylo::__anon191	file:
ExhaustTcsEnclave	./test/misc/exhaust_sgx_tcs.cc	/^class ExhaustTcsEnclave : public TrustedApplication {$/;"	c	namespace:asylo::__anon445	file:
ExitCallProvider	./platform/primitives/untrusted_primitives.h	/^  class ExitCallProvider {$/;"	c	class:asylo::primitives::Client
ExitCallback	./platform/primitives/untrusted_primitives.cc	/^PrimitiveStatus Client::ExitCallback(uint64_t untrusted_selector,$/;"	f	class:asylo::primitives::Client
ExitEnclave	./identity/sgx/fake_enclave.cc	/^void FakeEnclave::ExitEnclave() {$/;"	f	class:asylo::sgx::FakeEnclave
ExitHandler	./platform/primitives/untrusted_primitives.h	/^  ExitHandler() : context(nullptr) {}$/;"	f	struct:asylo::primitives::ExitHandler
ExitHandler	./platform/primitives/untrusted_primitives.h	/^  ExitHandler(Callback callback, void *context)$/;"	f	struct:asylo::primitives::ExitHandler
ExitHandler	./platform/primitives/untrusted_primitives.h	/^  explicit ExitHandler(Callback callback)$/;"	f	struct:asylo::primitives::ExitHandler
ExitHandler	./platform/primitives/untrusted_primitives.h	/^struct ExitHandler {$/;"	s	namespace:asylo::primitives
ExpectBadReaderInput	./util/elf_reader_test.cc	/^  void ExpectBadReaderInput(absl::string_view error_message) {$/;"	f	class:asylo::__anon226::ElfReaderTest
ExpectBadReaderInput	./util/elf_reader_test.cc	/^  void ExpectBadReaderInput(absl::string_view error_message) {$/;"	f	class:asylo::__anon480::ElfReaderTest
ExpectErrno	./platform/posix/syscalls_test_enclave.cc	/^  Status ExpectErrno(int expected_errno, int retval) {$/;"	f	class:asylo::SyscallsEnclave	file:
ExpectResult	./test/misc/pthread_test.cc	/^  void ExpectResult(const std::vector<std::string> &expected_run_log,$/;"	f	class:asylo::pthread_impl::__anon201::PthreadCleanupTest
ExpectResult	./test/misc/pthread_test.cc	/^  void ExpectResult(const std::vector<std::string> &expected_run_log,$/;"	f	class:asylo::pthread_impl::__anon455::PthreadCleanupTest
Extent	./platform/primitives/extent.h	/^  constexpr Extent() : data_(nullptr), size_(0) {}$/;"	f	class:asylo::primitives::Extent
Extent	./platform/primitives/extent.h	/^  constexpr Extent(T *data, size_t count)$/;"	f	class:asylo::primitives::Extent
Extent	./platform/primitives/extent.h	/^  explicit constexpr Extent(T *data)$/;"	f	class:asylo::primitives::Extent
Extent	./platform/primitives/extent.h	/^  explicit constexpr Extent(void *data, size_t bytes)$/;"	f	class:asylo::primitives::Extent
Extent	./platform/primitives/extent.h	/^class Extent {$/;"	c	namespace:asylo::primitives
ExtractAndCheckPeerSgxCodeIdentity	./grpc/auth/peer_identity_util.cc	/^Status ExtractAndCheckPeerSgxCodeIdentity(const ::grpc::AuthContext &context,$/;"	f	namespace:asylo
ExtractAndMatchEnclaveIdentity	./grpc/auth/peer_identity_util.cc	/^StatusOr<bool> ExtractAndMatchEnclaveIdentity($/;"	f	namespace:asylo
ExtractCpuSetFromTestOutput	./platform/posix/syscalls_test_driver.cc	/^void ExtractCpuSetFromTestOutput(const SyscallsTestOutput &test_output,$/;"	f	namespace:asylo::__anon302
ExtractCpuSetFromTestOutput	./platform/posix/syscalls_test_driver.cc	/^void ExtractCpuSetFromTestOutput(const SyscallsTestOutput &test_output,$/;"	f	namespace:asylo::__anon48
ExtractPeer	./grpc/auth/core/enclave_transport_security.cc	/^  tsi_result ExtractPeer(tsi_peer *peer) {$/;"	f	class:asylo::TsiEnclaveHandshakerResult
ExtractStatBufferFromTestOutput	./platform/posix/syscalls_test_driver.cc	/^void ExtractStatBufferFromTestOutput(const SyscallsTestOutput &test_output,$/;"	f	namespace:asylo::__anon302
ExtractStatBufferFromTestOutput	./platform/posix/syscalls_test_driver.cc	/^void ExtractStatBufferFromTestOutput(const SyscallsTestOutput &test_output,$/;"	f	namespace:asylo::__anon48
ExtractUtsNameFromTestOutput	./platform/posix/syscalls_test_driver.cc	/^bool ExtractUtsNameFromTestOutput(const SyscallsTestOutput &test_output,$/;"	f	namespace:asylo::__anon302
ExtractUtsNameFromTestOutput	./platform/posix/syscalls_test_driver.cc	/^bool ExtractUtsNameFromTestOutput(const SyscallsTestOutput &test_output,$/;"	f	namespace:asylo::__anon48
FATAL	./util/logging.h	/^enum LogSeverity { INFO, WARNING, ERROR, FATAL, QFATAL };$/;"	e	enum:LogSeverity
FChMod	./platform/posix/io/io_manager.cc	/^int IOManager::FChMod(int fd, mode_t mode) {$/;"	f	class:asylo::io::IOManager
FChMod	./platform/posix/io/io_manager.h	/^    virtual int FChMod(mode_t mode) {$/;"	f	class:asylo::io::IOManager::IOContext
FChMod	./platform/posix/io/native_paths.cc	/^int IOContextNative::FChMod(mode_t mode) {$/;"	f	class:asylo::io::IOContextNative
FChOwn	./platform/posix/io/io_manager.cc	/^int IOManager::FChOwn(int fd, uid_t owner, gid_t group) {$/;"	f	class:asylo::io::IOManager
FChOwn	./platform/posix/io/io_manager.h	/^    virtual int FChOwn(uid_t owner, gid_t group) {$/;"	f	class:asylo::io::IOManager::IOContext
FChOwn	./platform/posix/io/native_paths.cc	/^int IOContextNative::FChOwn(uid_t owner, gid_t group) {$/;"	f	class:asylo::io::IOContextNative
FCntl	./platform/posix/io/io_manager.cc	/^int IOManager::FCntl(int fd, int cmd, int64_t arg) {$/;"	f	class:asylo::io::IOManager
FCntl	./platform/posix/io/io_manager.h	/^    virtual int FCntl(int cmd, int64_t arg) {$/;"	f	class:asylo::io::IOManager::IOContext
FCntl	./platform/posix/io/native_paths.cc	/^int IOContextNative::FCntl(int cmd, int64_t arg) {$/;"	f	class:asylo::io::IOContextNative
FDataSync	./platform/posix/io/io_manager.cc	/^int IOManager::FDataSync(int fd) {$/;"	f	class:asylo::io::IOManager
FDataSync	./platform/posix/io/io_manager.h	/^    virtual int FDataSync() { return FSync(); }$/;"	f	class:asylo::io::IOManager::IOContext
FLock	./platform/posix/io/io_manager.cc	/^int IOManager::FLock(int fd, int operation) {$/;"	f	class:asylo::io::IOManager
FLock	./platform/posix/io/io_manager.h	/^    virtual int FLock(int operation) {$/;"	f	class:asylo::io::IOManager::IOContext
FLock	./platform/posix/io/native_paths.cc	/^int IOContextNative::FLock(int operation) {$/;"	f	class:asylo::io::IOContextNative
FLockOperations	./platform/common/bridge_types.h	/^enum FLockOperations {$/;"	g
FORMERR	./platform/posix/include/arpa/nameser.h	224;"	d
FORMERR	./platform/system/include/arpa/nameser_compat.h	31;"	d
FPU	./identity/sgx/secs_attributes.h	/^  FPU = 64 + 0,        \/\/ Determines the behavior of the FPU\/MMX capabilities.$/;"	m	class:asylo::sgx::SecsAttributeBit
FStat	./platform/posix/io/io_manager.cc	/^int IOManager::FStat(int fd, struct stat *stat_buffer) {$/;"	f	class:asylo::io::IOManager
FStat	./platform/posix/io/io_manager.h	/^    virtual int FStat(struct stat *st) {$/;"	f	class:asylo::io::IOManager::IOContext
FStat	./platform/posix/io/native_paths.cc	/^int IOContextNative::FStat(struct stat *stat_buffer) {$/;"	f	class:asylo::io::IOContextNative
FStat	./platform/posix/io/random_devices.cc	/^int RandomIOContext::FStat(struct stat *stat_buffer) {$/;"	f	class:asylo::RandomIOContext
FStat	./platform/posix/io/secure_paths.cc	/^int IOContextSecure::FStat(struct stat *st) {$/;"	f	class:asylo::io::IOContextSecure
FSync	./platform/posix/io/io_manager.cc	/^int IOManager::FSync(int fd) {$/;"	f	class:asylo::io::IOManager
FSync	./platform/posix/io/io_manager.h	/^    virtual int FSync() {$/;"	f	class:asylo::io::IOManager::IOContext
FSync	./platform/posix/io/native_paths.cc	/^int IOContextNative::FSync() { return enc_untrusted_fsync(host_fd_); }$/;"	f	class:asylo::io::IOContextNative
FSync	./platform/posix/io/random_devices.cc	/^int RandomIOContext::FSync() {$/;"	f	class:asylo::RandomIOContext
FSync	./platform/posix/io/secure_paths.cc	/^int IOContextSecure::FSync() { return enc_untrusted_fsync(host_fd_); }$/;"	f	class:asylo::io::IOContextSecure
FTruncate	./platform/posix/io/io_manager.cc	/^int IOManager::FTruncate(int fd, off_t length) {$/;"	f	class:asylo::io::IOManager
FTruncate	./platform/posix/io/io_manager.h	/^    virtual int FTruncate(off_t length) {$/;"	f	class:asylo::io::IOManager::IOContext
FTruncate	./platform/posix/io/native_paths.cc	/^int IOContextNative::FTruncate(off_t length) {$/;"	f	class:asylo::io::IOContextNative
F_GETPIPE_SZ	./platform/posix/include/fcntl.h	24;"	d
F_SETPIPE_SZ	./platform/posix/include/fcntl.h	25;"	d
FactorySucceedsAndGeneratesExpectedValue	./identity/additional_authenticated_data_generator_test.cc	/^void FactorySucceedsAndGeneratesExpectedValue($/;"	f	namespace:asylo::__anon141
FactorySucceedsAndGeneratesExpectedValue	./identity/additional_authenticated_data_generator_test.cc	/^void FactorySucceedsAndGeneratesExpectedValue($/;"	f	namespace:asylo::__anon395
FailFinalizeEnclave	./test/misc/fail_finalize_enclave.cc	/^class FailFinalizeEnclave : public asylo::TrustedApplication {$/;"	c	namespace:asylo	file:
FailingLoader	./test/loader/loader_test.cc	/^class FailingLoader : public EnclaveLoader {$/;"	c	namespace:asylo::__anon215	file:
FailingLoader	./test/loader/loader_test.cc	/^class FailingLoader : public EnclaveLoader {$/;"	c	namespace:asylo::__anon469	file:
FakeEnclave	./identity/sgx/fake_enclave.cc	/^FakeEnclave::FakeEnclave() {$/;"	f	class:asylo::sgx::FakeEnclave
FakeEnclave	./identity/sgx/fake_enclave.h	/^class FakeEnclave {$/;"	c	namespace:asylo::sgx
FakeEnclaveLoader	./test/util/fake_enclave_loader.cc	/^FakeEnclaveLoader::FakeEnclaveLoader($/;"	f	class:asylo::FakeEnclaveLoader
FakeEnclaveLoader	./test/util/fake_enclave_loader.h	/^class FakeEnclaveLoader : public EnclaveLoader {$/;"	c	namespace:asylo
FakeEnclaveTest	./identity/sgx/fake_hardware_interface_test.cc	/^  FakeEnclaveTest() {$/;"	f	class:asylo::sgx::__anon148::FakeEnclaveTest
FakeEnclaveTest	./identity/sgx/fake_hardware_interface_test.cc	/^  FakeEnclaveTest() {$/;"	f	class:asylo::sgx::__anon402::FakeEnclaveTest
FakeEnclaveTest	./identity/sgx/fake_hardware_interface_test.cc	/^class FakeEnclaveTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon148	file:
FakeEnclaveTest	./identity/sgx/fake_hardware_interface_test.cc	/^class FakeEnclaveTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon402	file:
FakeLoader	./test/loader/loader_test.cc	/^class FakeLoader : public EnclaveLoader {$/;"	c	namespace:asylo::__anon215	file:
FakeLoader	./test/loader/loader_test.cc	/^class FakeLoader : public EnclaveLoader {$/;"	c	namespace:asylo::__anon469	file:
FcntlCommands	./platform/common/bridge_types.h	/^enum FcntlCommands {$/;"	g
FcntlHelper	./platform/arch/sgx/trusted/host_calls.cc	/^int FcntlHelper(int fd, int cmd, int64_t arg) {$/;"	f
FdCloser	./platform/storage/utils/fd_closer.cc	/^FdCloser::FdCloser() : fd_(-1), close_function_(&close) {}$/;"	f	class:asylo::platform::storage::FdCloser
FdCloser	./platform/storage/utils/fd_closer.cc	/^FdCloser::FdCloser(int fd) : fd_(fd), close_function_(&close) {}$/;"	f	class:asylo::platform::storage::FdCloser
FdCloser	./platform/storage/utils/fd_closer.cc	/^FdCloser::FdCloser(int fd, CloseFunction close_function)$/;"	f	class:asylo::platform::storage::FdCloser
FdCloser	./platform/storage/utils/fd_closer.h	/^class FdCloser {$/;"	c	namespace:asylo::platform::storage
FdCloserTest	./platform/storage/utils/fd_closer_test.cc	/^  FdCloserTest() { close_was_called = false; }$/;"	f	class:asylo::platform::storage::__anon351::FdCloserTest
FdCloserTest	./platform/storage/utils/fd_closer_test.cc	/^  FdCloserTest() { close_was_called = false; }$/;"	f	class:asylo::platform::storage::__anon97::FdCloserTest
FdCloserTest	./platform/storage/utils/fd_closer_test.cc	/^class FdCloserTest : public ::testing::Test {$/;"	c	namespace:asylo::platform::storage::__anon351	file:
FdCloserTest	./platform/storage/utils/fd_closer_test.cc	/^class FdCloserTest : public ::testing::Test {$/;"	c	namespace:asylo::platform::storage::__anon97	file:
FileControl	./platform/storage/secure/aead_handler.h	/^    FileControl(const char *path_name, bool is_new_file)$/;"	f	struct:asylo::platform::storage::AeadHandler::FileControl
FileControl	./platform/storage/secure/aead_handler.h	/^  struct FileControl {$/;"	s	class:asylo::platform::storage::AeadHandler
FileDescriptorFlags	./platform/common/bridge_types.h	/^enum FileDescriptorFlags {$/;"	g
FileDescriptorTable	./platform/posix/io/io_manager.cc	/^IOManager::FileDescriptorTable::FileDescriptorTable()$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
FileDescriptorTable	./platform/posix/io/io_manager.h	/^  class FileDescriptorTable {$/;"	c	class:asylo::io::IOManager
FileHeader	./platform/storage/secure/aead_handler.h	/^  struct FileHeader {$/;"	s	class:asylo::platform::storage::AeadHandler
FileMapping	./util/file_mapping.h	/^  FileMapping(FileMapping &&other) { MoveFrom(&other); }$/;"	f	class:asylo::FileMapping
FileMapping	./util/file_mapping.h	/^  FileMapping(std::string &&file_name, absl::Span<uint8_t> mapped_region)$/;"	f	class:asylo::FileMapping
FileMapping	./util/file_mapping.h	/^class FileMapping {$/;"	c	namespace:asylo
FileMappingTest	./util/file_mapping_test.cc	/^class FileMappingTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon243	file:
FileMappingTest	./util/file_mapping_test.cc	/^class FileMappingTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon497	file:
FileStatusFlags	./platform/common/bridge_types.h	/^enum FileStatusFlags {$/;"	g
FillUpParametersAndCreate	./platform/storage/utils/offset_translator_test.cc	/^void OffsetTranslatorTest::FillUpParametersAndCreate() {$/;"	f	class:asylo::__anon350::OffsetTranslatorTest
FillUpParametersAndCreate	./platform/storage/utils/offset_translator_test.cc	/^void OffsetTranslatorTest::FillUpParametersAndCreate() {$/;"	f	class:asylo::__anon96::OffsetTranslatorTest
FinalCheck	./test/util/exec_tester.h	/^  virtual bool FinalCheck(bool accumulated) { return accumulated; }$/;"	f	class:asylo::experimental::ExecTester
Finalize	./grpc/util/enclave_server.h	/^  Status Finalize(const EnclaveFinal &enclave_final) {$/;"	f	class:asylo::final
Finalize	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::Finalize(const char *input, size_t input_len,$/;"	f	class:asylo::SgxClient
Finalize	./platform/core/trusted_application.h	/^  virtual Status Finalize(const EnclaveFinal &final_input) {$/;"	f	class:asylo::TrustedApplication
Finalize	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Finalize() {$/;"	f	class:asylo::ThreadManager
Finalize	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus Finalize(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon336
Finalize	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus Finalize(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon82
Finalize	./test/misc/hello_world.cc	/^  Status Finalize(const EnclaveFinal &final_input) {$/;"	f	class:asylo::HelloWorld
Finalize	./test/misc/initfini.cc	/^  Status Finalize(const EnclaveFinal &final_input) {$/;"	f	class:asylo::Initfini
FinalizeEnclave	./platform/primitives/sim/trusted_sim.cc	/^PrimitiveStatus FinalizeEnclave(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives
FinalizeFile	./platform/storage/secure/aead_handler.cc	/^bool AeadHandler::FinalizeFile(int fd) {$/;"	f	class:asylo::platform::storage::AeadHandler
FinalizeServer	./grpc/util/enclave_server.h	/^  void FinalizeServer() {$/;"	f	class:asylo::final
Find	./util/error_space.cc	/^ErrorSpace const *ErrorSpace::Find(const std::string &name) {$/;"	f	class:asylo::error::ErrorSpace
FindAssertionDescription	./grpc/auth/core/ekep_handshaker_util.cc	/^std::vector<AssertionDescription>::const_iterator FindAssertionDescription($/;"	f	namespace:asylo
FindEnclaveIdentity	./grpc/auth/enclave_auth_context.cc	/^StatusOr<const EnclaveIdentity *> EnclaveAuthContext::FindEnclaveIdentity($/;"	f	class:asylo::EnclaveAuthContext
FiniteDomainMatcher	./test/util/finite_domain_fuzz.h	/^  explicit FiniteDomainMatcher(const std::function<Range(Domain)>& f) : f_(f) {}$/;"	f	class:asylo::FiniteDomainMatcher
FiniteDomainMatcher	./test/util/finite_domain_fuzz.h	/^class FiniteDomainMatcher {$/;"	c	namespace:asylo
FixedNonceGenerator	./crypto/aes_gcm_siv_test.cc	/^  explicit FixedNonceGenerator(ByteContainerView nonce) : nonce_{nonce} {}$/;"	f	class:asylo::__anon26::FixedNonceGenerator
FixedNonceGenerator	./crypto/aes_gcm_siv_test.cc	/^  explicit FixedNonceGenerator(ByteContainerView nonce) : nonce_{nonce} {}$/;"	f	class:asylo::__anon280::FixedNonceGenerator
FixedNonceGenerator	./crypto/aes_gcm_siv_test.cc	/^class FixedNonceGenerator : public NonceGenerator<kAesGcmSivNonceSize> {$/;"	c	namespace:asylo::__anon26	file:
FixedNonceGenerator	./crypto/aes_gcm_siv_test.cc	/^class FixedNonceGenerator : public NonceGenerator<kAesGcmSivNonceSize> {$/;"	c	namespace:asylo::__anon280	file:
FlipLowFourBits	./identity/sgx/fake_hardware_interface_test.cc	/^void FlipLowFourBits(uint8_t *data) {$/;"	f	namespace:asylo::sgx::__anon148
FlipLowFourBits	./identity/sgx/fake_hardware_interface_test.cc	/^void FlipLowFourBits(uint8_t *data) {$/;"	f	namespace:asylo::sgx::__anon402
FlipRandomSnapshotLayoutEntryBit	./platform/posix/fork_security_test_driver.cc	/^  void FlipRandomSnapshotLayoutEntryBit($/;"	f	class:asylo::__anon305::ForkSecurityTest
FlipRandomSnapshotLayoutEntryBit	./platform/posix/fork_security_test_driver.cc	/^  void FlipRandomSnapshotLayoutEntryBit($/;"	f	class:asylo::__anon51::ForkSecurityTest
Flush	./platform/storage/utils/record_store.h	/^  ASYLO_MUST_USE_RESULT Status Flush() {$/;"	f	class:asylo::RecordStore
FmspcFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<Fmspc> FmspcFromJson(const google::protobuf::Value &fmspc_json) {$/;"	f	namespace:asylo::sgx::__anon158
FmspcFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<Fmspc> FmspcFromJson(const google::protobuf::Value &fmspc_json) {$/;"	f	namespace:asylo::sgx::__anon412
Foo	./platform/common/static_map_test.cc	/^class Foo {$/;"	c	namespace:asylo::__anon101	file:
Foo	./platform/common/static_map_test.cc	/^class Foo {$/;"	c	namespace:asylo::__anon355	file:
Foo	./util/statusor_test.cc	/^  explicit Foo(int value) : bar(value), baz(kStringElement) {}$/;"	f	struct:asylo::__anon231::Foo
Foo	./util/statusor_test.cc	/^  explicit Foo(int value) : bar(value), baz(kStringElement) {}$/;"	f	struct:asylo::__anon485::Foo
Foo	./util/statusor_test.cc	/^struct Foo {$/;"	s	namespace:asylo::__anon231	file:
Foo	./util/statusor_test.cc	/^struct Foo {$/;"	s	namespace:asylo::__anon485	file:
FooCtor	./util/statusor_test.cc	/^struct FooCtor {$/;"	s	namespace:asylo::__anon231	file:
FooCtor	./util/statusor_test.cc	/^struct FooCtor {$/;"	s	namespace:asylo::__anon485	file:
ForVar1	./util/logging.h	/^  std::ostream *ForVar1() { return stream_; }$/;"	f	class:asylo::CheckOpMessageBuilder
ForVar2	./util/logging.cc	/^std::ostream *CheckOpMessageBuilder::ForVar2() {$/;"	f	class:asylo::CheckOpMessageBuilder
ForkEnclave	./platform/posix/unistd.cc	/^pid_t ForkEnclave() {$/;"	f	namespace:__anon295
ForkEnclave	./platform/posix/unistd.cc	/^pid_t ForkEnclave() {$/;"	f	namespace:__anon41
ForkSecurityTest	./platform/posix/fork_security_test_driver.cc	/^  ForkSecurityTest() : enclave_finalized_(false) {}$/;"	f	class:asylo::__anon305::ForkSecurityTest
ForkSecurityTest	./platform/posix/fork_security_test_driver.cc	/^  ForkSecurityTest() : enclave_finalized_(false) {}$/;"	f	class:asylo::__anon51::ForkSecurityTest
ForkSecurityTest	./platform/posix/fork_security_test_driver.cc	/^class ForkSecurityTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon305	file:
ForkSecurityTest	./platform/posix/fork_security_test_driver.cc	/^class ForkSecurityTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon51	file:
ForkSecurityTest	./platform/posix/fork_security_test_enclave.cc	/^class ForkSecurityTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
ForkTest	./platform/posix/fork_test_driver.cc	/^class ForkTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon300	file:
ForkTest	./platform/posix/fork_test_driver.cc	/^class ForkTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon46	file:
ForkTest	./platform/posix/fork_test_enclave.cc	/^class ForkTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
FormatAttributeSet	./identity/sgx/fake_enclave.cc	/^std::string FormatAttributeSet(const SecsAttributeSet &set) {$/;"	f	namespace:asylo::sgx::__anon169
FormatAttributeSet	./identity/sgx/fake_enclave.cc	/^std::string FormatAttributeSet(const SecsAttributeSet &set) {$/;"	f	namespace:asylo::sgx::__anon423
FormatMessage	./platform/system_call/message.cc	/^std::string FormatMessage(primitives::Extent extent) {$/;"	f	namespace:asylo::system_call
FormatProto	./identity/sgx/proto_format.cc	/^std::string FormatProto(const google::protobuf::Message &message) {$/;"	f	namespace:asylo::sgx
FormatRequest	./platform/system_call/message_test.cc	/^std::string FormatRequest(int sysno, Args &&... args) {$/;"	f	namespace:asylo::system_call::__anon122
FormatRequest	./platform/system_call/message_test.cc	/^std::string FormatRequest(int sysno, Args &&... args) {$/;"	f	namespace:asylo::system_call::__anon376
FormatResponse	./platform/system_call/message_test.cc	/^std::string FormatResponse(int sysno, uint64_t result, Args &&... args) {$/;"	f	namespace:asylo::system_call::__anon122
FormatResponse	./platform/system_call/message_test.cc	/^std::string FormatResponse(int sysno, uint64_t result, Args &&... args) {$/;"	f	namespace:asylo::system_call::__anon376
Free	./platform/core/untrusted_cache_malloc.cc	/^void UntrustedCacheMalloc::Free(void *buffer) {$/;"	f	class:asylo::UntrustedCacheMalloc
FreeDeserializedAddrinfo	./platform/common/bridge_proto_serializer.cc	/^void FreeDeserializedAddrinfo(struct addrinfo *in) {$/;"	f	namespace:asylo
FreeDeserializedIfAddrs	./platform/common/bridge_proto_serializer.cc	/^void FreeDeserializedIfAddrs(struct ifaddrs *ifa) {$/;"	f	namespace:asylo
FreeHook	./platform/posix/memory/memory.cc	/^void FreeHook(void *address, void *pool) { return; }$/;"	f	namespace:__anon316
FreeHook	./platform/posix/memory/memory.cc	/^void FreeHook(void *address, void *pool) { return; }$/;"	f	namespace:__anon62
FreeList	./platform/core/untrusted_cache_malloc.h	/^  struct FreeList {$/;"	s	class:asylo::UntrustedCacheMalloc
FromAssertionDescription	./grpc/auth/util/bridge_cpp_to_c.cc	/^void FromAssertionDescription(const AssertionDescription &src,$/;"	f	namespace:asylo::__anon251
FromAssertionDescription	./grpc/auth/util/bridge_cpp_to_c.cc	/^void FromAssertionDescription(const AssertionDescription &src,$/;"	f	namespace:asylo::__anon505
FromBridgeAddressInfoFlags	./platform/common/bridge_functions.cc	/^int FromBridgeAddressInfoFlags(int bridge_ai_flag) {$/;"	f	namespace:asylo
FromBridgeFDFlags	./platform/common/bridge_functions.cc	/^int FromBridgeFDFlags(int bridge_fd_flag) {$/;"	f	namespace:asylo
FromBridgeFLockOperation	./platform/common/bridge_functions.cc	/^int FromBridgeFLockOperation(int bridge_flock_operation) {$/;"	f	namespace:asylo
FromBridgeFcntlCmd	./platform/common/bridge_functions.cc	/^int FromBridgeFcntlCmd(int bridge_fcntl_cmd) {$/;"	f	namespace:asylo
FromBridgeFileFlags	./platform/common/bridge_functions.cc	/^int FromBridgeFileFlags(int bridge_file_flag) {$/;"	f	namespace:asylo
FromBridgeIpV6OptionName	./platform/common/bridge_functions.cc	/^int FromBridgeIpV6OptionName(int bridge_ipv6_option_name) {$/;"	f	namespace:asylo::__anon103
FromBridgeIpV6OptionName	./platform/common/bridge_functions.cc	/^int FromBridgeIpV6OptionName(int bridge_ipv6_option_name) {$/;"	f	namespace:asylo::__anon357
FromBridgeOptionName	./platform/common/bridge_functions.cc	/^int FromBridgeOptionName(int level, int bridge_option_name) {$/;"	f	namespace:asylo
FromBridgePollEvents	./platform/common/bridge_functions.cc	/^int FromBridgePollEvents(int events) {$/;"	f	namespace:asylo::__anon103
FromBridgePollEvents	./platform/common/bridge_functions.cc	/^int FromBridgePollEvents(int events) {$/;"	f	namespace:asylo::__anon357
FromBridgeRUsageTarget	./platform/common/bridge_functions.cc	/^int FromBridgeRUsageTarget(enum RUsageTarget bridge_rusage_target) {$/;"	f	namespace:asylo
FromBridgeSigInfo	./platform/common/bridge_functions.cc	/^siginfo_t *FromBridgeSigInfo(const struct bridge_siginfo_t *bridge_siginfo,$/;"	f	namespace:asylo
FromBridgeSigMaskAction	./platform/common/bridge_functions.cc	/^int FromBridgeSigMaskAction(int bridge_how) {$/;"	f	namespace:asylo
FromBridgeSigSet	./platform/common/bridge_functions.cc	/^sigset_t *FromBridgeSigSet(const bridge_sigset_t *bridge_set, sigset_t *set) {$/;"	f	namespace:asylo
FromBridgeSignal	./platform/common/bridge_functions.cc	/^int FromBridgeSignal(int bridge_signum) {$/;"	f	namespace:asylo
FromBridgeSignalCode	./platform/common/bridge_functions.cc	/^int FromBridgeSignalCode(int bridge_si_code) {$/;"	f	namespace:asylo
FromBridgeSignalFlags	./platform/common/bridge_functions.cc	/^int FromBridgeSignalFlags(int bridge_sa_flags) {$/;"	f	namespace:asylo
FromBridgeSocketOptionName	./platform/common/bridge_functions.cc	/^int FromBridgeSocketOptionName(int bridge_socket_option_name) {$/;"	f	namespace:asylo::__anon103
FromBridgeSocketOptionName	./platform/common/bridge_functions.cc	/^int FromBridgeSocketOptionName(int bridge_socket_option_name) {$/;"	f	namespace:asylo::__anon357
FromBridgeStat	./platform/common/bridge_functions.cc	/^struct stat *FromBridgeStat(const struct bridge_stat *bridge_statbuf,$/;"	f	namespace:asylo
FromBridgeSysLogFacility	./platform/common/bridge_functions.cc	/^int FromBridgeSysLogFacility(int bridge_syslog_facility) {$/;"	f	namespace:asylo
FromBridgeSysLogLevel	./platform/common/bridge_functions.cc	/^int FromBridgeSysLogLevel(int bridge_syslog_level) {$/;"	f	namespace:asylo::__anon103
FromBridgeSysLogLevel	./platform/common/bridge_functions.cc	/^int FromBridgeSysLogLevel(int bridge_syslog_level) {$/;"	f	namespace:asylo::__anon357
FromBridgeSysLogOption	./platform/common/bridge_functions.cc	/^int FromBridgeSysLogOption(int bridge_syslog_option) {$/;"	f	namespace:asylo
FromBridgeSysLogPriority	./platform/common/bridge_functions.cc	/^int FromBridgeSysLogPriority(int bridge_syslog_priority) {$/;"	f	namespace:asylo
FromBridgeSysconfConstants	./platform/common/bridge_functions.cc	/^int FromBridgeSysconfConstants(enum SysconfConstants bridge_sysconf_constant) {$/;"	f	namespace:asylo
FromBridgeTcpOptionName	./platform/common/bridge_functions.cc	/^int FromBridgeTcpOptionName(int bridge_tcp_option_name) {$/;"	f	namespace:asylo::__anon103
FromBridgeTcpOptionName	./platform/common/bridge_functions.cc	/^int FromBridgeTcpOptionName(int bridge_tcp_option_name) {$/;"	f	namespace:asylo::__anon357
FromBridgeTimerType	./platform/common/bridge_functions.cc	/^int FromBridgeTimerType(enum TimerType bridge_timer_type) {$/;"	f	namespace:asylo
FromBridgeWaitOptions	./platform/common/bridge_functions.cc	/^int FromBridgeWaitOptions(int bridge_wait_options) {$/;"	f	namespace:asylo
FromProtoIffFlags	./platform/common/bridge_proto_serializer.cc	/^int FromProtoIffFlags(const IfAddrProto &in) {$/;"	f	namespace:asylo::__anon109
FromProtoIffFlags	./platform/common/bridge_proto_serializer.cc	/^int FromProtoIffFlags(const IfAddrProto &in) {$/;"	f	namespace:asylo::__anon363
FromStderrTag	./test/util/output_collector.h	/^struct FromStderrTag {};$/;"	s	namespace:asylo::internal
FromStdoutTag	./test/util/output_collector.h	/^struct FromStdoutTag {};$/;"	s	namespace:asylo::internal
FromkLinuxOptionName	./platform/system_call/type_conversions/manual_types_functions.cc	/^void FromkLinuxOptionName(const int *level, const int *klinux_option_name,$/;"	f
FromkLinuxSocketType	./platform/system_call/type_conversions/manual_types_functions.cc	/^void FromkLinuxSocketType(const int *input, int *output) {$/;"	f
Front	./platform/posix/pthread.cc	/^pthread_t QueueOperations::Front() const {$/;"	f	class:asylo::pthread_impl::QueueOperations
FuzzBitsetTranslationFunction	./test/util/finite_domain_fuzz.cc	/^absl::optional<std::vector<std::pair<int, int>>> FuzzBitsetTranslationFunction($/;"	f	namespace:asylo
FuzzField	./identity/sgx/code_identity_test_util.cc	/^void FuzzField(int percent, ProtoFieldSetter<ProtoT, FieldT> set_field,$/;"	f	namespace:asylo::sgx::__anon142
FuzzField	./identity/sgx/code_identity_test_util.cc	/^void FuzzField(int percent, ProtoFieldSetter<ProtoT, FieldT> set_field,$/;"	f	namespace:asylo::sgx::__anon396
FuzzField	./identity/sgx/code_identity_test_util.cc	/^void FuzzField(int percent, ProtoFieldSetter<ProtoT, bool> set_field,$/;"	f	namespace:asylo::sgx::__anon142
FuzzField	./identity/sgx/code_identity_test_util.cc	/^void FuzzField(int percent, ProtoFieldSetter<ProtoT, bool> set_field,$/;"	f	namespace:asylo::sgx::__anon396
FuzzFiniteFunctionWithFallback	./test/util/finite_domain_fuzz.h	/^absl::optional<std::vector<std::pair<int, T>>> FuzzFiniteFunctionWithFallback($/;"	f	namespace:asylo
GRPC_CREDENTIALS_TYPE_ENCLAVE	./grpc/auth/core/enclave_credentials.h	28;"	d
GRPC_ENCLAVE_IDENTITIES_PROTO_PROPERTY_NAME	./grpc/auth/core/enclave_grpc_security_constants.h	23;"	d
GRPC_ENCLAVE_RECORD_PROTOCOL_PROPERTY_NAME	./grpc/auth/core/enclave_grpc_security_constants.h	25;"	d
GRPC_ENCLAVE_TRANSPORT_SECURITY_TYPE	./grpc/auth/core/enclave_grpc_security_constants.h	30;"	d
GcmCryptor	./platform/crypto/gcmlib/gcm_cryptor.cc	/^GcmCryptor::GcmCryptor(size_t block_length, const GcmCryptorKey &gcm_key,$/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptor
GcmCryptor	./platform/crypto/gcmlib/gcm_cryptor.h	/^class GcmCryptor {$/;"	c	namespace:asylo::platform::crypto::gcmlib
GcmCryptorRegistry	./platform/crypto/gcmlib/gcm_cryptor.h	/^class GcmCryptorRegistry {$/;"	c	namespace:asylo::platform::crypto::gcmlib
Generate	./identity/additional_authenticated_data_generator.cc	/^StatusOr<std::string> AdditionalAuthenticatedDataGenerator::Generate($/;"	f	class:asylo::AdditionalAuthenticatedDataGenerator
Generate	./identity/null_identity/null_assertion_generator.cc	/^Status NullAssertionGenerator::Generate(const std::string &user_data,$/;"	f	class:asylo::NullAssertionGenerator
Generate	./identity/sgx/sgx_local_assertion_generator.cc	/^Status SgxLocalAssertionGenerator::Generate(const std::string &user_data,$/;"	f	class:asylo::SgxLocalAssertionGenerator
GenerateAuthorityId	./identity/enclave_assertion_authority.h	/^  static StatusOr<std::string> GenerateAuthorityId($/;"	f	class:asylo::EnclaveAssertionAuthority
GenerateCryptorKey	./identity/sgx/local_secret_sealer_helpers.cc	/^Status GenerateCryptorKey(CipherSuite cipher_suite, const std::string &key_id,$/;"	f	namespace:asylo::sgx::internal
GenerateDerivedGcmKey	./platform/crypto/gcmlib/gcm_cryptor.cc	/^bool GcmCryptor::GenerateDerivedGcmKey(const uint8_t *key_id,$/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptor
GenerateDerivedKey	./platform/crypto/gcmlib/gcm_cryptor.cc	/^bool GenerateDerivedKey(const GcmCryptorKey &wrapping_key,$/;"	f	namespace:asylo::platform::crypto::gcmlib::__anon288
GenerateDerivedKey	./platform/crypto/gcmlib/gcm_cryptor.cc	/^bool GenerateDerivedKey(const GcmCryptorKey &wrapping_key,$/;"	f	namespace:asylo::platform::crypto::gcmlib::__anon34
GenerateErrorStatusFromErrno	./platform/posix/io/read_write_multithread_test.cc	/^Status GenerateErrorStatusFromErrno(const char *message, const char *path) {$/;"	f	namespace:asylo::__anon329
GenerateErrorStatusFromErrno	./platform/posix/io/read_write_multithread_test.cc	/^Status GenerateErrorStatusFromErrno(const char *message, const char *path) {$/;"	f	namespace:asylo::__anon75
GenerateRandomAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status GenerateRandomAttestationDomain(std::string *domain) {$/;"	f	namespace:asylo::__anon186
GenerateRandomAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status GenerateRandomAttestationDomain(std::string *domain) {$/;"	f	namespace:asylo::__anon440
GenerateRandomKeypolicy	./identity/sgx/fake_hardware_interface_test.cc	/^  uint16_t GenerateRandomKeypolicy(const SecsAttributeSet &attributes) {$/;"	f	class:asylo::sgx::__anon148::FakeEnclaveTest
GenerateRandomKeypolicy	./identity/sgx/fake_hardware_interface_test.cc	/^  uint16_t GenerateRandomKeypolicy(const SecsAttributeSet &attributes) {$/;"	f	class:asylo::sgx::__anon402::FakeEnclaveTest
GenerateRandomString	./platform/posix/io/read_write_multithread_test.cc	/^std::string GenerateRandomString() {$/;"	f	namespace:asylo::__anon329
GenerateRandomString	./platform/posix/io/read_write_multithread_test.cc	/^std::string GenerateRandomString() {$/;"	f	namespace:asylo::__anon75
GenerateSealerId	./identity/secret_sealer.cc	/^StatusOr<std::string> SecretSealer::GenerateSealerId(SealingRootType type,$/;"	f	class:asylo::SecretSealer
GeneratedTypesFunctionsTest	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^class GeneratedTypesFunctionsTest : public ::testing::Test {$/;"	c	namespace:asylo::system_call::__anon123	file:
GeneratedTypesFunctionsTest	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^class GeneratedTypesFunctionsTest : public ::testing::Test {$/;"	c	namespace:asylo::system_call::__anon377	file:
Get	./platform/posix/io/io_manager.cc	/^std::shared_ptr<IOManager::IOContext> IOManager::FileDescriptorTable::Get($/;"	f	class:asylo::io::IOManager::FileDescriptorTable
Get	./platform/posix/io/io_manager.h	/^      std::shared_ptr<IOContext> Get() { return context_; }$/;"	f	class:asylo::io::IOManager::FileDescriptorTable::AutoCloseIOContext
Get	./platform/primitives/test/sgx_test_backend.cc	/^TestBackend *TestBackend::Get() {$/;"	f	class:asylo::primitives::test::TestBackend
Get	./platform/primitives/test/sim_test_backend.cc	/^TestBackend *TestBackend::Get() {$/;"	f	class:asylo::primitives::test::TestBackend
GetAddrInfoForLocalHost	./platform/posix/sockets/addrinfo_test_enclave.cc	/^  bool GetAddrInfoForLocalHost(const struct addrinfo *hints,$/;"	f	class:asylo::AddrinfoTestEnclave	file:
GetAeadScheme	./crypto/aead_key.cc	/^AeadScheme AeadKey::GetAeadScheme() const { return aead_scheme_; }$/;"	f	class:asylo::AeadKey
GetAesGcmAeadScheme	./crypto/aead_key.cc	/^AeadScheme GetAesGcmAeadScheme(size_t key_size) {$/;"	f	namespace:asylo::__anon15
GetAesGcmAeadScheme	./crypto/aead_key.cc	/^AeadScheme GetAesGcmAeadScheme(size_t key_size) {$/;"	f	namespace:asylo::__anon269
GetAesGcmSivAeadScheme	./crypto/aead_key.cc	/^AeadScheme GetAesGcmSivAeadScheme(size_t key_size) {$/;"	f	namespace:asylo::__anon15
GetAesGcmSivAeadScheme	./crypto/aead_key.cc	/^AeadScheme GetAesGcmSivAeadScheme(size_t key_size) {$/;"	f	namespace:asylo::__anon269
GetAllSecsAttributes	./identity/sgx/secs_attributes.cc	/^bool GetAllSecsAttributes(Attributes *attributes) {$/;"	f	namespace:asylo::sgx
GetAllSecsAttributes	./identity/sgx/secs_attributes.cc	/^bool GetAllSecsAttributes(SecsAttributeSet *attributes) {$/;"	f	namespace:asylo::sgx
GetApplicationConfig	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^extern "C" asylo::EnclaveConfig GetApplicationConfig() {$/;"	f
GetApplicationConfig	./bazel/application_wrapper/default_config.cc	/^extern "C" asylo::EnclaveConfig GetApplicationConfig() {$/;"	f
GetApplicationConfig	./bazel/application_wrapper/test_config.cc	/^extern "C" asylo::EnclaveConfig GetApplicationConfig() {$/;"	f
GetApplicationConfig	./examples/hello_world/enclave_config.cc	/^asylo::EnclaveConfig GetApplicationConfig() {$/;"	f
GetApplicationConfig	./examples/redis/redis_enclave_config.cc	/^extern "C" asylo::EnclaveConfig GetApplicationConfig() {$/;"	f
GetApplicationInstance	./platform/core/trusted_application.cc	/^TrustedApplication *GetApplicationInstance() {$/;"	f	namespace:asylo
GetAsymmetricEncryptionScheme	./crypto/rsa_oaep_encryption_key.cc	/^AsymmetricEncryptionScheme GetAsymmetricEncryptionScheme(int number_of_bits) {$/;"	f	namespace:asylo::__anon13
GetAsymmetricEncryptionScheme	./crypto/rsa_oaep_encryption_key.cc	/^AsymmetricEncryptionScheme GetAsymmetricEncryptionScheme(int number_of_bits) {$/;"	f	namespace:asylo::__anon267
GetAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status GetAttestationDomain(const char *domain_file_path, std::string *domain) {$/;"	f	namespace:asylo
GetAttestationDomain	./daemon/identity/attestation_domain_client.cc	/^StatusOr<std::string> AttestationDomainClient::GetAttestationDomain() {$/;"	f	class:asylo::AttestationDomainClient
GetAttestationDomain	./daemon/identity/attestation_domain_service_impl.cc	/^::grpc::Status AttestationDomainServiceImpl::GetAttestationDomain($/;"	f	class:asylo::AttestationDomainServiceImpl
GetAttributeName	./identity/sgx/secs_attributes.cc	/^const char *GetAttributeName(SecsAttributeBit attribute) {$/;"	f	namespace:asylo::sgx::__anon156
GetAttributeName	./identity/sgx/secs_attributes.cc	/^const char *GetAttributeName(SecsAttributeBit attribute) {$/;"	f	namespace:asylo::sgx::__anon410
GetAuthTag	./platform/crypto/gcmlib/gcm_cryptor.cc	/^bool GcmCryptor::GetAuthTag(uint8_t out[16], const uint8_t *in,$/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptor
GetBaseAddress	./platform/primitives/sgx/untrusted_sgx.cc	/^void *SgxEnclaveClient::GetBaseAddress() const { return base_address_; }$/;"	f	class:asylo::primitives::SgxEnclaveClient
GetBasename	./util/logging.cc	/^const char *GetBasename(const char *file_path) {$/;"	f	namespace:asylo::__anon236
GetBasename	./util/logging.cc	/^const char *GetBasename(const char *file_path) {$/;"	f	namespace:asylo::__anon490
GetBuffer	./platform/core/untrusted_cache_malloc.cc	/^void *UntrustedCacheMalloc::GetBuffer() {$/;"	f	class:asylo::UntrustedCacheMalloc
GetClient	./platform/core/enclave_manager.cc	/^EnclaveClient *EnclaveManager::GetClient(const std::string &name) const {$/;"	f	class:asylo::EnclaveManager
GetClientForSignal	./platform/core/enclave_manager.cc	/^StatusOr<EnclaveClient *> EnclaveSignalDispatcher::GetClientForSignal($/;"	f	class:asylo::EnclaveSignalDispatcher
GetClockAddressOrDie	./platform/posix/time.cc	/^std::atomic<int64_t> *GetClockAddressOrDie(const char *name) {$/;"	f	namespace:__anon314
GetClockAddressOrDie	./platform/posix/time.cc	/^std::atomic<int64_t> *GetClockAddressOrDie(const char *name) {$/;"	f	namespace:__anon60
GetCredentialsOptions	./test/grpc/client_enclave.cc	/^EnclaveCredentialsOptions GetCredentialsOptions($/;"	f	namespace:asylo::__anon222
GetCredentialsOptions	./test/grpc/client_enclave.cc	/^EnclaveCredentialsOptions GetCredentialsOptions($/;"	f	namespace:asylo::__anon476
GetCurrentEnclave	./identity/sgx/fake_enclave.cc	/^FakeEnclave *FakeEnclave::GetCurrentEnclave() { return current_; }$/;"	f	class:asylo::sgx::FakeEnclave
GetCurrentWorkingDirectory	./platform/posix/io/io_manager.cc	/^std::string IOManager::GetCurrentWorkingDirectory() const {$/;"	f	class:asylo::io::IOManager
GetDefaultDoNotCareSecsAttributes	./identity/sgx/secs_attributes.cc	/^bool GetDefaultDoNotCareSecsAttributes($/;"	f	namespace:asylo::sgx
GetDefaultDoNotCareSecsAttributes	./identity/sgx/secs_attributes.cc	/^bool GetDefaultDoNotCareSecsAttributes(Attributes *attributes) {$/;"	f	namespace:asylo::sgx
GetDefaultDoNotCareSecsAttributes	./identity/sgx/secs_attributes.cc	/^bool GetDefaultDoNotCareSecsAttributes(SecsAttributeSet *attributes) {$/;"	f	namespace:asylo::sgx
GetEnclaveAssertionGenerator	./grpc/auth/core/ekep_handshaker_util.cc	/^const EnclaveAssertionGenerator *GetEnclaveAssertionGenerator($/;"	f	namespace:asylo
GetEnclaveAssertionVerifier	./grpc/auth/core/ekep_handshaker_util.cc	/^const EnclaveAssertionVerifier *GetEnclaveAssertionVerifier($/;"	f	namespace:asylo
GetEnclaveConfig	./platform/core/fake_trusted_global_state.cc	/^StatusOr<const EnclaveConfig *> GetEnclaveConfig() {$/;"	f	namespace:asylo
GetEnclaveConfig	./platform/core/trusted_global_state.cc	/^StatusOr<const EnclaveConfig *> GetEnclaveConfig() {$/;"	f	namespace:asylo
GetEnclaveConfigTestString	./test/util/enclave_test_application.cc	/^const std::string &EnclaveTestCase::GetEnclaveConfigTestString($/;"	f	class:asylo::EnclaveTestCase
GetEnclaveFinalTestString	./test/util/enclave_test_application.cc	/^const std::string &EnclaveTestCase::GetEnclaveFinalTestString($/;"	f	class:asylo::EnclaveTestCase
GetEnclaveId	./platform/primitives/sgx/untrusted_sgx.cc	/^sgx_enclave_id_t SgxEnclaveClient::GetEnclaveId() const { return id_; }$/;"	f	class:asylo::primitives::SgxEnclaveClient
GetEnclaveInputTestString	./test/util/enclave_test_application.cc	/^const std::string &EnclaveTestCase::GetEnclaveInputTestString($/;"	f	class:asylo::EnclaveTestCase
GetEnclaveName	./platform/core/fake_trusted_global_state.cc	/^const std::string &GetEnclaveName() { return *enclave_name; }$/;"	f	namespace:asylo
GetEnclaveName	./platform/core/trusted_global_state.cc	/^const std::string &GetEnclaveName() { return *global_enclave_name; }$/;"	f	namespace:asylo
GetEnclaveOutputMessage	./examples/quickstart/demo_driver.cc	/^const std::string GetEnclaveOutputMessage(const asylo::EnclaveOutput &output) {$/;"	f
GetEnclaveOutputMessage	./examples/quickstart/solution/demo_driver.cc	/^const std::string GetEnclaveOutputMessage(const asylo::EnclaveOutput &output) {$/;"	f
GetEnclaveOutputTestString	./test/util/enclave_test.h	/^  const std::string GetEnclaveOutputTestString(const EnclaveOutput &output) {$/;"	f	class:asylo::EnclaveTest
GetEnclaveOutputTestString	./test/util/enclave_test_launcher.cc	/^const std::string &EnclaveTestLauncher::GetEnclaveOutputTestString($/;"	f	class:asylo::EnclaveTestLauncher
GetEnclaveSize	./platform/primitives/sgx/untrusted_sgx.cc	/^size_t SgxEnclaveClient::GetEnclaveSize() const { return size_; }$/;"	f	class:asylo::primitives::SgxEnclaveClient
GetEnclaveUserAction	./examples/quickstart/solution/demo_enclave.cc	/^  guide::asylo::Demo::Action GetEnclaveUserAction(const EnclaveInput &input) {$/;"	f	class:asylo::EnclaveDemo
GetEnclaveUserMessage	./examples/quickstart/demo_enclave.cc	/^  const std::string GetEnclaveUserMessage(const EnclaveInput &input) {$/;"	f	class:asylo::EnclaveDemo
GetEnclaveUserMessage	./examples/quickstart/solution/demo_enclave.cc	/^  const std::string GetEnclaveUserMessage(const EnclaveInput &input) {$/;"	f	class:asylo::EnclaveDemo
GetEncryptionKey	./crypto/rsa_oaep_encryption_key.cc	/^RsaOaepDecryptionKey::GetEncryptionKey() const {$/;"	f	class:asylo::RsaOaepDecryptionKey
GetEncryptionScheme	./crypto/rsa_oaep_encryption_key.cc	/^AsymmetricEncryptionScheme RsaOaepDecryptionKey::GetEncryptionScheme() const {$/;"	f	class:asylo::RsaOaepDecryptionKey
GetEncryptionScheme	./crypto/rsa_oaep_encryption_key.cc	/^AsymmetricEncryptionScheme RsaOaepEncryptionKey::GetEncryptionScheme() const {$/;"	f	class:asylo::RsaOaepEncryptionKey
GetEnumPropertiesTable	./platform/system_call/type_conversions/types_conversions_generator.cc	/^absl::flat_hash_map<std::string, EnumProperties> *GetEnumPropertiesTable() {$/;"	f
GetErrorSpace	./grpc/auth/core/ekep_error_space.cc	/^ErrorSpace const *GetErrorSpace(ErrorSpaceAdlTag<Abort_ErrorCode> tag) {$/;"	f	namespace:asylo::error
GetErrorSpace	./platform/primitives/sgx/sgx_error_space.cc	/^ErrorSpace const *GetErrorSpace(ErrorSpaceAdlTag<sgx_status_t> tag) {$/;"	f	namespace:asylo::error
GetErrorSpace	./util/error_space.cc	/^ErrorSpace const *GetErrorSpace($/;"	f	namespace:asylo::error
GetErrorSpace	./util/posix_error_space.cc	/^ErrorSpace const *GetErrorSpace($/;"	f	namespace:asylo::error
GetErrorSpace	./util/status_error_space.cc	/^ErrorSpace const *GetErrorSpace(ErrorSpaceAdlTag<StatusError> tag) {$/;"	f	namespace:asylo::error
GetEvpAead	./crypto/aead_key.cc	/^const EVP_AEAD *GetEvpAead(AeadScheme aead_scheme) {$/;"	f	namespace:asylo::__anon15
GetEvpAead	./crypto/aead_key.cc	/^const EVP_AEAD *GetEvpAead(AeadScheme aead_scheme) {$/;"	f	namespace:asylo::__anon269
GetExpectedMessageType	./grpc/auth/core/client_ekep_handshaker.cc	/^HandshakeMessageType ClientEkepHandshaker::GetExpectedMessageType() const {$/;"	f	class:asylo::ClientEkepHandshaker
GetExpectedMessageType	./grpc/auth/core/server_ekep_handshaker.cc	/^HandshakeMessageType ServerEkepHandshaker::GetExpectedMessageType() const {$/;"	f	class:asylo::ServerEkepHandshaker
GetFdFlags	./util/fd_utils.cc	/^StatusOr<int> GetFdFlags(int fd) {$/;"	f	namespace:asylo
GetGcmCryptor	./platform/crypto/gcmlib/gcm_cryptor.cc	/^GcmCryptor *GcmCryptorRegistry::GetGcmCryptor(size_t block_length,$/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptorRegistry
GetGcmCryptor	./platform/storage/secure/aead_handler.cc	/^GcmCryptor *AeadHandler::GetGcmCryptor(const FileControl &file_ctrl) const {$/;"	f	class:asylo::platform::storage::AeadHandler
GetHardwareKey	./identity/sgx/fake_enclave.cc	/^Status FakeEnclave::GetHardwareKey(const Keyrequest &request,$/;"	f	class:asylo::sgx::FakeEnclave
GetHardwareKey	./identity/sgx/fake_hardware_interface.cc	/^Status GetHardwareKey(const Keyrequest &request, HardwareKey *key) {$/;"	f	namespace:asylo::sgx
GetHardwareKey	./identity/sgx/hardware_interface.cc	/^Status GetHardwareKey(const Keyrequest &request, HardwareKey *key) {$/;"	f	namespace:asylo::sgx
GetHardwareRand64	./identity/sgx/fake_enclave.cc	/^Status FakeEnclave::GetHardwareRand64(uint64_t *value) {$/;"	f	class:asylo::sgx::FakeEnclave
GetHardwareRand64	./identity/sgx/fake_hardware_interface.cc	/^Status GetHardwareRand64(uint64_t *value) {$/;"	f	namespace:asylo::sgx
GetHardwareRand64	./identity/sgx/hardware_interface.cc	/^Status GetHardwareRand64(uint64_t *value) {$/;"	f	namespace:asylo::sgx
GetHardwareReport	./identity/sgx/fake_enclave.cc	/^Status FakeEnclave::GetHardwareReport(const Targetinfo &tinfo,$/;"	f	class:asylo::sgx::FakeEnclave
GetHardwareReport	./identity/sgx/fake_hardware_interface.cc	/^Status GetHardwareReport(const Targetinfo &tinfo, const Reportdata &reportdata,$/;"	f	namespace:asylo::sgx
GetHardwareReport	./identity/sgx/hardware_interface.cc	/^Status GetHardwareReport(const Targetinfo &tinfo, const Reportdata &reportdata,$/;"	f	namespace:asylo::sgx
GetHashAlgorithm	./crypto/sha256_hash.cc	/^HashAlgorithm Sha256Hash::GetHashAlgorithm() const {$/;"	f	class:asylo::Sha256Hash
GetHighestFileDescriptorUsed	./platform/posix/io/io_manager.cc	/^int IOManager::FileDescriptorTable::GetHighestFileDescriptorUsed() {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
GetHostCallHandlersMapping	./platform/host_call/untrusted/host_call_handlers_initializer.cc	/^GetHostCallHandlersMapping() {$/;"	f	namespace:asylo::host_call
GetHostConfig	./platform/core/enclave_manager.cc	/^HostConfig EnclaveManager::GetHostConfig() {$/;"	f	class:asylo::EnclaveManager
GetHostFileDescriptor	./platform/posix/io/io_context_epoll.cc	/^int IOContextEpoll::GetHostFileDescriptor() { return host_fd_; }$/;"	f	class:asylo::io::IOContextEpoll
GetHostFileDescriptor	./platform/posix/io/io_context_inotify.cc	/^int IOContextInotify::GetHostFileDescriptor() { return host_fd_; }$/;"	f	class:asylo::io::IOContextInotify
GetHostFileDescriptor	./platform/posix/io/io_manager.h	/^    virtual int GetHostFileDescriptor() { return -1; }$/;"	f	class:asylo::io::IOManager::IOContext
GetHostFileDescriptor	./platform/posix/io/native_paths.cc	/^int IOContextNative::GetHostFileDescriptor() { return host_fd_; }$/;"	f	class:asylo::io::IOContextNative
GetIdentity	./identity/sgx/fake_enclave.cc	/^StatusOr<CodeIdentity> FakeEnclave::GetIdentity() const {$/;"	f	class:asylo::sgx::FakeEnclave
GetIfBasedEnumBody	./platform/system_call/type_conversions/types_conversions_generator.cc	/^std::string GetIfBasedEnumBody(bool to_prefix, const std::string &enum_name,$/;"	f
GetInstance	./grpc/auth/core/ekep_error_space.cc	/^const asylo::error::ErrorSpace *EkepErrorSpace::GetInstance() {$/;"	f	class:asylo::EkepErrorSpace
GetInstance	./platform/core/enclave_manager.cc	/^EnclaveSignalDispatcher *EnclaveSignalDispatcher::GetInstance() {$/;"	f	class:asylo::EnclaveSignalDispatcher
GetInstance	./platform/crypto/gcmlib/gcm_cryptor.h	/^  static GcmCryptorRegistry &GetInstance() {$/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptorRegistry
GetInstance	./platform/posix/io/io_manager.h	/^  static IOManager &GetInstance() {$/;"	f	class:asylo::io::IOManager
GetInstance	./platform/posix/signal/signal_manager.cc	/^SignalManager *SignalManager::GetInstance() {$/;"	f	class:asylo::SignalManager
GetInstance	./platform/posix/threading/thread_manager.cc	/^ThreadManager *ThreadManager::GetInstance() {$/;"	f	class:asylo::ThreadManager
GetInstance	./platform/primitives/sgx/sgx_error_space.cc	/^ErrorSpace const *SgxErrorSpace::GetInstance() {$/;"	f	class:asylo::error::SgxErrorSpace
GetInstance	./platform/primitives/util/status_conversions_test.cc	/^    static ErrorSpace const *GetInstance() {$/;"	f	class:asylo::primitives::__anon339::StatusConversionsTest::NonGoogleErrorSpace
GetInstance	./platform/primitives/util/status_conversions_test.cc	/^    static ErrorSpace const *GetInstance() {$/;"	f	class:asylo::primitives::__anon85::StatusConversionsTest::NonGoogleErrorSpace
GetInstance	./platform/storage/secure/aead_handler.h	/^  static AeadHandler &GetInstance() {$/;"	f	class:asylo::platform::storage::AeadHandler
GetInstance	./util/error_space.h	/^  static ErrorSpace const *GetInstance() {$/;"	f	class:asylo::error::GoogleErrorSpace
GetInstance	./util/posix_error_space.cc	/^ErrorSpace const *PosixErrorSpace::GetInstance() {$/;"	f	class:asylo::error::PosixErrorSpace
GetInstance	./util/status_error_space.cc	/^ErrorSpace const *StatusErrorSpace::GetInstance() {$/;"	f	class:asylo::error::StatusErrorSpace
GetLaunchToken	./platform/primitives/sgx/untrusted_sgx.cc	/^void SgxEnclaveClient::GetLaunchToken(sgx_launch_token_t *token) const {$/;"	f	class:asylo::primitives::SgxEnclaveClient
GetLoaderFromClient	./platform/core/enclave_manager.cc	/^EnclaveLoader *EnclaveManager::GetLoaderFromClient(EnclaveClient *client) {$/;"	f	class:asylo::EnclaveManager
GetLoggerFuncInScope	./platform/posix/syslog_test.cc	/^std::function<void(int, const std::string &)> GetLoggerFuncInScope() {$/;"	f	namespace:asylo::__anon299
GetLoggerFuncInScope	./platform/posix/syslog_test.cc	/^std::function<void(int, const std::string &)> GetLoggerFuncInScope() {$/;"	f	namespace:asylo::__anon45
GetLoggerFuncOutScope	./platform/posix/syslog_test.cc	/^std::function<void(int, const std::string &)> GetLoggerFuncOutScope() {$/;"	f	namespace:asylo::__anon299
GetLoggerFuncOutScope	./platform/posix/syslog_test.cc	/^std::function<void(int, const std::string &)> GetLoggerFuncOutScope() {$/;"	f	namespace:asylo::__anon45
GetLogicalFileSize	./platform/storage/secure/aead_handler.cc	/^off_t AeadHandler::GetLogicalFileSize(int fd) {$/;"	f	class:asylo::platform::storage::AeadHandler
GetMatcherName	./identity/named_identity_expectation_matcher.cc	/^StatusOr<std::string> NamedIdentityExpectationMatcher::GetMatcherName($/;"	f	class:asylo::NamedIdentityExpectationMatcher
GetMinimalValidCodeIdentity	./identity/sgx/code_identity_util_test.cc	/^  CodeIdentity GetMinimalValidCodeIdentity(uint32_t miscselect,$/;"	f	class:asylo::sgx::__anon152::CodeIdentityUtilTest
GetMinimalValidCodeIdentity	./identity/sgx/code_identity_util_test.cc	/^  CodeIdentity GetMinimalValidCodeIdentity(uint32_t miscselect,$/;"	f	class:asylo::sgx::__anon406::CodeIdentityUtilTest
GetMiscselectBitName	./identity/sgx/secs_miscselect.cc	/^std::string GetMiscselectBitName(SecsMiscselectBit miscselect_bit) {$/;"	f	namespace:asylo::sgx::__anon153
GetMiscselectBitName	./identity/sgx/secs_miscselect.cc	/^std::string GetMiscselectBitName(SecsMiscselectBit miscselect_bit) {$/;"	f	namespace:asylo::sgx::__anon407
GetMustBeSetSecsAttributes	./identity/sgx/secs_attributes.cc	/^bool GetMustBeSetSecsAttributes(Attributes *attributes) {$/;"	f	namespace:asylo::sgx
GetMustBeSetSecsAttributes	./identity/sgx/secs_attributes.cc	/^bool GetMustBeSetSecsAttributes(SecsAttributeSet *attributes) {$/;"	f	namespace:asylo::sgx
GetName	./platform/core/enclave_manager.cc	/^const std::string EnclaveManager::GetName(const EnclaveClient *client) const {$/;"	f	class:asylo::EnclaveManager
GetNextFreeFileDescriptor	./platform/posix/io/io_manager.cc	/^int IOManager::FileDescriptorTable::GetNextFreeFileDescriptor(int startfd) {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
GetNullAssertionAuthorityTestConfig	./test/util/enclave_assertion_authority_configs.cc	/^EnclaveAssertionAuthorityConfig GetNullAssertionAuthorityTestConfig() {$/;"	f	namespace:asylo
GetOffsetTranslator	./platform/storage/secure/aead_handler.cc	/^const OffsetTranslator &AeadHandler::GetOffsetTranslator() const {$/;"	f	class:asylo::platform::storage::AeadHandler
GetOrBasedEnumBody	./platform/system_call/type_conversions/types_conversions_generator.cc	/^std::string GetOrBasedEnumBody(bool to_prefix, const std::string &enum_name,$/;"	f
GetPath	./platform/storage/secure/enclave_storage_secure_test.cc	/^  const std::string &GetPath() const { return path_; }$/;"	f	class:asylo::__anon100::EnclaveStorageSecureTest
GetPath	./platform/storage/secure/enclave_storage_secure_test.cc	/^  const std::string &GetPath() const { return path_; }$/;"	f	class:asylo::__anon354::EnclaveStorageSecureTest
GetPceInfo	./identity/sgx/dcap_intel_architectural_enclave_interface.cc	/^Status DcapIntelArchitecturalEnclaveInterface::GetPceInfo($/;"	f	class:asylo::sgx::DcapIntelArchitecturalEnclaveInterface
GetPceTargetinfo	./identity/sgx/dcap_intel_architectural_enclave_interface.cc	/^Status DcapIntelArchitecturalEnclaveInterface::GetPceTargetinfo($/;"	f	class:asylo::sgx::DcapIntelArchitecturalEnclaveInterface
GetPeerIdentities	./grpc/auth/core/ekep_handshaker.cc	/^EkepHandshaker::GetPeerIdentities() {$/;"	f	class:asylo::EkepHandshaker
GetPeerName	./platform/posix/io/io_manager.cc	/^int IOManager::GetPeerName(int sockfd, struct sockaddr *addr,$/;"	f	class:asylo::io::IOManager
GetPeerName	./platform/posix/io/io_manager.h	/^    virtual int GetPeerName(struct sockaddr *addr, socklen_t *addrlen) {$/;"	f	class:asylo::io::IOManager::IOContext
GetPeerName	./platform/posix/io/native_paths.cc	/^int IOContextNative::GetPeerName(struct sockaddr *addr, socklen_t *addrlen) {$/;"	f	class:asylo::io::IOContextNative
GetPeername	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::GetPeername(struct sockaddr *peeraddr_out,$/;"	f	class:asylo::SocketClient
GetPlaintextBuffer	./platform/storage/secure/aead_handler.cc	/^const uint8_t *GetPlaintextBuffer(size_t first_partial_block_bytes_count,$/;"	f	namespace:asylo::platform::storage::__anon353
GetPlaintextBuffer	./platform/storage/secure/aead_handler.cc	/^const uint8_t *GetPlaintextBuffer(size_t first_partial_block_bytes_count,$/;"	f	namespace:asylo::platform::storage::__anon99
GetPlaintextBuffer	./platform/storage/secure/aead_handler.cc	/^uint8_t *GetPlaintextBuffer(size_t first_partial_block_bytes_count,$/;"	f	namespace:asylo::platform::storage::__anon353
GetPlaintextBuffer	./platform/storage/secure/aead_handler.cc	/^uint8_t *GetPlaintextBuffer(size_t first_partial_block_bytes_count,$/;"	f	namespace:asylo::platform::storage::__anon99
GetPort	./platform/posix/sockets/socket_server.cc	/^int SocketServer::GetPort() {$/;"	f	class:asylo::SocketServer
GetPrimitivesClient	./platform/arch/sgx/untrusted/sgx_client.h	/^  std::shared_ptr<primitives::SgxEnclaveClient> GetPrimitivesClient() {$/;"	f	class:asylo::SgxClient
GetPrintableAttributeList	./identity/sgx/secs_attributes.cc	/^void GetPrintableAttributeList($/;"	f	namespace:asylo::sgx
GetPrintableAttributeList	./identity/sgx/secs_attributes.cc	/^void GetPrintableAttributeList(const Attributes &attributes,$/;"	f	namespace:asylo::sgx
GetPrintableAttributeList	./identity/sgx/secs_attributes.cc	/^void GetPrintableAttributeList(const SecsAttributeSet &attributes,$/;"	f	namespace:asylo::sgx
GetPrintableMiscselectList	./identity/sgx/secs_miscselect.cc	/^std::vector<std::string> GetPrintableMiscselectList($/;"	f	namespace:asylo::sgx
GetPrintableMiscselectList	./identity/sgx/secs_miscselect.cc	/^std::vector<std::string> GetPrintableMiscselectList(uint32_t miscselect) {$/;"	f	namespace:asylo::sgx
GetRLimit	./platform/posix/io/io_manager.cc	/^int IOManager::GetRLimit(int resource, struct rlimit *rlim) {$/;"	f	class:asylo::io::IOManager
GetRandomAttributes	./identity/sgx/code_identity_test_util.cc	/^Attributes GetRandomAttributes(int percent = 100) {$/;"	f	namespace:asylo::sgx::__anon142
GetRandomAttributes	./identity/sgx/code_identity_test_util.cc	/^Attributes GetRandomAttributes(int percent = 100) {$/;"	f	namespace:asylo::sgx::__anon396
GetRandomMatchSpec	./identity/sgx/code_identity_test_util.cc	/^CodeIdentityMatchSpec GetRandomMatchSpec(int percent = 100) {$/;"	f	namespace:asylo::sgx::__anon142
GetRandomMatchSpec	./identity/sgx/code_identity_test_util.cc	/^CodeIdentityMatchSpec GetRandomMatchSpec(int percent = 100) {$/;"	f	namespace:asylo::sgx::__anon396
GetRandomValidCodeIdentity	./identity/sgx/code_identity_test_util.cc	/^CodeIdentity GetRandomValidCodeIdentity() {$/;"	f	namespace:asylo::sgx
GetRandomValidCodeIdentityWithConstraints	./identity/sgx/code_identity_test_util.cc	/^CodeIdentity GetRandomValidCodeIdentityWithConstraints($/;"	f	namespace:asylo::sgx
GetRandomValidExpectation	./identity/sgx/code_identity_test_util.cc	/^CodeIdentityExpectation GetRandomValidExpectation() {$/;"	f	namespace:asylo::sgx
GetRandomValidMatchSpec	./identity/sgx/code_identity_test_util.cc	/^CodeIdentityMatchSpec GetRandomValidMatchSpec() {$/;"	f	namespace:asylo::sgx
GetRead	./platform/posix/sockets/socket_transmit.cc	/^int SocketTransmit::GetRead() const { return read_count_; }$/;"	f	class:asylo::SocketTransmit
GetReadBuffer	./platform/storage/secure/enclave_storage_secure_test.cc	/^  void *GetReadBuffer() { return reinterpret_cast<void *>(read_buffer_); }$/;"	f	class:asylo::__anon100::EnclaveStorageSecureTest
GetReadBuffer	./platform/storage/secure/enclave_storage_secure_test.cc	/^  void *GetReadBuffer() { return reinterpret_cast<void *>(read_buffer_); }$/;"	f	class:asylo::__anon354::EnclaveStorageSecureTest
GetRecordProtocol	./grpc/auth/core/ekep_handshaker.cc	/^StatusOr<RecordProtocol> EkepHandshaker::GetRecordProtocol() {$/;"	f	class:asylo::EkepHandshaker
GetRecordProtocol	./grpc/auth/enclave_auth_context.cc	/^RecordProtocol EnclaveAuthContext::GetRecordProtocol() const {$/;"	f	class:asylo::EnclaveAuthContext
GetRecordProtocolKey	./grpc/auth/core/ekep_handshaker.cc	/^StatusOr<CleansingVector<uint8_t>> EkepHandshaker::GetRecordProtocolKey() {$/;"	f	class:asylo::EkepHandshaker
GetReferenceableValue	./util/logging.h	/^inline char GetReferenceableValue(char t) { return t; }$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline const T &GetReferenceableValue(const T &t) {$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline int16_t GetReferenceableValue(int16_t t) { return t; }$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline int32_t GetReferenceableValue(int32_t t) { return t; }$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline int64_t GetReferenceableValue(int64_t t) { return t; }$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline int8_t GetReferenceableValue(int8_t t) { return t; }$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline uint16_t GetReferenceableValue(uint16_t t) { return t; }$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline uint32_t GetReferenceableValue(uint32_t t) { return t; }$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline uint64_t GetReferenceableValue(uint64_t t) { return t; }$/;"	f	namespace:asylo
GetReferenceableValue	./util/logging.h	/^inline uint8_t GetReferenceableValue(uint8_t t) { return t; }$/;"	f	namespace:asylo
GetReportKey	./identity/sgx/code_identity_util.cc	/^Status GetReportKey(const UnsafeBytes<kKeyrequestKeyidSize> &keyid,$/;"	f	namespace:asylo::sgx::__anon162
GetReportKey	./identity/sgx/code_identity_util.cc	/^Status GetReportKey(const UnsafeBytes<kKeyrequestKeyidSize> &keyid,$/;"	f	namespace:asylo::sgx::__anon416
GetReturnValue	./platform/posix/threading/thread_manager.cc	/^void *ThreadManager::Thread::GetReturnValue() const { return ret_; }$/;"	f	class:asylo::ThreadManager::Thread
GetRsaPublicKey	./crypto/rsa_oaep_encryption_key.cc	/^const RSA *RsaOaepEncryptionKey::GetRsaPublicKey() const {$/;"	f	class:asylo::RsaOaepEncryptionKey
GetSectionData	./util/elf_reader.cc	/^StatusOr<absl::Span<const uint8_t>> ElfReader::GetSectionData($/;"	f	class:asylo::ElfReader
GetSelfIdentity	./identity/sgx/fake_self_identity.cc	/^const SelfIdentity *GetSelfIdentity() {$/;"	f	namespace:asylo::sgx
GetSelfIdentity	./identity/sgx/self_identity.cc	/^const SelfIdentity *GetSelfIdentity() {$/;"	f	namespace:asylo::sgx
GetServerAddress	./grpc/util/enclave_server.h	/^  void GetServerAddress(EnclaveOutput *output) {$/;"	f	class:asylo::final
GetServerSocket	./platform/posix/sockets/domain_socket_test_driver.cc	/^  std::string GetServerSocket(std::string sub_path) {$/;"	f	class:asylo::__anon310::DomainSocketDriver
GetServerSocket	./platform/posix/sockets/domain_socket_test_driver.cc	/^  std::string GetServerSocket(std::string sub_path) {$/;"	f	class:asylo::__anon56::DomainSocketDriver
GetSgxLocalAssertionAuthorityTestConfig	./test/util/enclave_assertion_authority_configs.cc	/^EnclaveAssertionAuthorityConfig GetSgxLocalAssertionAuthorityTestConfig() {$/;"	f	namespace:asylo
GetSigAction	./platform/posix/signal/signal_manager.cc	/^const struct sigaction *SignalManager::GetSigAction(int signum) const {$/;"	f	class:asylo::SignalManager
GetSignalMask	./platform/posix/signal/signal_manager.cc	/^sigset_t SignalManager::GetSignalMask() const { return signal_mask_; }$/;"	f	class:asylo::SignalManager
GetSignalToBridgeSignalMap	./platform/common/bridge_functions.cc	/^const std::unordered_map<int, int> *GetSignalToBridgeSignalMap() {$/;"	f	namespace:asylo::__anon103
GetSignalToBridgeSignalMap	./platform/common/bridge_functions.cc	/^const std::unordered_map<int, int> *GetSignalToBridgeSignalMap() {$/;"	f	namespace:asylo::__anon357
GetSignatureScheme	./crypto/ecdsa_p256_sha256_signing_key.cc	/^SignatureScheme EcdsaP256Sha256SigningKey::GetSignatureScheme() const {$/;"	f	class:asylo::EcdsaP256Sha256SigningKey
GetSignatureScheme	./crypto/ecdsa_p256_sha256_signing_key.cc	/^SignatureScheme EcdsaP256Sha256VerifyingKey::GetSignatureScheme() const {$/;"	f	class:asylo::EcdsaP256Sha256VerifyingKey
GetSimTrampoline	./platform/primitives/sim/shared_sim.h	/^inline SimTrampoline *GetSimTrampoline() {$/;"	f	namespace:asylo::primitives
GetSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^bool GetSnapshotKey(CleansingVector<uint8_t> *key) {$/;"	f	namespace:asylo::__anon284
GetSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^bool GetSnapshotKey(CleansingVector<uint8_t> *key) {$/;"	f	namespace:asylo::__anon30
GetSockName	./platform/posix/io/io_manager.cc	/^int IOManager::GetSockName(int sockfd, struct sockaddr *addr,$/;"	f	class:asylo::io::IOManager
GetSockName	./platform/posix/io/io_manager.h	/^    virtual int GetSockName(struct sockaddr *addr, socklen_t *addrlen) {$/;"	f	class:asylo::io::IOManager::IOContext
GetSockName	./platform/posix/io/native_paths.cc	/^int IOContextNative::GetSockName(struct sockaddr *addr, socklen_t *addrlen) {$/;"	f	class:asylo::io::IOContextNative
GetSockOpt	./platform/posix/io/io_manager.cc	/^int IOManager::GetSockOpt(int sockfd, int level, int optname, void *optval,$/;"	f	class:asylo::io::IOManager
GetSockOpt	./platform/posix/io/io_manager.h	/^    virtual int GetSockOpt(int level, int optname, void *optval,$/;"	f	class:asylo::io::IOManager::IOContext
GetSockOpt	./platform/posix/io/native_paths.cc	/^int IOContextNative::GetSockOpt(int level, int optname, void *optval,$/;"	f	class:asylo::io::IOContextNative
GetStat	./platform/posix/io/random_devices.cc	/^int GetStat(struct stat *stat_buffer, bool is_urandom) {$/;"	f	namespace:asylo::__anon324
GetStat	./platform/posix/io/random_devices.cc	/^int GetStat(struct stat *stat_buffer, bool is_urandom) {$/;"	f	namespace:asylo::__anon70
GetState	./grpc/util/grpc_server_launcher.cc	/^GrpcServerLauncher::State GrpcServerLauncher::GetState() {$/;"	f	class:asylo::GrpcServerLauncher
GetState	./platform/core/trusted_application.cc	/^EnclaveState TrustedApplication::GetState() {$/;"	f	class:asylo::TrustedApplication
GetStringAtOffset	./util/elf_reader.cc	/^absl::optional<absl::string_view> GetStringAtOffset($/;"	f	namespace:asylo::__anon241
GetStringAtOffset	./util/elf_reader.cc	/^absl::optional<absl::string_view> GetStringAtOffset($/;"	f	namespace:asylo::__anon495
GetStructConversionsFuncBody	./platform/system_call/type_conversions/types_conversions_generator.cc	/^std::string GetStructConversionsFuncBody($/;"	f
GetStructPropertiesTable	./platform/system_call/type_conversions/types_conversions_generator.cc	/^absl::flat_hash_map<std::string, StructProperties> *GetStructPropertiesTable() {$/;"	f
GetSubspan	./util/elf_reader.cc	/^absl::optional<absl::Span<const uint8_t>> GetSubspan($/;"	f	namespace:asylo::__anon241
GetSubspan	./util/elf_reader.cc	/^absl::optional<absl::Span<const uint8_t>> GetSubspan($/;"	f	namespace:asylo::__anon495
GetSubspanAs	./util/elf_reader.cc	/^absl::optional<const T *> GetSubspanAs(absl::Span<const uint8_t> buffer,$/;"	f	namespace:asylo::__anon241
GetSubspanAs	./util/elf_reader.cc	/^absl::optional<const T *> GetSubspanAs(absl::Span<const uint8_t> buffer,$/;"	f	namespace:asylo::__anon495
GetSwitchedHeapNext	./platform/posix/memory/memory.cc	/^void *GetSwitchedHeapNext() { return switched_heap_next; }$/;"	f
GetSwitchedHeapRemaining	./platform/posix/memory/memory.cc	/^size_t GetSwitchedHeapRemaining() { return switched_heap_remaining; }$/;"	f
GetTestPathParams	./platform/posix/io/path_normalization_test.cc	/^PathParams GetTestPathParams() {$/;"	f	namespace:asylo::io::util::__anon328
GetTestPathParams	./platform/posix/io/path_normalization_test.cc	/^PathParams GetTestPathParams() {$/;"	f	namespace:asylo::io::util::__anon74
GetTestTempDirEnvironment	./test/util/test_flags.cc	/^std::string GetTestTempDirEnvironment() {$/;"	f	namespace:asylo::__anon219
GetTestTempDirEnvironment	./test/util/test_flags.cc	/^std::string GetTestTempDirEnvironment() {$/;"	f	namespace:asylo::__anon473
GetThread	./platform/posix/threading/thread_manager.cc	/^std::shared_ptr<ThreadManager::Thread> ThreadManager::GetThread($/;"	f	class:asylo::ThreadManager
GetThreadId	./platform/posix/threading/thread_manager.cc	/^pthread_t ThreadManager::Thread::GetThreadId() {$/;"	f	class:asylo::ThreadManager::Thread
GetThreadLayoutForSnapshot	./platform/arch/sgx/trusted/fork.cc	/^const struct ThreadMemoryLayout GetThreadLayoutForSnapshot() {$/;"	f	namespace:asylo::__anon284
GetThreadLayoutForSnapshot	./platform/arch/sgx/trusted/fork.cc	/^const struct ThreadMemoryLayout GetThreadLayoutForSnapshot() {$/;"	f	namespace:asylo::__anon30
GetTranscriptHash	./grpc/auth/core/ekep_handshaker.cc	/^Status EkepHandshaker::GetTranscriptHash(std::string *transcript_hash) {$/;"	f	class:asylo::EkepHandshaker
GetTranslation	./examples/grpc_server/translator_server_impl.cc	/^::grpc::Status TranslatorServerImpl::GetTranslation($/;"	f	class:examples::grpc_server::TranslatorServerImpl
GetUnblockedSet	./platform/posix/signal/signal_manager.cc	/^sigset_t SignalManager::GetUnblockedSet(const sigset_t &set) {$/;"	f	class:asylo::SignalManager
GetUnusedBytes	./grpc/auth/core/ekep_handshaker.cc	/^StatusOr<std::string> EkepHandshaker::GetUnusedBytes() {$/;"	f	class:asylo::EkepHandshaker
GetUnusedBytes	./grpc/auth/core/enclave_transport_security.cc	/^  tsi_result GetUnusedBytes(const unsigned char **bytes, size_t *bytes_size) {$/;"	f	class:asylo::TsiEnclaveHandshakerResult
GetValue	./platform/common/static_map.h	/^  static value_iterator GetValue(const std::string &key) {$/;"	f	class:asylo::StaticMap
GetVerifyingKey	./crypto/ecdsa_p256_sha256_signing_key.cc	/^EcdsaP256Sha256SigningKey::GetVerifyingKey() const {$/;"	f	class:asylo::EcdsaP256Sha256SigningKey
GetWrite	./platform/posix/sockets/socket_transmit.cc	/^int SocketTransmit::GetWrite() const { return write_count_; }$/;"	f	class:asylo::SocketTransmit
GetWriteBuffer	./platform/storage/secure/enclave_storage_secure_test.cc	/^  const void *GetWriteBuffer() const {$/;"	f	class:asylo::__anon100::EnclaveStorageSecureTest
GetWriteBuffer	./platform/storage/secure/enclave_storage_secure_test.cc	/^  const void *GetWriteBuffer() const {$/;"	f	class:asylo::__anon354::EnclaveStorageSecureTest
GetZeroBuffer	./platform/storage/secure/enclave_storage_secure_test.cc	/^  const void *GetZeroBuffer() const {$/;"	f	class:asylo::__anon100::EnclaveStorageSecureTest
GetZeroBuffer	./platform/storage/secure/enclave_storage_secure_test.cc	/^  const void *GetZeroBuffer() const {$/;"	f	class:asylo::__anon354::EnclaveStorageSecureTest
GoogleErrorSpace	./util/error_space.cc	/^GoogleErrorSpace::GoogleErrorSpace()$/;"	f	class:asylo::error::GoogleErrorSpace
GoogleErrorSpace	./util/error_space.h	/^class GoogleErrorSpace$/;"	c	namespace:asylo::error
GrpcServerEnclave	./examples/grpc_server/grpc_server_enclave.cc	/^  GrpcServerEnclave() : service_(&shutdown_requested_) {}$/;"	f	class:examples::grpc_server::final
GrpcServerLauncher	./grpc/util/grpc_server_launcher.h	/^  GrpcServerLauncher(std::string name)$/;"	f	class:asylo::GrpcServerLauncher
GrpcServerLauncher	./grpc/util/grpc_server_launcher.h	/^class GrpcServerLauncher {$/;"	c	namespace:asylo
GrpcServerLauncherTest	./grpc/util/grpc_server_launcher_test.cc	/^  GrpcServerLauncherTest()$/;"	f	class:asylo::__anon263::GrpcServerLauncherTest
GrpcServerLauncherTest	./grpc/util/grpc_server_launcher_test.cc	/^  GrpcServerLauncherTest()$/;"	f	class:asylo::__anon517::GrpcServerLauncherTest
GrpcServerLauncherTest	./grpc/util/grpc_server_launcher_test.cc	/^class GrpcServerLauncherTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon263	file:
GrpcServerLauncherTest	./grpc/util/grpc_server_launcher_test.cc	/^class GrpcServerLauncherTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon517	file:
GrpcServerTest	./examples/grpc_server/grpc_server_test.cc	/^class GrpcServerTest : public ::testing::Test {$/;"	c	namespace:examples::grpc_server::__anon244	file:
GrpcServerTest	./examples/grpc_server/grpc_server_test.cc	/^class GrpcServerTest : public ::testing::Test {$/;"	c	namespace:examples::grpc_server::__anon498	file:
HFIXEDSZ	./platform/posix/include/arpa/nameser.h	206;"	d
HFIXEDSZ	./platform/system/include/arpa/nameser_compat.h	22;"	d
HI16_ZMM	./identity/sgx/secs_attributes.h	/^  HI16_ZMM = 64 + 7,   \/\/ Determines the behavior of certain AVX capabilities.$/;"	m	class:asylo::sgx::SecsAttributeBit
HandleAbortMessage	./grpc/auth/core/client_ekep_handshaker.cc	/^void ClientEkepHandshaker::HandleAbortMessage(const Abort *abort_message) {$/;"	f	class:asylo::ClientEkepHandshaker
HandleAbortMessage	./grpc/auth/core/server_ekep_handshaker.cc	/^void ServerEkepHandshaker::HandleAbortMessage(const Abort *abort_message) {$/;"	f	class:asylo::ServerEkepHandshaker
HandleClientFinish	./grpc/auth/core/server_ekep_handshaker.cc	/^Status ServerEkepHandshaker::HandleClientFinish($/;"	f	class:asylo::ServerEkepHandshaker
HandleClientId	./grpc/auth/core/server_ekep_handshaker.cc	/^Status ServerEkepHandshaker::HandleClientId(const google::protobuf::Message &message,$/;"	f	class:asylo::ServerEkepHandshaker
HandleClientPrecommit	./grpc/auth/core/server_ekep_handshaker.cc	/^Status ServerEkepHandshaker::HandleClientPrecommit($/;"	f	class:asylo::ServerEkepHandshaker
HandleHandshakeMessage	./grpc/auth/core/client_ekep_handshaker.cc	/^ClientEkepHandshaker::Result ClientEkepHandshaker::HandleHandshakeMessage($/;"	f	class:asylo::ClientEkepHandshaker
HandleHandshakeMessage	./grpc/auth/core/server_ekep_handshaker.cc	/^ServerEkepHandshaker::Result ServerEkepHandshaker::HandleHandshakeMessage($/;"	f	class:asylo::ServerEkepHandshaker
HandleServerFinish	./grpc/auth/core/client_ekep_handshaker.cc	/^Status ClientEkepHandshaker::HandleServerFinish(const google::protobuf::Message &message,$/;"	f	class:asylo::ClientEkepHandshaker
HandleServerId	./grpc/auth/core/client_ekep_handshaker.cc	/^Status ClientEkepHandshaker::HandleServerId(const google::protobuf::Message &message) {$/;"	f	class:asylo::ClientEkepHandshaker
HandleServerPrecommit	./grpc/auth/core/client_ekep_handshaker.cc	/^Status ClientEkepHandshaker::HandleServerPrecommit($/;"	f	class:asylo::ClientEkepHandshaker
HandleSignal	./platform/posix/signal/signal_manager.cc	/^Status SignalManager::HandleSignal(int signum, siginfo_t *info,$/;"	f	class:asylo::SignalManager
HandleSignal	./test/misc/raise_signal_test.cc	/^void HandleSignal(int signum) {$/;"	f	namespace:asylo::__anon199
HandleSignal	./test/misc/raise_signal_test.cc	/^void HandleSignal(int signum) {$/;"	f	namespace:asylo::__anon453
HandleSignalInSim	./platform/arch/sgx/untrusted/ocalls.cc	/^void HandleSignalInSim(int signum, siginfo_t *info, void *ucontext) {$/;"	f	namespace:__anon286
HandleSignalInSim	./platform/arch/sgx/untrusted/ocalls.cc	/^void HandleSignalInSim(int signum, siginfo_t *info, void *ucontext) {$/;"	f	namespace:__anon32
HandleSignalWithHandler	./test/misc/active_enclave_signal_test_enclave.cc	/^void HandleSignalWithHandler(int signum) {$/;"	f	namespace:asylo
HandleSignalWithHandler	./test/misc/inactive_enclave_signal_test_enclave.cc	/^void HandleSignalWithHandler(int signum) {$/;"	f	namespace:asylo
HandleSignalWithSigAction	./test/misc/active_enclave_signal_test_enclave.cc	/^void HandleSignalWithSigAction(int signum, siginfo_t *info, void *ucontext) {$/;"	f	namespace:asylo
HandleSignalWithSigAction	./test/misc/inactive_enclave_signal_test_enclave.cc	/^void HandleSignalWithSigAction(int signum, siginfo_t *info, void *ucontext) {$/;"	f	namespace:asylo
HandleSignalWithSigActionMask	./test/misc/active_enclave_signal_test_enclave.cc	/^void HandleSignalWithSigActionMask(int signum) {$/;"	f	namespace:asylo
HandlerForPath	./platform/posix/io/io_manager.cc	/^IOManager::VirtualPathHandler *IOManager::HandlerForPath($/;"	f	class:asylo::io::IOManager
HandshakeState	./grpc/auth/core/ekep_handshaker.h	/^  enum class HandshakeState {$/;"	c	class:asylo::EkepHandshaker
HasEnclaveIdentity	./grpc/auth/enclave_auth_context.cc	/^bool EnclaveAuthContext::HasEnclaveIdentity($/;"	f	class:asylo::EnclaveAuthContext
Hash	./grpc/auth/core/transcript.cc	/^bool Transcript::Hash(std::string *digest) {$/;"	f	class:asylo::Transcript
Hash	./platform/core/shared_name.h	/^  struct Hash : std::unary_function<SharedName, size_t> {$/;"	s	class:asylo::SharedName
HashCombine	./platform/common/hash_combine.h	/^size_t HashCombine(size_t seed, const T &value) {$/;"	f	namespace:asylo
HashInterface	./crypto/hash_interface.h	/^class HashInterface {$/;"	c	namespace:asylo
HeapAllocatedObject	./util/statusor_test.cc	/^  HeapAllocatedObject() {$/;"	f	struct:asylo::__anon231::HeapAllocatedObject
HeapAllocatedObject	./util/statusor_test.cc	/^  HeapAllocatedObject() {$/;"	f	struct:asylo::__anon485::HeapAllocatedObject
HeapAllocatedObject	./util/statusor_test.cc	/^  HeapAllocatedObject(HeapAllocatedObject &&other) {$/;"	f	struct:asylo::__anon231::HeapAllocatedObject
HeapAllocatedObject	./util/statusor_test.cc	/^  HeapAllocatedObject(HeapAllocatedObject &&other) {$/;"	f	struct:asylo::__anon485::HeapAllocatedObject
HeapAllocatedObject	./util/statusor_test.cc	/^  HeapAllocatedObject(const HeapAllocatedObject &other) {$/;"	f	struct:asylo::__anon231::HeapAllocatedObject
HeapAllocatedObject	./util/statusor_test.cc	/^  HeapAllocatedObject(const HeapAllocatedObject &other) {$/;"	f	struct:asylo::__anon485::HeapAllocatedObject
HeapAllocatedObject	./util/statusor_test.cc	/^struct HeapAllocatedObject {$/;"	s	namespace:asylo::__anon231	file:
HeapAllocatedObject	./util/statusor_test.cc	/^struct HeapAllocatedObject {$/;"	s	namespace:asylo::__anon485	file:
HeapAllocatedObjectCtor	./util/statusor_test.cc	/^struct HeapAllocatedObjectCtor {$/;"	s	namespace:asylo::__anon231	file:
HeapAllocatedObjectCtor	./util/statusor_test.cc	/^struct HeapAllocatedObjectCtor {$/;"	s	namespace:asylo::__anon485	file:
Hello	./platform/primitives/examples/hello_enclave.cc	/^PrimitiveStatus Hello(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon344
Hello	./platform/primitives/examples/hello_enclave.cc	/^PrimitiveStatus Hello(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon90
Hello	./test/grpc/messenger_client_impl.h	/^  StatusOr<std::string> Hello(const std::string &name) {$/;"	f	class:asylo::test::MessengerClient
HelloApplication	./examples/hello_world/hello_enclave.cc	/^		HelloApplication() : visitor_count_(0) {}$/;"	f	class:HelloApplication
HelloApplication	./examples/hello_world/hello_enclave.cc	/^class HelloApplication : public asylo::TrustedApplication {$/;"	c	file:
HelloTest	./platform/primitives/examples/hello_test.cc	/^class HelloTest : public ::testing::Test {$/;"	c	namespace:asylo::primitives::test	file:
HelloWorld	./test/misc/hello_world.cc	/^class HelloWorld : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
HelloWorldTest	./test/misc/hello_world_test.cc	/^class HelloWorldTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon209	file:
HelloWorldTest	./test/misc/hello_world_test.cc	/^class HelloWorldTest : public EnclaveTest {};$/;"	c	namespace:asylo::__anon463	file:
HexDumpObjectPair	./identity/sgx/fake_hardware_interface_test.cc	/^std::string HexDumpObjectPair(const char *obj1_name, T1 obj1,$/;"	f	namespace:asylo::sgx::__anon148
HexDumpObjectPair	./identity/sgx/fake_hardware_interface_test.cc	/^std::string HexDumpObjectPair(const char *obj1_name, T1 obj1,$/;"	f	namespace:asylo::sgx::__anon402
Hmac	./grpc/auth/core/ekep_crypto.cc	/^Status Hmac(const HandshakeCipher &ciphersuite, ByteContainerView key,$/;"	f	namespace:asylo::__anon262
Hmac	./grpc/auth/core/ekep_crypto.cc	/^Status Hmac(const HandshakeCipher &ciphersuite, ByteContainerView key,$/;"	f	namespace:asylo::__anon516
HostCallTest	./platform/host_call/test/host_call_test.cc	/^class HostCallTest : public ::testing::Test {$/;"	c	namespace:asylo::host_call::__anon290	file:
HostCallTest	./platform/host_call/test/host_call_test.cc	/^class HostCallTest : public ::testing::Test {$/;"	c	namespace:asylo::host_call::__anon36	file:
HostToBe	./platform/posix/endian_test.cc	/^uint16_t HostToBe(uint16_t value) { return htobe16(value); }$/;"	f	namespace:asylo::__anon298
HostToBe	./platform/posix/endian_test.cc	/^uint16_t HostToBe(uint16_t value) { return htobe16(value); }$/;"	f	namespace:asylo::__anon44
HostToBe	./platform/posix/endian_test.cc	/^uint32_t HostToBe(uint32_t value) { return htobe32(value); }$/;"	f	namespace:asylo::__anon298
HostToBe	./platform/posix/endian_test.cc	/^uint32_t HostToBe(uint32_t value) { return htobe32(value); }$/;"	f	namespace:asylo::__anon44
HostToBe	./platform/posix/endian_test.cc	/^uint64_t HostToBe(uint64_t value) { return htobe64(value); }$/;"	f	namespace:asylo::__anon298
HostToBe	./platform/posix/endian_test.cc	/^uint64_t HostToBe(uint64_t value) { return htobe64(value); }$/;"	f	namespace:asylo::__anon44
HostToDiff	./platform/posix/endian_test.cc	/^  UIntT HostToDiff(UIntT value) {$/;"	f	class:asylo::__anon298::EndianTest
HostToDiff	./platform/posix/endian_test.cc	/^  UIntT HostToDiff(UIntT value) {$/;"	f	class:asylo::__anon44::EndianTest
HostToLe	./platform/posix/endian_test.cc	/^uint16_t HostToLe(uint16_t value) { return htole16(value); }$/;"	f	namespace:asylo::__anon298
HostToLe	./platform/posix/endian_test.cc	/^uint16_t HostToLe(uint16_t value) { return htole16(value); }$/;"	f	namespace:asylo::__anon44
HostToLe	./platform/posix/endian_test.cc	/^uint32_t HostToLe(uint32_t value) { return htole32(value); }$/;"	f	namespace:asylo::__anon298
HostToLe	./platform/posix/endian_test.cc	/^uint32_t HostToLe(uint32_t value) { return htole32(value); }$/;"	f	namespace:asylo::__anon44
HostToLe	./platform/posix/endian_test.cc	/^uint64_t HostToLe(uint64_t value) { return htole64(value); }$/;"	f	namespace:asylo::__anon298
HostToLe	./platform/posix/endian_test.cc	/^uint64_t HostToLe(uint64_t value) { return htole64(value); }$/;"	f	namespace:asylo::__anon44
HostToSame	./platform/posix/endian_test.cc	/^  UIntT HostToSame(UIntT value) {$/;"	f	class:asylo::__anon298::EndianTest
HostToSame	./platform/posix/endian_test.cc	/^  UIntT HostToSame(UIntT value) {$/;"	f	class:asylo::__anon44::EndianTest
ICANON	./platform/posix/include/sys/termios.h	59;"	d
ICRNL	./platform/posix/include/sys/termios.h	49;"	d
IEXTEN	./platform/posix/include/sys/termios.h	60;"	d
IFF_ALLMULTI	./platform/posix/include/net/if.h	33;"	d
IFF_BROADCAST	./platform/posix/include/net/if.h	25;"	d
IFF_DEBUG	./platform/posix/include/net/if.h	26;"	d
IFF_LOOPBACK	./platform/posix/include/net/if.h	27;"	d
IFF_MULTICAST	./platform/posix/include/net/if.h	34;"	d
IFF_NOARP	./platform/posix/include/net/if.h	31;"	d
IFF_NOTRAILERS	./platform/posix/include/net/if.h	29;"	d
IFF_POINTOPOINT	./platform/posix/include/net/if.h	28;"	d
IFF_PROMISC	./platform/posix/include/net/if.h	32;"	d
IFF_RUNNING	./platform/posix/include/net/if.h	30;"	d
IFF_UP	./platform/posix/include/net/if.h	24;"	d
IN6ADDRSZ	./platform/posix/include/arpa/nameser.h	213;"	d
IN6ADDR_ANY_INIT	./platform/posix/include/netinet/in.h	69;"	d
IN6ADDR_LOOPBACK_INIT	./platform/posix/include/netinet/in.h	73;"	d
IN6_IS_ADDR_V4MAPPED	./platform/posix/include/netinet/in.h	78;"	d
INADDRSZ	./platform/posix/include/arpa/nameser.h	212;"	d
INADDR_ANY	./platform/posix/include/netinet/in.h	141;"	d
INADDR_LOOPBACK	./platform/posix/include/netinet/in.h	146;"	d
INADDR_NONE	./platform/posix/include/netinet/in.h	142;"	d
INDIR_MASK	./platform/posix/include/arpa/nameser.h	214;"	d
INDIR_MASK	./platform/system/include/arpa/nameser_compat.h	49;"	d
INET6_ADDRSTRLEN	./platform/posix/include/netinet/in.h	113;"	d
INET_ADDRSTRLEN	./platform/posix/include/netinet/in.h	112;"	d
INFO	./util/logging.h	/^enum LogSeverity { INFO, WARNING, ERROR, FATAL, QFATAL };$/;"	e	enum:LogSeverity
INIT	./identity/sgx/secs_attributes.h	/^  INIT = 0,       \/\/ Indicates whether the enclave has been$/;"	m	class:asylo::sgx::SecsAttributeBit
INITTOKENKEY	./identity/sgx/secs_attributes.h	/^  INITTOKENKEY = 5,  \/\/ Indicates whether the enclave has access to the$/;"	m	class:asylo::sgx::SecsAttributeBit
INPCK	./platform/posix/include/sys/termios.h	47;"	d
INT16SZ	./platform/posix/include/arpa/nameser.h	210;"	d
INT32SZ	./platform/posix/include/arpa/nameser.h	209;"	d
INT8SZ	./platform/posix/include/arpa/nameser.h	211;"	d
IN_ACCESS	./platform/posix/include/sys/inotify.h	33;"	d
IN_ALL_EVENTS	./platform/posix/include/sys/inotify.h	47;"	d
IN_ATTRIB	./platform/posix/include/sys/inotify.h	34;"	d
IN_CLASSA	./platform/posix/include/netinet/in.h	133;"	d
IN_CLASSA_NET	./platform/posix/include/netinet/in.h	134;"	d
IN_CLASSB	./platform/posix/include/netinet/in.h	135;"	d
IN_CLASSB_NET	./platform/posix/include/netinet/in.h	136;"	d
IN_CLASSC	./platform/posix/include/netinet/in.h	137;"	d
IN_CLASSC_NET	./platform/posix/include/netinet/in.h	138;"	d
IN_CLASSD	./platform/posix/include/netinet/in.h	139;"	d
IN_CLOEXEC	./platform/posix/include/sys/inotify.h	30;"	d
IN_CLOSE	./platform/posix/include/sys/inotify.h	52;"	d
IN_CLOSE_NOWRITE	./platform/posix/include/sys/inotify.h	36;"	d
IN_CLOSE_WRITE	./platform/posix/include/sys/inotify.h	35;"	d
IN_CREATE	./platform/posix/include/sys/inotify.h	37;"	d
IN_DELETE	./platform/posix/include/sys/inotify.h	38;"	d
IN_DELETE_SELF	./platform/posix/include/sys/inotify.h	39;"	d
IN_DONT_FOLLOW	./platform/posix/include/sys/inotify.h	55;"	d
IN_EXCL_UNLINK	./platform/posix/include/sys/inotify.h	56;"	d
IN_IGNORED	./platform/posix/include/sys/inotify.h	62;"	d
IN_ISDIR	./platform/posix/include/sys/inotify.h	63;"	d
IN_MASK_ADD	./platform/posix/include/sys/inotify.h	57;"	d
IN_MODIFY	./platform/posix/include/sys/inotify.h	40;"	d
IN_MOVE	./platform/posix/include/sys/inotify.h	51;"	d
IN_MOVED_FROM	./platform/posix/include/sys/inotify.h	42;"	d
IN_MOVED_TO	./platform/posix/include/sys/inotify.h	43;"	d
IN_MOVE_SELF	./platform/posix/include/sys/inotify.h	41;"	d
IN_NONBLOCK	./platform/posix/include/sys/inotify.h	29;"	d
IN_ONESHOT	./platform/posix/include/sys/inotify.h	58;"	d
IN_ONLYDIR	./platform/posix/include/sys/inotify.h	59;"	d
IN_OPEN	./platform/posix/include/sys/inotify.h	44;"	d
IN_PROGRESS	./grpc/auth/core/ekep_handshaker.h	/^    IN_PROGRESS = 1,$/;"	m	class:asylo::EkepHandshaker::HandshakeState
IN_PROGRESS	./grpc/auth/core/ekep_handshaker.h	/^    IN_PROGRESS = 1,$/;"	m	class:asylo::EkepHandshaker::Result
IN_Q_OVERFLOW	./platform/posix/include/sys/inotify.h	64;"	d
IN_UNMOUNT	./platform/posix/include/sys/inotify.h	65;"	d
IOContext	./platform/posix/io/io_manager.h	/^  class IOContext {$/;"	c	class:asylo::io::IOManager
IOContextEpoll	./platform/posix/io/io_context_epoll.h	/^  explicit IOContextEpoll(int host_fd) : host_fd_(host_fd) {}$/;"	f	class:asylo::io::IOContextEpoll
IOContextEpoll	./platform/posix/io/io_context_epoll.h	/^class IOContextEpoll : public IOManager::IOContext {$/;"	c	namespace:asylo::io
IOContextEventFd	./platform/posix/io/io_context_eventfd.h	/^  explicit IOContextEventFd(unsigned int initval, int flags)$/;"	f	class:asylo::io::IOContextEventFd
IOContextEventFd	./platform/posix/io/io_context_eventfd.h	/^class IOContextEventFd : public IOManager::IOContext {$/;"	c	namespace:asylo::io
IOContextInotify	./platform/posix/io/io_context_inotify.h	/^  explicit IOContextInotify(int host_fd) : host_fd_(host_fd) {}$/;"	f	class:asylo::io::IOContextInotify
IOContextInotify	./platform/posix/io/io_context_inotify.h	/^class IOContextInotify : public IOManager::IOContext {$/;"	c	namespace:asylo::io
IOContextNative	./platform/posix/io/native_paths.h	/^  explicit IOContextNative(int host_fd) : host_fd_(host_fd) {}$/;"	f	class:asylo::io::IOContextNative
IOContextNative	./platform/posix/io/native_paths.h	/^class IOContextNative : public IOManager::IOContext {$/;"	c	namespace:asylo::io
IOContextSecure	./platform/posix/io/secure_paths.h	/^  explicit IOContextSecure(int host_fd) : host_fd_(host_fd) {}$/;"	f	class:asylo::io::IOContextSecure
IOContextSecure	./platform/posix/io/secure_paths.h	/^class IOContextSecure : public IOManager::IOContext {$/;"	c	namespace:asylo::io
IOManager	./platform/posix/io/io_manager.h	/^  IOManager() {}$/;"	f	class:asylo::io::IOManager
IOManager	./platform/posix/io/io_manager.h	/^class IOManager {$/;"	c	namespace:asylo::io
IPPROTO_AH	./platform/posix/include/netinet/in.h	98;"	d
IPPROTO_BEETPH	./platform/posix/include/netinet/in.h	101;"	d
IPPROTO_COMP	./platform/posix/include/netinet/in.h	104;"	d
IPPROTO_DCCP	./platform/posix/include/netinet/in.h	93;"	d
IPPROTO_EGP	./platform/posix/include/netinet/in.h	88;"	d
IPPROTO_ENCAP	./platform/posix/include/netinet/in.h	102;"	d
IPPROTO_ESP	./platform/posix/include/netinet/in.h	97;"	d
IPPROTO_GRE	./platform/posix/include/netinet/in.h	96;"	d
IPPROTO_ICMP	./platform/posix/include/netinet/in.h	84;"	d
IPPROTO_ICMPV6	./platform/posix/include/netinet/in.h	99;"	d
IPPROTO_IDP	./platform/posix/include/netinet/in.h	91;"	d
IPPROTO_IGMP	./platform/posix/include/netinet/in.h	85;"	d
IPPROTO_IP	./platform/posix/include/netinet/in.h	83;"	d
IPPROTO_IPIP	./platform/posix/include/netinet/in.h	86;"	d
IPPROTO_IPV6	./platform/posix/include/netinet/in.h	94;"	d
IPPROTO_MAX	./platform/posix/include/netinet/in.h	108;"	d
IPPROTO_MTP	./platform/posix/include/netinet/in.h	100;"	d
IPPROTO_PIM	./platform/posix/include/netinet/in.h	103;"	d
IPPROTO_PUP	./platform/posix/include/netinet/in.h	89;"	d
IPPROTO_RAW	./platform/posix/include/netinet/in.h	107;"	d
IPPROTO_RSVP	./platform/posix/include/netinet/in.h	95;"	d
IPPROTO_SCTP	./platform/posix/include/netinet/in.h	105;"	d
IPPROTO_TCP	./platform/posix/include/netinet/in.h	87;"	d
IPPROTO_TP	./platform/posix/include/netinet/in.h	92;"	d
IPPROTO_UDP	./platform/posix/include/netinet/in.h	90;"	d
IPPROTO_UDPLITE	./platform/posix/include/netinet/in.h	106;"	d
IPV6_DONTFRAG	./platform/posix/include/netinet/in.h	201;"	d
IPV6_DSTOPTS	./platform/posix/include/netinet/in.h	198;"	d
IPV6_HOPLIMIT	./platform/posix/include/netinet/in.h	191;"	d
IPV6_HOPOPTS	./platform/posix/include/netinet/in.h	193;"	d
IPV6_PATHMTU	./platform/posix/include/netinet/in.h	200;"	d
IPV6_PKTINFO	./platform/posix/include/netinet/in.h	189;"	d
IPV6_RECVDSTOPTS	./platform/posix/include/netinet/in.h	197;"	d
IPV6_RECVHOPLIMIT	./platform/posix/include/netinet/in.h	190;"	d
IPV6_RECVHOPOPTS	./platform/posix/include/netinet/in.h	192;"	d
IPV6_RECVPATHMTU	./platform/posix/include/netinet/in.h	199;"	d
IPV6_RECVPKTINFO	./platform/posix/include/netinet/in.h	188;"	d
IPV6_RECVRTHDR	./platform/posix/include/netinet/in.h	195;"	d
IPV6_RTHDR	./platform/posix/include/netinet/in.h	196;"	d
IPV6_RTHDRDSTOPTS	./platform/posix/include/netinet/in.h	194;"	d
IPV6_V6ONLY	./platform/posix/include/netinet/in.h	110;"	d
IP_ADD_MEMBERSHIP	./platform/posix/include/netinet/in.h	171;"	d
IP_ADD_SOURCE_MEMBERSHIP	./platform/posix/include/netinet/in.h	175;"	d
IP_BLOCK_SOURCE	./platform/posix/include/netinet/in.h	174;"	d
IP_DROP_MEMBERSHIP	./platform/posix/include/netinet/in.h	172;"	d
IP_DROP_SOURCE_MEMBERSHIP	./platform/posix/include/netinet/in.h	176;"	d
IP_FREEBIND	./platform/posix/include/netinet/in.h	162;"	d
IP_HDRINCL	./platform/posix/include/netinet/in.h	151;"	d
IP_IPSEC_POLICY	./platform/posix/include/netinet/in.h	163;"	d
IP_MSFILTER	./platform/posix/include/netinet/in.h	177;"	d
IP_MTU	./platform/posix/include/netinet/in.h	161;"	d
IP_MTU_DISCOVER	./platform/posix/include/netinet/in.h	157;"	d
IP_MULTICAST_ALL	./platform/posix/include/netinet/in.h	185;"	d
IP_MULTICAST_IF	./platform/posix/include/netinet/in.h	168;"	d
IP_MULTICAST_LOOP	./platform/posix/include/netinet/in.h	170;"	d
IP_MULTICAST_TTL	./platform/posix/include/netinet/in.h	169;"	d
IP_OPTIONS	./platform/posix/include/netinet/in.h	152;"	d
IP_PASSSEC	./platform/posix/include/netinet/in.h	165;"	d
IP_PKTINFO	./platform/posix/include/netinet/in.h	154;"	d
IP_PKTOPTIONS	./platform/posix/include/netinet/in.h	155;"	d
IP_PMTUDISC	./platform/posix/include/netinet/in.h	156;"	d
IP_RECVERR	./platform/posix/include/netinet/in.h	158;"	d
IP_RECVTOS	./platform/posix/include/netinet/in.h	160;"	d
IP_RECVTTL	./platform/posix/include/netinet/in.h	159;"	d
IP_ROUTER_ALERT	./platform/posix/include/netinet/in.h	153;"	d
IP_TOS	./platform/posix/include/netinet/in.h	149;"	d
IP_TRANSPARENT	./platform/posix/include/netinet/in.h	166;"	d
IP_TTL	./platform/posix/include/netinet/in.h	150;"	d
IP_UNBLOCK_SOURCE	./platform/posix/include/netinet/in.h	173;"	d
IP_UNICAST_IF	./platform/posix/include/netinet/in.h	186;"	d
IP_XFRM_POLICY	./platform/posix/include/netinet/in.h	164;"	d
IQUERY	./platform/posix/include/arpa/nameser.h	218;"	d
ISIG	./platform/posix/include/sys/termios.h	58;"	d
ISTRIP	./platform/posix/include/sys/termios.h	48;"	d
ITER_BOUND	./platform/common/bridge_functions_test.cc	/^const int ITER_BOUND = 6000;$/;"	m	namespace:asylo::__anon113	file:
ITER_BOUND	./platform/common/bridge_functions_test.cc	/^const int ITER_BOUND = 6000;$/;"	m	namespace:asylo::__anon367	file:
IXON	./platform/posix/include/sys/termios.h	50;"	d
IdentityExpectationMatcher	./identity/identity_expectation_matcher.h	/^class IdentityExpectationMatcher {$/;"	c	namespace:asylo
IdentityType	./identity/null_identity/null_assertion_generator.cc	/^EnclaveIdentityType NullAssertionGenerator::IdentityType() const {$/;"	f	class:asylo::NullAssertionGenerator
IdentityType	./identity/null_identity/null_assertion_verifier.cc	/^EnclaveIdentityType NullAssertionVerifier::IdentityType() const {$/;"	f	class:asylo::NullAssertionVerifier
IdentityType	./identity/sgx/sgx_local_assertion_generator.cc	/^EnclaveIdentityType SgxLocalAssertionGenerator::IdentityType() const {$/;"	f	class:asylo::SgxLocalAssertionGenerator
IdentityType	./identity/sgx/sgx_local_assertion_verifier.cc	/^EnclaveIdentityType SgxLocalAssertionVerifier::IdentityType() const {$/;"	f	class:asylo::SgxLocalAssertionVerifier
IfAddrSupported	./platform/common/bridge_proto_serializer.cc	/^bool IfAddrSupported(const struct ifaddrs *entry) {$/;"	f	namespace:asylo
IfAddrsFlagsEqual	./platform/posix/syscalls_test_driver.cc	/^bool IfAddrsFlagsEqual(int flags1, int flags2) {$/;"	f	namespace:asylo::__anon302
IfAddrsFlagsEqual	./platform/posix/syscalls_test_driver.cc	/^bool IfAddrsFlagsEqual(int flags1, int flags2) {$/;"	f	namespace:asylo::__anon48
Implementations	./platform/core/test/lock_test.cc	/^    Implementations;$/;"	t	namespace:asylo::__anon130	file:
Implementations	./platform/core/test/lock_test.cc	/^    Implementations;$/;"	t	namespace:asylo::__anon384	file:
ImplicitlyCopyConvertible	./util/statusor_test.cc	/^  ImplicitlyCopyConvertible(const CopyOnlyDataType &co) : copy_only(co) {}$/;"	f	struct:asylo::__anon231::ImplicitlyCopyConvertible
ImplicitlyCopyConvertible	./util/statusor_test.cc	/^  ImplicitlyCopyConvertible(const CopyOnlyDataType &co) : copy_only(co) {}$/;"	f	struct:asylo::__anon485::ImplicitlyCopyConvertible
ImplicitlyCopyConvertible	./util/statusor_test.cc	/^struct ImplicitlyCopyConvertible {$/;"	s	namespace:asylo::__anon231	file:
ImplicitlyCopyConvertible	./util/statusor_test.cc	/^struct ImplicitlyCopyConvertible {$/;"	s	namespace:asylo::__anon485	file:
ImplicitlyMoveConvertible	./util/statusor_test.cc	/^  ImplicitlyMoveConvertible(MoveOnlyDataType &&mo) : move_only(std::move(mo)) {}$/;"	f	struct:asylo::__anon231::ImplicitlyMoveConvertible
ImplicitlyMoveConvertible	./util/statusor_test.cc	/^  ImplicitlyMoveConvertible(MoveOnlyDataType &&mo) : move_only(std::move(mo)) {}$/;"	f	struct:asylo::__anon485::ImplicitlyMoveConvertible
ImplicitlyMoveConvertible	./util/statusor_test.cc	/^struct ImplicitlyMoveConvertible {$/;"	s	namespace:asylo::__anon231	file:
ImplicitlyMoveConvertible	./util/statusor_test.cc	/^struct ImplicitlyMoveConvertible {$/;"	s	namespace:asylo::__anon485	file:
InactiveEnclaveSignalTest	./test/misc/inactive_enclave_signal_test_driver.cc	/^class InactiveEnclaveSignalTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon193	file:
InactiveEnclaveSignalTest	./test/misc/inactive_enclave_signal_test_driver.cc	/^class InactiveEnclaveSignalTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon447	file:
InactiveEnclaveSignalTest	./test/misc/inactive_enclave_signal_test_enclave.cc	/^class InactiveEnclaveSignalTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
Inet6SocketDriver	./platform/posix/sockets/inet6_socket_test_driver.cc	/^class Inet6SocketDriver : public EnclaveTest {$/;"	c	namespace:asylo::__anon313	file:
Inet6SocketDriver	./platform/posix/sockets/inet6_socket_test_driver.cc	/^class Inet6SocketDriver : public EnclaveTest {$/;"	c	namespace:asylo::__anon59	file:
Inet6SocketTest	./platform/posix/sockets/inet6_socket_test_enclave.cc	/^class Inet6SocketTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
Init	./crypto/sha256_hash.cc	/^void Sha256Hash::Init() { SHA256_Init(&context_); }$/;"	f	class:asylo::Sha256Hash
Init	./util/logging.cc	/^void LogMessage::Init(const char *file, int line, LogSeverity severity) {$/;"	f	class:asylo::LogMessage
InitClientChannel	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientChannel(EnclaveCredentialsOptions options,$/;"	f	namespace:asylo::__anon247
InitClientChannel	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientChannel(EnclaveCredentialsOptions options,$/;"	f	namespace:asylo::__anon501
InitClientEnclaveBidirectionalNullAndSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientEnclaveBidirectionalNullAndSgxLocalCredentials($/;"	f	namespace:asylo::__anon247
InitClientEnclaveBidirectionalNullAndSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientEnclaveBidirectionalNullAndSgxLocalCredentials($/;"	f	namespace:asylo::__anon501
InitClientEnclaveBidirectionalNullCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientEnclaveBidirectionalNullCredentials($/;"	f	namespace:asylo::__anon247
InitClientEnclaveBidirectionalNullCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientEnclaveBidirectionalNullCredentials($/;"	f	namespace:asylo::__anon501
InitClientEnclaveBidirectionalSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientEnclaveBidirectionalSgxLocalCredentials($/;"	f	namespace:asylo::__anon247
InitClientEnclaveBidirectionalSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientEnclaveBidirectionalSgxLocalCredentials($/;"	f	namespace:asylo::__anon501
InitClientEnclaveCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^grpc_core::RefCountedPtr<grpc_channel_credentials> InitClientEnclaveCredentials($/;"	f	namespace:asylo::__anon247
InitClientEnclaveCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^grpc_core::RefCountedPtr<grpc_channel_credentials> InitClientEnclaveCredentials($/;"	f	namespace:asylo::__anon501
InitClientEnclaveSelfSgxLocalPeerNullCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientEnclaveSelfSgxLocalPeerNullCredentials($/;"	f	namespace:asylo::__anon247
InitClientEnclaveSelfSgxLocalPeerNullCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitClientEnclaveSelfSgxLocalPeerNullCredentials($/;"	f	namespace:asylo::__anon501
InitConstructor	./platform/primitives/test/test_enclave.cc	/^void __attribute__((constructor)) InitConstructor() {$/;"	f	namespace:asylo::primitives::__anon335
InitConstructor	./platform/primitives/test/test_enclave.cc	/^void __attribute__((constructor)) InitConstructor() {$/;"	f	namespace:asylo::primitives::__anon81
InitLogging	./util/logging.cc	/^bool InitLogging(const char *directory, const char *file_name, int level) {$/;"	f	namespace:asylo
InitServer	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServer(EnclaveCredentialsOptions options, grpc_end2end_test_fixture *f,$/;"	f	namespace:asylo::__anon247
InitServer	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServer(EnclaveCredentialsOptions options, grpc_end2end_test_fixture *f,$/;"	f	namespace:asylo::__anon501
InitServerEnclaveBidirectionalNullAndSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServerEnclaveBidirectionalNullAndSgxLocalCredentials($/;"	f	namespace:asylo::__anon247
InitServerEnclaveBidirectionalNullAndSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServerEnclaveBidirectionalNullAndSgxLocalCredentials($/;"	f	namespace:asylo::__anon501
InitServerEnclaveBidirectionalNullCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServerEnclaveBidirectionalNullCredentials($/;"	f	namespace:asylo::__anon247
InitServerEnclaveBidirectionalNullCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServerEnclaveBidirectionalNullCredentials($/;"	f	namespace:asylo::__anon501
InitServerEnclaveBidirectionalSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServerEnclaveBidirectionalSgxLocalCredentials($/;"	f	namespace:asylo::__anon247
InitServerEnclaveBidirectionalSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServerEnclaveBidirectionalSgxLocalCredentials($/;"	f	namespace:asylo::__anon501
InitServerEnclaveCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^grpc_core::RefCountedPtr<grpc_server_credentials> InitServerEnclaveCredentials($/;"	f	namespace:asylo::__anon247
InitServerEnclaveCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^grpc_core::RefCountedPtr<grpc_server_credentials> InitServerEnclaveCredentials($/;"	f	namespace:asylo::__anon501
InitServerEnclaveSelfNullPeerSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServerEnclaveSelfNullPeerSgxLocalCredentials($/;"	f	namespace:asylo::__anon247
InitServerEnclaveSelfNullPeerSgxLocalCredentials	./grpc/auth/test/h2_enclave_security_test.cc	/^void InitServerEnclaveSelfNullPeerSgxLocalCredentials($/;"	f	namespace:asylo::__anon501
InitTrampolineOnce	./platform/primitives/sim/untrusted_sim.cc	/^void InitTrampolineOnce() {$/;"	f	namespace:asylo::primitives::__anon347
InitTrampolineOnce	./platform/primitives/sim/untrusted_sim.cc	/^void InitTrampolineOnce() {$/;"	f	namespace:asylo::primitives::__anon93
InitUntrustedStack	./platform/primitives/sgx/trusted_sgx.cc	/^InitUntrustedStack() {$/;"	f	namespace:asylo::primitives::__anon336
InitUntrustedStack	./platform/primitives/sgx/trusted_sgx.cc	/^InitUntrustedStack() {$/;"	f	namespace:asylo::primitives::__anon82
Initfini	./test/misc/initfini.cc	/^class Initfini : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
Initialize	./grpc/util/enclave_server.h	/^  Status Initialize(const EnclaveConfig &config) {$/;"	f	class:asylo::final
Initialize	./identity/null_identity/null_assertion_generator.cc	/^Status NullAssertionGenerator::Initialize(const std::string &config) {$/;"	f	class:asylo::NullAssertionGenerator
Initialize	./identity/null_identity/null_assertion_verifier.cc	/^Status NullAssertionVerifier::Initialize(const std::string &config) {$/;"	f	class:asylo::NullAssertionVerifier
Initialize	./identity/sgx/sgx_local_assertion_generator.cc	/^Status SgxLocalAssertionGenerator::Initialize(const std::string &config) {$/;"	f	class:asylo::SgxLocalAssertionGenerator
Initialize	./identity/sgx/sgx_local_assertion_verifier.cc	/^Status SgxLocalAssertionVerifier::Initialize(const std::string &config) {$/;"	f	class:asylo::SgxLocalAssertionVerifier
Initialize	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::Initialize($/;"	f	class:asylo::SgxClient
Initialize	./platform/core/trusted_application.h	/^  virtual Status Initialize(const EnclaveConfig &config) {$/;"	f	class:asylo::TrustedApplication
Initialize	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus Initialize(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon336
Initialize	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus Initialize(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon82
Initialize	./test/misc/double_die.cc	/^  void Initialize(const std::string &enclave_path) {$/;"	f	class:asylo::__anon192::DieTest
Initialize	./test/misc/double_die.cc	/^  void Initialize(const std::string &enclave_path) {$/;"	f	class:asylo::__anon446::DieTest
Initialize	./test/misc/exception_app.cc	/^  void Initialize(const std::string &enclave_path) {$/;"	f	class:asylo::__anon190::ExceptionTest
Initialize	./test/misc/exception_app.cc	/^  void Initialize(const std::string &enclave_path) {$/;"	f	class:asylo::__anon444::ExceptionTest
Initialize	./test/misc/hello_world.cc	/^  Status Initialize(const EnclaveConfig &config) {$/;"	f	class:asylo::HelloWorld
Initialize	./test/misc/initfini.cc	/^  Status Initialize(const EnclaveConfig &config) { return Status::OkStatus(); }$/;"	f	class:asylo::Initfini
InitializeArgvCStr	./bazel/application_wrapper/argv.cc	/^void Argv::InitializeArgvCStr() {$/;"	f	class:asylo::Argv
InitializeEnclaveAssertionAuthorities	./identity/init.h	/^Status InitializeEnclaveAssertionAuthorities(ConfigIteratorT configs_begin,$/;"	f	namespace:asylo
InitializeEnvironmentVariables	./platform/core/trusted_application.cc	/^Status InitializeEnvironmentVariables($/;"	f	namespace:asylo
InitializeEventFd	./platform/posix/io/eventfd_test.cc	/^  void InitializeEventFd(bool semaphore, uint64_t start = kCounterStart,$/;"	f	class:asylo::__anon327::EventFdTest
InitializeEventFd	./platform/posix/io/eventfd_test.cc	/^  void InitializeEventFd(bool semaphore, uint64_t start = kCounterStart,$/;"	f	class:asylo::__anon73::EventFdTest
InitializeFile	./platform/storage/secure/aead_handler.cc	/^bool AeadHandler::InitializeFile(int fd, const char *path_name,$/;"	f	class:asylo::platform::storage::AeadHandler
InitializeIO	./platform/core/trusted_application.cc	/^void InitializeIO(const EnclaveConfig &config) {$/;"	f	namespace:asylo
InitializeInternal	./platform/core/trusted_application.cc	/^Status TrustedApplication::InitializeInternal(const EnclaveConfig &config) {$/;"	f	class:asylo::TrustedApplication
InitializePipes	./platform/posix/io/epoll_test.cc	/^  void InitializePipes() {$/;"	f	class:asylo::__anon318::EpollTest
InitializePipes	./platform/posix/io/epoll_test.cc	/^  void InitializePipes() {$/;"	f	class:asylo::__anon64::EpollTest
InitializeSectionMaps	./util/elf_reader.cc	/^Status ElfReaderCreator::InitializeSectionMaps() {$/;"	f	class:asylo::ElfReaderCreator
InitializeServer	./grpc/util/enclave_server.h	/^  Status InitializeServer() {$/;"	f	class:asylo::final
InitiateMigration	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::InitiateMigration(sgx_enclave_id_t eid, int* output) {$/;"	f	class:asylo::SgxClient
InotifyAddWatch	./platform/posix/io/io_context_inotify.cc	/^int IOContextInotify::InotifyAddWatch(const char *pathname, uint32_t mask) {$/;"	f	class:asylo::io::IOContextInotify
InotifyAddWatch	./platform/posix/io/io_manager.cc	/^int IOManager::InotifyAddWatch(int fd, const char *pathname, uint32_t mask) {$/;"	f	class:asylo::io::IOManager
InotifyAddWatch	./platform/posix/io/io_manager.h	/^    virtual int InotifyAddWatch(const char *pathname, uint32_t mask) {$/;"	f	class:asylo::io::IOManager::IOContext
InotifyInit	./platform/posix/io/io_manager.cc	/^int IOManager::InotifyInit(bool non_block) {$/;"	f	class:asylo::io::IOManager
InotifyRmWatch	./platform/posix/io/io_context_inotify.cc	/^int IOContextInotify::InotifyRmWatch(int wd) {$/;"	f	class:asylo::io::IOContextInotify
InotifyRmWatch	./platform/posix/io/io_manager.cc	/^int IOManager::InotifyRmWatch(int fd, int wd) {$/;"	f	class:asylo::io::IOManager
InotifyRmWatch	./platform/posix/io/io_manager.h	/^    virtual int InotifyRmWatch(int wd) {$/;"	f	class:asylo::io::IOManager::IOContext
InotifyTest	./platform/posix/io/inotify_test.cc	/^  InotifyTest() {$/;"	f	class:asylo::__anon321::InotifyTest
InotifyTest	./platform/posix/io/inotify_test.cc	/^  InotifyTest() {$/;"	f	class:asylo::__anon67::InotifyTest
InotifyTest	./platform/posix/io/inotify_test.cc	/^class InotifyTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon321	file:
InotifyTest	./platform/posix/io/inotify_test.cc	/^class InotifyTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon67	file:
InsecureCredentialsConfig	./test/grpc/channel_test.cc	/^  InsecureCredentialsConfig() {$/;"	f	struct:asylo::__anon224::InsecureCredentialsConfig
InsecureCredentialsConfig	./test/grpc/channel_test.cc	/^  InsecureCredentialsConfig() {$/;"	f	struct:asylo::__anon478::InsecureCredentialsConfig
InsecureCredentialsConfig	./test/grpc/channel_test.cc	/^struct InsecureCredentialsConfig : public CredentialsConfig {$/;"	s	namespace:asylo::__anon224	file:
InsecureCredentialsConfig	./test/grpc/channel_test.cc	/^struct InsecureCredentialsConfig : public CredentialsConfig {$/;"	s	namespace:asylo::__anon478	file:
Insert	./platform/posix/io/io_manager.cc	/^int IOManager::FileDescriptorTable::Insert(IOContext *context) {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
InstallResource	./platform/core/shared_resource_manager.cc	/^Status SharedResourceManager::InstallResource(ResourceHandle *handle) {$/;"	f	class:asylo::SharedResourceManager
Instance	./platform/core/enclave_manager.cc	/^StatusOr<EnclaveManager *> EnclaveManager::Instance() {$/;"	f	class:asylo::EnclaveManager
Instance	./platform/core/untrusted_cache_malloc.cc	/^UntrustedCacheMalloc *UntrustedCacheMalloc::Instance() {$/;"	f	class:asylo::UntrustedCacheMalloc
InstanceVersion	./platform/common/ring_buffer.h	/^  uint64_t InstanceVersion() const { return instance_version_; }$/;"	f	class:asylo::RingBuffer
InstantiateSafeBytesFromHexString	./crypto/util/bytes.h	/^StatusOr<SafeBytes<(InputSize - 1) \/ 2>> InstantiateSafeBytesFromHexString($/;"	f	namespace:asylo
InstantiateUnsafeBytesFromHexString	./crypto/util/bytes.h	/^StatusOr<UnsafeBytes<(InputSize - 1) \/ 2>> InstantiateUnsafeBytesFromHexString($/;"	f	namespace:asylo
IntCtor	./util/statusor_test.cc	/^struct IntCtor {$/;"	s	namespace:asylo::__anon231	file:
IntCtor	./util/statusor_test.cc	/^struct IntCtor {$/;"	s	namespace:asylo::__anon485	file:
IntelArchitecturalEnclaveInterface	./identity/sgx/intel_architectural_enclave_interface.h	/^class IntelArchitecturalEnclaveInterface {$/;"	c	namespace:asylo::sgx
InterlockedExchange	./platform/posix/pthread.cc	/^inline int InterlockedExchange(pthread_spinlock_t *dest,$/;"	f	namespace:__anon296
InterlockedExchange	./platform/posix/pthread.cc	/^inline int InterlockedExchange(pthread_spinlock_t *dest,$/;"	f	namespace:__anon42
InvalidResponseDispatcher	./platform/system_call/system_call_test.cc	/^asylo::primitives::PrimitiveStatus InvalidResponseDispatcher($/;"	f	namespace:asylo::system_call::__anon115
InvalidResponseDispatcher	./platform/system_call/system_call_test.cc	/^asylo::primitives::PrimitiveStatus InvalidResponseDispatcher($/;"	f	namespace:asylo::system_call::__anon369
InvokeEntryHandler	./platform/primitives/util/trusted_runtime_helper.cc	/^PrimitiveStatus InvokeEntryHandler(uint64_t selector,$/;"	f	namespace:asylo::primitives
InvokeExitHandler	./platform/primitives/util/dispatch_table.cc	/^Status DispatchTable::InvokeExitHandler(uint64_t untrusted_selector,$/;"	f	class:asylo::primitives::DispatchTable
Ioctl	./platform/posix/io/io_manager.cc	/^int IOManager::Ioctl(int fd, int request, void *argp) {$/;"	f	class:asylo::io::IOManager
Ioctl	./platform/posix/io/io_manager.h	/^    virtual int Ioctl(int request, void *argp) {$/;"	f	class:asylo::io::IOManager::IOContext
Ioctl	./platform/posix/io/secure_paths.cc	/^int IOContextSecure::Ioctl(int request, void *argp) {$/;"	f	class:asylo::io::IOContextSecure
IpCompliant	./platform/common/bridge_proto_serializer.cc	/^bool IpCompliant(const struct sockaddr *addr) {$/;"	f	namespace:asylo::__anon109
IpCompliant	./platform/common/bridge_proto_serializer.cc	/^bool IpCompliant(const struct sockaddr *addr) {$/;"	f	namespace:asylo::__anon363
IpV6OptionNames	./platform/common/bridge_types.h	/^enum IpV6OptionNames {$/;"	g
Is	./util/status.h	/^  bool Is(Enum code) const {$/;"	f	class:asylo::Status
IsAddressInRange	./platform/posix/memory/heap_switch_test.cc	/^bool IsAddressInRange(void *addr, void *base, size_t size) {$/;"	f	namespace:asylo::__anon317
IsAddressInRange	./platform/posix/memory/heap_switch_test.cc	/^bool IsAddressInRange(void *addr, void *base, size_t size) {$/;"	f	namespace:asylo::__anon63
IsAddressInRange	./test/misc/memory_layout_test.cc	/^bool IsAddressInRange(void *addr, void *base, size_t size) {$/;"	f	namespace:asylo::__anon202
IsAddressInRange	./test/misc/memory_layout_test.cc	/^bool IsAddressInRange(void *addr, void *base, size_t size) {$/;"	f	namespace:asylo::__anon456
IsAligned	./identity/util/aligned_object_ptr.h	/^  static bool IsAligned(const void *addr) {$/;"	f	class:asylo::AlignedObjectPtr
IsAttyHandler	./platform/host_call/untrusted/host_call_handlers.cc	/^Status IsAttyHandler(const std::shared_ptr<primitives::Client> &client,$/;"	f	namespace:asylo::host_call
IsCached	./platform/storage/utils/record_store.h	/^  bool IsCached(off_t offset) const { return index_.contains(offset); }$/;"	f	class:asylo::RecordStore
IsCanonical	./util/status.cc	/^bool Status::IsCanonical() const {$/;"	f	class:asylo::Status
IsClosed	./platform/primitives/sgx/untrusted_sgx.cc	/^bool SgxEnclaveClient::IsClosed() const {$/;"	f	class:asylo::primitives::SgxEnclaveClient
IsClosed	./platform/primitives/sim/untrusted_sim.cc	/^bool SimEnclaveClient::IsClosed() const { return dl_handle_ == nullptr; }$/;"	f	class:asylo::primitives::SimEnclaveClient
IsCompatibleAssertionDescription	./identity/enclave_assertion_authority.h	/^  bool IsCompatibleAssertionDescription($/;"	f	class:asylo::EnclaveAssertionAuthority
IsFileDescriptorUnused	./platform/posix/io/io_manager.cc	/^bool IOManager::FileDescriptorTable::IsFileDescriptorUnused(int fd) {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
IsFileDescriptorValid	./platform/posix/io/io_manager.cc	/^bool IOManager::FileDescriptorTable::IsFileDescriptorValid(int fd) {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
IsFiniteRestrictionOf	./test/util/finite_domain_fuzz.h	/^PolymorphicMatcher<FiniteDomainMatcher<Domain, Range>> IsFiniteRestrictionOf($/;"	f	namespace:asylo
IsHandshakeAborted	./grpc/auth/core/client_ekep_handshaker.cc	/^bool ClientEkepHandshaker::IsHandshakeAborted() const {$/;"	f	class:asylo::ClientEkepHandshaker
IsHandshakeAborted	./grpc/auth/core/server_ekep_handshaker.cc	/^bool ServerEkepHandshaker::IsHandshakeAborted() const {$/;"	f	class:asylo::ServerEkepHandshaker
IsHandshakeCompleted	./grpc/auth/core/client_ekep_handshaker.cc	/^bool ClientEkepHandshaker::IsHandshakeCompleted() const {$/;"	f	class:asylo::ClientEkepHandshaker
IsHandshakeCompleted	./grpc/auth/core/server_ekep_handshaker.cc	/^bool ServerEkepHandshaker::IsHandshakeCompleted() const {$/;"	f	class:asylo::ServerEkepHandshaker
IsHandshakeInProgress	./grpc/auth/core/client_ekep_handshaker.cc	/^bool ClientEkepHandshaker::IsHandshakeInProgress() const {$/;"	f	class:asylo::ClientEkepHandshaker
IsHandshakeInProgress	./grpc/auth/core/server_ekep_handshaker.cc	/^bool ServerEkepHandshaker::IsHandshakeInProgress() const {$/;"	f	class:asylo::ServerEkepHandshaker
IsHexEncoded	./identity/sgx/tcb_info_from_json.cc	/^bool IsHexEncoded(const std::string &str) {$/;"	f	namespace:asylo::sgx::__anon158
IsHexEncoded	./identity/sgx/tcb_info_from_json.cc	/^bool IsHexEncoded(const std::string &str) {$/;"	f	namespace:asylo::sgx::__anon412
IsIdentityCompatibleWithMatchSpec	./identity/sgx/code_identity_util.cc	/^bool IsIdentityCompatibleWithMatchSpec(const CodeIdentity &identity,$/;"	f	namespace:asylo::sgx::internal
IsInitialized	./identity/null_identity/null_assertion_generator.cc	/^bool NullAssertionGenerator::IsInitialized() const {$/;"	f	class:asylo::NullAssertionGenerator
IsInitialized	./identity/null_identity/null_assertion_verifier.cc	/^bool NullAssertionVerifier::IsInitialized() const {$/;"	f	class:asylo::NullAssertionVerifier
IsInitialized	./identity/sgx/sgx_local_assertion_generator.cc	/^bool SgxLocalAssertionGenerator::IsInitialized() const {$/;"	f	class:asylo::SgxLocalAssertionGenerator
IsInitialized	./identity/sgx/sgx_local_assertion_verifier.cc	/^bool SgxLocalAssertionVerifier::IsInitialized() const {$/;"	f	class:asylo::SgxLocalAssertionVerifier
IsLittleEndian	./platform/posix/endian_test.cc	/^  bool IsLittleEndian() { return le16toh(1) == 1; }$/;"	f	class:asylo::__anon298::EndianTest	file:
IsLittleEndian	./platform/posix/endian_test.cc	/^  bool IsLittleEndian() { return le16toh(1) == 1; }$/;"	f	class:asylo::__anon44::EndianTest	file:
IsNull	./platform/primitives/trusted_primitives.h	/^  bool IsNull() const { return callback == nullptr; }$/;"	f	struct:asylo::primitives::EntryHandler
IsNull	./platform/primitives/untrusted_primitives.h	/^  bool IsNull() const { return callback == nullptr; }$/;"	f	struct:asylo::primitives::ExitHandler
IsNullIdentityDescription	./identity/null_identity/null_identity_util.h	/^inline bool IsNullIdentityDescription($/;"	f	namespace:asylo
IsOk	./test/util/status_matchers.h	/^inline internal::IsOkMatcherGenerator IsOk() {$/;"	f	namespace:asylo
IsOkAndHolds	./test/util/status_matchers.h	/^internal::IsOkAndHoldsGenerator<ValueMatcherT> IsOkAndHolds($/;"	f	namespace:asylo
IsOkAndHoldsGenerator	./test/util/status_matchers.h	/^  explicit IsOkAndHoldsGenerator(ValueMatcherT value_matcher)$/;"	f	class:asylo::internal::IsOkAndHoldsGenerator
IsOkAndHoldsGenerator	./test/util/status_matchers.h	/^class IsOkAndHoldsGenerator {$/;"	c	namespace:asylo::internal
IsOkAndHoldsMatcher	./test/util/status_matchers.h	/^  IsOkAndHoldsMatcher(MatcherT &&value_matcher)$/;"	f	class:asylo::internal::IsOkAndHoldsMatcher
IsOkAndHoldsMatcher	./test/util/status_matchers.h	/^class IsOkAndHoldsMatcher$/;"	c	namespace:asylo::internal
IsOkMatcherGenerator	./test/util/status_matchers.h	/^class IsOkMatcherGenerator {$/;"	c	namespace:asylo::internal
IsOkMatcherImpl	./test/util/status_matchers.h	/^class IsOkMatcherImpl : public ::testing::MatcherInterface<T> {$/;"	c	namespace:asylo::internal
IsPathNameValid	./platform/storage/secure/aead_handler.cc	/^bool IsPathNameValid(const char *path_name) {$/;"	f	namespace:asylo::platform::storage::__anon353
IsPathNameValid	./platform/storage/secure/aead_handler.cc	/^bool IsPathNameValid(const char *path_name) {$/;"	f	namespace:asylo::platform::storage::__anon99
IsRepresentableAsNanoseconds	./platform/common/time_util.cc	/^bool IsRepresentableAsNanoseconds(const struct timespec *ts) {$/;"	f	namespace:asylo
IsRepresentableAsNanoseconds	./platform/common/time_util.cc	/^bool IsRepresentableAsNanoseconds(const struct timeval *tv) {$/;"	f	namespace:asylo
IsResetOnHandle	./platform/posix/signal/signal_manager.cc	/^bool SignalManager::IsResetOnHandle(int signum) {$/;"	f	class:asylo::SignalManager
IsSecureForkSupported	./platform/arch/common/trusted/fork.cc	/^bool IsSecureForkSupported() { return false; }$/;"	f	namespace:asylo
IsSecureForkSupported	./platform/arch/sgx/trusted/fork.cc	/^bool IsSecureForkSupported() { return true; }$/;"	f	namespace:asylo
IsTcsActive	./platform/arch/sgx/untrusted/sgx_client.cc	/^bool SgxClient::IsTcsActive() {$/;"	f	class:asylo::SgxClient
IsTrustedExtent	./platform/primitives/sim/trusted_sim.cc	/^bool TrustedPrimitives::IsTrustedExtent(const void *addr, size_t size) {$/;"	f	class:asylo::primitives::TrustedPrimitives
IsURandom	./platform/posix/io/random_devices.h	/^  const bool &IsURandom() const { return is_urandom_; }$/;"	f	class:asylo::RandomIOContext
IsValidAssertionRequest	./identity/null_identity/null_assertion_generator.cc	/^bool NullAssertionGenerator::IsValidAssertionRequest($/;"	f	class:asylo::NullAssertionGenerator
IsValidCodeIdentity	./identity/sgx/code_identity_util.cc	/^bool IsValidCodeIdentity(const CodeIdentity &identity) {$/;"	f	namespace:asylo::sgx
IsValidEnclaveAddress	./platform/primitives/util/trusted_memory.h	/^bool IsValidEnclaveAddress(const T *pointer) {$/;"	f	namespace:asylo
IsValidExpectation	./identity/sgx/code_identity_util.cc	/^bool IsValidExpectation(const CodeIdentityExpectation &expectation) {$/;"	f	namespace:asylo::sgx
IsValidMatchSpec	./identity/sgx/code_identity_util.cc	/^bool IsValidMatchSpec(const CodeIdentityMatchSpec &match_spec) {$/;"	f	namespace:asylo::sgx
IsValidParameterSize	./platform/system_call/message.cc	/^bool MessageReader::IsValidParameterSize(int index) const {$/;"	f	class:asylo::system_call::MessageReader
IsValidSignerAssignedIdentity	./identity/sgx/code_identity_util.cc	/^bool IsValidSignerAssignedIdentity(const SignerAssignedIdentity &identity) {$/;"	f	namespace:asylo::sgx
Isatty	./platform/posix/io/io_manager.cc	/^int IOManager::Isatty(int fd) {$/;"	f	class:asylo::io::IOManager
Isatty	./platform/posix/io/io_manager.h	/^    virtual int Isatty() {$/;"	f	class:asylo::io::IOManager::IOContext
Isatty	./platform/posix/io/native_paths.cc	/^int IOContextNative::Isatty() { return enc_untrusted_isatty(host_fd_); }$/;"	f	class:asylo::io::IOContextNative
Isatty	./platform/posix/io/random_devices.cc	/^int RandomIOContext::Isatty() {$/;"	f	class:asylo::RandomIOContext
Isatty	./platform/posix/io/secure_paths.cc	/^int IOContextSecure::Isatty() { return enc_untrusted_isatty(host_fd_); }$/;"	f	class:asylo::io::IOContextSecure
Item	./platform/primitives/parameter_stack.h	/^  struct Item {$/;"	s	class:asylo::primitives::ParameterStack
ItemDeleter	./platform/primitives/parameter_stack.h	/^    explicit ItemDeleter(Item *item) : item_(item) {}$/;"	f	class:asylo::primitives::ParameterStack::ItemDeleter
ItemDeleter	./platform/primitives/parameter_stack.h	/^  class ItemDeleter {$/;"	c	class:asylo::primitives::ParameterStack
Join	./util/std_thread.h	/^  void Join() {$/;"	f	class:asylo::Thread
JoinPath	./util/path.cc	/^std::string JoinPath() { return std::string(); }$/;"	f	namespace:asylo
JoinPath	./util/path.cc	/^std::string JoinPath(absl::string_view path) {$/;"	f	namespace:asylo
JoinPath	./util/path.cc	/^std::string JoinPath(absl::string_view path1, absl::string_view path2) {$/;"	f	namespace:asylo
JoinPath	./util/path.h	/^std::string JoinPath(absl::string_view path1, absl::string_view path2,$/;"	f	namespace:asylo
JoinThread	./platform/posix/threading/thread_manager.cc	/^int ThreadManager::JoinThread(const pthread_t thread_id,$/;"	f	class:asylo::ThreadManager
JoinThreads	./test/util/pthread_test_util.cc	/^Status JoinThreads(const std::vector<pthread_t> &threads) {$/;"	f	namespace:asylo
JsonGetArray	./util/proto_struct_util.cc	/^StatusOr<const google::protobuf::ListValue *> JsonGetArray($/;"	f	namespace:asylo
JsonGetNumber	./util/proto_struct_util.cc	/^StatusOr<double> JsonGetNumber(const google::protobuf::Value &value) {$/;"	f	namespace:asylo
JsonGetObject	./util/proto_struct_util.cc	/^StatusOr<const google::protobuf::Struct *> JsonGetObject($/;"	f	namespace:asylo
JsonGetString	./util/proto_struct_util.cc	/^StatusOr<const std::string *> JsonGetString($/;"	f	namespace:asylo
JsonObjectGetField	./util/proto_struct_util.cc	/^StatusOr<const google::protobuf::Value *> JsonObjectGetField($/;"	f	namespace:asylo
JsonToString	./identity/sgx/tcb_info_from_json_test.cc	/^std::string JsonToString(const google::protobuf::Value &json) {$/;"	f	namespace:asylo::sgx::__anon150
JsonToString	./identity/sgx/tcb_info_from_json_test.cc	/^std::string JsonToString(const google::protobuf::Value &json) {$/;"	f	namespace:asylo::sgx::__anon404
KSS	./identity/sgx/secs_attributes.h	/^  KSS = 7,  \/\/ Indicates whether the enclave has support for Key$/;"	m	class:asylo::sgx::SecsAttributeBit
KeyDependencies	./identity/sgx/fake_enclave.h	/^    KeyDependencies() : padding(TrivialZeroObject<KeyDependenciesPadding>()) {}$/;"	f	struct:asylo::sgx::FakeEnclave::KeyDependencies
KeyDependencies	./identity/sgx/fake_enclave.h	/^  struct KeyDependencies {$/;"	s	class:asylo::sgx::FakeEnclave
KeyDependenciesBase	./identity/sgx/fake_enclave.h	/^  struct KeyDependenciesBase {$/;"	s	class:asylo::sgx::FakeEnclave
Keyrequest	./identity/sgx/identity_key_management_structs.h	/^struct Keyrequest {$/;"	s	class:asylo::sgx::KeyrequestKeyname
KeyrequestKeyname	./identity/sgx/identity_key_management_structs.h	/^enum class KeyrequestKeyname : uint16_t {$/;"	c	namespace:asylo::sgx
KnownStatusesMap	./identity/sgx/tcb_info_from_json.cc	/^    &KnownStatusesMap() {$/;"	f	namespace:asylo::sgx::__anon158
KnownStatusesMap	./identity/sgx/tcb_info_from_json.cc	/^    &KnownStatusesMap() {$/;"	f	namespace:asylo::sgx::__anon412
LAUNCHED	./grpc/util/grpc_server_launcher.h	/^  enum class State { NOT_LAUNCHED, LAUNCHED, TERMINATED };$/;"	m	class:asylo::GrpcServerLauncher::State
LLVMFuzzerTestOneInput	./platform/system_call/system_call_message_fuzzer.cc	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {$/;"	f	namespace:asylo::system_call::__anon119
LLVMFuzzerTestOneInput	./platform/system_call/system_call_message_fuzzer.cc	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {$/;"	f	namespace:asylo::system_call::__anon373
LOCKS_EXCLUDED	./examples/grpc_server/grpc_server_enclave.cc	/^    const asylo::EnclaveConfig &enclave_config) LOCKS_EXCLUDED(server_mutex_) {$/;"	f	namespace:examples::grpc_server
LOCKS_EXCLUDED	./examples/grpc_server/grpc_server_enclave.cc	/^    const asylo::EnclaveFinal &enclave_final) LOCKS_EXCLUDED(server_mutex_) {$/;"	f	namespace:examples::grpc_server
LOCKS_EXCLUDED	./examples/grpc_server/grpc_server_test.cc	/^  int GetServerPort() LOCKS_EXCLUDED(server_thread_state_mutex_) {$/;"	f	class:examples::grpc_server::__anon244::GrpcServerTest	file:
LOCKS_EXCLUDED	./examples/grpc_server/grpc_server_test.cc	/^  int GetServerPort() LOCKS_EXCLUDED(server_thread_state_mutex_) {$/;"	f	class:examples::grpc_server::__anon498::GrpcServerTest	file:
LOCKS_EXCLUDED	./examples/grpc_server/grpc_server_test.cc	/^  void SetUp() override LOCKS_EXCLUDED(server_thread_state_mutex_) {$/;"	f	class:examples::grpc_server::__anon244::GrpcServerTest
LOCKS_EXCLUDED	./examples/grpc_server/grpc_server_test.cc	/^  void SetUp() override LOCKS_EXCLUDED(server_thread_state_mutex_) {$/;"	f	class:examples::grpc_server::__anon498::GrpcServerTest
LOCKS_EXCLUDED	./examples/grpc_server/translator_server_impl.cc	/^    LOCKS_EXCLUDED(shutdown_requested_mutex_) {$/;"	f	namespace:examples::grpc_server
LOCKS_EXCLUDED	./platform/common/singleton.h	/^  static T *get() LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::Singleton
LOCKS_EXCLUDED	./platform/common/singleton.h	/^  static void Destruct() LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::Singleton
LOCKS_EXCLUDED	./platform/common/static_map.h	/^    ValueCollection() LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap::ValueCollection
LOCKS_EXCLUDED	./platform/common/static_map.h	/^    const_iterator begin() const LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap::ValueCollection
LOCKS_EXCLUDED	./platform/common/static_map.h	/^    const_iterator cbegin() const LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap::ValueCollection
LOCKS_EXCLUDED	./platform/common/static_map.h	/^    const_iterator cend() const LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap::ValueCollection
LOCKS_EXCLUDED	./platform/common/static_map.h	/^    const_iterator end() const LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap::ValueCollection
LOCKS_EXCLUDED	./platform/common/static_map.h	/^    explicit ValueInserter(T *value) LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap::ValueInserter
LOCKS_EXCLUDED	./platform/common/static_map.h	/^    iterator begin() LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap::ValueCollection
LOCKS_EXCLUDED	./platform/common/static_map.h	/^    iterator end() LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap::ValueCollection
LOCKS_EXCLUDED	./platform/common/static_map.h	/^  static ValueCollection Values() LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap
LOCKS_EXCLUDED	./platform/common/static_map.h	/^  static const_value_iterator value_cbegin() LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap
LOCKS_EXCLUDED	./platform/common/static_map.h	/^  static const_value_iterator value_cend() LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap
LOCKS_EXCLUDED	./platform/common/static_map.h	/^  static value_iterator value_begin() LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap
LOCKS_EXCLUDED	./platform/common/static_map.h	/^  static value_iterator value_end() LOCKS_EXCLUDED(StaticMap::mu_) {$/;"	f	class:asylo::StaticMap
LOCKS_EXCLUDED	./util/mutex_guarded.h	/^      LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::MutexGuarded
LOCKS_EXCLUDED	./util/mutex_guarded.h	/^  LockView<T> Lock() LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::MutexGuarded
LOCKS_EXCLUDED	./util/mutex_guarded.h	/^  MutexGuarded &operator=(MutexGuarded &&other) LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::MutexGuarded
LOCKS_EXCLUDED	./util/mutex_guarded.h	/^  ReaderLockView<T> ReaderLock() const LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::MutexGuarded
LOCKS_EXCLUDED	./util/mutex_guarded.h	/^  T &&Release() LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::MutexGuarded
LOCKS_EXCLUDED	./util/mutex_guarded.h	/^  absl::optional<LockView<T>> TryLock() LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::MutexGuarded
LOCKS_EXCLUDED	./util/mutex_guarded.h	/^  absl::optional<ReaderLockView<T>> ReaderTryLock() const LOCKS_EXCLUDED(mu_) {$/;"	f	class:asylo::MutexGuarded
LOG	./util/logging.h	57;"	d
LOG_ALERT	./platform/posix/include/sys/syslog.h	36;"	d
LOG_AUTH	./platform/posix/include/sys/syslog.h	49;"	d
LOG_AUTHPRIV	./platform/posix/include/sys/syslog.h	55;"	d
LOG_CONS	./platform/posix/include/sys/syslog.h	28;"	d
LOG_CRIT	./platform/posix/include/sys/syslog.h	37;"	d
LOG_CRON	./platform/posix/include/sys/syslog.h	54;"	d
LOG_DAEMON	./platform/posix/include/sys/syslog.h	48;"	d
LOG_DEBUG	./platform/posix/include/sys/syslog.h	42;"	d
LOG_EMERG	./platform/posix/include/sys/syslog.h	35;"	d
LOG_ERR	./platform/posix/include/sys/syslog.h	38;"	d
LOG_FTP	./platform/posix/include/sys/syslog.h	56;"	d
LOG_IF	./util/logging.h	70;"	d
LOG_INFO	./platform/posix/include/sys/syslog.h	41;"	d
LOG_KERN	./platform/posix/include/sys/syslog.h	45;"	d
LOG_LOCAL0	./platform/posix/include/sys/syslog.h	58;"	d
LOG_LOCAL1	./platform/posix/include/sys/syslog.h	59;"	d
LOG_LOCAL2	./platform/posix/include/sys/syslog.h	60;"	d
LOG_LOCAL3	./platform/posix/include/sys/syslog.h	61;"	d
LOG_LOCAL4	./platform/posix/include/sys/syslog.h	62;"	d
LOG_LOCAL5	./platform/posix/include/sys/syslog.h	63;"	d
LOG_LOCAL6	./platform/posix/include/sys/syslog.h	64;"	d
LOG_LOCAL7	./platform/posix/include/sys/syslog.h	65;"	d
LOG_LPR	./platform/posix/include/sys/syslog.h	51;"	d
LOG_MAIL	./platform/posix/include/sys/syslog.h	47;"	d
LOG_NDELAY	./platform/posix/include/sys/syslog.h	30;"	d
LOG_NEWS	./platform/posix/include/sys/syslog.h	52;"	d
LOG_NOTICE	./platform/posix/include/sys/syslog.h	40;"	d
LOG_NOWAIT	./platform/posix/include/sys/syslog.h	31;"	d
LOG_ODELAY	./platform/posix/include/sys/syslog.h	29;"	d
LOG_PERROR	./platform/posix/include/sys/syslog.h	32;"	d
LOG_PID	./platform/posix/include/sys/syslog.h	27;"	d
LOG_SYSLOG	./platform/posix/include/sys/syslog.h	50;"	d
LOG_USER	./platform/posix/include/sys/syslog.h	46;"	d
LOG_UUCP	./platform/posix/include/sys/syslog.h	53;"	d
LOG_WARNING	./platform/posix/include/sys/syslog.h	39;"	d
LSeek	./platform/posix/io/io_manager.cc	/^int IOManager::LSeek(int fd, off_t offset, int whence) {$/;"	f	class:asylo::io::IOManager
LSeek	./platform/posix/io/io_manager.h	/^    virtual int LSeek(off_t offset, int whence) {$/;"	f	class:asylo::io::IOManager::IOContext
LSeek	./platform/posix/io/native_paths.cc	/^int IOContextNative::LSeek(off_t offset, int whence) {$/;"	f	class:asylo::io::IOContextNative
LSeek	./platform/posix/io/random_devices.cc	/^int RandomIOContext::LSeek(off_t offset, int whence) {$/;"	f	class:asylo::RandomIOContext
LSeek	./platform/posix/io/secure_paths.cc	/^int IOContextSecure::LSeek(off_t offset, int whence) {$/;"	f	class:asylo::io::IOContextSecure
LStat	./platform/posix/io/io_manager.cc	/^int IOManager::LStat(const char *pathname, struct stat *stat_buffer) {$/;"	f	class:asylo::io::IOManager
LStat	./platform/posix/io/io_manager.h	/^    virtual int LStat(const char *pathname, struct stat *stat_buffer) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
LStat	./platform/posix/io/native_paths.cc	/^int NativePathHandler::LStat(const char *pathname, struct stat *stat_buffer) {$/;"	f	class:asylo::io::NativePathHandler
LStat	./platform/posix/io/random_devices.cc	/^int RandomPathHandler::LStat(const char *pathname, struct stat *stat_buffer) {$/;"	f	class:asylo::RandomPathHandler
LargestSuccessfulMalloc	./test/misc/malloc_stress_test.cc	/^size_t LargestSuccessfulMalloc() {$/;"	f	namespace:asylo::__anon196
LargestSuccessfulMalloc	./test/misc/malloc_stress_test.cc	/^size_t LargestSuccessfulMalloc() {$/;"	f	namespace:asylo::__anon450
LastSystemCall	./platform/system_call/metadata.cc	/^int LastSystemCall() { return kSystemCallTableSize - 1; }$/;"	f	namespace:asylo::system_call
LaunchServer	./grpc/util/grpc_server_launcher_test.cc	/^  Status LaunchServer() {$/;"	f	class:asylo::__anon263::GrpcServerLauncherTest
LaunchServer	./grpc/util/grpc_server_launcher_test.cc	/^  Status LaunchServer() {$/;"	f	class:asylo::__anon517::GrpcServerLauncherTest
LaunchThreads	./test/util/pthread_test_util.cc	/^Status LaunchThreads(const int numThreads, void *(*start_routine)(void *),$/;"	f	namespace:asylo
LeToHost	./platform/posix/endian_test.cc	/^uint16_t LeToHost(uint16_t value) { return le16toh(value); }$/;"	f	namespace:asylo::__anon298
LeToHost	./platform/posix/endian_test.cc	/^uint16_t LeToHost(uint16_t value) { return le16toh(value); }$/;"	f	namespace:asylo::__anon44
LeToHost	./platform/posix/endian_test.cc	/^uint32_t LeToHost(uint32_t value) { return le32toh(value); }$/;"	f	namespace:asylo::__anon298
LeToHost	./platform/posix/endian_test.cc	/^uint32_t LeToHost(uint32_t value) { return le32toh(value); }$/;"	f	namespace:asylo::__anon44
LeToHost	./platform/posix/endian_test.cc	/^uint64_t LeToHost(uint64_t value) { return le64toh(value); }$/;"	f	namespace:asylo::__anon298
LeToHost	./platform/posix/endian_test.cc	/^uint64_t LeToHost(uint64_t value) { return le64toh(value); }$/;"	f	namespace:asylo::__anon44
LeaksMemoryOnAbort	./platform/primitives/test/test_backend.h	/^  virtual bool LeaksMemoryOnAbort() { return false; }$/;"	f	class:asylo::primitives::test::TestBackend
LethargicFactory	./platform/common/singleton_test.cc	/^struct LethargicFactory {$/;"	s	namespace:asylo::__anon112	file:
LethargicFactory	./platform/common/singleton_test.cc	/^struct LethargicFactory {$/;"	s	namespace:asylo::__anon366	file:
LevelEdgeBehaviorTest	./platform/posix/io/epoll_test.cc	/^  void LevelEdgeBehaviorTest(bool edge_triggered) {$/;"	f	class:asylo::__anon318::EpollTest
LevelEdgeBehaviorTest	./platform/posix/io/epoll_test.cc	/^  void LevelEdgeBehaviorTest(bool edge_triggered) {$/;"	f	class:asylo::__anon64::EpollTest
Link	./platform/posix/io/io_manager.cc	/^int IOManager::Link(const char *from, const char *to) {$/;"	f	class:asylo::io::IOManager
Link	./platform/posix/io/io_manager.h	/^    virtual int Link(const char *existing, const char *new_link) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Link	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Link(const char *existing, const char *new_link) {$/;"	f	class:asylo::io::NativePathHandler
Link	./platform/posix/io/random_devices.cc	/^int RandomPathHandler::Link(const char *existing, const char *new_link) {$/;"	f	class:asylo::RandomPathHandler
Listen	./platform/posix/io/io_manager.cc	/^int IOManager::Listen(int sockfd, int backlog) {$/;"	f	class:asylo::io::IOManager
Listen	./platform/posix/io/io_manager.h	/^    virtual int Listen(int backlog) {$/;"	f	class:asylo::io::IOManager::IOContext
Listen	./platform/posix/io/native_paths.cc	/^int IOContextNative::Listen(int backlog) {$/;"	f	class:asylo::io::IOContextNative
Load	./platform/primitives/sgx/untrusted_sgx.cc	/^StatusOr<std::shared_ptr<Client>> SgxBackend::Load($/;"	f	class:asylo::primitives::SgxBackend
Load	./platform/primitives/sgx/untrusted_sgx.cc	/^StatusOr<std::shared_ptr<Client>> SgxEmbeddedBackend::Load($/;"	f	class:asylo::primitives::SgxEmbeddedBackend
Load	./platform/primitives/sim/untrusted_sim.cc	/^StatusOr<std::shared_ptr<Client>> SimBackend::Load($/;"	f	class:asylo::primitives::SimBackend
LoadEnclave	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  Status LoadEnclave(std::vector<std::string> argv,$/;"	f	class:asylo::__anon182::ApplicationWrapperEnclaveTest
LoadEnclave	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  Status LoadEnclave(std::vector<std::string> argv,$/;"	f	class:asylo::__anon436::ApplicationWrapperEnclaveTest
LoadEnclave	./platform/arch/sgx/untrusted/sgx_client.cc	/^StatusOr<std::unique_ptr<EnclaveClient>> SgxEmbeddedLoader::LoadEnclave($/;"	f	class:asylo::SgxEmbeddedLoader
LoadEnclave	./platform/arch/sgx/untrusted/sgx_client.cc	/^StatusOr<std::unique_ptr<EnclaveClient>> SgxLoader::LoadEnclave($/;"	f	class:asylo::SgxLoader
LoadEnclave	./platform/core/enclave_manager.cc	/^Status EnclaveManager::LoadEnclave(const std::string &name,$/;"	f	class:asylo::EnclaveManager
LoadEnclave	./platform/core/enclave_manager.h	/^  virtual StatusOr<std::unique_ptr<EnclaveClient>> LoadEnclave($/;"	f	class:asylo::EnclaveLoader
LoadEnclave	./platform/primitives/untrusted_primitives.h	/^StatusOr<std::shared_ptr<class Client>> LoadEnclave(Args &&... args) {$/;"	f	namespace:asylo::primitives
LoadEnclave	./test/util/fake_enclave_loader.cc	/^StatusOr<std::unique_ptr<EnclaveClient>> FakeEnclaveLoader::LoadEnclave($/;"	f	class:asylo::FakeEnclaveLoader
LoadEnclaveAndTakeSnapshot	./platform/posix/fork_security_test_driver.cc	/^  Status LoadEnclaveAndTakeSnapshot(const std::string &enclave_name,$/;"	f	class:asylo::__anon305::ForkSecurityTest
LoadEnclaveAndTakeSnapshot	./platform/posix/fork_security_test_driver.cc	/^  Status LoadEnclaveAndTakeSnapshot(const std::string &enclave_name,$/;"	f	class:asylo::__anon51::ForkSecurityTest
LoadEnclaveConfig	./platform/primitives/test/sgx_test_backend.h	/^  struct LoadEnclaveConfig {$/;"	s	class:asylo::primitives::test::SgxTestBackend
LoadEnclaveInternal	./platform/core/enclave_manager.cc	/^Status EnclaveManager::LoadEnclaveInternal(const std::string &name,$/;"	f	class:asylo::EnclaveManager
LoadTestEnclave	./platform/primitives/test/sim_test_backend.cc	/^StatusOr<std::shared_ptr<Client>> SimTestBackend::LoadTestEnclave($/;"	f	class:asylo::primitives::test::SimTestBackend
LoadTestEnclaveOrDie	./platform/host_call/test/host_call_test.cc	/^  std::shared_ptr<primitives::Client> LoadTestEnclaveOrDie($/;"	f	class:asylo::host_call::__anon290::HostCallTest
LoadTestEnclaveOrDie	./platform/host_call/test/host_call_test.cc	/^  std::shared_ptr<primitives::Client> LoadTestEnclaveOrDie($/;"	f	class:asylo::host_call::__anon36::HostCallTest
LoadTestEnclaveOrDie	./platform/primitives/test/primitives_test.cc	/^  std::shared_ptr<Client> LoadTestEnclaveOrDie(bool reload) {$/;"	f	class:asylo::primitives::__anon334::PrimitivesTest
LoadTestEnclaveOrDie	./platform/primitives/test/primitives_test.cc	/^  std::shared_ptr<Client> LoadTestEnclaveOrDie(bool reload) {$/;"	f	class:asylo::primitives::__anon80::PrimitivesTest
LoadTestEnclaveOrDie	./platform/primitives/test/test_backend.h	/^  std::shared_ptr<Client> LoadTestEnclaveOrDie($/;"	f	class:asylo::primitives::test::TestBackend
Loader	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  FakeEnclaveLoader Loader() {$/;"	f	class:asylo::__anon184::ApplicationWrapperDriverMainTest
Loader	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  FakeEnclaveLoader Loader() {$/;"	f	class:asylo::__anon438::ApplicationWrapperDriverMainTest
LoaderTest	./test/loader/loader_test.cc	/^class LoaderTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon215	file:
LoaderTest	./test/loader/loader_test.cc	/^class LoaderTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon469	file:
Lock	./platform/core/trusted_mutex.cc	/^void TrustedMutex::Lock() {$/;"	f	class:asylo::TrustedMutex
Lock	./platform/core/trusted_spin_lock.cc	/^void TrustedSpinLock::Lock() {$/;"	f	class:asylo::TrustedSpinLock
Lock	./platform/core/untrusted_mutex.cc	/^void UntrustedMutex::Lock() {$/;"	f	class:asylo::UntrustedMutex
Lock	./platform/posix/pthread.cc	/^  void Lock() { pthread_spin_lock(lock_); }$/;"	f	class:__anon296::LockableGuard
Lock	./platform/posix/pthread.cc	/^  void Lock() { pthread_spin_lock(lock_); }$/;"	f	class:__anon42::LockableGuard
LockTest	./platform/core/test/lock_test.cc	/^  LockTest() : lock_(true), non_recursive_(false) {}$/;"	f	class:asylo::__anon130::LockTest
LockTest	./platform/core/test/lock_test.cc	/^  LockTest() : lock_(true), non_recursive_(false) {}$/;"	f	class:asylo::__anon384::LockTest
LockTest	./platform/core/test/lock_test.cc	/^class LockTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon130	file:
LockTest	./platform/core/test/lock_test.cc	/^class LockTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon384	file:
LockView	./util/mutex_guarded.h	/^  LockView(LockView &&other) : mu_(other.mu_), value_(other.value_) {$/;"	f	class:asylo::LockView
LockView	./util/mutex_guarded.h	/^  LockView(absl::Mutex *mu, T *value) : mu_(mu), value_(value) {}$/;"	f	class:asylo::LockView
LockView	./util/mutex_guarded.h	/^class LockView {$/;"	c	namespace:asylo
LockableGuard	./platform/posix/pthread.cc	/^  LockableGuard(LockableType *lockable) : LockableGuard(&lockable->_lock) {}$/;"	f	class:__anon296::LockableGuard
LockableGuard	./platform/posix/pthread.cc	/^  LockableGuard(LockableType *lockable) : LockableGuard(&lockable->_lock) {}$/;"	f	class:__anon42::LockableGuard
LockableGuard	./platform/posix/pthread.cc	/^  LockableGuard(pthread_spinlock_t *lock) : lock_(lock) {$/;"	f	class:__anon296::LockableGuard
LockableGuard	./platform/posix/pthread.cc	/^  LockableGuard(pthread_spinlock_t *lock) : lock_(lock) {$/;"	f	class:__anon42::LockableGuard
LockableGuard	./platform/posix/pthread.cc	/^class LockableGuard {$/;"	c	namespace:__anon296	file:
LockableGuard	./platform/posix/pthread.cc	/^class LockableGuard {$/;"	c	namespace:__anon42	file:
LogBadAlloc	./test/misc/malloc_stress_test.cc	/^void LogBadAlloc(const std::bad_alloc &e, void *brk_start) {$/;"	f	namespace:asylo::__anon196
LogBadAlloc	./test/misc/malloc_stress_test.cc	/^void LogBadAlloc(const std::bad_alloc &e, void *brk_start) {$/;"	f	namespace:asylo::__anon450
LogClientIOStats	./platform/posix/sockets/socket_client.cc	/^void SocketClient::LogClientIOStats() {$/;"	f	class:asylo::SocketClient
LogError	./platform/core/trusted_application.cc	/^void LogError(const Status &status) {$/;"	f	namespace:asylo::__anon135
LogError	./platform/core/trusted_application.cc	/^void LogError(const Status &status) {$/;"	f	namespace:asylo::__anon389
LogMessage	./util/logging.cc	/^LogMessage::LogMessage(const char *file, int line) { Init(file, line, INFO); }$/;"	f	class:asylo::LogMessage
LogMessage	./util/logging.cc	/^LogMessage::LogMessage(const char *file, int line, LogSeverity severity) {$/;"	f	class:asylo::LogMessage
LogMessage	./util/logging.cc	/^LogMessage::LogMessage(const char *file, int line, const std::string &result) {$/;"	f	class:asylo::LogMessage
LogMessage	./util/logging.h	/^class LogMessage {$/;"	c	namespace:asylo
LogMessageFatal	./util/logging.h	/^  LogMessageFatal(const char *file, int line) : LogMessage(file, line, FATAL) {}$/;"	f	class:asylo::LogMessageFatal
LogMessageFatal	./util/logging.h	/^  LogMessageFatal(const char *file, int line, const std::string &result)$/;"	f	class:asylo::LogMessageFatal
LogMessageFatal	./util/logging.h	/^class LogMessageFatal : public LogMessage {$/;"	c	namespace:asylo
LogMessageVoidify	./util/logging.h	/^class LogMessageVoidify {$/;"	c	namespace:asylo
LogNoScope	./platform/posix/syslog_test.cc	/^void LogNoScope(int priority, const std::string &s) {$/;"	f	namespace:asylo::__anon299
LogNoScope	./platform/posix/syslog_test.cc	/^void LogNoScope(int priority, const std::string &s) {$/;"	f	namespace:asylo::__anon45
LogScope	./platform/posix/syslog_test.cc	/^void LogScope(int priority, const std::string &s) {$/;"	f	namespace:asylo::__anon299
LogScope	./platform/posix/syslog_test.cc	/^void LogScope(int priority, const std::string &s) {$/;"	f	namespace:asylo::__anon45
LogServerIOStats	./platform/posix/sockets/socket_server.cc	/^void SocketServer::LogServerIOStats() {$/;"	f	class:asylo::SocketServer
LogSeverity	./util/logging.h	/^enum LogSeverity { INFO, WARNING, ERROR, FATAL, QFATAL };$/;"	g
LogSeverityNames	./util/logging.cc	/^static constexpr const char *LogSeverityNames[5] = {"INFO", "WARNING", "ERROR",$/;"	m	namespace:asylo	file:
Logging	./test/misc/logging_test_enclave.cc	/^class Logging : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
LogicalToPhysical	./platform/storage/utils/offset_translator.cc	/^off_t OffsetTranslator::LogicalToPhysical(off_t offset) const {$/;"	f	class:asylo::platform::storage::OffsetTranslator
MAP_ANON	./platform/posix/include/sys/mman.h	38;"	d
MAP_ANONYMOUS	./platform/posix/include/sys/mman.h	37;"	d
MAP_DENYWRITE	./platform/posix/include/sys/mman.h	40;"	d
MAP_EXECUTABLE	./platform/posix/include/sys/mman.h	41;"	d
MAP_FAILED	./platform/posix/include/sys/mman.h	32;"	d
MAP_FIXED	./platform/posix/include/sys/mman.h	36;"	d
MAP_GROWSDOWN	./platform/posix/include/sys/mman.h	39;"	d
MAP_HUGETLB	./platform/posix/include/sys/mman.h	47;"	d
MAP_LOCKED	./platform/posix/include/sys/mman.h	42;"	d
MAP_NONBLOCK	./platform/posix/include/sys/mman.h	45;"	d
MAP_NORESERVE	./platform/posix/include/sys/mman.h	43;"	d
MAP_POPULATE	./platform/posix/include/sys/mman.h	44;"	d
MAP_PRIVATE	./platform/posix/include/sys/mman.h	35;"	d
MAP_SHARED	./platform/posix/include/sys/mman.h	34;"	d
MAP_STACK	./platform/posix/include/sys/mman.h	46;"	d
MATCHER_P	./platform/posix/syscalls_test_driver.cc	/^MATCHER_P(EqualsStat, rhs_stat_buffer, "") {$/;"	f	namespace:asylo::__anon302
MATCHER_P	./platform/posix/syscalls_test_driver.cc	/^MATCHER_P(EqualsStat, rhs_stat_buffer, "") {$/;"	f	namespace:asylo::__anon48
MATCHER_P	./platform/posix/syscalls_test_driver.cc	/^MATCHER_P(EqualsUtsName, rhs_utsname_buf, "") {$/;"	f	namespace:asylo::__anon302
MATCHER_P	./platform/posix/syscalls_test_driver.cc	/^MATCHER_P(EqualsUtsName, rhs_utsname_buf, "") {$/;"	f	namespace:asylo::__anon48
MATCHER_P	./platform/posix/syscalls_test_driver.cc	/^MATCHER_P(MatchIfAddrs, that, "") {$/;"	f	namespace:asylo::__anon302
MATCHER_P	./platform/posix/syscalls_test_driver.cc	/^MATCHER_P(MatchIfAddrs, that, "") {$/;"	f	namespace:asylo::__anon48
MATCHER_P	./util/fd_utils_test.cc	/^MATCHER_P(HasFlags, flags,$/;"	f	namespace:asylo::__anon240
MATCHER_P	./util/fd_utils_test.cc	/^MATCHER_P(HasFlags, flags,$/;"	f	namespace:asylo::__anon494
MAXCDNAME	./platform/posix/include/arpa/nameser.h	204;"	d
MAXCDNAME	./platform/system/include/arpa/nameser_compat.h	23;"	d
MAXDNAME	./platform/posix/include/arpa/nameser.h	203;"	d
MAXLABEL	./platform/posix/include/arpa/nameser.h	205;"	d
MAXLABEL	./platform/system/include/arpa/nameser_compat.h	24;"	d
MCAST_BLOCK_SOURCE	./platform/posix/include/netinet/in.h	179;"	d
MCAST_JOIN_GROUP	./platform/posix/include/netinet/in.h	178;"	d
MCAST_JOIN_SOURCE_GROUP	./platform/posix/include/netinet/in.h	182;"	d
MCAST_LEAVE_GROUP	./platform/posix/include/netinet/in.h	181;"	d
MCAST_LEAVE_SOURCE_GROUP	./platform/posix/include/netinet/in.h	183;"	d
MCAST_MSFILTER	./platform/posix/include/netinet/in.h	184;"	d
MCAST_UNBLOCK_SOURCE	./platform/posix/include/netinet/in.h	180;"	d
MODE64BIT	./identity/sgx/secs_attributes.h	/^  MODE64BIT = 2,  \/\/ Indicates whether the enclave is a 64-bit enclave$/;"	m	class:asylo::sgx::SecsAttributeBit
MOVED	./util/status_error_space.h	/^  MOVED = 1,$/;"	m	class:asylo::error::StatusError
MSG_CMSG_CLOEXEC	./platform/posix/include/sys/socket.h	/^  MSG_CMSG_CLOEXEC = 0x40000000,$/;"	e	enum:__anon4
MSG_CMSG_CLOEXEC	./platform/posix/include/sys/socket.h	266;"	d
MSG_CONFIRM	./platform/posix/include/sys/socket.h	/^  MSG_CONFIRM = 0x800,$/;"	e	enum:__anon4
MSG_CONFIRM	./platform/posix/include/sys/socket.h	252;"	d
MSG_CTRUNC	./platform/posix/include/sys/socket.h	/^  MSG_CTRUNC = 0x08,$/;"	e	enum:__anon4
MSG_CTRUNC	./platform/posix/include/sys/socket.h	236;"	d
MSG_DONTROUTE	./platform/posix/include/sys/socket.h	/^  MSG_DONTROUTE = 0x04,$/;"	e	enum:__anon4
MSG_DONTROUTE	./platform/posix/include/sys/socket.h	234;"	d
MSG_DONTWAIT	./platform/posix/include/sys/socket.h	/^  MSG_DONTWAIT = 0x40,$/;"	e	enum:__anon4
MSG_DONTWAIT	./platform/posix/include/sys/socket.h	242;"	d
MSG_EOR	./platform/posix/include/sys/socket.h	/^  MSG_EOR = 0x80,$/;"	e	enum:__anon4
MSG_EOR	./platform/posix/include/sys/socket.h	244;"	d
MSG_ERRQUEUE	./platform/posix/include/sys/socket.h	/^  MSG_ERRQUEUE = 0x2000,$/;"	e	enum:__anon4
MSG_ERRQUEUE	./platform/posix/include/sys/socket.h	256;"	d
MSG_FASTOPEN	./platform/posix/include/sys/socket.h	/^  MSG_FASTOPEN = 0x20000000,$/;"	e	enum:__anon4
MSG_FASTOPEN	./platform/posix/include/sys/socket.h	264;"	d
MSG_FIN	./platform/posix/include/sys/socket.h	/^  MSG_FIN = 0x200,$/;"	e	enum:__anon4
MSG_FIN	./platform/posix/include/sys/socket.h	248;"	d
MSG_MORE	./platform/posix/include/sys/socket.h	/^  MSG_MORE = 0x8000,$/;"	e	enum:__anon4
MSG_MORE	./platform/posix/include/sys/socket.h	260;"	d
MSG_NOSIGNAL	./platform/posix/include/sys/socket.h	/^  MSG_NOSIGNAL = 0x4000,$/;"	e	enum:__anon4
MSG_NOSIGNAL	./platform/posix/include/sys/socket.h	258;"	d
MSG_OOB	./platform/posix/include/sys/socket.h	/^  MSG_OOB = 0x01,$/;"	e	enum:__anon4
MSG_OOB	./platform/posix/include/sys/socket.h	230;"	d
MSG_PEEK	./platform/posix/include/sys/socket.h	/^  MSG_PEEK = 0x02,$/;"	e	enum:__anon4
MSG_PEEK	./platform/posix/include/sys/socket.h	232;"	d
MSG_PROXY	./platform/posix/include/sys/socket.h	/^  MSG_PROXY = 0x10,$/;"	e	enum:__anon4
MSG_PROXY	./platform/posix/include/sys/socket.h	238;"	d
MSG_RST	./platform/posix/include/sys/socket.h	/^  MSG_RST = 0x1000,$/;"	e	enum:__anon4
MSG_RST	./platform/posix/include/sys/socket.h	254;"	d
MSG_SYN	./platform/posix/include/sys/socket.h	/^  MSG_SYN = 0x400,$/;"	e	enum:__anon4
MSG_SYN	./platform/posix/include/sys/socket.h	250;"	d
MSG_TRUNC	./platform/posix/include/sys/socket.h	/^  MSG_TRUNC = 0x20,$/;"	e	enum:__anon4
MSG_TRUNC	./platform/posix/include/sys/socket.h	240;"	d
MSG_WAITALL	./platform/posix/include/sys/socket.h	/^  MSG_WAITALL = 0x100,$/;"	e	enum:__anon4
MSG_WAITALL	./platform/posix/include/sys/socket.h	246;"	d
MSG_WAITFORONE	./platform/posix/include/sys/socket.h	/^  MSG_WAITFORONE = 0x10000,$/;"	e	enum:__anon4
MSG_WAITFORONE	./platform/posix/include/sys/socket.h	262;"	d
MakeAssertionDescription	./identity/assertion_description_util_test.cc	/^AssertionDescription MakeAssertionDescription(EnclaveIdentityType identity_type,$/;"	f	namespace:asylo::__anon178
MakeAssertionDescription	./identity/assertion_description_util_test.cc	/^AssertionDescription MakeAssertionDescription(EnclaveIdentityType identity_type,$/;"	f	namespace:asylo::__anon432
MakeAssertionOffer	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^  bool MakeAssertionOffer(absl::string_view local_attestation_domain,$/;"	f	class:asylo::__anon159::SgxLocalAssertionVerifierTest
MakeAssertionOffer	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^  bool MakeAssertionOffer(absl::string_view local_attestation_domain,$/;"	f	class:asylo::__anon413::SgxLocalAssertionVerifierTest
MakeAssertionRequest	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  bool MakeAssertionRequest(absl::string_view targetinfo,$/;"	f	class:asylo::__anon149::SgxLocalAssertionGeneratorTest
MakeAssertionRequest	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  bool MakeAssertionRequest(absl::string_view targetinfo,$/;"	f	class:asylo::__anon403::SgxLocalAssertionGeneratorTest
MakeAssertionRequestWithRandomTarget	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  bool MakeAssertionRequestWithRandomTarget($/;"	f	class:asylo::__anon149::SgxLocalAssertionGeneratorTest
MakeAssertionRequestWithRandomTarget	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  bool MakeAssertionRequestWithRandomTarget($/;"	f	class:asylo::__anon403::SgxLocalAssertionGeneratorTest
MakeCheckOpString	./util/logging.h	/^std::string *MakeCheckOpString(const T1 &v1, const T2 &v2,$/;"	f	namespace:asylo
MakeCheckOpValueString	./util/logging.cc	/^void MakeCheckOpValueString(std::ostream *os, const char &v) {$/;"	f	namespace:asylo
MakeCheckOpValueString	./util/logging.cc	/^void MakeCheckOpValueString(std::ostream *os, const signed char &v) {$/;"	f	namespace:asylo
MakeCheckOpValueString	./util/logging.cc	/^void MakeCheckOpValueString(std::ostream *os, const std::nullptr_t &v) {$/;"	f	namespace:asylo
MakeCheckOpValueString	./util/logging.cc	/^void MakeCheckOpValueString(std::ostream *os, const unsigned char &v) {$/;"	f	namespace:asylo
MakeCheckOpValueString	./util/logging.h	/^inline void MakeCheckOpValueString(std::ostream *os, const T &v) {$/;"	f	namespace:asylo
MakeCryptor	./identity/sgx/local_secret_sealer_helpers.cc	/^StatusOr<std::unique_ptr<AeadCryptor>> MakeCryptor(CipherSuite cipher_suite,$/;"	f	namespace:asylo::sgx::internal
MakeDescription	./identity/identity_expectation_matcher_test.cc	/^EnclaveIdentityDescription MakeDescription() {$/;"	f	namespace:asylo::__anon170
MakeDescription	./identity/identity_expectation_matcher_test.cc	/^EnclaveIdentityDescription MakeDescription() {$/;"	f	namespace:asylo::__anon424
MakeEkepContextBlob	./grpc/auth/core/ekep_handshaker_util.cc	/^bool MakeEkepContextBlob(const std::string &public_key,$/;"	f	namespace:asylo
MakeExpectation	./identity/identity_expectation_matcher_test.cc	/^EnclaveIdentityExpectation MakeExpectation(std::string id) {$/;"	f	namespace:asylo::__anon170
MakeExpectation	./identity/identity_expectation_matcher_test.cc	/^EnclaveIdentityExpectation MakeExpectation(std::string id) {$/;"	f	namespace:asylo::__anon424
MakeIdentity	./identity/identity_expectation_matcher_test.cc	/^EnclaveIdentity MakeIdentity(std::string id) {$/;"	f	namespace:asylo::__anon170
MakeIdentity	./identity/identity_expectation_matcher_test.cc	/^EnclaveIdentity MakeIdentity(std::string id) {$/;"	f	namespace:asylo::__anon424
MakePrimitiveStatus	./platform/primitives/util/status_conversions.cc	/^PrimitiveStatus MakePrimitiveStatus(const Status& status) {$/;"	f	namespace:asylo::primitives
MakeRemoteAssertion	./identity/sgx/remote_assertion_util.cc	/^Status MakeRemoteAssertion(const std::string &user_data,$/;"	f	namespace:asylo::sgx
MakeRpc	./examples/grpc_server/grpc_server_test.cc	/^  asylo::Status MakeRpc(const std::string &input_word,$/;"	f	class:examples::grpc_server::__anon244::GrpcServerTest
MakeRpc	./examples/grpc_server/grpc_server_test.cc	/^  asylo::Status MakeRpc(const std::string &input_word,$/;"	f	class:examples::grpc_server::__anon498::GrpcServerTest
MakeSecsAttributeSet	./identity/sgx/secs_attributes.cc	/^StatusOr<SecsAttributeSet> MakeSecsAttributeSet($/;"	f	namespace:asylo::sgx
MakeSignerAssignedIdentity	./identity/sgx/code_identity_util_test.cc	/^  SignerAssignedIdentity MakeSignerAssignedIdentity($/;"	f	class:asylo::sgx::__anon152::CodeIdentityUtilTest
MakeSignerAssignedIdentity	./identity/sgx/code_identity_util_test.cc	/^  SignerAssignedIdentity MakeSignerAssignedIdentity($/;"	f	class:asylo::sgx::__anon406::CodeIdentityUtilTest
MakeSockaddrReusable	./platform/posix/sockets/socket_server.cc	/^int MakeSockaddrReusable(int fd) {$/;"	f	namespace:asylo::__anon306
MakeSockaddrReusable	./platform/posix/sockets/socket_server.cc	/^int MakeSockaddrReusable(int fd) {$/;"	f	namespace:asylo::__anon52
MakeStatus	./grpc/util/grpc_server_launcher.h	/^  Status MakeStatus(error::GoogleError code, const std::string &message) const {$/;"	f	class:asylo::GrpcServerLauncher
MakeStatus	./platform/primitives/util/status_conversions.cc	/^Status MakeStatus(const PrimitiveStatus& primitiveStatus) {$/;"	f	namespace:asylo::primitives
MakeTestData	./platform/common/ring_buffer_test.cc	/^std::vector<uint8_t> MakeTestData(size_t size) {$/;"	f	namespace:asylo
MakeView	./crypto/util/byte_container_util.h	/^ConstViewT MakeView(ByteContainerView view) {$/;"	f	namespace:asylo
Malloc	./platform/core/untrusted_cache_malloc.cc	/^void *UntrustedCacheMalloc::Malloc(size_t size) {$/;"	f	class:asylo::UntrustedCacheMalloc
MallocDeleter	./platform/common/memory.h	/^struct MallocDeleter {$/;"	s	namespace:asylo
MallocDeleter	./platform/system_call/system_call.cc	/^struct MallocDeleter {$/;"	s	namespace:__anon121	file:
MallocDeleter	./platform/system_call/system_call.cc	/^struct MallocDeleter {$/;"	s	namespace:__anon375	file:
MallocHook	./platform/posix/memory/memory.cc	/^void *MallocHook(size_t size, void *pool) {$/;"	f	namespace:__anon316
MallocHook	./platform/posix/memory/memory.cc	/^void *MallocHook(size_t size, void *pool) {$/;"	f	namespace:__anon62
MallocStress	./test/misc/malloc_stress_test.cc	/^void *MallocStress(void *) {$/;"	f	namespace:asylo::__anon196
MallocStress	./test/misc/malloc_stress_test.cc	/^void *MallocStress(void *) {$/;"	f	namespace:asylo::__anon450
ManagedResource	./platform/core/shared_resource_manager.h	/^    ManagedResource(const SharedName &name, T *pointer)$/;"	f	struct:asylo::SharedResourceManager::ManagedResource
ManagedResource	./platform/core/shared_resource_manager.h	/^  struct ManagedResource : public ResourceHandle {$/;"	s	class:asylo::SharedResourceManager
MarkEnclaveAborted	./platform/primitives/util/trusted_runtime_helper.cc	/^void MarkEnclaveAborted() {$/;"	f	namespace:asylo::primitives
MarkEnclaveInitialized	./platform/primitives/util/trusted_runtime_helper.cc	/^void MarkEnclaveInitialized() {$/;"	f	namespace:asylo::primitives
Match	./identity/delegating_identity_expectation_matcher.cc	/^StatusOr<bool> DelegatingIdentityExpectationMatcher::Match($/;"	f	class:asylo::DelegatingIdentityExpectationMatcher
Match	./identity/null_identity/null_identity_expectation_matcher.cc	/^StatusOr<bool> NullIdentityExpectationMatcher::Match($/;"	f	class:asylo::NullIdentityExpectationMatcher
Match	./identity/sgx/sgx_code_identity_expectation_matcher.cc	/^StatusOr<bool> SgxCodeIdentityExpectationMatcher::Match($/;"	f	class:asylo::SgxCodeIdentityExpectationMatcher
MatchAndExplain	./test/util/finite_domain_fuzz.h	/^  bool MatchAndExplain($/;"	f	class:asylo::FiniteDomainMatcher
MatchAndExplain	./test/util/proto_matchers.h	/^  bool MatchAndExplain(const MessageT &message,$/;"	f	class:asylo::internal::ProtoMatcher
MatchExplanation	./test/util/status_matchers_test.cc	/^std::string MatchExplanation(const MatcherT &matcher, const MatcheeT &value) {$/;"	f	namespace:asylo::__anon218
MatchExplanation	./test/util/status_matchers_test.cc	/^std::string MatchExplanation(const MatcherT &matcher, const MatcheeT &value) {$/;"	f	namespace:asylo::__anon472
MatchIdentityToExpectation	./identity/sgx/code_identity_util.cc	/^StatusOr<bool> MatchIdentityToExpectation($/;"	f	namespace:asylo::sgx
Matcher	./test/util/status_matchers.h	/^  operator ::testing::Matcher<const Status &>() const {$/;"	f	class:asylo::internal::IsOkMatcherGenerator::operator::testing
Matcher	./test/util/status_matchers.h	/^  operator ::testing::Matcher<const StatusOr<T> &>() const {$/;"	f	class:asylo::internal::IsOkAndHoldsGenerator::operator::testing
Matcher	./test/util/status_matchers.h	/^  operator ::testing::Matcher<const StatusOr<T> &>() const {$/;"	f	class:asylo::internal::IsOkMatcherGenerator::operator::testing
MatcherDescription	./test/util/status_matchers_test.cc	/^std::string MatcherDescription(const MatcherT &matcher) {$/;"	f	namespace:asylo::__anon218
MatcherDescription	./test/util/status_matchers_test.cc	/^std::string MatcherDescription(const MatcherT &matcher) {$/;"	f	namespace:asylo::__anon472
MaxMessageSize	./crypto/aead_cryptor.cc	/^StatusOr<size_t> AeadCryptor::MaxMessageSize(AeadScheme scheme) {$/;"	f	class:asylo::experimental::AeadCryptor
MaxMessageSize	./crypto/aead_cryptor.cc	/^size_t AeadCryptor::MaxMessageSize() const { return max_message_size_; }$/;"	f	class:asylo::experimental::AeadCryptor
MaxMessageSize	./identity/sgx/sgx_local_secret_sealer.cc	/^StatusOr<size_t> SgxLocalSecretSealer::MaxMessageSize($/;"	f	class:asylo::SgxLocalSecretSealer
MaxSealOverhead	./crypto/aead_cryptor.cc	/^size_t AeadCryptor::MaxSealOverhead() const { return key_->MaxSealOverhead(); }$/;"	f	class:asylo::experimental::AeadCryptor
MaxSealOverhead	./crypto/aead_key.cc	/^size_t AeadKey::MaxSealOverhead() const { return max_seal_overhead_; }$/;"	f	class:asylo::AeadKey
MaxSealedMessages	./crypto/aead_cryptor.cc	/^StatusOr<uint64_t> AeadCryptor::MaxSealedMessages(AeadScheme scheme) {$/;"	f	class:asylo::experimental::AeadCryptor
MaxSealedMessages	./crypto/aead_cryptor.cc	/^uint64_t AeadCryptor::MaxSealedMessages() const { return max_sealed_messages_; }$/;"	f	class:asylo::experimental::AeadCryptor
MaxSealedMessages	./identity/sgx/sgx_local_secret_sealer.cc	/^StatusOr<uint64_t> SgxLocalSecretSealer::MaxSealedMessages($/;"	f	class:asylo::SgxLocalSecretSealer
MemBlock	./platform/core/shared_name.h	/^  static SharedName MemBlock(const std::string &name) {$/;"	f	class:asylo::SharedName
MemEq	./platform/posix/pipe_test.cc	/^::testing::Matcher<const void *> MemEq(const void *buffer, size_t size) {$/;"	f	namespace:asylo::__anon301
MemEq	./platform/posix/pipe_test.cc	/^::testing::Matcher<const void *> MemEq(const void *buffer, size_t size) {$/;"	f	namespace:asylo::__anon47
MemEqMatcher	./platform/posix/pipe_test.cc	/^  MemEqMatcher(const void *buffer, size_t size)$/;"	f	class:asylo::__anon301::MemEqMatcher
MemEqMatcher	./platform/posix/pipe_test.cc	/^  MemEqMatcher(const void *buffer, size_t size)$/;"	f	class:asylo::__anon47::MemEqMatcher
MemEqMatcher	./platform/posix/pipe_test.cc	/^class MemEqMatcher : public ::testing::MatcherInterface<const void *> {$/;"	c	namespace:asylo::__anon301	file:
MemEqMatcher	./platform/posix/pipe_test.cc	/^class MemEqMatcher : public ::testing::MatcherInterface<const void *> {$/;"	c	namespace:asylo::__anon47	file:
MessageHeader	./platform/system_call/message.h	/^struct MessageHeader {$/;"	s	namespace:asylo::system_call
MessageReader	./platform/primitives/util/message.h	/^  MessageReader(const void *data, size_t size) {$/;"	f	class:asylo::primitives::MessageReader
MessageReader	./platform/primitives/util/message.h	/^class MessageReader {$/;"	c	namespace:asylo::primitives
MessageReader	./platform/system_call/message.h	/^  explicit MessageReader(primitives::Extent extent) : extent_(extent) {}$/;"	f	class:asylo::system_call::MessageReader
MessageReader	./platform/system_call/message.h	/^class MessageReader {$/;"	c	namespace:asylo::system_call
MessageSize	./platform/primitives/util/message.h	/^  size_t MessageSize() const {$/;"	f	class:asylo::primitives::MessageWriter
MessageSize	./platform/system_call/message.cc	/^size_t MessageWriter::MessageSize() const {$/;"	f	class:asylo::system_call::MessageWriter
MessageWriter	./platform/primitives/util/message.h	/^class MessageWriter {$/;"	c	namespace:asylo::primitives
MessageWriter	./platform/system_call/message.cc	/^MessageWriter::MessageWriter($/;"	f	class:asylo::system_call::MessageWriter
MessageWriter	./platform/system_call/message.h	/^class MessageWriter {$/;"	c	namespace:asylo::system_call
MessengerClient	./test/grpc/messenger_client_impl.h	/^  MessengerClient(const std::shared_ptr<::grpc::ChannelInterface> &channel)$/;"	f	class:asylo::test::MessengerClient
MessengerClient	./test/grpc/messenger_client_impl.h	/^class MessengerClient {$/;"	c	namespace:asylo::test
MessengerServer	./test/grpc/messenger_server_impl.h	/^class MessengerServer : public T::Service {$/;"	c	namespace:asylo::test
MiscSelectPrinter	./identity/sgx/proto_format.cc	/^class MiscSelectPrinter : public TextFormat::FastFieldValuePrinter {$/;"	c	namespace:asylo::sgx::__anon163	file:
MiscSelectPrinter	./identity/sgx/proto_format.cc	/^class MiscSelectPrinter : public TextFormat::FastFieldValuePrinter {$/;"	c	namespace:asylo::sgx::__anon417	file:
Mkdir	./platform/posix/io/io_manager.cc	/^int IOManager::Mkdir(const char *path, mode_t mode) {$/;"	f	class:asylo::io::IOManager
Mkdir	./platform/posix/io/io_manager.h	/^    virtual int Mkdir(const char *path, mode_t mode) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Mkdir	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Mkdir(const char *path, mode_t mode) {$/;"	f	class:asylo::io::NativePathHandler
MockEnclaveAuthContext	./grpc/auth/test/mock_enclave_auth_context.h	/^class MockEnclaveAuthContext : public EnclaveAuthContext {$/;"	c	namespace:asylo
MockEnclaveClient	./test/util/mock_enclave_client.h	/^  MockEnclaveClient() : EnclaveClient("mock") {}$/;"	f	class:asylo::MockEnclaveClient
MockEnclaveClient	./test/util/mock_enclave_client.h	/^class MockEnclaveClient : public EnclaveClient {$/;"	c	namespace:asylo
MockEnclaveLoader	./test/util/mock_enclave_loader.h	/^class MockEnclaveLoader : public EnclaveLoader {$/;"	c	namespace:asylo
MockIdentityExpectationMatcher	./identity/test/mock_identity_expectation_matcher.h	/^class MockIdentityExpectationMatcher : public IdentityExpectationMatcher {$/;"	c	namespace:asylo
MockedEnclaveClient	./platform/host_call/untrusted/host_call_handlers_initializer_test.cc	/^  MockedEnclaveClient($/;"	f	class:asylo::host_call::MockedEnclaveClient
MockedEnclaveClient	./platform/host_call/untrusted/host_call_handlers_initializer_test.cc	/^class MockedEnclaveClient : public primitives::Client {$/;"	c	namespace:asylo::host_call	file:
MockedEnclaveClient	./platform/primitives/util/dispatch_table_test.cc	/^  MockedEnclaveClient() : Client($/;"	f	class:asylo::primitives::__anon343::MockedEnclaveClient
MockedEnclaveClient	./platform/primitives/util/dispatch_table_test.cc	/^  MockedEnclaveClient() : Client($/;"	f	class:asylo::primitives::__anon89::MockedEnclaveClient
MockedEnclaveClient	./platform/primitives/util/dispatch_table_test.cc	/^class MockedEnclaveClient : public Client {$/;"	c	namespace:asylo::primitives::__anon343	file:
MockedEnclaveClient	./platform/primitives/util/dispatch_table_test.cc	/^class MockedEnclaveClient : public Client {$/;"	c	namespace:asylo::primitives::__anon89	file:
MonotonicClock	./platform/core/enclave_clock_test.cc	/^int64_t MonotonicClock() {$/;"	f	namespace:asylo::__anon136
MonotonicClock	./platform/core/enclave_clock_test.cc	/^int64_t MonotonicClock() {$/;"	f	namespace:asylo::__anon390
MonotonicClock	./platform/core/enclave_manager.cc	/^int64_t MonotonicClock() {$/;"	f	namespace:asylo::__anon125
MonotonicClock	./platform/core/enclave_manager.cc	/^int64_t MonotonicClock() {$/;"	f	namespace:asylo::__anon379
MonotonicClock	./platform/posix/time.cc	/^inline int64_t MonotonicClock() {$/;"	f	namespace:__anon314
MonotonicClock	./platform/posix/time.cc	/^inline int64_t MonotonicClock() {$/;"	f	namespace:__anon60
MoveFrom	./util/file_mapping.cc	/^void FileMapping::MoveFrom(FileMapping *other) {$/;"	f	class:asylo::FileMapping
MoveObject	./identity/util/aligned_object_ptr_test.cc	/^AlignedObjectPtr<T, Align> &&MoveObject(AlignedObjectPtr<T, Align> *t) {$/;"	f	namespace:asylo::__anon172
MoveObject	./identity/util/aligned_object_ptr_test.cc	/^AlignedObjectPtr<T, Align> &&MoveObject(AlignedObjectPtr<T, Align> *t) {$/;"	f	namespace:asylo::__anon426
MoveOnlyDataType	./util/statusor_test.cc	/^  MoveOnlyDataType(MoveOnlyDataType &&other) : data(other.data) {$/;"	f	struct:asylo::__anon231::MoveOnlyDataType
MoveOnlyDataType	./util/statusor_test.cc	/^  MoveOnlyDataType(MoveOnlyDataType &&other) : data(other.data) {$/;"	f	struct:asylo::__anon485::MoveOnlyDataType
MoveOnlyDataType	./util/statusor_test.cc	/^  explicit MoveOnlyDataType(int x) : data(new int(x)) {}$/;"	f	struct:asylo::__anon231::MoveOnlyDataType
MoveOnlyDataType	./util/statusor_test.cc	/^  explicit MoveOnlyDataType(int x) : data(new int(x)) {}$/;"	f	struct:asylo::__anon485::MoveOnlyDataType
MoveOnlyDataType	./util/statusor_test.cc	/^struct MoveOnlyDataType {$/;"	s	namespace:asylo::__anon231	file:
MoveOnlyDataType	./util/statusor_test.cc	/^struct MoveOnlyDataType {$/;"	s	namespace:asylo::__anon485	file:
MoveStatusOr	./util/statusor_test.cc	/^StatusOr<T> &&MoveStatusOr(StatusOr<T> *statusor) {$/;"	f	namespace:asylo::__anon231
MoveStatusOr	./util/statusor_test.cc	/^StatusOr<T> &&MoveStatusOr(StatusOr<T> *statusor) {$/;"	f	namespace:asylo::__anon485
MoveToFront	./platform/storage/utils/record_store.h	/^  void MoveToFront(ConstNodeRef node) {$/;"	f	class:asylo::RecordStore
MultiBufferInputStream	./grpc/auth/util/multi_buffer_input_stream.cc	/^MultiBufferInputStream::MultiBufferInputStream()$/;"	f	class:asylo::MultiBufferInputStream
MultiBufferInputStream	./grpc/auth/util/multi_buffer_input_stream.h	/^class MultiBufferInputStream : public ZeroCopyInputStream {$/;"	c	namespace:asylo
MultiplyByTwo	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus MultiplyByTwo(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon335
MultiplyByTwo	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus MultiplyByTwo(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon81
MultiplyByTwoOrDie	./platform/primitives/test/primitives_test.cc	/^int32_t MultiplyByTwoOrDie(const std::shared_ptr<Client> &client,$/;"	f	namespace:asylo::primitives::__anon334
MultiplyByTwoOrDie	./platform/primitives/test/primitives_test.cc	/^int32_t MultiplyByTwoOrDie(const std::shared_ptr<Client> &client,$/;"	f	namespace:asylo::primitives::__anon80
MutexGuarded	./util/mutex_guarded.h	/^  MutexGuarded(MutexGuarded &&other) : value_(other.Release()) {}$/;"	f	class:asylo::MutexGuarded
MutexGuarded	./util/mutex_guarded.h	/^  MutexGuarded(T value, absl::ConstInitType const_init)$/;"	f	class:asylo::MutexGuarded
MutexGuarded	./util/mutex_guarded.h	/^  explicit MutexGuarded(T value) : value_(std::forward<T>(value)) {}$/;"	f	class:asylo::MutexGuarded
MutexGuarded	./util/mutex_guarded.h	/^class MutexGuarded {$/;"	c	namespace:asylo
MyTypes	./crypto/aes_gcm_siv_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon26	file:
MyTypes	./crypto/aes_gcm_siv_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon280	file:
MyTypes	./crypto/util/byte_container_view_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon23	file:
MyTypes	./crypto/util/byte_container_view_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon277	file:
MyTypes	./crypto/util/bytes_test.cc	/^typedef ::testing::Types<SafeBytes<kSize>, UnsafeBytes<kSize>> MyTypes;$/;"	t	namespace:asylo::__anon24	file:
MyTypes	./crypto/util/bytes_test.cc	/^typedef ::testing::Types<SafeBytes<kSize>, UnsafeBytes<kSize>> MyTypes;$/;"	t	namespace:asylo::__anon278	file:
MyTypes	./crypto/util/trivial_object_util_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon22	file:
MyTypes	./crypto/util/trivial_object_util_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon276	file:
MyTypes	./platform/common/singleton_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon112	file:
MyTypes	./platform/common/singleton_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon366	file:
MyTypes	./util/cleansing_allocator_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon239	file:
MyTypes	./util/cleansing_allocator_test.cc	/^    MyTypes;$/;"	t	namespace:asylo::__anon493	file:
NAMESERVER_PORT	./platform/posix/include/arpa/nameser.h	215;"	d
NAMESERVER_PORT	./platform/system/include/arpa/nameser_compat.h	48;"	d
NCCS	./platform/posix/include/sys/termios.h	30;"	d
NGREG	./platform/posix/include/sys/ucontext.h	32;"	d
NOERROR	./platform/posix/include/arpa/nameser.h	223;"	d
NOERROR	./platform/system/include/arpa/nameser_compat.h	30;"	d
NOTAUTH	./platform/posix/include/arpa/nameser.h	232;"	d
NOTIMP	./platform/posix/include/arpa/nameser.h	227;"	d
NOTIMP	./platform/system/include/arpa/nameser_compat.h	33;"	d
NOTZONE	./platform/posix/include/arpa/nameser.h	233;"	d
NOT_ENOUGH_DATA	./grpc/auth/core/ekep_handshaker.h	/^    NOT_ENOUGH_DATA = 0,$/;"	m	class:asylo::EkepHandshaker::Result
NOT_LAUNCHED	./grpc/util/grpc_server_launcher.h	/^  enum class State { NOT_LAUNCHED, LAUNCHED, TERMINATED };$/;"	m	class:asylo::GrpcServerLauncher::State
NOT_STARTED	./grpc/auth/core/ekep_handshaker.h	/^    NOT_STARTED = 0,$/;"	m	class:asylo::EkepHandshaker::HandshakeState
NS_CMPRSFLGS	./platform/posix/include/arpa/nameser.h	153;"	d
NS_CMPRSFLGS	./platform/system/include/arpa/nameser.h	29;"	d
NS_DEFAULTPORT	./platform/posix/include/arpa/nameser.h	154;"	d
NS_DEFAULTPORT	./platform/system/include/arpa/nameser.h	27;"	d
NS_HFIXEDSZ	./platform/posix/include/arpa/nameser.h	145;"	d
NS_HFIXEDSZ	./platform/system/include/arpa/nameser.h	22;"	d
NS_IN6ADDRSZ	./platform/posix/include/arpa/nameser.h	152;"	d
NS_IN6ADDRSZ	./platform/system/include/arpa/nameser.h	31;"	d
NS_INADDRSZ	./platform/posix/include/arpa/nameser.h	151;"	d
NS_INADDRSZ	./platform/system/include/arpa/nameser.h	30;"	d
NS_INT16SZ	./platform/posix/include/arpa/nameser.h	149;"	d
NS_INT32SZ	./platform/posix/include/arpa/nameser.h	148;"	d
NS_INT8SZ	./platform/posix/include/arpa/nameser.h	150;"	d
NS_MAXCDNAME	./platform/posix/include/arpa/nameser.h	143;"	d
NS_MAXCDNAME	./platform/system/include/arpa/nameser.h	23;"	d
NS_MAXDNAME	./platform/posix/include/arpa/nameser.h	141;"	d
NS_MAXLABEL	./platform/posix/include/arpa/nameser.h	144;"	d
NS_MAXLABEL	./platform/system/include/arpa/nameser.h	24;"	d
NS_MAXMSG	./platform/posix/include/arpa/nameser.h	142;"	d
NS_NOTIFY_OP	./platform/posix/include/arpa/nameser.h	220;"	d
NS_PACKETSZ	./platform/posix/include/arpa/nameser.h	140;"	d
NS_PACKETSZ	./platform/system/include/arpa/nameser.h	28;"	d
NS_QFIXEDSZ	./platform/posix/include/arpa/nameser.h	146;"	d
NS_QFIXEDSZ	./platform/system/include/arpa/nameser.h	25;"	d
NS_RRFIXEDSZ	./platform/posix/include/arpa/nameser.h	147;"	d
NS_RRFIXEDSZ	./platform/system/include/arpa/nameser.h	26;"	d
NS_UPDATE_OP	./platform/posix/include/arpa/nameser.h	221;"	d
NXDOMAIN	./platform/posix/include/arpa/nameser.h	226;"	d
NXDOMAIN	./platform/system/include/arpa/nameser_compat.h	32;"	d
NXRRSET	./platform/posix/include/arpa/nameser.h	231;"	d
Name	./platform/common/static_map_test.cc	/^  virtual std::string Name() const { return "Foo"; }$/;"	f	class:asylo::__anon101::Foo
Name	./platform/common/static_map_test.cc	/^  virtual std::string Name() const { return "Foo"; }$/;"	f	class:asylo::__anon355::Foo
Name	./platform/primitives/untrusted_primitives.h	/^  virtual const absl::string_view &Name() const { return name_; }$/;"	f	class:asylo::primitives::Client
NameTable	./util/elf_reader.cc	/^StatusOr<absl::Span<const uint8_t>> ElfReaderCreator::NameTable($/;"	f	class:asylo::ElfReaderCreator
NameTableHeader	./util/elf_reader.cc	/^StatusOr<const Elf64_Shdr *> ElfReaderCreator::NameTableHeader($/;"	f	class:asylo::ElfReaderCreator
NameTableIndex	./util/elf_reader.cc	/^StatusOr<uint16_t> ElfReaderCreator::NameTableIndex($/;"	f	class:asylo::ElfReaderCreator
NamedIdentityExpectationMatcher	./identity/named_identity_expectation_matcher.h	/^class NamedIdentityExpectationMatcher : public IdentityExpectationMatcher {$/;"	c	namespace:asylo
Namer	./identity/enclave_assertion_generator.h	/^struct Namer<EnclaveAssertionGenerator> {$/;"	s	namespace:asylo
Namer	./identity/enclave_assertion_verifier.h	/^struct Namer<EnclaveAssertionVerifier> {$/;"	s	namespace:asylo
Namer	./identity/named_identity_expectation_matcher.h	/^struct Namer<NamedIdentityExpectationMatcher> {$/;"	s	namespace:asylo
Namer	./identity/secret_sealer.h	/^struct Namer<SecretSealer> {$/;"	s	namespace:asylo
Namer	./platform/common/static_map_test.cc	/^struct Namer<Foo> {$/;"	s	namespace:asylo	file:
NanosecondsToTimeSpec	./platform/common/time_util.cc	/^timespec *NanosecondsToTimeSpec(timespec *ts, int64_t nanosecs) {$/;"	f	namespace:asylo
NanosecondsToTimeVal	./platform/common/time_util.cc	/^timeval *NanosecondsToTimeVal(timeval *tv, int64_t nanosecs) {$/;"	f	namespace:asylo
NativePathHandler	./platform/posix/io/native_paths.h	/^class NativePathHandler : public io::IOManager::VirtualPathHandler {$/;"	c	namespace:asylo::io
NewString	./util/logging.cc	/^std::string *CheckOpMessageBuilder::NewString() {$/;"	f	class:asylo::CheckOpMessageBuilder
Next	./grpc/auth/util/multi_buffer_input_stream.cc	/^bool MultiBufferInputStream::Next(const void **data, int *size) {$/;"	f	class:asylo::MultiBufferInputStream
NextHailstoneNumber	./test/util/test_binary.cc	/^uint64_t NextHailstoneNumber(uint64_t number) {$/;"	f	namespace:__anon220
NextHailstoneNumber	./test/util/test_binary.cc	/^uint64_t NextHailstoneNumber(uint64_t number) {$/;"	f	namespace:__anon474
NextHandshakeStep	./grpc/auth/core/ekep_handshaker.cc	/^EkepHandshaker::Result EkepHandshaker::NextHandshakeStep($/;"	f	class:asylo::EkepHandshaker
NextNonce	./crypto/aes_gcm_siv.cc	/^Status AesGcmSivNonceGenerator::NextNonce($/;"	f	class:asylo::AesGcmSivNonceGenerator
NextNonce	./crypto/random_nonce_generator.cc	/^Status RandomNonceGenerator::NextNonce(absl::Span<uint8_t> nonce) {$/;"	f	class:asylo::RandomNonceGenerator
NoFactory	./grpc/util/enclave_server.h	/^  static StatusOr<std::unique_ptr<::grpc::Service>> NoFactory() {$/;"	f	class:asylo::final
NonBlockingRead	./platform/common/ring_buffer.h	/^  size_t NonBlockingRead(uint8_t *buf, size_t nbyte) {$/;"	f	class:asylo::RingBuffer
NonBlockingRead	./platform/common/ring_buffer_test.cc	/^  size_t NonBlockingRead(uint8_t *buf, size_t nbyte) {$/;"	f	class:asylo::RingBufferForTest
NonBlockingWrite	./platform/common/ring_buffer.h	/^  size_t NonBlockingWrite(const uint8_t *buf, size_t nbyte) {$/;"	f	class:asylo::RingBuffer
NonBlockingWrite	./platform/common/ring_buffer_test.cc	/^  size_t NonBlockingWrite(const uint8_t *buf, size_t nbyte) {$/;"	f	class:asylo::RingBufferForTest
NonGoogleErrorSpace	./platform/primitives/util/status_conversions_test.cc	/^    explicit NonGoogleErrorSpace() : space_name_{"non-google error space"} {}$/;"	f	class:asylo::primitives::__anon339::StatusConversionsTest::NonGoogleErrorSpace
NonGoogleErrorSpace	./platform/primitives/util/status_conversions_test.cc	/^    explicit NonGoogleErrorSpace() : space_name_{"non-google error space"} {}$/;"	f	class:asylo::primitives::__anon85::StatusConversionsTest::NonGoogleErrorSpace
NonGoogleErrorSpace	./platform/primitives/util/status_conversions_test.cc	/^  class NonGoogleErrorSpace : public error::ErrorSpace {$/;"	c	class:asylo::primitives::__anon339::StatusConversionsTest	file:
NonGoogleErrorSpace	./platform/primitives/util/status_conversions_test.cc	/^  class NonGoogleErrorSpace : public error::ErrorSpace {$/;"	c	class:asylo::primitives::__anon85::StatusConversionsTest	file:
NonSystemCallDispatcher	./platform/host_call/trusted/host_call_dispatcher.cc	/^primitives::PrimitiveStatus NonSystemCallDispatcher($/;"	f	namespace:asylo::host_call
NonceGenerator	./crypto/nonce_generator.h	/^class NonceGenerator {$/;"	c	namespace:asylo
NonceGeneratorInterface	./crypto/nonce_generator_interface.h	/^class NonceGeneratorInterface {$/;"	c	namespace:asylo
NonceSize	./crypto/aead_cryptor.cc	/^size_t AeadCryptor::NonceSize() const { return nonce_generator_->NonceSize(); }$/;"	f	class:asylo::experimental::AeadCryptor
NonceSize	./crypto/aead_key.cc	/^size_t AeadKey::NonceSize() const { return nonce_size_; }$/;"	f	class:asylo::AeadKey
NonceSize	./crypto/random_nonce_generator.cc	/^size_t RandomNonceGenerator::NonceSize() const { return nonce_size_; }$/;"	f	class:asylo::RandomNonceGenerator
NormalizePath	./platform/posix/io/util.cc	/^std::string NormalizePath(absl::string_view path) {$/;"	f	namespace:asylo::io::util
NullAssertionAuthorityTest	./identity/null_identity/null_assertion_authority_test.cc	/^class NullAssertionAuthorityTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon174	file:
NullAssertionAuthorityTest	./identity/null_identity/null_assertion_authority_test.cc	/^class NullAssertionAuthorityTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon428	file:
NullAssertionGenerator	./identity/null_identity/null_assertion_generator.cc	/^NullAssertionGenerator::NullAssertionGenerator() : initialized_(false) {}$/;"	f	class:asylo::NullAssertionGenerator
NullAssertionVerifier	./identity/null_identity/null_assertion_verifier.cc	/^NullAssertionVerifier::NullAssertionVerifier() : initialized_(false) {}$/;"	f	class:asylo::NullAssertionVerifier
NullIdentityExpectationMatcherTest	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  NullIdentityExpectationMatcherTest() {$/;"	f	class:asylo::__anon173::NullIdentityExpectationMatcherTest
NullIdentityExpectationMatcherTest	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  NullIdentityExpectationMatcherTest() {$/;"	f	class:asylo::__anon427::NullIdentityExpectationMatcherTest
NullIdentityExpectationMatcherTest	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^class NullIdentityExpectationMatcherTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon173	file:
NullIdentityExpectationMatcherTest	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^class NullIdentityExpectationMatcherTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon427	file:
NumSections	./util/elf_reader.cc	/^StatusOr<uint16_t> ElfReaderCreator::NumSections($/;"	f	class:asylo::ElfReaderCreator
NumericConstant	./platform/common/singleton_test.cc	/^  NumericConstant() : value{N} {$/;"	f	struct:asylo::__anon112::NumericConstant
NumericConstant	./platform/common/singleton_test.cc	/^  NumericConstant() : value{N} {$/;"	f	struct:asylo::__anon366::NumericConstant
NumericConstant	./platform/common/singleton_test.cc	/^struct NumericConstant {$/;"	s	namespace:asylo::__anon112	file:
NumericConstant	./platform/common/singleton_test.cc	/^struct NumericConstant {$/;"	s	namespace:asylo::__anon366	file:
OK	./util/status_error_space.h	/^  OK = 0,$/;"	m	class:asylo::error::StatusError
OPMASK	./identity/sgx/secs_attributes.h	/^  OPMASK = 64 + 5,     \/\/ Determines the behavior of certain AVX capabilities.$/;"	m	class:asylo::sgx::SecsAttributeBit
OPOST	./platform/posix/include/sys/termios.h	52;"	d
O_CLOEXEC	./platform/posix/include/fcntl.h	27;"	d
O_DIRECT	./platform/posix/include/fcntl.h	28;"	d
O_SECURE	./platform/posix/include/fcntl.h	29;"	d
OffsetTranslator	./platform/storage/utils/offset_translator.cc	/^OffsetTranslator::OffsetTranslator(size_t header_len, size_t payload_len,$/;"	f	class:asylo::platform::storage::OffsetTranslator
OffsetTranslator	./platform/storage/utils/offset_translator.h	/^class OffsetTranslator {$/;"	c	namespace:asylo::platform::storage
OffsetTranslatorTest	./platform/storage/utils/offset_translator_test.cc	/^class OffsetTranslatorTest : public ::testing::Test,$/;"	c	namespace:asylo::__anon350	file:
OffsetTranslatorTest	./platform/storage/utils/offset_translator_test.cc	/^class OffsetTranslatorTest : public ::testing::Test,$/;"	c	namespace:asylo::__anon96	file:
OkStatus	./platform/primitives/primitive_status.h	/^  static PrimitiveStatus OkStatus() { return PrimitiveStatus{}; }$/;"	f	class:asylo::primitives::PrimitiveStatus
OkStatus	./util/status.cc	/^Status Status::OkStatus() { return Status(); }$/;"	f	class:asylo::Status
Open	./crypto/aead_cryptor.cc	/^Status AeadCryptor::Open(ByteContainerView ciphertext,$/;"	f	class:asylo::experimental::AeadCryptor
Open	./crypto/aead_key.cc	/^Status AeadKey::Open(ByteContainerView ciphertext,$/;"	f	class:asylo::AeadKey
Open	./crypto/aes_gcm_siv.h	/^  Status Open(const ContainerT &key, const ContainerU &additional_data,$/;"	f	class:asylo::AesGcmSivCryptor
Open	./identity/sgx/local_secret_sealer_helpers.cc	/^Status Open(AeadCryptor *cryptor, const SealedSecret &sealed_secret,$/;"	f	namespace:asylo::sgx::internal
Open	./platform/posix/io/io_manager.cc	/^int IOManager::Open(const char *path, int flags, mode_t mode) {$/;"	f	class:asylo::io::IOManager
Open	./platform/posix/io/native_paths.cc	/^std::unique_ptr<IOManager::IOContext> NativePathHandler::Open(const char *path,$/;"	f	class:asylo::io::NativePathHandler
Open	./platform/posix/io/random_devices.cc	/^std::unique_ptr<io::IOManager::IOContext> RandomPathHandler::Open($/;"	f	class:asylo::RandomPathHandler
OpenFile	./platform/posix/syscalls_test_enclave.cc	/^  StatusOr<int> OpenFile(const std::string &path, int flags, mode_t mode) {$/;"	f	class:asylo::SyscallsEnclave	file:
OpenReadVerifyClose	./platform/storage/secure/enclave_storage_secure_test.cc	/^Status EnclaveStorageSecureTest::OpenReadVerifyClose(off_t offset,$/;"	f	class:asylo::__anon100::EnclaveStorageSecureTest
OpenReadVerifyClose	./platform/storage/secure/enclave_storage_secure_test.cc	/^Status EnclaveStorageSecureTest::OpenReadVerifyClose(off_t offset,$/;"	f	class:asylo::__anon354::EnclaveStorageSecureTest
OpenWriteClose	./platform/storage/secure/enclave_storage_secure_test.cc	/^Status EnclaveStorageSecureTest::OpenWriteClose(off_t offset) {$/;"	f	class:asylo::__anon100::EnclaveStorageSecureTest
OpenWriteClose	./platform/storage/secure/enclave_storage_secure_test.cc	/^Status EnclaveStorageSecureTest::OpenWriteClose(off_t offset) {$/;"	f	class:asylo::__anon354::EnclaveStorageSecureTest
OrderCombine	./identity/sgx/tcb.cc	/^PartialOrder OrderCombine(PartialOrder lhs, PartialOrder rhs) {$/;"	f	namespace:asylo::sgx::__anon145
OrderCombine	./identity/sgx/tcb.cc	/^PartialOrder OrderCombine(PartialOrder lhs, PartialOrder rhs) {$/;"	f	namespace:asylo::sgx::__anon399
OutputCollector	./test/util/output_collector.cc	/^OutputCollector::OutputCollector(int fd)$/;"	f	class:asylo::OutputCollector
OutputCollector	./test/util/output_collector.cc	/^OutputCollector::OutputCollector(internal::FromStderrTag)$/;"	f	class:asylo::OutputCollector
OutputCollector	./test/util/output_collector.cc	/^OutputCollector::OutputCollector(internal::FromStdoutTag)$/;"	f	class:asylo::OutputCollector
OutputCollector	./test/util/output_collector.h	/^class OutputCollector {$/;"	c	namespace:asylo
OutputTypes	./crypto/util/byte_container_util_test.cc	/^    OutputTypes;$/;"	t	namespace:asylo::__anon21	file:
OutputTypes	./crypto/util/byte_container_util_test.cc	/^    OutputTypes;$/;"	t	namespace:asylo::__anon275	file:
OverwriteValueWithStatus	./util/statusor.h	/^  void OverwriteValueWithStatus(U &&status) {$/;"	f	class:asylo::StatusOr
Owned	./platform/core/trusted_mutex.cc	/^bool TrustedMutex::Owned() const { return trusted_spin_lock_.Owned(); }$/;"	f	class:asylo::TrustedMutex
Owned	./platform/core/trusted_spin_lock.cc	/^bool TrustedSpinLock::Owned() const { return owner_ == enc_thread_self(); }$/;"	f	class:asylo::TrustedSpinLock
Owned	./platform/core/untrusted_mutex.cc	/^bool UntrustedMutex::Owned() const { return owner_ == enc_thread_self(); }$/;"	f	class:asylo::UntrustedMutex
PACKETSZ	./platform/posix/include/arpa/nameser.h	202;"	d
PACKETSZ	./platform/system/include/arpa/nameser_compat.h	47;"	d
PF_ALG	./platform/posix/include/sys/socket.h	169;"	d
PF_APPLETALK	./platform/posix/include/sys/socket.h	137;"	d
PF_ASH	./platform/posix/include/sys/socket.h	151;"	d
PF_ATMPVC	./platform/posix/include/sys/socket.h	140;"	d
PF_ATMSVC	./platform/posix/include/sys/socket.h	153;"	d
PF_AX25	./platform/posix/include/sys/socket.h	135;"	d
PF_BLUETOOTH	./platform/posix/include/sys/socket.h	162;"	d
PF_BRIDGE	./platform/posix/include/sys/socket.h	139;"	d
PF_CAIF	./platform/posix/include/sys/socket.h	168;"	d
PF_CAN	./platform/posix/include/sys/socket.h	160;"	d
PF_DECnet	./platform/posix/include/sys/socket.h	144;"	d
PF_ECONET	./platform/posix/include/sys/socket.h	152;"	d
PF_FILE	./platform/posix/include/sys/socket.h	133;"	d
PF_IEEE802154	./platform/posix/include/sys/socket.h	167;"	d
PF_INET	./platform/posix/include/sys/socket.h	134;"	d
PF_INET6	./platform/posix/include/sys/socket.h	142;"	d
PF_IPX	./platform/posix/include/sys/socket.h	136;"	d
PF_IRDA	./platform/posix/include/sys/socket.h	156;"	d
PF_ISDN	./platform/posix/include/sys/socket.h	165;"	d
PF_IUCV	./platform/posix/include/sys/socket.h	163;"	d
PF_KEY	./platform/posix/include/sys/socket.h	147;"	d
PF_LLC	./platform/posix/include/sys/socket.h	159;"	d
PF_LOCAL	./platform/posix/include/sys/socket.h	131;"	d
PF_MAX	./platform/posix/include/sys/socket.h	172;"	d
PF_NETBEUI	./platform/posix/include/sys/socket.h	145;"	d
PF_NETLINK	./platform/posix/include/sys/socket.h	148;"	d
PF_NETROM	./platform/posix/include/sys/socket.h	138;"	d
PF_NFC	./platform/posix/include/sys/socket.h	170;"	d
PF_PACKET	./platform/posix/include/sys/socket.h	150;"	d
PF_PHONET	./platform/posix/include/sys/socket.h	166;"	d
PF_PPPOX	./platform/posix/include/sys/socket.h	157;"	d
PF_RDS	./platform/posix/include/sys/socket.h	154;"	d
PF_ROSE	./platform/posix/include/sys/socket.h	143;"	d
PF_ROUTE	./platform/posix/include/sys/socket.h	149;"	d
PF_RXRPC	./platform/posix/include/sys/socket.h	164;"	d
PF_SECURITY	./platform/posix/include/sys/socket.h	146;"	d
PF_SNA	./platform/posix/include/sys/socket.h	155;"	d
PF_TIPC	./platform/posix/include/sys/socket.h	161;"	d
PF_UNIX	./platform/posix/include/sys/socket.h	132;"	d
PF_UNSPEC	./platform/posix/include/sys/socket.h	130;"	d
PF_VSOCK	./platform/posix/include/sys/socket.h	171;"	d
PF_WANPIPE	./platform/posix/include/sys/socket.h	158;"	d
PF_X25	./platform/posix/include/sys/socket.h	141;"	d
PKRU	./identity/sgx/secs_attributes.h	/^  PKRU = 64 + 9  \/\/ Determines the behavior of the Page Protection Keys.$/;"	m	class:asylo::sgx::SecsAttributeBit
POLLERR	./platform/posix/include/poll.h	41;"	d
POLLHUP	./platform/posix/include/poll.h	42;"	d
POLLIN	./platform/posix/include/poll.h	38;"	d
POLLNVAL	./platform/posix/include/poll.h	43;"	d
POLLOUT	./platform/posix/include/poll.h	40;"	d
POLLPRI	./platform/posix/include/poll.h	39;"	d
POLLRDBAND	./platform/posix/include/poll.h	45;"	d
POLLRDHUP	./platform/posix/include/poll.h	48;"	d
POLLRDNORM	./platform/posix/include/poll.h	44;"	d
POLLWRBAND	./platform/posix/include/poll.h	47;"	d
POLLWRNORM	./platform/posix/include/poll.h	46;"	d
PROT_EXEC	./platform/posix/include/sys/mman.h	30;"	d
PROT_READ	./platform/posix/include/sys/mman.h	28;"	d
PROT_WRITE	./platform/posix/include/sys/mman.h	29;"	d
PROVISIONKEY	./identity/sgx/secs_attributes.h	/^  PROVISIONKEY = 4,  \/\/ Indicates whether the enclave has access to the$/;"	m	class:asylo::sgx::SecsAttributeBit
PROVISION_KEY	./identity/sgx/identity_key_management_structs.h	/^  PROVISION_KEY = 1,$/;"	m	class:asylo::sgx::KeyrequestKeyname
PROVISION_SEAL_KEY	./identity/sgx/identity_key_management_structs.h	/^  PROVISION_SEAL_KEY = 2,$/;"	m	class:asylo::sgx::KeyrequestKeyname
PTHREAD_KEYS_MAX	./platform/posix/pthread.cc	/^constexpr size_t PTHREAD_KEYS_MAX = 64;$/;"	m	namespace:__anon296	file:
PTHREAD_KEYS_MAX	./platform/posix/pthread.cc	/^constexpr size_t PTHREAD_KEYS_MAX = 64;$/;"	m	namespace:__anon42	file:
P_E2BIG	./util/posix_error_space.h	/^  P_E2BIG = E2BIG,$/;"	e	enum:asylo::error::PosixError
P_EACCES	./util/posix_error_space.h	/^  P_EACCES = EACCES,$/;"	e	enum:asylo::error::PosixError
P_EADDRINUSE	./util/posix_error_space.h	/^  P_EADDRINUSE = EADDRINUSE,$/;"	e	enum:asylo::error::PosixError
P_EADDRNOTAVAIL	./util/posix_error_space.h	/^  P_EADDRNOTAVAIL = EADDRNOTAVAIL,$/;"	e	enum:asylo::error::PosixError
P_EAFNOSUPPORT	./util/posix_error_space.h	/^  P_EAFNOSUPPORT = EAFNOSUPPORT,$/;"	e	enum:asylo::error::PosixError
P_EAGAIN	./util/posix_error_space.h	/^  P_EAGAIN = EAGAIN,$/;"	e	enum:asylo::error::PosixError
P_EALREADY	./util/posix_error_space.h	/^  P_EALREADY = EALREADY,$/;"	e	enum:asylo::error::PosixError
P_EBADF	./util/posix_error_space.h	/^  P_EBADF = EBADF,$/;"	e	enum:asylo::error::PosixError
P_EBADMSG	./util/posix_error_space.h	/^  P_EBADMSG = EBADMSG,$/;"	e	enum:asylo::error::PosixError
P_EBUSY	./util/posix_error_space.h	/^  P_EBUSY = EBUSY,$/;"	e	enum:asylo::error::PosixError
P_ECANCELED	./util/posix_error_space.h	/^  P_ECANCELED = ECANCELED,$/;"	e	enum:asylo::error::PosixError
P_ECHILD	./util/posix_error_space.h	/^  P_ECHILD = ECHILD,$/;"	e	enum:asylo::error::PosixError
P_ECONNABORTED	./util/posix_error_space.h	/^  P_ECONNABORTED = ECONNABORTED,$/;"	e	enum:asylo::error::PosixError
P_ECONNREFUSED	./util/posix_error_space.h	/^  P_ECONNREFUSED = ECONNREFUSED,$/;"	e	enum:asylo::error::PosixError
P_ECONNRESET	./util/posix_error_space.h	/^  P_ECONNRESET = ECONNRESET,$/;"	e	enum:asylo::error::PosixError
P_EDEADLK	./util/posix_error_space.h	/^  P_EDEADLK = EDEADLK,$/;"	e	enum:asylo::error::PosixError
P_EDESTADDRREQ	./util/posix_error_space.h	/^  P_EDESTADDRREQ = EDESTADDRREQ,$/;"	e	enum:asylo::error::PosixError
P_EDOM	./util/posix_error_space.h	/^  P_EDOM = EDOM,$/;"	e	enum:asylo::error::PosixError
P_EDQUOT	./util/posix_error_space.h	/^  P_EDQUOT = EDQUOT,$/;"	e	enum:asylo::error::PosixError
P_EEXIST	./util/posix_error_space.h	/^  P_EEXIST = EEXIST,$/;"	e	enum:asylo::error::PosixError
P_EFAULT	./util/posix_error_space.h	/^  P_EFAULT = EFAULT,$/;"	e	enum:asylo::error::PosixError
P_EFBIG	./util/posix_error_space.h	/^  P_EFBIG = EFBIG,$/;"	e	enum:asylo::error::PosixError
P_EHOSTUNREACH	./util/posix_error_space.h	/^  P_EHOSTUNREACH = EHOSTUNREACH,$/;"	e	enum:asylo::error::PosixError
P_EIDRM	./util/posix_error_space.h	/^  P_EIDRM = EIDRM,$/;"	e	enum:asylo::error::PosixError
P_EILSEQ	./util/posix_error_space.h	/^  P_EILSEQ = EILSEQ,$/;"	e	enum:asylo::error::PosixError
P_EINPROGRESS	./util/posix_error_space.h	/^  P_EINPROGRESS = EINPROGRESS,$/;"	e	enum:asylo::error::PosixError
P_EINTR	./util/posix_error_space.h	/^  P_EINTR = EINTR,$/;"	e	enum:asylo::error::PosixError
P_EINVAL	./util/posix_error_space.h	/^  P_EINVAL = EINVAL,$/;"	e	enum:asylo::error::PosixError
P_EIO	./util/posix_error_space.h	/^  P_EIO = EIO,$/;"	e	enum:asylo::error::PosixError
P_EISCONN	./util/posix_error_space.h	/^  P_EISCONN = EISCONN,$/;"	e	enum:asylo::error::PosixError
P_EISDIR	./util/posix_error_space.h	/^  P_EISDIR = EISDIR,$/;"	e	enum:asylo::error::PosixError
P_ELOOP	./util/posix_error_space.h	/^  P_ELOOP = ELOOP,$/;"	e	enum:asylo::error::PosixError
P_EMFILE	./util/posix_error_space.h	/^  P_EMFILE = EMFILE,$/;"	e	enum:asylo::error::PosixError
P_EMLINK	./util/posix_error_space.h	/^  P_EMLINK = EMLINK,$/;"	e	enum:asylo::error::PosixError
P_EMSGSIZE	./util/posix_error_space.h	/^  P_EMSGSIZE = EMSGSIZE,$/;"	e	enum:asylo::error::PosixError
P_EMULTIHOP	./util/posix_error_space.h	/^  P_EMULTIHOP = EMULTIHOP,$/;"	e	enum:asylo::error::PosixError
P_ENAMETOOLONG	./util/posix_error_space.h	/^  P_ENAMETOOLONG = ENAMETOOLONG,$/;"	e	enum:asylo::error::PosixError
P_ENETDOWN	./util/posix_error_space.h	/^  P_ENETDOWN = ENETDOWN,$/;"	e	enum:asylo::error::PosixError
P_ENETRESET	./util/posix_error_space.h	/^  P_ENETRESET = ENETRESET,$/;"	e	enum:asylo::error::PosixError
P_ENETUNREACH	./util/posix_error_space.h	/^  P_ENETUNREACH = ENETUNREACH,$/;"	e	enum:asylo::error::PosixError
P_ENFILE	./util/posix_error_space.h	/^  P_ENFILE = ENFILE,$/;"	e	enum:asylo::error::PosixError
P_ENOBUFS	./util/posix_error_space.h	/^  P_ENOBUFS = ENOBUFS,$/;"	e	enum:asylo::error::PosixError
P_ENODATA	./util/posix_error_space.h	/^  P_ENODATA = ENODATA,$/;"	e	enum:asylo::error::PosixError
P_ENODEV	./util/posix_error_space.h	/^  P_ENODEV = ENODEV,$/;"	e	enum:asylo::error::PosixError
P_ENOENT	./util/posix_error_space.h	/^  P_ENOENT = ENOENT,$/;"	e	enum:asylo::error::PosixError
P_ENOEXEC	./util/posix_error_space.h	/^  P_ENOEXEC = ENOEXEC,$/;"	e	enum:asylo::error::PosixError
P_ENOLCK	./util/posix_error_space.h	/^  P_ENOLCK = ENOLCK,$/;"	e	enum:asylo::error::PosixError
P_ENOLINK	./util/posix_error_space.h	/^  P_ENOLINK = ENOLINK,$/;"	e	enum:asylo::error::PosixError
P_ENOMEM	./util/posix_error_space.h	/^  P_ENOMEM = ENOMEM,$/;"	e	enum:asylo::error::PosixError
P_ENOMSG	./util/posix_error_space.h	/^  P_ENOMSG = ENOMSG,$/;"	e	enum:asylo::error::PosixError
P_ENOPROTOOPT	./util/posix_error_space.h	/^  P_ENOPROTOOPT = ENOPROTOOPT,$/;"	e	enum:asylo::error::PosixError
P_ENOSPC	./util/posix_error_space.h	/^  P_ENOSPC = ENOSPC,$/;"	e	enum:asylo::error::PosixError
P_ENOSR	./util/posix_error_space.h	/^  P_ENOSR = ENOSR,$/;"	e	enum:asylo::error::PosixError
P_ENOSTR	./util/posix_error_space.h	/^  P_ENOSTR = ENOSTR,$/;"	e	enum:asylo::error::PosixError
P_ENOSYS	./util/posix_error_space.h	/^  P_ENOSYS = ENOSYS,$/;"	e	enum:asylo::error::PosixError
P_ENOTCONN	./util/posix_error_space.h	/^  P_ENOTCONN = ENOTCONN,$/;"	e	enum:asylo::error::PosixError
P_ENOTDIR	./util/posix_error_space.h	/^  P_ENOTDIR = ENOTDIR,$/;"	e	enum:asylo::error::PosixError
P_ENOTEMPTY	./util/posix_error_space.h	/^  P_ENOTEMPTY = ENOTEMPTY,$/;"	e	enum:asylo::error::PosixError
P_ENOTRECOVERABLE	./util/posix_error_space.h	/^  P_ENOTRECOVERABLE = ENOTRECOVERABLE,$/;"	e	enum:asylo::error::PosixError
P_ENOTSOCK	./util/posix_error_space.h	/^  P_ENOTSOCK = ENOTSOCK,$/;"	e	enum:asylo::error::PosixError
P_ENOTSUP	./util/posix_error_space.h	/^  P_ENOTSUP = ENOTSUP,$/;"	e	enum:asylo::error::PosixError
P_ENOTTY	./util/posix_error_space.h	/^  P_ENOTTY = ENOTTY,$/;"	e	enum:asylo::error::PosixError
P_ENXIO	./util/posix_error_space.h	/^  P_ENXIO = ENXIO,$/;"	e	enum:asylo::error::PosixError
P_EOVERFLOW	./util/posix_error_space.h	/^  P_EOVERFLOW = EOVERFLOW,$/;"	e	enum:asylo::error::PosixError
P_EOWNERDEAD	./util/posix_error_space.h	/^  P_EOWNERDEAD = EOWNERDEAD,$/;"	e	enum:asylo::error::PosixError
P_EPERM	./util/posix_error_space.h	/^  P_EPERM = EPERM,$/;"	e	enum:asylo::error::PosixError
P_EPIPE	./util/posix_error_space.h	/^  P_EPIPE = EPIPE,$/;"	e	enum:asylo::error::PosixError
P_EPROTO	./util/posix_error_space.h	/^  P_EPROTO = EPROTO,$/;"	e	enum:asylo::error::PosixError
P_EPROTONOSUPPORT	./util/posix_error_space.h	/^  P_EPROTONOSUPPORT = EPROTONOSUPPORT,$/;"	e	enum:asylo::error::PosixError
P_EPROTOTYPE	./util/posix_error_space.h	/^  P_EPROTOTYPE = EPROTOTYPE,$/;"	e	enum:asylo::error::PosixError
P_ERANGE	./util/posix_error_space.h	/^  P_ERANGE = ERANGE,$/;"	e	enum:asylo::error::PosixError
P_EROFS	./util/posix_error_space.h	/^  P_EROFS = EROFS,$/;"	e	enum:asylo::error::PosixError
P_ESPIPE	./util/posix_error_space.h	/^  P_ESPIPE = ESPIPE,$/;"	e	enum:asylo::error::PosixError
P_ESRCH	./util/posix_error_space.h	/^  P_ESRCH = ESRCH,$/;"	e	enum:asylo::error::PosixError
P_ESTALE	./util/posix_error_space.h	/^  P_ESTALE = ESTALE,$/;"	e	enum:asylo::error::PosixError
P_ETIME	./util/posix_error_space.h	/^  P_ETIME = ETIME,$/;"	e	enum:asylo::error::PosixError
P_ETIMEDOUT	./util/posix_error_space.h	/^  P_ETIMEDOUT = ETIMEDOUT,$/;"	e	enum:asylo::error::PosixError
P_ETXTBSY	./util/posix_error_space.h	/^  P_ETXTBSY = ETXTBSY,$/;"	e	enum:asylo::error::PosixError
P_EXDEV	./util/posix_error_space.h	/^  P_EXDEV = EXDEV$/;"	e	enum:asylo::error::PosixError
ParameterDescription	./platform/system_call/generate_tables.cc	/^struct ParameterDescription {$/;"	s	file:
ParameterDescriptor	./platform/system_call/metadata.h	/^  ParameterDescriptor() : sysno_(-1), index_(-1) {}$/;"	f	class:asylo::system_call::ParameterDescriptor
ParameterDescriptor	./platform/system_call/metadata.h	/^  ParameterDescriptor(int sysno, int index) : sysno_(sysno), index_(index) {}$/;"	f	class:asylo::system_call::ParameterDescriptor
ParameterDescriptor	./platform/system_call/metadata.h	/^class ParameterDescriptor {$/;"	c	namespace:asylo::system_call
ParameterSize	./platform/system_call/message.cc	/^size_t MessageWriter::ParameterSize(ParameterDescriptor parameter) const {$/;"	f	class:asylo::system_call::MessageWriter
ParameterStack	./platform/primitives/parameter_stack.h	/^class ParameterStack {$/;"	c	namespace:asylo::primitives
ParameterTable	./platform/system_call/generate_tables.cc	/^absl::flat_hash_map<int, ParameterDescription> *ParameterTable() {$/;"	f
ParameterTableEntry	./platform/system_call/metadata.cc	/^struct ParameterTableEntry {$/;"	s	namespace:asylo::system_call::__anon116	file:
ParameterTableEntry	./platform/system_call/metadata.cc	/^struct ParameterTableEntry {$/;"	s	namespace:asylo::system_call::__anon370	file:
ParseAdditionalInfo	./identity/sgx/sgx_local_assertion_generator.cc	/^SgxLocalAssertionGenerator::ParseAdditionalInfo($/;"	f	class:asylo::SgxLocalAssertionGenerator
ParseAddress	./platform/posix/sockets/inet_aton_test.cc	/^uint32_t ParseAddress(const std::string &str) {$/;"	f	namespace:asylo::__anon309
ParseAddress	./platform/posix/sockets/inet_aton_test.cc	/^uint32_t ParseAddress(const std::string &str) {$/;"	f	namespace:asylo::__anon55
ParseAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status ParseAttestationDomain(const char *domain_file_path,$/;"	f	namespace:asylo::__anon186
ParseAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status ParseAttestationDomain(const char *domain_file_path,$/;"	f	namespace:asylo::__anon440
ParseCipherSuiteFromSealedSecretHeader	./identity/sgx/local_secret_sealer_helpers.cc	/^StatusOr<CipherSuite> ParseCipherSuiteFromSealedSecretHeader($/;"	f	namespace:asylo::sgx::internal
ParseFrameHeader	./grpc/auth/core/ekep_handshaker.cc	/^Status EkepHandshaker::ParseFrameHeader($/;"	f	class:asylo::EkepHandshaker
ParseFrameMessage	./grpc/auth/core/ekep_handshaker.cc	/^Status EkepHandshaker::ParseFrameMessage(uint32_t message_size,$/;"	f	class:asylo::EkepHandshaker
ParseIdentityFromHardwareReport	./identity/sgx/code_identity_util.cc	/^Status ParseIdentityFromHardwareReport(const Report &report,$/;"	f	namespace:asylo::sgx
ParseIso8601TimeString	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<absl::Time> ParseIso8601TimeString(const std::string &time_string) {$/;"	f	namespace:asylo::sgx::__anon158
ParseIso8601TimeString	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<absl::Time> ParseIso8601TimeString(const std::string &time_string) {$/;"	f	namespace:asylo::sgx::__anon412
ParseKeyGenerationParamsFromSealedSecretHeader	./identity/sgx/local_secret_sealer_helpers.cc	/^Status ParseKeyGenerationParamsFromSealedSecretHeader($/;"	f	namespace:asylo::sgx::internal
ParseRsa3072PublicKey	./identity/sgx/pce_util.cc	/^StatusOr<bssl::UniquePtr<RSA>> ParseRsa3072PublicKey($/;"	f	namespace:asylo::sgx
ParseSgxExpectation	./identity/sgx/code_identity_util.cc	/^Status ParseSgxExpectation($/;"	f	namespace:asylo::sgx
ParseSgxIdentity	./identity/sgx/code_identity_util.cc	/^Status ParseSgxIdentity(const EnclaveIdentity &generic_identity,$/;"	f	namespace:asylo::sgx
ParseSgxMatchSpec	./identity/sgx/code_identity_util.cc	/^Status ParseSgxMatchSpec(const std::string &generic_match_spec,$/;"	f	namespace:asylo::sgx
PartialOrder	./identity/sgx/tcb.h	/^enum class PartialOrder {$/;"	c	namespace:asylo::sgx
Partially	./test/util/proto_matchers.h	/^::testing::PolymorphicMatcher<internal::ProtoMatcher<MessageT>> Partially($/;"	f	namespace:asylo
PathNormalizationTest	./platform/posix/io/path_normalization_test.cc	/^class PathNormalizationTest$/;"	c	namespace:asylo::io::util::__anon328	file:
PathNormalizationTest	./platform/posix/io/path_normalization_test.cc	/^class PathNormalizationTest$/;"	c	namespace:asylo::io::util::__anon74	file:
PathParamsValueToTestName	./platform/posix/io/path_normalization_test.cc	/^std::string PathParamsValueToTestName($/;"	f	namespace:asylo::io::util::__anon328
PathParamsValueToTestName	./platform/posix/io/path_normalization_test.cc	/^std::string PathParamsValueToTestName($/;"	f	namespace:asylo::io::util::__anon74
PceErrorToStatus	./identity/sgx/dcap_intel_architectural_enclave_interface.cc	/^Status PceErrorToStatus(sgx_pce_error_t pce_error) {$/;"	f	namespace:asylo::sgx::__anon166
PceErrorToStatus	./identity/sgx/dcap_intel_architectural_enclave_interface.cc	/^Status PceErrorToStatus(sgx_pce_error_t pce_error) {$/;"	f	namespace:asylo::sgx::__anon420
PceIdFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<PceId> PceIdFromJson(const google::protobuf::Value &pce_id_json) {$/;"	f	namespace:asylo::sgx::__anon158
PceIdFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<PceId> PceIdFromJson(const google::protobuf::Value &pce_id_json) {$/;"	f	namespace:asylo::sgx::__anon412
PceSignReport	./identity/sgx/dcap_intel_architectural_enclave_interface.cc	/^Status DcapIntelArchitecturalEnclaveInterface::PceSignReport($/;"	f	class:asylo::sgx::DcapIntelArchitecturalEnclaveInterface
PceSvnFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<PceSvn> PceSvnFromJson(const google::protobuf::Value &pce_svn_json) {$/;"	f	namespace:asylo::sgx::__anon158
PceSvnFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<PceSvn> PceSvnFromJson(const google::protobuf::Value &pce_svn_json) {$/;"	f	namespace:asylo::sgx::__anon412
PceUtilTest	./identity/sgx/pce_util_test.cc	/^class PceUtilTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon151	file:
PceUtilTest	./identity/sgx/pce_util_test.cc	/^class PceUtilTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon405	file:
PeerIdentityUtilTest	./grpc/auth/peer_identity_util_test.cc	/^class PeerIdentityUtilTest : public Test {$/;"	c	namespace:asylo::__anon250	file:
PeerIdentityUtilTest	./grpc/auth/peer_identity_util_test.cc	/^class PeerIdentityUtilTest : public Test {$/;"	c	namespace:asylo::__anon504	file:
PeerNullCredentialsOptions	./grpc/auth/null_credentials_options.cc	/^EnclaveCredentialsOptions PeerNullCredentialsOptions() {$/;"	f	namespace:asylo
PeerSgxLocalCredentialsOptions	./grpc/auth/sgx_local_credentials_options.cc	/^EnclaveCredentialsOptions PeerSgxLocalCredentialsOptions() {$/;"	f	namespace:asylo
PerformStaticChecks	./crypto/util/bytes.h	/^  static void PerformStaticChecks() {$/;"	f	class:asylo::Bytes
PhysicalToLogical	./platform/storage/utils/offset_translator.cc	/^off_t OffsetTranslator::PhysicalToLogical(off_t offset) const {$/;"	f	class:asylo::platform::storage::OffsetTranslator
Pipe	./platform/posix/io/io_manager.cc	/^int IOManager::Pipe(int pipefd[2], int flags) {$/;"	f	class:asylo::io::IOManager
Pipe	./util/fd_utils.cc	/^Pipe::Pipe()$/;"	f	class:asylo::Pipe
Pipe	./util/fd_utils.cc	/^Pipe::Pipe(Pipe &&other)$/;"	f	class:asylo::Pipe
Pipe	./util/fd_utils.cc	/^Pipe::Pipe(int read_fd, int write_fd)$/;"	f	class:asylo::Pipe
Pipe	./util/fd_utils.h	/^class Pipe {$/;"	c	namespace:asylo
PipeOutputTest	./platform/posix/io/pipe_test_driver.cc	/^class PipeOutputTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon325	file:
PipeOutputTest	./platform/posix/io/pipe_test_driver.cc	/^class PipeOutputTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon71	file:
PipeTest	./platform/posix/io/pipe_test_enclave.cc	/^class PipeTest : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
PipeTest	./platform/posix/pipe_test.cc	/^  PipeTest()$/;"	f	class:asylo::__anon301::PipeTest
PipeTest	./platform/posix/pipe_test.cc	/^  PipeTest()$/;"	f	class:asylo::__anon47::PipeTest
PipeTest	./platform/posix/pipe_test.cc	/^class PipeTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon301	file:
PipeTest	./platform/posix/pipe_test.cc	/^class PipeTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon47	file:
Place	./crypto/util/bytes.h	/^  static BytesT *Place(ContainerT *container, size_t offset) {$/;"	f	class:asylo::Bytes
Poll	./platform/posix/io/io_manager.cc	/^int IOManager::Poll(struct pollfd *fds, nfds_t nfds, int timeout) {$/;"	f	class:asylo::io::IOManager
Pop	./platform/primitives/parameter_stack.h	/^  ExtentPtr Pop() {$/;"	f	class:asylo::primitives::ParameterStack
Pop	./platform/primitives/parameter_stack.h	/^  T Pop() {$/;"	f	class:asylo::primitives::ParameterStack
PopCleanupRoutine	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::PopCleanupRoutine(bool execute) {$/;"	f	class:asylo::ThreadManager
PopCleanupRoutine	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::PopCleanupRoutine(bool execute) {$/;"	f	class:asylo::ThreadManager::Thread
PosixError	./util/posix_error_space.h	/^enum PosixError {$/;"	g	namespace:asylo::error
PosixErrorSpace	./util/posix_error_space.cc	/^PosixErrorSpace::PosixErrorSpace()$/;"	f	class:asylo::error::PosixErrorSpace
PosixErrorSpace	./util/posix_error_space.h	/^class PosixErrorSpace : public ErrorSpaceImplementationHelper<PosixErrorSpace> {$/;"	c	namespace:asylo::error
PosixErrorSpaceTest	./util/posix_error_space_test.cc	/^  PosixErrorSpaceTest()$/;"	f	class:asylo::error::__anon235::PosixErrorSpaceTest
PosixErrorSpaceTest	./util/posix_error_space_test.cc	/^  PosixErrorSpaceTest()$/;"	f	class:asylo::error::__anon489::PosixErrorSpaceTest
PosixErrorSpaceTest	./util/posix_error_space_test.cc	/^class PosixErrorSpaceTest : public ::testing::Test {$/;"	c	namespace:asylo::error::__anon235	file:
PosixErrorSpaceTest	./util/posix_error_space_test.cc	/^class PosixErrorSpaceTest : public ::testing::Test {$/;"	c	namespace:asylo::error::__anon489	file:
PosixToGoogle	./util/posix_error_space.cc	/^GoogleError PosixErrorSpace::PosixToGoogle(PosixError code) const {$/;"	f	class:asylo::error::PosixErrorSpace
PrepareSealedSecretHeader	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  void PrepareSealedSecretHeader(const SgxLocalSecretSealer &sealer,$/;"	f	class:asylo::__anon168::SgxLocalSecretSealerTest
PrepareSealedSecretHeader	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  void PrepareSealedSecretHeader(const SgxLocalSecretSealer &sealer,$/;"	f	class:asylo::__anon422::SgxLocalSecretSealerTest
PrepareTest	./platform/storage/secure/enclave_storage_secure_test.cc	/^void EnclaveStorageSecureTest::PrepareTest() {$/;"	f	class:asylo::__anon100::EnclaveStorageSecureTest
PrepareTest	./platform/storage/secure/enclave_storage_secure_test.cc	/^void EnclaveStorageSecureTest::PrepareTest() {$/;"	f	class:asylo::__anon354::EnclaveStorageSecureTest
PrimitiveStatus	./platform/primitives/primitive_status.h	/^  PrimitiveStatus() : error_code_(error::GoogleError::OK) {$/;"	f	class:asylo::primitives::PrimitiveStatus
PrimitiveStatus	./platform/primitives/primitive_status.h	/^  PrimitiveStatus(const PrimitiveStatus &other) {$/;"	f	class:asylo::primitives::PrimitiveStatus
PrimitiveStatus	./platform/primitives/primitive_status.h	/^  PrimitiveStatus(int code) : error_code_(code) { message_[0] = '\\0'; }$/;"	f	class:asylo::primitives::PrimitiveStatus
PrimitiveStatus	./platform/primitives/primitive_status.h	/^  PrimitiveStatus(int code, const char *message) : error_code_(code) {$/;"	f	class:asylo::primitives::PrimitiveStatus
PrimitiveStatus	./platform/primitives/primitive_status.h	/^  PrimitiveStatus(int code, const char *message, size_t message_size)$/;"	f	class:asylo::primitives::PrimitiveStatus
PrimitiveStatus	./platform/primitives/primitive_status.h	/^  PrimitiveStatus(int code, const std::string &message) : error_code_(code) {$/;"	f	class:asylo::primitives::PrimitiveStatus
PrimitiveStatus	./platform/primitives/primitive_status.h	/^class PrimitiveStatus {$/;"	c	namespace:asylo::primitives
PrimitivesTest	./platform/primitives/test/primitives_test.cc	/^class PrimitivesTest : public ::testing::Test {$/;"	c	namespace:asylo::primitives::__anon334	file:
PrimitivesTest	./platform/primitives/test/primitives_test.cc	/^class PrimitivesTest : public ::testing::Test {$/;"	c	namespace:asylo::primitives::__anon80	file:
PrintTo	./crypto/util/bytes.h	/^inline void PrintTo(const SafeBytes<Size> &bytes, std::ostream *os) {$/;"	f	namespace:asylo
PrintTo	./crypto/util/bytes.h	/^inline void PrintTo(const UnsafeBytes<Size> &bytes, std::ostream *os) {$/;"	f	namespace:asylo
PrintTo	./platform/posix/syscalls_test_driver.cc	/^void PrintTo(const struct stat &stat_buffer, std::ostream *output_stream) {$/;"	f
PrintTo	./test/util/status_matchers.h	/^void PrintTo(const StatusOr<T> &statusor, std::ostream *os) {$/;"	f	namespace:asylo
ProducerConsumerTest	./test/misc/condvar_test.cc	/^class ProducerConsumerTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon194	file:
ProducerConsumerTest	./test/misc/condvar_test.cc	/^class ProducerConsumerTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon448	file:
ProducerConsumerTest	./test/misc/sem_test.cc	/^class ProducerConsumerTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon205	file:
ProducerConsumerTest	./test/misc/sem_test.cc	/^class ProducerConsumerTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon459	file:
ProducerRoutine	./test/misc/condvar_test.cc	/^  void ProducerRoutine() {$/;"	f	class:asylo::__anon194::ProducerConsumerTest
ProducerRoutine	./test/misc/condvar_test.cc	/^  void ProducerRoutine() {$/;"	f	class:asylo::__anon448::ProducerConsumerTest
ProducerRoutine	./test/misc/sem_test.cc	/^  void ProducerRoutine() {$/;"	f	class:asylo::__anon205::ProducerConsumerTest
ProducerRoutine	./test/misc/sem_test.cc	/^  void ProducerRoutine() {$/;"	f	class:asylo::__anon459::ProducerConsumerTest
ProducerTrampoline	./test/misc/condvar_test.cc	/^  static void *ProducerTrampoline(void *arg) {$/;"	f	class:asylo::__anon194::ProducerConsumerTest
ProducerTrampoline	./test/misc/condvar_test.cc	/^  static void *ProducerTrampoline(void *arg) {$/;"	f	class:asylo::__anon448::ProducerConsumerTest
ProducerTrampoline	./test/misc/sem_test.cc	/^  static void *ProducerTrampoline(void *arg) {$/;"	f	class:asylo::__anon205::ProducerConsumerTest
ProducerTrampoline	./test/misc/sem_test.cc	/^  static void *ProducerTrampoline(void *arg) {$/;"	f	class:asylo::__anon459::ProducerConsumerTest
ProtoMatcher	./test/util/proto_matchers.h	/^  ProtoMatcher(const MessageT &message,$/;"	f	class:asylo::internal::ProtoMatcher
ProtoMatcher	./test/util/proto_matchers.h	/^class ProtoMatcher {$/;"	c	namespace:asylo::internal
PthreadCleanupTest	./test/misc/pthread_test.cc	/^class PthreadCleanupTest : public Test {$/;"	c	namespace:asylo::pthread_impl::__anon201	file:
PthreadCleanupTest	./test/misc/pthread_test.cc	/^class PthreadCleanupTest : public Test {$/;"	c	namespace:asylo::pthread_impl::__anon455	file:
PthreadMutexLock	./platform/posix/pthread_impl.h	/^  PthreadMutexLock(pthread_mutex_t *mutex) : mutex_(mutex) {$/;"	f	class:asylo::pthread_impl::PthreadMutexLock
PthreadMutexLock	./platform/posix/pthread_impl.h	/^class PthreadMutexLock {$/;"	c	namespace:asylo::pthread_impl
Push	./platform/primitives/util/message.h	/^  void Push(const T &value) {$/;"	f	class:asylo::primitives::MessageWriter
Push	./platform/primitives/util/message.h	/^  void Push(const std::string &s) {$/;"	f	class:asylo::primitives::MessageWriter
PushAlloc	./platform/primitives/parameter_stack.h	/^  Extent PushAlloc(size_t extent_size) {$/;"	f	class:asylo::primitives::ParameterStack
PushAlloc	./platform/primitives/parameter_stack.h	/^  T *PushAlloc() {$/;"	f	class:asylo::primitives::ParameterStack
PushByCopy	./platform/primitives/parameter_stack.h	/^  void PushByCopy(Extent extent) {$/;"	f	class:asylo::primitives::ParameterStack
PushByCopy	./platform/primitives/parameter_stack.h	/^  void PushByCopy(const T &value) {$/;"	f	class:asylo::primitives::ParameterStack
PushByCopy	./platform/primitives/parameter_stack.h	/^  void PushByCopy(const T *buffer, size_t size) {$/;"	f	class:asylo::primitives::ParameterStack
PushByCopy	./platform/primitives/util/message.h	/^  void PushByCopy(Extent extent) {$/;"	f	class:asylo::primitives::MessageWriter
PushByReference	./platform/primitives/util/message.h	/^  void PushByReference(Extent extent) { extents_.emplace_back(extent); }$/;"	f	class:asylo::primitives::MessageWriter
PushCleanupRoutine	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::PushCleanupRoutine(const std::function<void()> &func) {$/;"	f	class:asylo::ThreadManager
PushCleanupRoutine	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::PushCleanupRoutine($/;"	f	class:asylo::ThreadManager::Thread
PushToFreeList	./platform/core/untrusted_cache_malloc.cc	/^void UntrustedCacheMalloc::PushToFreeList(void *buffer) {$/;"	f	class:asylo::UntrustedCacheMalloc
QFATAL	./util/logging.h	/^enum LogSeverity { INFO, WARNING, ERROR, FATAL, QFATAL };$/;"	e	enum:LogSeverity
QFIXEDSZ	./platform/posix/include/arpa/nameser.h	207;"	d
QFIXEDSZ	./platform/system/include/arpa/nameser_compat.h	25;"	d
QUERY	./platform/posix/include/arpa/nameser.h	217;"	d
QUERY	./platform/system/include/arpa/nameser_compat.h	28;"	d
QUEUED	./platform/posix/threading/thread_manager.h	/^    enum class ThreadState { QUEUED, RUNNING, DONE, JOINED };$/;"	m	class:asylo::ThreadManager::Thread::ThreadState
QueueOperations	./platform/posix/pthread.cc	/^QueueOperations::QueueOperations(__pthread_list_t *list) : list_(list) {$/;"	f	class:asylo::pthread_impl::QueueOperations
QueueOperations	./platform/posix/pthread_impl.h	/^  explicit QueueOperations(QueueType *queue)$/;"	f	class:asylo::pthread_impl::QueueOperations
QueueOperations	./platform/posix/pthread_impl.h	/^class QueueOperations {$/;"	c	namespace:asylo::pthread_impl
QueueOperationsTest	./test/misc/pthread_test.cc	/^  QueueOperationsTest() : list_(&raw_list_) {}$/;"	f	class:asylo::pthread_impl::__anon201::QueueOperationsTest
QueueOperationsTest	./test/misc/pthread_test.cc	/^  QueueOperationsTest() : list_(&raw_list_) {}$/;"	f	class:asylo::pthread_impl::__anon455::QueueOperationsTest
QueueOperationsTest	./test/misc/pthread_test.cc	/^class QueueOperationsTest : public Test {$/;"	c	namespace:asylo::pthread_impl::__anon201	file:
QueueOperationsTest	./test/misc/pthread_test.cc	/^class QueueOperationsTest : public Test {$/;"	c	namespace:asylo::pthread_impl::__anon455	file:
REFUSED	./platform/posix/include/arpa/nameser.h	228;"	d
REFUSED	./platform/system/include/arpa/nameser_compat.h	34;"	d
REPORT_KEY	./identity/sgx/identity_key_management_structs.h	/^  REPORT_KEY = 3,$/;"	m	class:asylo::sgx::KeyrequestKeyname
RESTORE_ERROR	./util/status_error_space.h	/^  RESTORE_ERROR = 2,$/;"	m	class:asylo::error::StatusError
RLIMIT_AS	./platform/posix/include/sys/resource.h	38;"	d
RLIMIT_CORE	./platform/posix/include/sys/resource.h	32;"	d
RLIMIT_CPU	./platform/posix/include/sys/resource.h	28;"	d
RLIMIT_DATA	./platform/posix/include/sys/resource.h	30;"	d
RLIMIT_FSIZE	./platform/posix/include/sys/resource.h	29;"	d
RLIMIT_MEMLOCK	./platform/posix/include/sys/resource.h	37;"	d
RLIMIT_NOFILE	./platform/posix/include/sys/resource.h	35;"	d
RLIMIT_NPROC	./platform/posix/include/sys/resource.h	34;"	d
RLIMIT_OFILE	./platform/posix/include/sys/resource.h	36;"	d
RLIMIT_RSS	./platform/posix/include/sys/resource.h	33;"	d
RLIMIT_STACK	./platform/posix/include/sys/resource.h	31;"	d
RLIM_INFINITY	./platform/posix/include/sys/resource.h	50;"	d
RRFIXEDSZ	./platform/posix/include/arpa/nameser.h	208;"	d
RRFIXEDSZ	./platform/system/include/arpa/nameser_compat.h	26;"	d
RTLD_LOCAL	./platform/posix/include/dlfcn.h	26;"	d
RTLD_NOW	./platform/posix/include/dlfcn.h	28;"	d
RUNNING	./platform/posix/threading/thread_manager.h	/^    enum class ThreadState { QUEUED, RUNNING, DONE, JOINED };$/;"	m	class:asylo::ThreadManager::Thread::ThreadState
RUsageTarget	./platform/common/bridge_types.h	/^enum RUsageTarget {$/;"	g
RandomAccessStorage	./platform/storage/utils/random_access_storage.h	/^class RandomAccessStorage {$/;"	c	namespace:asylo
RandomFakeEnclaveFactory	./identity/sgx/fake_enclave.h	/^struct RandomFakeEnclaveFactory {$/;"	s	namespace:asylo::sgx
RandomIOContext	./platform/posix/io/random_devices.h	/^  RandomIOContext(bool is_urandom) : is_urandom_(is_urandom) {}$/;"	f	class:asylo::RandomIOContext
RandomIOContext	./platform/posix/io/random_devices.h	/^class RandomIOContext : public io::IOManager::IOContext {$/;"	c	namespace:asylo
RandomNonceGenerator	./crypto/random_nonce_generator.cc	/^RandomNonceGenerator::RandomNonceGenerator(size_t size) : nonce_size_(size) {}$/;"	f	class:asylo::RandomNonceGenerator
RandomNonceGenerator	./crypto/random_nonce_generator.h	/^class RandomNonceGenerator : public NonceGeneratorInterface {$/;"	c	namespace:asylo
RandomPathHandler	./platform/posix/io/random_devices.h	/^class RandomPathHandler : public io::IOManager::VirtualPathHandler {$/;"	c	namespace:asylo
RandomSelect	./identity/sgx/code_identity_test_util.cc	/^const T RandomSelect(const std::vector<T> &choices) {$/;"	f	namespace:asylo::sgx::__anon142
RandomSelect	./identity/sgx/code_identity_test_util.cc	/^const T RandomSelect(const std::vector<T> &choices) {$/;"	f	namespace:asylo::sgx::__anon396
RdrandTest	./test/misc/rdrand_test.cc	/^class RdrandTest : public ::testing::Test {};$/;"	c	namespace:__anon197	file:
RdrandTest	./test/misc/rdrand_test.cc	/^class RdrandTest : public ::testing::Test {};$/;"	c	namespace:__anon451	file:
Read	./platform/common/ring_buffer.h	/^  size_t Read(uint8_t *buf, size_t nbyte) {$/;"	f	class:asylo::RingBuffer
Read	./platform/posix/io/eventfd_test.cc	/^  uint64_t Read() {$/;"	f	class:asylo::__anon327::EventFdTest
Read	./platform/posix/io/eventfd_test.cc	/^  uint64_t Read() {$/;"	f	class:asylo::__anon73::EventFdTest
Read	./platform/posix/io/io_context_epoll.cc	/^ssize_t IOContextEpoll::Read(void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextEpoll
Read	./platform/posix/io/io_context_eventfd.cc	/^ssize_t IOContextEventFd::Read(void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextEventFd
Read	./platform/posix/io/io_context_inotify.cc	/^ssize_t IOContextInotify::Read(void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextInotify
Read	./platform/posix/io/io_manager.cc	/^int IOManager::Read(int fd, char *buf, size_t count) {$/;"	f	class:asylo::io::IOManager
Read	./platform/posix/io/native_paths.cc	/^ssize_t IOContextNative::Read(void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextNative
Read	./platform/posix/io/random_devices.cc	/^ssize_t RandomIOContext::Read(void *buf, size_t count) {$/;"	f	class:asylo::RandomIOContext
Read	./platform/posix/io/secure_paths.cc	/^ssize_t IOContextSecure::Read(void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextSecure
Read	./platform/posix/io/virtual_test.cc	/^  StatusOr<std::string> Read(const std::string &path) {$/;"	f	class:asylo::__anon326::VirtualHandlerTest
Read	./platform/posix/io/virtual_test.cc	/^  StatusOr<std::string> Read(const std::string &path) {$/;"	f	class:asylo::__anon72::VirtualHandlerTest
Read	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::Read(void *buf, size_t read_len) {$/;"	f	class:asylo::SocketClient
Read	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::Read(void *buf, size_t read_len) {$/;"	f	class:asylo::SocketServer
Read	./platform/posix/sockets/socket_transmit.cc	/^Status SocketTransmit::Read(int fd, void *buf, size_t read_len) {$/;"	f	class:asylo::SocketTransmit
Read	./platform/storage/utils/record_store.h	/^  ASYLO_MUST_USE_RESULT Status Read(off_t offset, T *item) {$/;"	f	class:asylo::RecordStore
Read	./platform/storage/utils/untrusted_file.cc	/^Status UntrustedFile::Read(void *buffer, off_t offset, size_t size) {$/;"	f	class:asylo::UntrustedFile
ReadAll	./util/fd_utils.cc	/^StatusOr<std::string> ReadAll(int fd) { return ReadInternal(fd, false); }$/;"	f	namespace:asylo
ReadAllNoBlock	./util/fd_utils.cc	/^StatusOr<std::string> ReadAllNoBlock(int fd) {$/;"	f	namespace:asylo
ReadCheckLoop	./test/util/exec_tester.cc	/^void ExecTester::ReadCheckLoop(pid_t pid, int fd, bool *result, int *status) {$/;"	f	class:asylo::experimental::ExecTester
ReadData	./platform/posix/io/epoll_test.cc	/^  Status ReadData(int fd, char *buf, size_t bytes_to_read) {$/;"	f	class:asylo::__anon318::EpollTest
ReadData	./platform/posix/io/epoll_test.cc	/^  Status ReadData(int fd, char *buf, size_t bytes_to_read) {$/;"	f	class:asylo::__anon64::EpollTest
ReadExistingAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status ReadExistingAttestationDomain(const char *domain_file_path,$/;"	f	namespace:asylo::__anon186
ReadExistingAttestationDomain	./daemon/identity/attestation_domain.cc	/^Status ReadExistingAttestationDomain(const char *domain_file_path,$/;"	f	namespace:asylo::__anon440
ReadFile	./platform/posix/syscalls_test_enclave.cc	/^  Status ReadFile(int fd, char *buf, int size) {$/;"	f	class:asylo::SyscallsEnclave	file:
ReadFullBlock	./platform/storage/secure/aead_handler.cc	/^bool AeadHandler::ReadFullBlock(const FileControl &file_ctrl,$/;"	f	class:asylo::platform::storage::AeadHandler
ReadInternal	./util/fd_utils.cc	/^StatusOr<std::string> ReadInternal(int fd, bool return_on_eagain) {$/;"	f	namespace:asylo::__anon228
ReadInternal	./util/fd_utils.cc	/^StatusOr<std::string> ReadInternal(int fd, bool return_on_eagain) {$/;"	f	namespace:asylo::__anon482
ReadLink	./platform/posix/io/io_manager.cc	/^ssize_t IOManager::ReadLink(const char *path, char *buf, size_t bufsize) {$/;"	f	class:asylo::io::IOManager
ReadLink	./platform/posix/io/io_manager.h	/^    virtual ssize_t ReadLink(const char *path_name, char *buf, size_t bufsize) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
ReadLink	./platform/posix/io/native_paths.cc	/^ssize_t NativePathHandler::ReadLink(const char *path_name, char *buf,$/;"	f	class:asylo::io::NativePathHandler
ReadLink	./platform/posix/io/random_devices.cc	/^ssize_t RandomPathHandler::ReadLink(const char *path_name, char *buf,$/;"	f	class:asylo::RandomPathHandler
ReadRandomBytes	./platform/core/test/random_test.cc	/^StatusOr<std::string> ReadRandomBytes(const char *path, size_t read_bytes,$/;"	f	namespace:asylo::__anon129
ReadRandomBytes	./platform/core/test/random_test.cc	/^StatusOr<std::string> ReadRandomBytes(const char *path, size_t read_bytes,$/;"	f	namespace:asylo::__anon383
ReadRandomBytesFromBoringSSL	./platform/core/test/random_test.cc	/^StatusOr<std::string> ReadRandomBytesFromBoringSSL(size_t read_bytes) {$/;"	f	namespace:asylo::__anon129
ReadRandomBytesFromBoringSSL	./platform/core/test/random_test.cc	/^StatusOr<std::string> ReadRandomBytesFromBoringSSL(size_t read_bytes) {$/;"	f	namespace:asylo::__anon383
ReadTestData	./platform/common/ring_buffer_test.cc	/^  void ReadTestData(std::vector<uint8_t> *out) {$/;"	f	class:asylo::RingBufferTest
ReadWriteTest	./platform/posix/io/read_write_test.cc	/^class ReadWriteTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon322	file:
ReadWriteTest	./platform/posix/io/read_write_test.cc	/^class ReadWriteTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon68	file:
ReaderLockView	./util/mutex_guarded.h	/^  ReaderLockView(ReaderLockView &&other)$/;"	f	class:asylo::ReaderLockView
ReaderLockView	./util/mutex_guarded.h	/^  ReaderLockView(absl::Mutex *mu, const T *value) : mu_(mu), value_(value) {}$/;"	f	class:asylo::ReaderLockView
ReaderLockView	./util/mutex_guarded.h	/^class ReaderLockView {$/;"	c	namespace:asylo
Readv	./platform/posix/io/io_manager.cc	/^ssize_t IOManager::Readv(int fd, const struct iovec *iov, int iovcnt) {$/;"	f	class:asylo::io::IOManager
Readv	./platform/posix/io/io_manager.h	/^    virtual ssize_t Readv(const struct iovec *iov, int iovcnt) {$/;"	f	class:asylo::io::IOManager::IOContext
Readv	./platform/posix/io/native_paths.cc	/^ssize_t IOContextNative::Readv(const struct iovec *iov, int iovcnt) {$/;"	f	class:asylo::io::IOContextNative
RealPath	./platform/posix/io/io_manager.cc	/^char *IOManager::RealPath(const char *path, char *resolved_path) {$/;"	f	class:asylo::io::IOManager
RealTimeClock	./platform/core/enclave_manager.cc	/^int64_t RealTimeClock() {$/;"	f	namespace:asylo::__anon125
RealTimeClock	./platform/core/enclave_manager.cc	/^int64_t RealTimeClock() {$/;"	f	namespace:asylo::__anon379
ReallocHook	./platform/posix/memory/memory.cc	/^void *ReallocHook(void *ptr, size_t size, void *pool) {$/;"	f	namespace:__anon316
ReallocHook	./platform/posix/memory/memory.cc	/^void *ReallocHook(void *ptr, size_t size, void *pool) {$/;"	f	namespace:__anon62
RealtimeClock	./platform/posix/time.cc	/^inline int64_t RealtimeClock() {$/;"	f	namespace:__anon314
RealtimeClock	./platform/posix/time.cc	/^inline int64_t RealtimeClock() {$/;"	f	namespace:__anon60
ReceiveSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^Status ReceiveSnapshotKey(std::unique_ptr<AeadCryptor> cryptor, int socket) {$/;"	f	namespace:asylo
RecordStore	./platform/storage/utils/record_store.h	/^  RecordStore(size_t capacity, RandomAccessStorage *io)$/;"	f	class:asylo::RecordStore
RecordStore	./platform/storage/utils/record_store.h	/^class RecordStore {$/;"	c	namespace:asylo
RecvFrom	./platform/posix/io/io_manager.cc	/^ssize_t IOManager::RecvFrom(int sockfd, void *buf, size_t len, int flags,$/;"	f	class:asylo::io::IOManager
RecvFrom	./platform/posix/io/io_manager.h	/^    virtual ssize_t RecvFrom(void *buf, size_t len, int flags,$/;"	f	class:asylo::io::IOManager::IOContext
RecvFrom	./platform/posix/io/native_paths.cc	/^ssize_t IOContextNative::RecvFrom(void *buf, size_t len, int flags,$/;"	f	class:asylo::io::IOContextNative
RecvFrom	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::RecvFrom(void *buffer, size_t length, int flags,$/;"	f	class:asylo::SocketClient
RecvFrom	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::RecvFrom(void *buffer, size_t length, int flags,$/;"	f	class:asylo::SocketServer
RecvFrom	./platform/posix/sockets/socket_transmit.cc	/^Status SocketTransmit::RecvFrom(int socket, void *buffer, size_t length,$/;"	f	class:asylo::SocketTransmit
RecvMsg	./platform/posix/io/io_manager.cc	/^ssize_t IOManager::RecvMsg(int sockfd, struct msghdr *msg, int flags) {$/;"	f	class:asylo::io::IOManager
RecvMsg	./platform/posix/io/io_manager.h	/^    virtual ssize_t RecvMsg(struct msghdr *msg, int flags) {$/;"	f	class:asylo::io::IOManager::IOContext
RecvMsg	./platform/posix/io/native_paths.cc	/^ssize_t IOContextNative::RecvMsg(struct msghdr *msg, int flags) {$/;"	f	class:asylo::io::IOContextNative
RecvMsg	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::RecvMsg(struct msghdr *msg, int flags) {$/;"	f	class:asylo::SocketClient
RecvMsg	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::RecvMsg(struct msghdr *msg, int flags) {$/;"	f	class:asylo::SocketServer
RecvMsg	./platform/posix/sockets/socket_transmit.cc	/^Status SocketTransmit::RecvMsg(int sockfd, struct msghdr *msg, int flags) {$/;"	f	class:asylo::SocketTransmit
ReduceLogicalRangeToFullLogicalBlocks	./platform/storage/utils/offset_translator.cc	/^void OffsetTranslator::ReduceLogicalRangeToFullLogicalBlocks($/;"	f	class:asylo::platform::storage::OffsetTranslator
RegisterEntryHandler	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus TrustedPrimitives::RegisterEntryHandler($/;"	f	class:asylo::primitives::TrustedPrimitives
RegisterEntryHandler	./platform/primitives/sim/trusted_sim.cc	/^PrimitiveStatus TrustedPrimitives::RegisterEntryHandler($/;"	f	class:asylo::primitives::TrustedPrimitives
RegisterEntryHandler	./platform/primitives/util/trusted_runtime_helper.cc	/^PrimitiveStatus RegisterEntryHandler($/;"	f	namespace:asylo::primitives
RegisterExitHandler	./platform/primitives/util/dispatch_table.cc	/^Status DispatchTable::RegisterExitHandler(uint64_t untrusted_selector,$/;"	f	class:asylo::primitives::DispatchTable
RegisterFds	./platform/posix/io/epoll_test.cc	/^  void RegisterFds(int epfd, int pipe_idx, int additional_flags = 0) {$/;"	f	class:asylo::__anon318::EpollTest
RegisterFds	./platform/posix/io/epoll_test.cc	/^  void RegisterFds(int epfd, int pipe_idx, int additional_flags = 0) {$/;"	f	class:asylo::__anon64::EpollTest
RegisterHostFileDescriptor	./platform/posix/io/io_manager.cc	/^int IOManager::RegisterHostFileDescriptor(int host_fd) {$/;"	f	class:asylo::io::IOManager
RegisterInternalHandlers	./platform/primitives/sgx/trusted_sgx.cc	/^void RegisterInternalHandlers() {$/;"	f	namespace:asylo::primitives
RegisterInternalHandlers	./platform/primitives/sim/trusted_sim.cc	/^void RegisterInternalHandlers() {$/;"	f	namespace:asylo::primitives
RegisterManagedResource	./platform/core/shared_resource_manager.h	/^  Status RegisterManagedResource(const SharedName &name, T *pointer) {$/;"	f	class:asylo::SharedResourceManager
RegisterService	./grpc/util/grpc_server_launcher.cc	/^Status GrpcServerLauncher::RegisterService($/;"	f	class:asylo::GrpcServerLauncher
RegisterSignal	./platform/core/enclave_manager.cc	/^const EnclaveClient *EnclaveSignalDispatcher::RegisterSignal($/;"	f	class:asylo::EnclaveSignalDispatcher
RegisterUnmanagedResource	./platform/core/shared_resource_manager.h	/^  Status RegisterUnmanagedResource(const SharedName &name, T *pointer) {$/;"	f	class:asylo::SharedResourceManager
RegisterVirtualPathHandler	./platform/posix/io/io_manager.cc	/^bool IOManager::RegisterVirtualPathHandler($/;"	f	class:asylo::io::IOManager
RegisterVirtualPathHandler	./platform/posix/io/virtual_test.cc	/^  void RegisterVirtualPathHandler(const std::string &path,$/;"	f	class:asylo::__anon326::VirtualHandlerTest
RegisterVirtualPathHandler	./platform/posix/io/virtual_test.cc	/^  void RegisterVirtualPathHandler(const std::string &path,$/;"	f	class:asylo::__anon72::VirtualHandlerTest
ReinterpretCopySingle	./platform/common/bridge_functions.cc	/^void ReinterpretCopySingle(T *dst, const U *src) {$/;"	f	namespace:asylo
Release	./platform/common/spin_lock.h	/^  void Release() {$/;"	f	class:SpinLock
ReleaseResource	./platform/core/shared_resource_manager.cc	/^bool SharedResourceManager::ReleaseResource(const SharedName &name) {$/;"	f	class:asylo::SharedResourceManager
RemainingByteCount	./grpc/auth/util/multi_buffer_input_stream.cc	/^int MultiBufferInputStream::RemainingByteCount() const {$/;"	f	class:asylo::MultiBufferInputStream
RemainingBytes	./grpc/auth/util/multi_buffer_input_stream.cc	/^std::string MultiBufferInputStream::RemainingBytes() const {$/;"	f	class:asylo::MultiBufferInputStream
Remove	./platform/posix/pthread.cc	/^bool QueueOperations::Remove(const pthread_t id) {$/;"	f	class:asylo::pthread_impl::QueueOperations
RemoveEnclaveReference	./platform/core/enclave_manager.cc	/^void EnclaveManager::RemoveEnclaveReference(const std::string &name) {$/;"	f	class:asylo::EnclaveManager
RemoveFdFlags	./util/fd_utils.cc	/^Status RemoveFdFlags(int fd, int flags) {$/;"	f	namespace:asylo
Rename	./platform/posix/io/io_manager.cc	/^int IOManager::Rename(const char *oldpath, const char *newpath) {$/;"	f	class:asylo::io::IOManager
Rename	./platform/posix/io/io_manager.h	/^    virtual int Rename(const char *oldpath, const char *newpath) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Rename	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Rename(const char *oldpath, const char *newpath) {$/;"	f	class:asylo::io::NativePathHandler
Report	./identity/sgx/identity_key_management_structs.h	/^struct Report {$/;"	s	class:asylo::sgx::KeyrequestKeyname
Reportdata	./identity/sgx/identity_key_management_structs.h	/^struct Reportdata {$/;"	s	class:asylo::sgx::KeyrequestKeyname
RequestWriter	./platform/system_call/message.cc	/^MessageWriter MessageWriter::RequestWriter($/;"	f	class:asylo::system_call::MessageWriter
Reseal	./identity/secret_sealer.cc	/^Status SecretSealer::Reseal(const SealedSecret &old_sealed_secret,$/;"	f	class:asylo::SecretSealer
ReservedEntry	./platform/primitives/util/trusted_runtime_helper.cc	/^PrimitiveStatus ReservedEntry($/;"	f	namespace:asylo::primitives::__anon340
ReservedEntry	./platform/primitives/util/trusted_runtime_helper.cc	/^PrimitiveStatus ReservedEntry($/;"	f	namespace:asylo::primitives::__anon86
Reset	./platform/posix/fork_security_test_driver.cc	/^    void Reset(const SnapshotLayoutEntry &entry) {$/;"	f	class:asylo::__anon305::SnapshotDeleter::SnapshotEntryDeleter
Reset	./platform/posix/fork_security_test_driver.cc	/^    void Reset(const SnapshotLayoutEntry &entry) {$/;"	f	class:asylo::__anon51::SnapshotDeleter::SnapshotEntryDeleter
Reset	./platform/posix/fork_security_test_driver.cc	/^  void Reset(const SnapshotLayout &snapshot_layout) {$/;"	f	class:asylo::__anon305::SnapshotDeleter
Reset	./platform/posix/fork_security_test_driver.cc	/^  void Reset(const SnapshotLayout &snapshot_layout) {$/;"	f	class:asylo::__anon51::SnapshotDeleter
ResourceHandle	./platform/core/shared_resource_manager.h	/^    ResourceHandle(const SharedName &name)$/;"	f	struct:asylo::SharedResourceManager::ResourceHandle
ResourceHandle	./platform/core/shared_resource_manager.h	/^  struct ResourceHandle {$/;"	s	class:asylo::SharedResourceManager
ResponseString	./test/grpc/messenger_server_impl.h	/^  static std::string ResponseString(absl::string_view name) {$/;"	f	class:asylo::test::MessengerServer
ResponseWriter	./platform/system_call/message.cc	/^MessageWriter MessageWriter::ResponseWriter($/;"	f	class:asylo::system_call::MessageWriter
Restore	./test/util/output_collector.cc	/^void OutputCollector::Restore() {$/;"	f	class:asylo::OutputCollector
RestoreForFork	./platform/arch/common/trusted/fork.cc	/^Status RestoreForFork(const char *input, size_t input_len) {$/;"	f	namespace:asylo
RestoreForFork	./platform/arch/sgx/trusted/fork.cc	/^Status RestoreForFork(const char *input, size_t input_len) {$/;"	f	namespace:asylo
RestoreFrom	./util/status.cc	/^void Status::RestoreFrom(const StatusProto &status_proto) {$/;"	f	class:asylo::Status
Result	./grpc/auth/core/ekep_handshaker.h	/^  enum class Result {$/;"	c	class:asylo::EkepHandshaker
RetrieveLogicalOffset	./platform/storage/secure/aead_handler.cc	/^bool AeadHandler::RetrieveLogicalOffset(int fd, off_t *logical_offset) const {$/;"	f	class:asylo::platform::storage::AeadHandler
ReturnFalse	./platform/posix/threading/thread_manager.cc	/^bool ReturnFalse() { return false; }$/;"	f	namespace:asylo
Rewind	./grpc/auth/util/multi_buffer_input_stream.cc	/^void MultiBufferInputStream::Rewind() {$/;"	f	class:asylo::MultiBufferInputStream
RingBuffer	./platform/common/ring_buffer.h	/^  RingBuffer()$/;"	f	class:asylo::RingBuffer
RingBuffer	./platform/common/ring_buffer.h	/^class RingBuffer {$/;"	c	namespace:asylo
RingBufferForTest	./platform/common/ring_buffer_test.cc	/^class RingBufferForTest : public RingBuffer<Capacity> {$/;"	c	namespace:asylo	file:
RingBufferTest	./platform/common/ring_buffer_test.cc	/^class RingBufferTest : public ::testing::Test {$/;"	c	namespace:asylo	file:
RmDir	./platform/posix/io/io_manager.cc	/^int IOManager::RmDir(const char *pathname) {$/;"	f	class:asylo::io::IOManager
RmDir	./platform/posix/io/io_manager.h	/^    virtual int RmDir(const char *pathname) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
RmDir	./platform/posix/io/native_paths.cc	/^int NativePathHandler::RmDir(const char *pathname) {$/;"	f	class:asylo::io::NativePathHandler
RootAcl	./identity/sgx/sgx_local_secret_sealer.cc	/^std::vector<EnclaveIdentityExpectation> SgxLocalSecretSealer::RootAcl() const {$/;"	f	class:asylo::SgxLocalSecretSealer
RootName	./identity/sgx/sgx_local_secret_sealer.cc	/^std::string SgxLocalSecretSealer::RootName() const {$/;"	f	class:asylo::SgxLocalSecretSealer
RootType	./identity/sgx/sgx_local_secret_sealer.cc	/^SealingRootType SgxLocalSecretSealer::RootType() const { return LOCAL; }$/;"	f	class:asylo::SgxLocalSecretSealer
RoundDownToMultipleOf8	./platform/system_call/message.cc	/^uint64_t RoundDownToMultipleOf8(uint64_t value) {$/;"	f	namespace:asylo::system_call::__anon118
RoundDownToMultipleOf8	./platform/system_call/message.cc	/^uint64_t RoundDownToMultipleOf8(uint64_t value) {$/;"	f	namespace:asylo::system_call::__anon372
RoundUpToMultipleOf8	./platform/system_call/message.cc	/^uint64_t RoundUpToMultipleOf8(uint64_t value) {$/;"	f	namespace:asylo::system_call::__anon118
RoundUpToMultipleOf8	./platform/system_call/message.cc	/^uint64_t RoundUpToMultipleOf8(uint64_t value) {$/;"	f	namespace:asylo::system_call::__anon372
RoundUpToPageBoundary	./platform/primitives/sim/untrusted_sim.cc	/^inline size_t RoundUpToPageBoundary(size_t size) {$/;"	f	namespace:asylo::primitives::__anon347
RoundUpToPageBoundary	./platform/primitives/sim/untrusted_sim.cc	/^inline size_t RoundUpToPageBoundary(size_t size) {$/;"	f	namespace:asylo::primitives::__anon93
Rsa3072PublicKey	./identity/sgx/identity_key_management_structs.h	/^struct Rsa3072PublicKey {$/;"	s	namespace:asylo::sgx
RsaOaepDecryptionKey	./crypto/rsa_oaep_encryption_key.cc	/^RsaOaepDecryptionKey::RsaOaepDecryptionKey(bssl::UniquePtr<RSA> private_key)$/;"	f	class:asylo::RsaOaepDecryptionKey
RsaOaepDecryptionKey	./crypto/rsa_oaep_encryption_key.h	/^class RsaOaepDecryptionKey : public AsymmetricDecryptionKey {$/;"	c	namespace:asylo
RsaOaepEncryptionKey	./crypto/rsa_oaep_encryption_key.cc	/^RsaOaepEncryptionKey::RsaOaepEncryptionKey(bssl::UniquePtr<RSA> public_key)$/;"	f	class:asylo::RsaOaepEncryptionKey
RsaOaepEncryptionKey	./crypto/rsa_oaep_encryption_key.h	/^class RsaOaepEncryptionKey : public AsymmetricEncryptionKey {$/;"	c	namespace:asylo
Run	./examples/grpc_server/grpc_server_enclave.cc	/^asylo::Status GrpcServerEnclave::Run(const asylo::EnclaveInput &enclave_input,$/;"	f	class:examples::grpc_server::GrpcServerEnclave
Run	./examples/quickstart/demo_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::EnclaveDemo
Run	./examples/quickstart/solution/demo_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::EnclaveDemo
Run	./grpc/util/enclave_server.h	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::final
Run	./platform/arch/sgx/untrusted/sgx_client.cc	/^Status SgxClient::Run(const char *input, size_t input_len,$/;"	f	class:asylo::SgxClient
Run	./platform/core/test/enclave_api_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::EnclaveApi
Run	./platform/core/test/getenv_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *) {$/;"	f	class:asylo::EnclaveGetenvTest
Run	./platform/core/test/proto_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::EnclaveProtoTest
Run	./platform/core/trusted_application.h	/^  virtual Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::TrustedApplication
Run	./platform/posix/fork_security_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::ForkSecurityTest
Run	./platform/posix/fork_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::ForkTest
Run	./platform/posix/sockets/addrinfo_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::AddrinfoTestEnclave
Run	./platform/posix/syscalls_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave
Run	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::Run() {$/;"	f	class:asylo::ThreadManager::Thread
Run	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus Run(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon336
Run	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus Run(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon82
Run	./test/grpc/client_enclave.cc	/^Status ClientEnclave::Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::ClientEnclave
Run	./test/misc/active_enclave_signal_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::ActiveEnclaveSignalTest
Run	./test/misc/block_enclave_entries_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::BlockEnclaveEntriesTest
Run	./test/misc/double_die.cc	/^  void Run(const std::string &enclave_path) {$/;"	f	class:asylo::__anon192::DieTest
Run	./test/misc/double_die.cc	/^  void Run(const std::string &enclave_path) {$/;"	f	class:asylo::__anon446::DieTest
Run	./test/misc/enclave_entry_count_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::EnclaveEntryCountTest
Run	./test/misc/exception_app.cc	/^  void Run(const std::string &enclave_path, const std::string &input) {$/;"	f	class:asylo::__anon190::ExceptionTest
Run	./test/misc/exception_app.cc	/^  void Run(const std::string &enclave_path, const std::string &input) {$/;"	f	class:asylo::__anon444::ExceptionTest
Run	./test/misc/hello_world.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::HelloWorld
Run	./test/misc/inactive_enclave_signal_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::InactiveEnclaveSignalTest
Run	./test/misc/initfini.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::Initfini
Run	./test/misc/logging_test_enclave.cc	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) {$/;"	f	class:asylo::Logging
Run	./test/util/enclave_test_launcher.cc	/^Status EnclaveTestLauncher::Run(const EnclaveInput &input,$/;"	f	class:asylo::EnclaveTestLauncher
Run	./test/util/exec_tester.cc	/^bool ExecTester::Run(const std::string &input, int *status) {$/;"	f	class:asylo::experimental::ExecTester
RunChModTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunChModTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunCleanupRoutines	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::RunCleanupRoutines() {$/;"	f	class:asylo::ThreadManager::Thread
RunCpuSetMacrosTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunCpuSetMacrosTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunDupTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunDupTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunEkepHandshake	./platform/arch/sgx/trusted/fork.cc	/^Status RunEkepHandshake(EkepHandshaker *handshaker, bool is_parent,$/;"	f	namespace:asylo
RunEnclave	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  Status RunEnclave() {$/;"	f	class:asylo::__anon182::ApplicationWrapperEnclaveTest
RunEnclave	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  Status RunEnclave() {$/;"	f	class:asylo::__anon436::ApplicationWrapperEnclaveTest
RunEnclave	./test/misc/active_enclave_signal_test_driver.cc	/^void *RunEnclave(void *arg) {$/;"	f	namespace:asylo::__anon198
RunEnclave	./test/misc/active_enclave_signal_test_driver.cc	/^void *RunEnclave(void *arg) {$/;"	f	namespace:asylo::__anon452
RunEnclaveEntryCountTest	./test/misc/enclave_entry_count_test_driver.cc	/^  Status RunEnclaveEntryCountTest(int number_threads) {$/;"	f	class:asylo::__anon211::EnclaveEntryCountTest
RunEnclaveEntryCountTest	./test/misc/enclave_entry_count_test_driver.cc	/^  Status RunEnclaveEntryCountTest(int number_threads) {$/;"	f	class:asylo::__anon465::EnclaveEntryCountTest
RunEnclaveSyscall	./platform/posix/syscalls_test_driver.cc	/^Status RunEnclaveSyscall(EnclaveClient *client,$/;"	f	namespace:asylo::__anon302
RunEnclaveSyscall	./platform/posix/syscalls_test_driver.cc	/^Status RunEnclaveSyscall(EnclaveClient *client,$/;"	f	namespace:asylo::__anon48
RunEnclaveThreadInput	./test/misc/active_enclave_signal_test_driver.cc	/^struct RunEnclaveThreadInput {$/;"	s	namespace:asylo::__anon198	file:
RunEnclaveThreadInput	./test/misc/active_enclave_signal_test_driver.cc	/^struct RunEnclaveThreadInput {$/;"	s	namespace:asylo::__anon452	file:
RunFChModTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunFChModTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunFStatTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunFStatTest(const std::string &path, EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunFcntlTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunFcntlTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetCwdTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetCwdTest(bool provide_buffer, int32_t buffer_size,$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetEgidTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetEgidTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetEuidTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetEuidTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetGidTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetGidTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetHostNameTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetHostNameTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetIfAddrsTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetIfAddrsTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetPWUidTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetPWUidTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetPeernameFailureTest_EBADF	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetPeernameFailureTest_EBADF() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetPeernameFailureTest_EFAULT	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetPeernameFailureTest_EFAULT() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetPeernameFailureTest_EINVAL	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetPeernameFailureTest_EINVAL() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetPeernameFailureTest_ENOTCONN	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetPeernameFailureTest_ENOTCONN() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetPeernameFailureTest_ENOTSOCK	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetPeernameFailureTest_ENOTSOCK() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetPidTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetPidTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetPpidTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetPpidTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetSocknameFailureTest_EBADF	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetSocknameFailureTest_EBADF() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetSocknameFailureTest_EFAULT	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetSocknameFailureTest_EFAULT() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetSocknameFailureTest_EINVAL	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetSocknameFailureTest_EINVAL() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetSocknameFailureTest_ENOTSOCK	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetSocknameFailureTest_ENOTSOCK() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetSocknameTest_SUCCESS	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetSocknameTest_SUCCESS() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunGetUidTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunGetUidTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunItimerTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunItimerTest() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunLStatTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunLStatTest(const std::string &path, EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunLinkTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunLinkTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunMkdirTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunMkdirTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunMmapTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunMmapTest() {$/;"	f	class:asylo::SyscallsEnclave	file:
RunReadvTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunReadvTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunRenameTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunRenameTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunRlimitInvalidNoFileTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunRlimitInvalidNoFileTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunRlimitLowNoFileTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunRlimitLowNoFileTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunRlimitNoFileTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunRlimitNoFileTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunRmDirTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunRmDirTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunSchedGetAffinityFailureTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunSchedGetAffinityFailureTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunSchedGetAffinityTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunSchedGetAffinityTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunSelectTest	./platform/posix/select_test.cc	/^  void RunSelectTest(bool is_read_test) {$/;"	f	class:asylo::__anon304::SelectTest
RunSelectTest	./platform/posix/select_test.cc	/^  void RunSelectTest(bool is_read_test) {$/;"	f	class:asylo::__anon50::SelectTest
RunSignalTest	./test/misc/active_enclave_signal_test_driver.cc	/^  Status RunSignalTest(const EnclaveInput &enclave_input) {$/;"	f	class:asylo::__anon198::ActiveEnclaveSignalTest
RunSignalTest	./test/misc/active_enclave_signal_test_driver.cc	/^  Status RunSignalTest(const EnclaveInput &enclave_input) {$/;"	f	class:asylo::__anon452::ActiveEnclaveSignalTest
RunSignalTest	./test/misc/active_enclave_signal_test_enclave.cc	/^  Status RunSignalTest(const SignalTestInput::SignalTestType &test_type) {$/;"	f	class:asylo::ActiveEnclaveSignalTest	file:
RunSignalTest	./test/misc/inactive_enclave_signal_test_driver.cc	/^  Status RunSignalTest(const EnclaveInput &enclave_input) {$/;"	f	class:asylo::__anon193::InactiveEnclaveSignalTest
RunSignalTest	./test/misc/inactive_enclave_signal_test_driver.cc	/^  Status RunSignalTest(const EnclaveInput &enclave_input) {$/;"	f	class:asylo::__anon447::InactiveEnclaveSignalTest
RunStatTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunStatTest(const std::string &path, EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunSyscallInsideEnclave	./platform/posix/syscalls_test_driver.cc	/^  Status RunSyscallInsideEnclave(const std::string &tested_syscall,$/;"	f	class:asylo::__anon302::CustomConfigSyscallsTest
RunSyscallInsideEnclave	./platform/posix/syscalls_test_driver.cc	/^  Status RunSyscallInsideEnclave(const std::string &tested_syscall,$/;"	f	class:asylo::__anon302::SyscallsTest
RunSyscallInsideEnclave	./platform/posix/syscalls_test_driver.cc	/^  Status RunSyscallInsideEnclave(const std::string &tested_syscall,$/;"	f	class:asylo::__anon48::CustomConfigSyscallsTest
RunSyscallInsideEnclave	./platform/posix/syscalls_test_driver.cc	/^  Status RunSyscallInsideEnclave(const std::string &tested_syscall,$/;"	f	class:asylo::__anon48::SyscallsTest
RunSysconfTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunSysconfTest(EnclaveOutput *output, int name) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunTest	./platform/common/test/bridge_types_test_driver.cc	/^  void RunTest(const std::string &input) {$/;"	f	class:asylo::__anon106::BridgeTypesTest
RunTest	./platform/common/test/bridge_types_test_driver.cc	/^  void RunTest(const std::string &input) {$/;"	f	class:asylo::__anon360::BridgeTypesTest
RunTest	./platform/core/test/getenv_test_enclave.cc	/^  Status RunTest(const std::string &test_string) {$/;"	f	class:asylo::EnclaveGetenvTest
RunTest	./test/misc/exception_test.cc	/^  void RunTest(const std::string &input, int *status) {$/;"	f	class:asylo::__anon214::ExceptionTest
RunTest	./test/misc/exception_test.cc	/^  void RunTest(const std::string &input, int *status) {$/;"	f	class:asylo::__anon468::ExceptionTest
RunThreads	./test/misc/mutex_test.cc	/^Status RunThreads(void *(*start_routine)(void *)) {$/;"	f	namespace:asylo::__anon189
RunThreads	./test/misc/mutex_test.cc	/^Status RunThreads(void *(*start_routine)(void *)) {$/;"	f	namespace:asylo::__anon443
RunTruncateTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunTruncateTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunUmaskTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunUmaskTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunUnameTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunUnameTest(EnclaveOutput *output) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunUnlinkTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunUnlinkTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunUtimesTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunUtimesTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RunWithAsserts	./test/util/exec_tester.cc	/^void ExecTester::RunWithAsserts(const std::string &input, bool *result,$/;"	f	class:asylo::experimental::ExecTester
RunWritevTest	./platform/posix/syscalls_test_enclave.cc	/^  Status RunWritevTest(const std::string &path) {$/;"	f	class:asylo::SyscallsEnclave	file:
RwLockTest	./test/misc/rwlock_test.cc	/^class RwLockTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon213	file:
RwLockTest	./test/misc/rwlock_test.cc	/^class RwLockTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon467	file:
SAFE	./crypto/util/bytes.h	/^enum class DataSafety { SAFE, UNSAFE };$/;"	m	class:asylo::DataSafety
SA_NODEFER	./platform/posix/include/signal.h	34;"	d
SA_RESETHAND	./platform/posix/include/signal.h	35;"	d
SEAL_KEY	./identity/sgx/identity_key_management_structs.h	/^  SEAL_KEY = 4$/;"	m	class:asylo::sgx::KeyrequestKeyname
SERVFAIL	./platform/posix/include/arpa/nameser.h	225;"	d
SERVFAIL	./platform/system/include/arpa/nameser_compat.h	35;"	d
SET_STATIC_MAP_VALUE_OF_DERIVED_TYPE	./platform/common/static_map.h	139;"	d
SGXAPI	./third_party/intel/posix/sgx_defs.h	37;"	d
SGX_CDECL	./third_party/intel/posix/sgx_defs.h	44;"	d
SGX_CXX_NATIVE_HEADER	./third_party/intel/posix/sgx_defs.h	42;"	d
SGX_DEPRECATED	./third_party/intel/posix/sgx_defs.h	51;"	d
SGX_DLLIMPORT	./third_party/intel/posix/sgx_defs.h	48;"	d
SGX_FASTCALL	./third_party/intel/posix/sgx_defs.h	46;"	d
SGX_NOCONVENTION	./third_party/intel/posix/sgx_defs.h	54;"	d
SGX_STDCALL	./third_party/intel/posix/sgx_defs.h	45;"	d
SGX_THREAD_COND_INITIALIZER	./third_party/intel/posix/sgx_thread.h	80;"	d
SGX_THREAD_MUTEX_INITIALIZER	./third_party/intel/posix/sgx_thread.h	65;"	d
SGX_THREAD_MUTEX_NONRECURSIVE	./third_party/intel/posix/sgx_thread.h	59;"	d
SGX_THREAD_MUTEX_RECURSIVE	./third_party/intel/posix/sgx_thread.h	60;"	d
SGX_THREAD_NONRECURSIVE_MUTEX_INITIALIZER	./third_party/intel/posix/sgx_thread.h	61;"	d
SGX_THREAD_RECURSIVE_MUTEX_INITIALIZER	./third_party/intel/posix/sgx_thread.h	63;"	d
SGX_THREAD_T_NULL	./third_party/intel/posix/sgx_thread.h	57;"	d
SGX_UBRIDGE	./third_party/intel/posix/sgx_defs.h	49;"	d
SHUT_RD	./platform/posix/include/sys/socket.h	272;"	d
SHUT_RDWR	./platform/posix/include/sys/socket.h	274;"	d
SHUT_WR	./platform/posix/include/sys/socket.h	273;"	d
SOCK_CLOEXEC	./platform/posix/include/sys/socket.h	297;"	d
SOCK_DCCP	./platform/posix/include/sys/socket.h	288;"	d
SOCK_DGRAM	./platform/posix/include/sys/socket.h	280;"	d
SOCK_NONBLOCK	./platform/posix/include/sys/socket.h	299;"	d
SOCK_PACKET	./platform/posix/include/sys/socket.h	291;"	d
SOCK_RAW	./platform/posix/include/sys/socket.h	282;"	d
SOCK_RDM	./platform/posix/include/sys/socket.h	284;"	d
SOCK_SEQPACKET	./platform/posix/include/sys/socket.h	286;"	d
SOCK_STREAM	./platform/posix/include/sys/socket.h	278;"	d
SOL_AAL	./platform/posix/include/sys/socket.h	224;"	d
SOL_ATM	./platform/posix/include/sys/socket.h	223;"	d
SOL_DECNET	./platform/posix/include/sys/socket.h	220;"	d
SOL_IRDA	./platform/posix/include/sys/socket.h	225;"	d
SOL_PACKET	./platform/posix/include/sys/socket.h	222;"	d
SOL_RAW	./platform/posix/include/sys/socket.h	219;"	d
SOL_SOCKET	./platform/posix/include/sys/socket.h	107;"	d
SOL_SOCKET	./platform/posix/include/sys/socket.h	301;"	d
SOL_X25	./platform/posix/include/sys/socket.h	221;"	d
SOMAXCONN	./platform/posix/include/sys/socket.h	270;"	d
SO_BROADCAST	./platform/posix/include/sys/socket.h	114;"	d
SO_BSDCOMPAT	./platform/posix/include/sys/socket.h	122;"	d
SO_DEBUG	./platform/posix/include/sys/socket.h	109;"	d
SO_DONTROUTE	./platform/posix/include/sys/socket.h	113;"	d
SO_ERROR	./platform/posix/include/sys/socket.h	112;"	d
SO_KEEPALIVE	./platform/posix/include/sys/socket.h	117;"	d
SO_LINGER	./platform/posix/include/sys/socket.h	121;"	d
SO_NO_CHECK	./platform/posix/include/sys/socket.h	119;"	d
SO_OOBINLINE	./platform/posix/include/sys/socket.h	118;"	d
SO_PRIORITY	./platform/posix/include/sys/socket.h	120;"	d
SO_RCVBUF	./platform/posix/include/sys/socket.h	116;"	d
SO_RCVBUFFORCE	./platform/posix/include/sys/socket.h	127;"	d
SO_RCVTIMEO	./platform/posix/include/sys/socket.h	124;"	d
SO_REUSEADDR	./platform/posix/include/sys/socket.h	110;"	d
SO_REUSEADDR	./platform/posix/include/sys/socket.h	302;"	d
SO_REUSEPORT	./platform/posix/include/sys/socket.h	123;"	d
SO_SNDBUF	./platform/posix/include/sys/socket.h	115;"	d
SO_SNDBUFFORCE	./platform/posix/include/sys/socket.h	126;"	d
SO_SNDTIMEO	./platform/posix/include/sys/socket.h	125;"	d
SO_TYPE	./platform/posix/include/sys/socket.h	111;"	d
SSE	./identity/sgx/secs_attributes.h	/^  SSE = 64 + 1,        \/\/ Determines the behavior of the SSE capabilities.$/;"	m	class:asylo::sgx::SecsAttributeBit
STATUS	./platform/posix/include/arpa/nameser.h	219;"	d
SafeBytes	./crypto/util/bytes.h	/^  SafeBytes(Args &&... args)$/;"	f	class:asylo::final
SafeBytesHasher	./platform/crypto/gcmlib/gcm_cryptor.h	/^  class SafeBytesHasher {$/;"	c	class:asylo::platform::crypto::gcmlib::GcmCryptorRegistry
SafeCompareByteContainers	./crypto/util/byte_container_util.h	/^inline bool SafeCompareByteContainers(ByteContainerView lhs,$/;"	f	namespace:asylo
SafeEquals	./crypto/util/byte_container_view.h	/^  bool SafeEquals(ByteContainerView other) const {$/;"	f	class:asylo::ByteContainerView
SafePolicy	./crypto/util/bytes.h	/^struct SafePolicy {$/;"	s	namespace:asylo
SafeStringTest	./grpc/auth/util/safe_string_test.cc	/^class SafeStringTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon253	file:
SafeStringTest	./grpc/auth/util/safe_string_test.cc	/^class SafeStringTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon507	file:
SameToHost	./platform/posix/endian_test.cc	/^  UIntT SameToHost(UIntT value) {$/;"	f	class:asylo::__anon298::EndianTest
SameToHost	./platform/posix/endian_test.cc	/^  UIntT SameToHost(UIntT value) {$/;"	f	class:asylo::__anon44::EndianTest
SaveThreadLayoutForSnapshot	./platform/arch/common/trusted/fork.cc	/^void SaveThreadLayoutForSnapshot() {$/;"	f	namespace:asylo
SaveThreadLayoutForSnapshot	./platform/arch/sgx/trusted/fork.cc	/^void SaveThreadLayoutForSnapshot() {$/;"	f	namespace:asylo
SaveTo	./util/status.cc	/^void Status::SaveTo(StatusProto *status_proto) const {$/;"	f	class:asylo::Status
ScopedCurrentClient	./platform/primitives/untrusted_primitives.h	/^    explicit ScopedCurrentClient(Client *client)$/;"	f	class:asylo::primitives::Client::ScopedCurrentClient
ScopedCurrentClient	./platform/primitives/untrusted_primitives.h	/^  class ScopedCurrentClient {$/;"	c	class:asylo::primitives::Client
ScopedSpinLock	./platform/common/spin_lock.h	/^  ScopedSpinLock(SpinLock *lock) : lock_(lock) {$/;"	f	class:ScopedSpinLock
ScopedSpinLock	./platform/common/spin_lock.h	/^class ScopedSpinLock {$/;"	c
Seal	./crypto/aead_cryptor.cc	/^Status AeadCryptor::Seal(ByteContainerView plaintext,$/;"	f	class:asylo::experimental::AeadCryptor
Seal	./crypto/aead_key.cc	/^Status AeadKey::Seal(ByteContainerView plaintext,$/;"	f	class:asylo::AeadKey
Seal	./crypto/aes_gcm_siv.h	/^  Status Seal(const ContainerT &key, const ContainerU &additional_data,$/;"	f	class:asylo::AesGcmSivCryptor
Seal	./identity/sgx/local_secret_sealer_helpers.cc	/^Status Seal(AeadCryptor *cryptor, ByteContainerView secret,$/;"	f	namespace:asylo::sgx::internal
Seal	./identity/sgx/sgx_local_secret_sealer.cc	/^Status SgxLocalSecretSealer::Seal($/;"	f	class:asylo::SgxLocalSecretSealer
SecretSealer	./identity/secret_sealer.h	/^class SecretSealer {$/;"	c	namespace:asylo
SecsAttributeBit	./identity/sgx/secs_attributes.h	/^enum class SecsAttributeBit {$/;"	c	namespace:asylo::sgx
SecsAttributeSet	./identity/sgx/secs_attributes.h	/^struct SecsAttributeSet {$/;"	s	class:asylo::sgx::SecsAttributeBit
SecsAttributesTest	./identity/sgx/secs_attributes_test.cc	/^  SecsAttributesTest() {}$/;"	f	class:asylo::sgx::__anon164::SecsAttributesTest
SecsAttributesTest	./identity/sgx/secs_attributes_test.cc	/^  SecsAttributesTest() {}$/;"	f	class:asylo::sgx::__anon418::SecsAttributesTest
SecsAttributesTest	./identity/sgx/secs_attributes_test.cc	/^class SecsAttributesTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon164	file:
SecsAttributesTest	./identity/sgx/secs_attributes_test.cc	/^class SecsAttributesTest : public ::testing::Test {$/;"	c	namespace:asylo::sgx::__anon418	file:
SecsMiscselectBit	./identity/sgx/secs_miscselect.h	/^enum class SecsMiscselectBit {$/;"	c	namespace:asylo::sgx
SectionHeaderTable	./util/elf_reader.cc	/^StatusOr<absl::Span<const uint8_t>> ElfReaderCreator::SectionHeaderTable($/;"	f	class:asylo::ElfReaderCreator
SectionTableStart	./util/elf_reader.cc	/^StatusOr<Elf64_Off> ElfReaderCreator::SectionTableStart($/;"	f	class:asylo::ElfReaderCreator
Select	./platform/posix/io/io_manager.cc	/^int IOManager::Select(int nfds, fd_set *readfds, fd_set *writefds,$/;"	f	class:asylo::io::IOManager
SelectTest	./platform/posix/select_test.cc	/^class SelectTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon304	file:
SelectTest	./platform/posix/select_test.cc	/^class SelectTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon50	file:
SelfIdentity	./identity/sgx/self_identity.h	/^struct SelfIdentity {$/;"	s	namespace:asylo::sgx
SelfIdentity	./identity/sgx/self_identity_internal.h	/^SelfIdentity::SelfIdentity() {$/;"	f	class:asylo::sgx::SelfIdentity
SelfNullCredentialsOptions	./grpc/auth/null_credentials_options.cc	/^EnclaveCredentialsOptions SelfNullCredentialsOptions() {$/;"	f	namespace:asylo
SelfSgxLocalCredentialsOptions	./grpc/auth/sgx_local_credentials_options.cc	/^EnclaveCredentialsOptions SelfSgxLocalCredentialsOptions() {$/;"	f	namespace:asylo
SemaphoreSignal	./platform/posix/io/eventfd_test.cc	/^  void SemaphoreSignal() { Write(1); }$/;"	f	class:asylo::__anon327::EventFdTest
SemaphoreSignal	./platform/posix/io/eventfd_test.cc	/^  void SemaphoreSignal() { Write(1); }$/;"	f	class:asylo::__anon73::EventFdTest
SemaphoreWait	./platform/posix/io/eventfd_test.cc	/^  void SemaphoreWait() { EXPECT_EQ(Read(), 1); }$/;"	f	class:asylo::__anon327::EventFdTest
SemaphoreWait	./platform/posix/io/eventfd_test.cc	/^  void SemaphoreWait() { EXPECT_EQ(Read(), 1); }$/;"	f	class:asylo::__anon73::EventFdTest
Send	./platform/posix/io/io_manager.cc	/^ssize_t IOManager::Send(int sockfd, const void *buf, size_t len, int flags) {$/;"	f	class:asylo::io::IOManager
Send	./platform/posix/io/io_manager.h	/^    virtual ssize_t Send(const void *buf, size_t len, int flags) {$/;"	f	class:asylo::io::IOManager::IOContext
Send	./platform/posix/io/native_paths.cc	/^ssize_t IOContextNative::Send(const void *buf, size_t len, int flags) {$/;"	f	class:asylo::io::IOContextNative
SendMsg	./platform/posix/io/io_manager.cc	/^ssize_t IOManager::SendMsg(int sockfd, const struct msghdr *msg, int flags) {$/;"	f	class:asylo::io::IOManager
SendMsg	./platform/posix/io/io_manager.h	/^    virtual ssize_t SendMsg(const struct msghdr *msg, int flags) {$/;"	f	class:asylo::io::IOManager::IOContext
SendMsg	./platform/posix/io/native_paths.cc	/^ssize_t IOContextNative::SendMsg(const struct msghdr *msg, int flags) {$/;"	f	class:asylo::io::IOContextNative
SendMsg	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::SendMsg(const struct msghdr *msg, int flags) {$/;"	f	class:asylo::SocketClient
SendMsg	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::SendMsg(const struct msghdr *msg, int flags) {$/;"	f	class:asylo::SocketServer
SendMsg	./platform/posix/sockets/socket_transmit.cc	/^Status SocketTransmit::SendMsg(int sockfd, const struct msghdr *msg,$/;"	f	class:asylo::SocketTransmit
SendSignal	./test/misc/active_enclave_signal_test_driver.cc	/^void *SendSignal(void *arg) {$/;"	f	namespace:asylo::__anon198
SendSignal	./test/misc/active_enclave_signal_test_driver.cc	/^void *SendSignal(void *arg) {$/;"	f	namespace:asylo::__anon452
SendSignalThreadInput	./test/misc/active_enclave_signal_test_driver.cc	/^struct SendSignalThreadInput {$/;"	s	namespace:asylo::__anon198	file:
SendSignalThreadInput	./test/misc/active_enclave_signal_test_driver.cc	/^struct SendSignalThreadInput {$/;"	s	namespace:asylo::__anon452	file:
SendToLog	./util/logging.cc	/^void LogMessage::SendToLog(const std::string &message_text) {$/;"	f	class:asylo::LogMessage
Serialize	./platform/core/trusted_application.cc	/^  int Serialize(const Status &status) {$/;"	f	class:asylo::__anon135::StatusSerializer
Serialize	./platform/core/trusted_application.cc	/^  int Serialize(const Status &status) {$/;"	f	class:asylo::__anon389::StatusSerializer
SerializeAddrinfo	./platform/common/bridge_proto_serializer.cc	/^bool SerializeAddrinfo(const struct addrinfo *in, std::string *out,$/;"	f	namespace:asylo
SerializeAssertionDescription	./identity/assertion_description_util.cc	/^StatusOr<std::string> SerializeAssertionDescription($/;"	f	namespace:asylo
SerializeByteContainers	./crypto/util/byte_container_util.h	/^Status SerializeByteContainers(ByteContainerT *serialized, Args... args) {$/;"	f	namespace:asylo
SerializeEpollCtlArgs	./platform/common/bridge_proto_serializer.cc	/^bool SerializeEpollCtlArgs(int epfd, int op, int fd, struct epoll_event *event,$/;"	f	namespace:asylo
SerializeEpollWaitArgs	./platform/common/bridge_proto_serializer.cc	/^bool SerializeEpollWaitArgs(int epfd, int maxevents, int timeout, char **out,$/;"	f	namespace:asylo
SerializeEvents	./platform/common/bridge_proto_serializer.cc	/^bool SerializeEvents(const struct epoll_event *events, int numevents,$/;"	f	namespace:asylo
SerializeIfAddrs	./platform/common/bridge_proto_serializer.cc	/^bool SerializeIfAddrs(const struct ifaddrs *in, char **out, size_t *len) {$/;"	f	namespace:asylo
SerializeInotifyAddWatchArgs	./platform/common/bridge_proto_serializer.cc	/^bool SerializeInotifyAddWatchArgs(int fd, absl::string_view pathname,$/;"	f	namespace:asylo
SerializeInotifyEvents	./platform/common/bridge_proto_serializer.cc	/^bool SerializeInotifyEvents(char *buf, size_t buf_len, char **out,$/;"	f	namespace:asylo
SerializeInotifyRmWatchArgs	./platform/common/bridge_proto_serializer.cc	/^bool SerializeInotifyRmWatchArgs(int fd, int wd, char **out, size_t *len) {$/;"	f	namespace:asylo
SerializeIov	./platform/posix/io/native_paths.cc	/^bool IOContextNative::SerializeIov(const struct iovec *iov, int iovcnt,$/;"	f	class:asylo::io::IOContextNative
SerializeRecvFromArgs	./platform/common/bridge_proto_serializer.cc	/^bool SerializeRecvFromArgs(int sockfd, size_t len, int flags, char **out,$/;"	f	namespace:asylo
SerializeRecvFromSrcAddr	./platform/common/bridge_proto_serializer.cc	/^bool SerializeRecvFromSrcAddr(struct sockaddr *src_addr, char **out,$/;"	f	namespace:asylo
SerializeRequest	./platform/system_call/serialize.cc	/^primitives::PrimitiveStatus SerializeRequest($/;"	f	namespace:asylo::system_call
SerializeResponse	./platform/system_call/serialize.cc	/^primitives::PrimitiveStatus SerializeResponse($/;"	f	namespace:asylo::system_call
SerializeRsa3072PublicKey	./identity/sgx/pce_util.cc	/^StatusOr<std::vector<uint8_t>> SerializeRsa3072PublicKey(const RSA *rsa) {$/;"	f	namespace:asylo::sgx
SerializeSgxExpectation	./identity/sgx/code_identity_util.cc	/^Status SerializeSgxExpectation($/;"	f	namespace:asylo::sgx
SerializeSgxIdentity	./identity/sgx/code_identity_util.cc	/^Status SerializeSgxIdentity(const CodeIdentity &sgx_identity,$/;"	f	namespace:asylo::sgx
SerializeSgxMatchSpec	./identity/sgx/code_identity_util.cc	/^Status SerializeSgxMatchSpec(const CodeIdentityMatchSpec &sgx_match_spec,$/;"	f	namespace:asylo::sgx
SerializeToDer	./crypto/ecdsa_p256_sha256_signing_key.cc	/^Status EcdsaP256Sha256SigningKey::SerializeToDer($/;"	f	class:asylo::EcdsaP256Sha256SigningKey
SerializeToDer	./crypto/ecdsa_p256_sha256_signing_key.cc	/^StatusOr<std::string> EcdsaP256Sha256VerifyingKey::SerializeToDer() const {$/;"	f	class:asylo::EcdsaP256Sha256VerifyingKey
SerializeToDer	./crypto/rsa_oaep_encryption_key.cc	/^Status RsaOaepDecryptionKey::SerializeToDer($/;"	f	class:asylo::RsaOaepDecryptionKey
SerializeToDer	./crypto/rsa_oaep_encryption_key.cc	/^StatusOr<std::string> RsaOaepEncryptionKey::SerializeToDer() const {$/;"	f	class:asylo::RsaOaepEncryptionKey
ServerAccept	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::ServerAccept() {$/;"	f	class:asylo::SocketServer
ServerConnection	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::ServerConnection(int fd, struct sockaddr *serv_addr,$/;"	f	class:asylo::SocketServer
ServerEkepHandshaker	./grpc/auth/core/server_ekep_handshaker.cc	/^ServerEkepHandshaker::ServerEkepHandshaker(const EkepHandshakerOptions &options)$/;"	f	class:asylo::ServerEkepHandshaker
ServerEnclaveExecTester	./examples/grpc_server/grpc_server_test.cc	/^  ServerEnclaveExecTester(const std::vector<std::string> &args,$/;"	f	class:examples::grpc_server::__anon244::ServerEnclaveExecTester
ServerEnclaveExecTester	./examples/grpc_server/grpc_server_test.cc	/^  ServerEnclaveExecTester(const std::vector<std::string> &args,$/;"	f	class:examples::grpc_server::__anon498::ServerEnclaveExecTester
ServerEnclaveExecTester	./examples/grpc_server/grpc_server_test.cc	/^class ServerEnclaveExecTester : public asylo::experimental::ExecTester {$/;"	c	namespace:examples::grpc_server::__anon244	file:
ServerEnclaveExecTester	./examples/grpc_server/grpc_server_test.cc	/^class ServerEnclaveExecTester : public asylo::experimental::ExecTester {$/;"	c	namespace:examples::grpc_server::__anon498	file:
ServerRoundtripTransmit	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::ServerRoundtripTransmit(int buf_len, int round_trip) {$/;"	f	class:asylo::SocketServer
ServerSetup	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::ServerSetup(const std::string &socket_name,$/;"	f	class:asylo::SocketServer
ServerSetup	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::ServerSetup(int server_port) {$/;"	f	class:asylo::SocketServer
ServerTransmit	./platform/posix/sockets/socket_test_transmit.cc	/^Status ServerTransmit(SocketServer *socket_server) {$/;"	f	namespace:asylo
Set	./util/status.h	/^  void Set(Enum code, StringT &&message) {$/;"	f	class:asylo::Status
SetAddrinfoCanonname	./platform/common/bridge_proto_serializer.cc	/^bool SetAddrinfoCanonname(const std::string *canonname, struct addrinfo *info) {$/;"	f	namespace:asylo::__anon109
SetAddrinfoCanonname	./platform/common/bridge_proto_serializer.cc	/^bool SetAddrinfoCanonname(const std::string *canonname, struct addrinfo *info) {$/;"	f	namespace:asylo::__anon363
SetAssertionDescription	./grpc/auth/core/assertion_description_test.cc	/^  void SetAssertionDescription(int test_pool_index,$/;"	f	class:asylo::__anon259::AssertionDescriptionTest
SetAssertionDescription	./grpc/auth/core/assertion_description_test.cc	/^  void SetAssertionDescription(int test_pool_index,$/;"	f	class:asylo::__anon513::AssertionDescriptionTest
SetAssertionDescription	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  void SetAssertionDescription(AssertionDescription *description) {$/;"	f	class:asylo::__anon149::SgxLocalAssertionGeneratorTest
SetAssertionDescription	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  void SetAssertionDescription(AssertionDescription *description) {$/;"	f	class:asylo::__anon403::SgxLocalAssertionGeneratorTest
SetAssertionDescription	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  void SetAssertionDescription(EnclaveIdentityType identity_type,$/;"	f	class:asylo::__anon149::SgxLocalAssertionGeneratorTest
SetAssertionDescription	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  void SetAssertionDescription(EnclaveIdentityType identity_type,$/;"	f	class:asylo::__anon403::SgxLocalAssertionGeneratorTest
SetAssertionDescription	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^  void SetAssertionDescription(AssertionDescription *description) {$/;"	f	class:asylo::__anon159::SgxLocalAssertionVerifierTest
SetAssertionDescription	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^  void SetAssertionDescription(AssertionDescription *description) {$/;"	f	class:asylo::__anon413::SgxLocalAssertionVerifierTest
SetAssertionDescription	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^  void SetAssertionDescription(EnclaveIdentityType identity_type,$/;"	f	class:asylo::__anon159::SgxLocalAssertionVerifierTest
SetAssertionDescription	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^  void SetAssertionDescription(EnclaveIdentityType identity_type,$/;"	f	class:asylo::__anon413::SgxLocalAssertionVerifierTest
SetCurrentWorkingDirectory	./platform/posix/io/io_manager.cc	/^Status IOManager::SetCurrentWorkingDirectory(absl::string_view path) {$/;"	f	class:asylo::io::IOManager
SetDefaultCurrentWorkingDirectory	./platform/core/enclave_config_util.cc	/^void SetDefaultCurrentWorkingDirectory(EnclaveConfig *config) {$/;"	f	namespace:asylo::__anon126
SetDefaultCurrentWorkingDirectory	./platform/core/enclave_config_util.cc	/^void SetDefaultCurrentWorkingDirectory(EnclaveConfig *config) {$/;"	f	namespace:asylo::__anon380
SetDefaultHeader	./identity/sgx/sgx_local_secret_sealer.cc	/^Status SgxLocalSecretSealer::SetDefaultHeader($/;"	f	class:asylo::SgxLocalSecretSealer
SetDefaultHostName	./platform/core/enclave_config_util.cc	/^void SetDefaultHostName(EnclaveConfig *config) {$/;"	f	namespace:asylo::__anon126
SetDefaultHostName	./platform/core/enclave_config_util.cc	/^void SetDefaultHostName(EnclaveConfig *config) {$/;"	f	namespace:asylo::__anon380
SetDefaultMatchSpec	./identity/sgx/code_identity_util.cc	/^Status SetDefaultMatchSpec(CodeIdentityMatchSpec *spec) {$/;"	f	namespace:asylo::sgx
SetDefaultSecsAttributesMask	./identity/sgx/secs_attributes.cc	/^Status SetDefaultSecsAttributesMask(Attributes *attributes_match_mask) {$/;"	f	namespace:asylo::sgx
SetDefaultSelfCodeIdentityExpectation	./identity/sgx/code_identity_util.cc	/^Status SetDefaultSelfCodeIdentityExpectation($/;"	f	namespace:asylo::sgx
SetEnclaveConfig	./platform/core/fake_trusted_global_state.cc	/^Status SetEnclaveConfig(const EnclaveConfig &config) {$/;"	f	namespace:asylo
SetEnclaveConfig	./platform/core/trusted_global_state.cc	/^Status SetEnclaveConfig(const EnclaveConfig &config) {$/;"	f	namespace:asylo
SetEnclaveConfigDefaults	./platform/core/enclave_config_util.cc	/^void SetEnclaveConfigDefaults(const HostConfig &host_config,$/;"	f	namespace:asylo
SetEnclaveGrpcDebugConfig	./test/util/grpc_debug_config.cc	/^void SetEnclaveGrpcDebugConfig(EnclaveConfig *config) {$/;"	f	namespace:asylo
SetEnclaveGrpcTrace	./test/util/grpc_debug_config.cc	/^void SetEnclaveGrpcTrace(absl::string_view trace_level,$/;"	f	namespace:asylo
SetEnclaveGrpcVerbosity	./test/util/grpc_debug_config.cc	/^void SetEnclaveGrpcVerbosity(absl::string_view verbosity_level,$/;"	f	namespace:asylo
SetEnclaveInput	./platform/posix/sockets/addrinfo_test_driver.cc	/^  void SetEnclaveInput(EnclaveInput *enclave_input,$/;"	f	class:asylo::__anon311::AddrinfoTest
SetEnclaveInput	./platform/posix/sockets/addrinfo_test_driver.cc	/^  void SetEnclaveInput(EnclaveInput *enclave_input,$/;"	f	class:asylo::__anon57::AddrinfoTest
SetEnclaveInputTestString	./test/util/enclave_test.h	/^  void SetEnclaveInputTestString(EnclaveInput *enclave_input,$/;"	f	class:asylo::EnclaveTest
SetEnclaveInputTestString	./test/util/enclave_test_launcher.cc	/^void EnclaveTestLauncher::SetEnclaveInputTestString($/;"	f	class:asylo::EnclaveTestLauncher
SetEnclaveName	./platform/core/fake_trusted_global_state.cc	/^void SetEnclaveName(const std::string &name) {$/;"	f	namespace:asylo
SetEnclaveName	./platform/core/trusted_global_state.cc	/^void SetEnclaveName(const std::string &name) {$/;"	f	namespace:asylo
SetEnclaveOutputMessage	./examples/quickstart/demo_enclave.cc	/^  void SetEnclaveOutputMessage(EnclaveOutput *enclave_output,$/;"	f	class:asylo::EnclaveDemo
SetEnclaveOutputMessage	./examples/quickstart/solution/demo_enclave.cc	/^  void SetEnclaveOutputMessage(EnclaveOutput *enclave_output,$/;"	f	class:asylo::EnclaveDemo
SetEnclaveOutputTestString	./test/util/enclave_test_application.cc	/^void EnclaveTestCase::SetEnclaveOutputTestString(EnclaveOutput *enclave_output,$/;"	f	class:asylo::EnclaveTestCase
SetEnclaveUserMessage	./examples/quickstart/demo_driver.cc	/^void SetEnclaveUserMessage(asylo::EnclaveInput *enclave_input,$/;"	f
SetEnclaveUserMessage	./examples/quickstart/solution/demo_driver.cc	/^void SetEnclaveUserMessage(asylo::EnclaveInput *enclave_input,$/;"	f
SetExpectation	./identity/sgx/code_identity_util.cc	/^Status SetExpectation(const CodeIdentityMatchSpec &match_spec,$/;"	f	namespace:asylo::sgx
SetFdFlags	./util/fd_utils.cc	/^Status SetFdFlags(int fd, int flags) {$/;"	f	namespace:asylo
SetFileDescriptorLimits	./platform/posix/io/io_manager.cc	/^bool IOManager::FileDescriptorTable::SetFileDescriptorLimits($/;"	f	class:asylo::io::IOManager::FileDescriptorTable
SetForkRequested	./platform/arch/common/trusted/fork.cc	/^void SetForkRequested() {$/;"	f	namespace:asylo
SetForkRequested	./platform/arch/sgx/trusted/fork.cc	/^void SetForkRequested() { fork_requested = true; }$/;"	f	namespace:asylo
SetHasher	./grpc/auth/core/transcript.cc	/^bool Transcript::SetHasher(HashInterface *hasher) {$/;"	f	class:asylo::Transcript
SetHostConfig	./platform/core/enclave_config_util.cc	/^void SetHostConfig(const HostConfig &host_config, EnclaveConfig *config) {$/;"	f	namespace:asylo::__anon126
SetHostConfig	./platform/core/enclave_config_util.cc	/^void SetHostConfig(const HostConfig &host_config, EnclaveConfig *config) {$/;"	f	namespace:asylo::__anon380
SetIdentity	./identity/sgx/fake_enclave.cc	/^void FakeEnclave::SetIdentity(const CodeIdentity &identity) {$/;"	f	class:asylo::sgx::FakeEnclave
SetMasterKey	./platform/storage/secure/aead_handler.cc	/^int AeadHandler::SetMasterKey(int fd, const uint8_t *key_data,$/;"	f	class:asylo::platform::storage::AeadHandler
SetNewRandomEnclave	./identity/sgx/fake_hardware_interface.cc	/^FakeEnclave *SetNewRandomEnclave() {$/;"	f	namespace:asylo::sgx::__anon147
SetNewRandomEnclave	./identity/sgx/fake_hardware_interface.cc	/^FakeEnclave *SetNewRandomEnclave() {$/;"	f	namespace:asylo::sgx::__anon401
SetNullAssertionDescription	./identity/descriptions.h	/^inline void SetNullAssertionDescription($/;"	f	namespace:asylo
SetNullIdentityDescription	./identity/descriptions.h	/^inline void SetNullIdentityDescription($/;"	f	namespace:asylo
SetNullIdentityExpectation	./identity/null_identity/null_identity_util.h	/^inline void SetNullIdentityExpectation($/;"	f	namespace:asylo
SetProcessId	./platform/arch/sgx/untrusted/sgx_client.cc	/^void SgxClient::SetProcessId() {$/;"	f	class:asylo::SgxClient
SetRLimit	./platform/posix/io/io_manager.cc	/^int IOManager::SetRLimit(int resource, const struct rlimit *rlim) {$/;"	f	class:asylo::io::IOManager
SetRandomIdentity	./identity/sgx/fake_enclave.cc	/^void FakeEnclave::SetRandomIdentity() {$/;"	f	class:asylo::sgx::FakeEnclave
SetRandomInvalidGenericExpectation	./identity/sgx/code_identity_test_util.cc	/^Status SetRandomInvalidGenericExpectation($/;"	f	namespace:asylo::sgx
SetRandomInvalidGenericIdentity	./identity/sgx/code_identity_test_util.cc	/^void SetRandomInvalidGenericIdentity(EnclaveIdentity *generic_identity) {$/;"	f	namespace:asylo::sgx
SetRandomInvalidGenericMatchSpec	./identity/sgx/code_identity_test_util.cc	/^Status SetRandomInvalidGenericMatchSpec(std::string *generic_spec) {$/;"	f	namespace:asylo::sgx
SetRandomValidGenericExpectation	./identity/sgx/code_identity_test_util.cc	/^Status SetRandomValidGenericExpectation($/;"	f	namespace:asylo::sgx
SetRandomValidGenericIdentity	./identity/sgx/code_identity_test_util.cc	/^void SetRandomValidGenericIdentity(EnclaveIdentity *generic_identity,$/;"	f	namespace:asylo::sgx
SetRandomValidGenericMatchSpec	./identity/sgx/code_identity_test_util.cc	/^void SetRandomValidGenericMatchSpec($/;"	f	namespace:asylo::sgx
SetRecordProtocol	./grpc/auth/core/ekep_handshaker.cc	/^void EkepHandshaker::SetRecordProtocol(RecordProtocol record_protocol) {$/;"	f	class:asylo::EkepHandshaker
SetResetOnHandle	./platform/posix/signal/signal_manager.cc	/^void SignalManager::SetResetOnHandle(int signum) {$/;"	f	class:asylo::SignalManager
SetSelectedCipherSuite	./grpc/auth/core/client_ekep_handshaker.cc	/^bool ClientEkepHandshaker::SetSelectedCipherSuite($/;"	f	class:asylo::ClientEkepHandshaker
SetSelectedCipherSuite	./grpc/auth/core/server_ekep_handshaker.cc	/^bool ServerEkepHandshaker::SetSelectedCipherSuite($/;"	f	class:asylo::ServerEkepHandshaker
SetSelectedEkepVersion	./grpc/auth/core/client_ekep_handshaker.cc	/^bool ClientEkepHandshaker::SetSelectedEkepVersion($/;"	f	class:asylo::ClientEkepHandshaker
SetSelectedEkepVersion	./grpc/auth/core/server_ekep_handshaker.cc	/^bool ServerEkepHandshaker::SetSelectedEkepVersion($/;"	f	class:asylo::ServerEkepHandshaker
SetSelectedRecordProtocol	./grpc/auth/core/client_ekep_handshaker.cc	/^bool ClientEkepHandshaker::SetSelectedRecordProtocol($/;"	f	class:asylo::ClientEkepHandshaker
SetSelectedRecordProtocol	./grpc/auth/core/server_ekep_handshaker.cc	/^bool ServerEkepHandshaker::SetSelectedRecordProtocol($/;"	f	class:asylo::ServerEkepHandshaker
SetSelfCodeIdentity	./identity/sgx/code_identity_util.cc	/^void SetSelfCodeIdentity(CodeIdentity *identity) {$/;"	f	namespace:asylo::sgx
SetSgxIdentityDescription	./identity/descriptions.h	/^inline void SetSgxIdentityDescription($/;"	f	namespace:asylo
SetSgxLocalAssertionDescription	./identity/descriptions.h	/^inline void SetSgxLocalAssertionDescription($/;"	f	namespace:asylo
SetSgxRemoteAssertionDescription	./identity/descriptions.h	/^inline void SetSgxRemoteAssertionDescription($/;"	f	namespace:asylo
SetSigAction	./platform/posix/signal/signal_manager.cc	/^void SignalManager::SetSigAction(int signum, const struct sigaction &act) {$/;"	f	class:asylo::SignalManager
SetSignalMask	./platform/posix/signal/signal_manager.cc	/^void SignalManager::SetSignalMask(const sigset_t &mask) { signal_mask_ = mask; }$/;"	f	class:asylo::SignalManager
SetSignalMask	./test/misc/active_enclave_signal_test_enclave.cc	/^  Status SetSignalMask() {$/;"	f	class:asylo::ActiveEnclaveSignalTest	file:
SetSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^bool SetSnapshotKey(const CleansingVector<uint8_t> &key) {$/;"	f	namespace:asylo::__anon284
SetSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^bool SetSnapshotKey(const CleansingVector<uint8_t> &key) {$/;"	f	namespace:asylo::__anon30
SetSnapshotKeyTransferRequested	./platform/arch/sgx/trusted/fork.cc	/^void SetSnapshotKeyTransferRequested() {$/;"	f	namespace:asylo::__anon284
SetSnapshotKeyTransferRequested	./platform/arch/sgx/trusted/fork.cc	/^void SetSnapshotKeyTransferRequested() {$/;"	f	namespace:asylo::__anon30
SetSockOpt	./platform/posix/io/io_manager.cc	/^int IOManager::SetSockOpt(int sockfd, int level, int option_name,$/;"	f	class:asylo::io::IOManager
SetSockOpt	./platform/posix/io/io_manager.h	/^    virtual int SetSockOpt(int level, int option_name, const void *option_value,$/;"	f	class:asylo::io::IOManager::IOContext
SetSockOpt	./platform/posix/io/native_paths.cc	/^int IOContextNative::SetSockOpt(int level, int option_name,$/;"	f	class:asylo::io::IOContextNative
SetState	./platform/core/trusted_application.cc	/^void TrustedApplication::SetState(const EnclaveState &state) {$/;"	f	class:asylo::TrustedApplication
SetStrictMatchSpec	./identity/sgx/code_identity_util.cc	/^void SetStrictMatchSpec(CodeIdentityMatchSpec *spec) {$/;"	f	namespace:asylo::sgx
SetStrictSecsAttributesMask	./identity/sgx/secs_attributes.cc	/^void SetStrictSecsAttributesMask(Attributes *attributes_match_mask) {$/;"	f	namespace:asylo::sgx
SetStrictSelfCodeIdentityExpectation	./identity/sgx/code_identity_util.cc	/^Status SetStrictSelfCodeIdentityExpectation($/;"	f	namespace:asylo::sgx
SetTargetinfoFromSelfIdentity	./identity/sgx/code_identity_util.cc	/^void SetTargetinfoFromSelfIdentity(Targetinfo *tinfo) {$/;"	f	namespace:asylo::sgx
SetTranscriptHashFunction	./grpc/auth/core/ekep_handshaker.cc	/^bool EkepHandshaker::SetTranscriptHashFunction(HashInterface *hash) {$/;"	f	class:asylo::EkepHandshaker
SetTrivialObjectFromBinaryString	./crypto/util/trivial_object_util.h	/^Status SetTrivialObjectFromBinaryString(absl::string_view view, T *obj) {$/;"	f	namespace:asylo
SetTrivialObjectFromHexString	./crypto/util/trivial_object_util.h	/^Status SetTrivialObjectFromHexString(absl::string_view view, T *obj) {$/;"	f	namespace:asylo
SetUp	./test/util/enclave_test_launcher.cc	/^Status EnclaveTestLauncher::SetUp(const std::string &enclave_path,$/;"	f	class:asylo::EnclaveTestLauncher
SetUpBase	./test/util/enclave_test.cc	/^void EnclaveTest::SetUpBase() {$/;"	f	class:asylo::EnclaveTest
SetUpClient	./test/grpc/enclave_communication_test.cc	/^  Status SetUpClient(const EnclaveConfig &config) {$/;"	f	class:asylo::__anon221::EnclaveCommunicationTest
SetUpClient	./test/grpc/enclave_communication_test.cc	/^  Status SetUpClient(const EnclaveConfig &config) {$/;"	f	class:asylo::__anon475::EnclaveCommunicationTest
SetUpServer	./test/grpc/enclave_communication_test.cc	/^  Status SetUpServer(EnclaveConfig config) {$/;"	f	class:asylo::__anon221::EnclaveCommunicationTest
SetUpServer	./test/grpc/enclave_communication_test.cc	/^  Status SetUpServer(EnclaveConfig config) {$/;"	f	class:asylo::__anon475::EnclaveCommunicationTest
SetUpTestSuite	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  static void SetUpTestSuite() {$/;"	f	class:asylo::__anon184::ApplicationWrapperDriverMainTest
SetUpTestSuite	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  static void SetUpTestSuite() {$/;"	f	class:asylo::__anon438::ApplicationWrapperDriverMainTest
SetUpTestSuite	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  static void SetUpTestSuite() {$/;"	f	class:asylo::__anon182::ApplicationWrapperEnclaveTest
SetUpTestSuite	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  static void SetUpTestSuite() {$/;"	f	class:asylo::__anon436::ApplicationWrapperEnclaveTest
SetUpTestSuite	./platform/posix/fork_security_test_driver.cc	/^  static void SetUpTestSuite() {$/;"	f	class:asylo::__anon305::ForkSecurityTest
SetUpTestSuite	./platform/posix/fork_security_test_driver.cc	/^  static void SetUpTestSuite() {$/;"	f	class:asylo::__anon51::ForkSecurityTest
SgxBackend	./platform/primitives/sgx/untrusted_sgx.h	/^struct SgxBackend {$/;"	s	namespace:asylo::primitives
SgxClient	./platform/arch/sgx/untrusted/sgx_client.h	/^  explicit SgxClient(const std::string &name) : EnclaveClient(name) {}$/;"	f	class:asylo::SgxClient
SgxClient	./platform/arch/sgx/untrusted/sgx_client.h	/^class SgxClient : public EnclaveClient {$/;"	c	namespace:asylo
SgxEmbeddedBackend	./platform/primitives/sgx/untrusted_sgx.h	/^struct SgxEmbeddedBackend {$/;"	s	namespace:asylo::primitives
SgxEmbeddedLoader	./platform/arch/sgx/untrusted/sgx_client.h	/^  SgxEmbeddedLoader(const std::string &elf_section_name, bool debug)$/;"	f	class:asylo::SgxEmbeddedLoader
SgxEmbeddedLoader	./platform/arch/sgx/untrusted/sgx_client.h	/^class SgxEmbeddedLoader : public EnclaveLoader {$/;"	c	namespace:asylo
SgxEnclaveClient	./platform/primitives/sgx/untrusted_sgx.h	/^  SgxEnclaveClient($/;"	f	class:asylo::primitives::SgxEnclaveClient
SgxEnclaveClient	./platform/primitives/sgx/untrusted_sgx.h	/^class SgxEnclaveClient : public Client {$/;"	c	namespace:asylo::primitives
SgxErrorSpace	./platform/primitives/sgx/sgx_error_space.cc	/^SgxErrorSpace::SgxErrorSpace()$/;"	f	class:asylo::error::SgxErrorSpace
SgxErrorSpace	./platform/primitives/sgx/sgx_error_space.h	/^class SgxErrorSpace : public ErrorSpaceImplementationHelper<SgxErrorSpace> {$/;"	c	namespace:asylo::error
SgxLoader	./platform/arch/sgx/untrusted/sgx_client.h	/^  SgxLoader(const std::string &path, bool debug)$/;"	f	class:asylo::SgxLoader
SgxLoader	./platform/arch/sgx/untrusted/sgx_client.h	/^class SgxLoader : public EnclaveLoader {$/;"	c	namespace:asylo
SgxLocalAssertionAuthorityTest	./identity/sgx/sgx_local_assertion_authority_test.cc	/^class SgxLocalAssertionAuthorityTest$/;"	c	namespace:asylo::__anon160	file:
SgxLocalAssertionAuthorityTest	./identity/sgx/sgx_local_assertion_authority_test.cc	/^class SgxLocalAssertionAuthorityTest$/;"	c	namespace:asylo::__anon414	file:
SgxLocalAssertionGenerator	./identity/sgx/sgx_local_assertion_generator.cc	/^SgxLocalAssertionGenerator::SgxLocalAssertionGenerator()$/;"	f	class:asylo::SgxLocalAssertionGenerator
SgxLocalAssertionGeneratorTest	./identity/sgx/sgx_local_assertion_generator_test.cc	/^class SgxLocalAssertionGeneratorTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon149	file:
SgxLocalAssertionGeneratorTest	./identity/sgx/sgx_local_assertion_generator_test.cc	/^class SgxLocalAssertionGeneratorTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon403	file:
SgxLocalAssertionVerifier	./identity/sgx/sgx_local_assertion_verifier.cc	/^SgxLocalAssertionVerifier::SgxLocalAssertionVerifier() : initialized_(false) {}$/;"	f	class:asylo::SgxLocalAssertionVerifier
SgxLocalAssertionVerifierTest	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^class SgxLocalAssertionVerifierTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon159	file:
SgxLocalAssertionVerifierTest	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^class SgxLocalAssertionVerifierTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon413	file:
SgxLocalSecretSealer	./identity/sgx/sgx_local_secret_sealer.cc	/^SgxLocalSecretSealer::SgxLocalSecretSealer($/;"	f	class:asylo::SgxLocalSecretSealer
SgxLocalSecretSealer	./identity/sgx/sgx_local_secret_sealer.h	/^class SgxLocalSecretSealer : public SecretSealer {$/;"	c	namespace:asylo
SgxLocalSecretSealerTest	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  SgxLocalSecretSealerTest() {$/;"	f	class:asylo::__anon168::SgxLocalSecretSealerTest
SgxLocalSecretSealerTest	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  SgxLocalSecretSealerTest() {$/;"	f	class:asylo::__anon422::SgxLocalSecretSealerTest
SgxLocalSecretSealerTest	./identity/sgx/sgx_local_secret_sealer_test.cc	/^class SgxLocalSecretSealerTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon168	file:
SgxLocalSecretSealerTest	./identity/sgx/sgx_local_secret_sealer_test.cc	/^class SgxLocalSecretSealerTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon422	file:
SgxTcbComponentSvnFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<int> SgxTcbComponentSvnFromJson($/;"	f	namespace:asylo::sgx::__anon158
SgxTcbComponentSvnFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<int> SgxTcbComponentSvnFromJson($/;"	f	namespace:asylo::sgx::__anon412
SgxTestBackend	./platform/primitives/test/sgx_test_backend.h	/^class SgxTestBackend : public TestBackend {$/;"	c	namespace:asylo::primitives::test
Sha256Hash	./crypto/sha256_hash.cc	/^Sha256Hash::Sha256Hash() { Init(); }$/;"	f	class:asylo::Sha256Hash
Sha256HashFromHexString	./identity/util/sha256_hash_util.cc	/^bool Sha256HashFromHexString(const std::string &hex, Sha256HashProto *h) {$/;"	f	namespace:asylo
Sha256HashToHexString	./identity/util/sha256_hash_util.cc	/^void Sha256HashToHexString(const Sha256HashProto &h, std::string *str) {$/;"	f	namespace:asylo
Sha256HashUtilTest	./identity/util/sha256_hash_util_test.cc	/^  Sha256HashUtilTest() {}$/;"	f	class:asylo::__anon171::Sha256HashUtilTest
Sha256HashUtilTest	./identity/util/sha256_hash_util_test.cc	/^  Sha256HashUtilTest() {}$/;"	f	class:asylo::__anon425::Sha256HashUtilTest
Sha256HashUtilTest	./identity/util/sha256_hash_util_test.cc	/^class Sha256HashUtilTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon171	file:
Sha256HashUtilTest	./identity/util/sha256_hash_util_test.cc	/^class Sha256HashUtilTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon425	file:
SharedName	./platform/core/shared_name.h	/^  SharedName(SharedNameKind kind, const std::string &name)$/;"	f	class:asylo::SharedName
SharedName	./platform/core/shared_name.h	/^class SharedName {$/;"	c	namespace:asylo
SharedNameKind	./platform/core/shared_name_kind.h	/^enum SharedNameKind {$/;"	g
SharedResourceManager	./platform/core/shared_resource_manager.h	/^class SharedResourceManager {$/;"	c	namespace:asylo
ShouldFuzzField	./identity/sgx/code_identity_test_util.cc	/^bool ShouldFuzzField(int percent) {$/;"	f	namespace:asylo::sgx::__anon142
ShouldFuzzField	./identity/sgx/code_identity_test_util.cc	/^bool ShouldFuzzField(int percent) {$/;"	f	namespace:asylo::sgx::__anon396
Shutdown	./grpc/util/grpc_server_launcher.cc	/^Status GrpcServerLauncher::Shutdown() {$/;"	f	class:asylo::GrpcServerLauncher
Shutdown	./platform/posix/io/io_manager.cc	/^int IOManager::Shutdown(int sockfd, int how) {$/;"	f	class:asylo::io::IOManager
Shutdown	./platform/posix/io/io_manager.h	/^    virtual int Shutdown(int how) {$/;"	f	class:asylo::io::IOManager::IOContext
Shutdown	./platform/posix/io/native_paths.cc	/^int IOContextNative::Shutdown(int how) {$/;"	f	class:asylo::io::IOContextNative
SigMaskAction	./platform/common/bridge_types.h	/^enum SigMaskAction {$/;"	g
Sign	./crypto/ecdsa_p256_sha256_signing_key.cc	/^Status EcdsaP256Sha256SigningKey::Sign(ByteContainerView message,$/;"	f	class:asylo::EcdsaP256Sha256SigningKey
SignalCode	./platform/common/bridge_types.h	/^enum SignalCode {$/;"	g
SignalFlags	./platform/common/bridge_types.h	/^enum SignalFlags {$/;"	g
SignalManager	./platform/posix/signal/signal_manager.h	/^class SignalManager {$/;"	c	namespace:asylo
SignalNumber	./platform/common/bridge_types.h	/^enum SignalNumber {$/;"	g
SignatureSchemeToPceSignatureScheme	./identity/sgx/pce_util.cc	/^absl::optional<uint8_t> SignatureSchemeToPceSignatureScheme($/;"	f	namespace:asylo::sgx
SigningKey	./crypto/signing_key.h	/^class SigningKey {$/;"	c	namespace:asylo
Sigstruct	./identity/sgx/identity_key_management_structs.h	/^struct Sigstruct {$/;"	s	namespace:asylo::sgx
SigstructBody	./identity/sgx/identity_key_management_structs.h	/^struct SigstructBody {$/;"	s	namespace:asylo::sgx
SigstructHeader	./identity/sgx/identity_key_management_structs.h	/^struct SigstructHeader {$/;"	s	namespace:asylo::sgx
SigstructSigningData	./identity/sgx/identity_key_management_structs.h	/^struct SigstructSigningData {$/;"	s	namespace:asylo::sgx
SimBackend	./platform/primitives/sim/untrusted_sim.h	/^struct SimBackend {$/;"	s	namespace:asylo::primitives
SimEnclaveClient	./platform/primitives/sim/untrusted_sim.h	/^  SimEnclaveClient($/;"	f	class:asylo::primitives::SimEnclaveClient
SimEnclaveClient	./platform/primitives/sim/untrusted_sim.h	/^class SimEnclaveClient : public Client {$/;"	c	namespace:asylo::primitives
SimTestBackend	./platform/primitives/test/sim_test_backend.h	/^class SimTestBackend : public TestBackend {$/;"	c	namespace:asylo::primitives::test
SimTrampoline	./platform/primitives/sim/shared_sim.h	/^struct SimTrampoline {$/;"	s	namespace:asylo::primitives
SimpleRun	./test/misc/double_die.cc	/^  void SimpleRun(const std::string &enclave_path) {$/;"	f	class:asylo::__anon192::DieTest
SimpleRun	./test/misc/double_die.cc	/^  void SimpleRun(const std::string &enclave_path) {$/;"	f	class:asylo::__anon446::DieTest
Singleton	./platform/common/singleton.h	/^class Singleton {$/;"	c	namespace:asylo
Size	./platform/common/static_map.h	/^  static size_t Size() {$/;"	f	class:asylo::StaticMap
Size	./platform/storage/utils/untrusted_file.cc	/^StatusOr<size_t> UntrustedFile::Size() const {$/;"	f	class:asylo::UntrustedFile
Skip	./grpc/auth/util/multi_buffer_input_stream.cc	/^bool MultiBufferInputStream::Skip(int count) {$/;"	f	class:asylo::MultiBufferInputStream
Sleep	./platform/core/enclave_manager.cc	/^void Sleep(int64_t nanoseconds) {$/;"	f	namespace:asylo::__anon125
Sleep	./platform/core/enclave_manager.cc	/^void Sleep(int64_t nanoseconds) {$/;"	f	namespace:asylo::__anon379
SnapshotDataDeleter	./platform/arch/sgx/untrusted/ocalls.cc	/^  explicit SnapshotDataDeleter(const asylo::SnapshotLayoutEntry &entry)$/;"	f	class:__anon286::SnapshotDataDeleter
SnapshotDataDeleter	./platform/arch/sgx/untrusted/ocalls.cc	/^  explicit SnapshotDataDeleter(const asylo::SnapshotLayoutEntry &entry)$/;"	f	class:__anon32::SnapshotDataDeleter
SnapshotDataDeleter	./platform/arch/sgx/untrusted/ocalls.cc	/^class SnapshotDataDeleter {$/;"	c	namespace:__anon286	file:
SnapshotDataDeleter	./platform/arch/sgx/untrusted/ocalls.cc	/^class SnapshotDataDeleter {$/;"	c	namespace:__anon32	file:
SnapshotDeleter	./platform/posix/fork_security_test_driver.cc	/^class SnapshotDeleter {$/;"	c	namespace:asylo::__anon305	file:
SnapshotDeleter	./platform/posix/fork_security_test_driver.cc	/^class SnapshotDeleter {$/;"	c	namespace:asylo::__anon51	file:
SnapshotEntryDeleter	./platform/posix/fork_security_test_driver.cc	/^    SnapshotEntryDeleter()$/;"	f	class:asylo::__anon305::SnapshotDeleter::SnapshotEntryDeleter
SnapshotEntryDeleter	./platform/posix/fork_security_test_driver.cc	/^    SnapshotEntryDeleter()$/;"	f	class:asylo::__anon51::SnapshotDeleter::SnapshotEntryDeleter
SnapshotEntryDeleter	./platform/posix/fork_security_test_driver.cc	/^  class SnapshotEntryDeleter {$/;"	c	class:asylo::__anon305::SnapshotDeleter	file:
SnapshotEntryDeleter	./platform/posix/fork_security_test_driver.cc	/^  class SnapshotEntryDeleter {$/;"	c	class:asylo::__anon51::SnapshotDeleter	file:
SockaddrsEqual	./platform/posix/syscalls_test_driver.cc	/^bool SockaddrsEqual(const struct sockaddr *sa1, const struct sockaddr *sa2) {$/;"	f	namespace:asylo::__anon302
SockaddrsEqual	./platform/posix/syscalls_test_driver.cc	/^bool SockaddrsEqual(const struct sockaddr *sa1, const struct sockaddr *sa2) {$/;"	f	namespace:asylo::__anon48
Socket	./platform/core/shared_name.h	/^  static SharedName Socket(const std::string &name) {$/;"	f	class:asylo::SharedName
Socket	./platform/posix/io/io_manager.cc	/^int IOManager::Socket(int domain, int type, int protocol) {$/;"	f	class:asylo::io::IOManager
SocketClient	./platform/posix/sockets/socket_client.cc	/^SocketClient::SocketClient() : connection_fd_(-1) {}$/;"	f	class:asylo::SocketClient
SocketClient	./platform/posix/sockets/socket_client.h	/^class SocketClient {$/;"	c	namespace:asylo
SocketOptionNames	./platform/common/bridge_types.h	/^enum SocketOptionNames {$/;"	g
SocketServer	./platform/posix/sockets/socket_server.cc	/^SocketServer::SocketServer() : connection_fd_(-1) {}$/;"	f	class:asylo::SocketServer
SocketServer	./platform/posix/sockets/socket_server.h	/^class SocketServer {$/;"	c	namespace:asylo
SocketTransmit	./platform/posix/sockets/socket_transmit.cc	/^SocketTransmit::SocketTransmit() : write_count_(0), read_count_(0) {}$/;"	f	class:asylo::SocketTransmit
SocketTransmit	./platform/posix/sockets/socket_transmit.h	/^class SocketTransmit {$/;"	c	namespace:asylo
SpawnWorkerThread	./platform/core/enclave_manager.cc	/^void EnclaveManager::SpawnWorkerThread() {$/;"	f	class:asylo::EnclaveManager
SpinLock	./platform/common/spin_lock.h	/^  SpinLock() : lock_word_(kUnlockedValue) {}$/;"	f	class:SpinLock
SpinLock	./platform/common/spin_lock.h	/^class SpinLock {$/;"	c
SpinLockGuard	./platform/primitives/util/primitive_locks.h	/^  explicit SpinLockGuard(asylo_spinlock_t *lock) : lock_(lock) {$/;"	f	class:asylo::primitives::SpinLockGuard
SpinLockGuard	./platform/primitives/util/primitive_locks.h	/^class SpinLockGuard {$/;"	c	namespace:asylo::primitives
Start	./grpc/util/grpc_server_launcher.cc	/^Status GrpcServerLauncher::Start() {$/;"	f	class:asylo::GrpcServerLauncher
StartDetached	./util/std_thread.h	/^  static void StartDetached(Function &&f, Args &&... args) {$/;"	f	class:asylo::Thread
StartHandshake	./grpc/auth/core/client_ekep_handshaker.cc	/^ClientEkepHandshaker::Result ClientEkepHandshaker::StartHandshake($/;"	f	class:asylo::ClientEkepHandshaker
StartHandshake	./grpc/auth/core/server_ekep_handshaker.cc	/^ServerEkepHandshaker::Result ServerEkepHandshaker::StartHandshake($/;"	f	class:asylo::ServerEkepHandshaker
StartRoutine	./test/misc/mutex_test.cc	/^void StartRoutine(volatile int *counter) {$/;"	f	namespace:asylo::__anon189
StartRoutine	./test/misc/mutex_test.cc	/^void StartRoutine(volatile int *counter) {$/;"	f	namespace:asylo::__anon443
StartRoutineMutex	./test/misc/mutex_test.cc	/^void *StartRoutineMutex(void *) {$/;"	f	namespace:asylo::__anon189
StartRoutineMutex	./test/misc/mutex_test.cc	/^void *StartRoutineMutex(void *) {$/;"	f	namespace:asylo::__anon443
StartRoutineMutexLock	./test/misc/mutex_test.cc	/^void *StartRoutineMutexLock(void *) {$/;"	f	namespace:asylo::__anon189
StartRoutineMutexLock	./test/misc/mutex_test.cc	/^void *StartRoutineMutexLock(void *) {$/;"	f	namespace:asylo::__anon443
StartRoutineTryLock	./test/misc/mutex_test.cc	/^void *StartRoutineTryLock(void *) {$/;"	f	namespace:asylo::__anon189
StartRoutineTryLock	./test/misc/mutex_test.cc	/^void *StartRoutineTryLock(void *) {$/;"	f	namespace:asylo::__anon443
StartRoutineUnguarded	./test/misc/mutex_test.cc	/^void *StartRoutineUnguarded(void *) {$/;"	f	namespace:asylo::__anon189
StartRoutineUnguarded	./test/misc/mutex_test.cc	/^void *StartRoutineUnguarded(void *) {$/;"	f	namespace:asylo::__anon443
StartThread	./platform/posix/threading/thread_manager.cc	/^int ThreadManager::StartThread() {$/;"	f	class:asylo::ThreadManager
Stat	./platform/posix/io/io_manager.cc	/^int IOManager::Stat(const char *pathname, struct stat *stat_buffer) {$/;"	f	class:asylo::io::IOManager
Stat	./platform/posix/io/io_manager.h	/^    virtual int Stat(const char *pathname, struct stat *stat_buffer) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Stat	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Stat(const char *pathname, struct stat *stat_buffer) {$/;"	f	class:asylo::io::NativePathHandler
Stat	./platform/posix/io/random_devices.cc	/^int RandomPathHandler::Stat(const char *pathname, struct stat *stat_buffer) {$/;"	f	class:asylo::RandomPathHandler
State	./grpc/util/grpc_server_launcher.h	/^  enum class State { NOT_LAUNCHED, LAUNCHED, TERMINATED };$/;"	c	class:asylo::GrpcServerLauncher
State	./platform/core/trusted_application.h	/^  enum class State {$/;"	c	class:asylo::TrustedApplication
StaticMap	./platform/common/static_map.h	/^class StaticMap {$/;"	c	namespace:asylo
Status	./util/status.cc	/^Status::Status()$/;"	f	class:asylo::Status
Status	./util/status.cc	/^Status::Status(Status &&other)$/;"	f	class:asylo::Status
Status	./util/status.cc	/^Status::Status(const error::ErrorSpace *space, int code,$/;"	f	class:asylo::Status
Status	./util/status.h	/^  Status(Enum code, absl::string_view message) {$/;"	f	class:asylo::Status
Status	./util/status.h	/^  explicit Status(const StatusT &other) {$/;"	f	class:asylo::Status
Status	./util/status.h	/^class Status {$/;"	c	namespace:asylo
StatusConversionsTest	./platform/primitives/util/status_conversions_test.cc	/^class StatusConversionsTest : public ::testing::Test {$/;"	c	namespace:asylo::primitives::__anon339	file:
StatusConversionsTest	./platform/primitives/util/status_conversions_test.cc	/^class StatusConversionsTest : public ::testing::Test {$/;"	c	namespace:asylo::primitives::__anon85	file:
StatusError	./util/status_error_space.h	/^enum class StatusError : int {$/;"	c	namespace:asylo::error
StatusErrorSpace	./util/status_error_space.cc	/^StatusErrorSpace::StatusErrorSpace()$/;"	f	class:asylo::error::StatusErrorSpace
StatusErrorSpace	./util/status_error_space.h	/^class StatusErrorSpace$/;"	c	namespace:asylo::error
StatusIs	./test/util/status_matchers.h	/^::testing::Matcher<const Status &> StatusIs(Enum code) {$/;"	f	namespace:asylo
StatusIs	./test/util/status_matchers.h	/^::testing::Matcher<const Status &> StatusIs(Enum code,$/;"	f	namespace:asylo
StatusMatcher	./test/util/status_matchers.h	/^  StatusMatcher(Enum code, absl::optional<absl::string_view> message)$/;"	f	class:asylo::internal::StatusMatcher
StatusMatcher	./test/util/status_matchers.h	/^class StatusMatcher : public ::testing::MatcherInterface<const Status &> {$/;"	c	namespace:asylo::internal
StatusOr	./util/statusor.h	/^  StatusOr(StatusOr<U> &&other) : has_value_(other.has_value_) {$/;"	f	class:asylo::StatusOr
StatusOr	./util/statusor.h	/^  StatusOr(U &&value) : variant_(std::forward<U>(value)), has_value_(true) {}$/;"	f	class:asylo::StatusOr
StatusOr	./util/statusor.h	/^  StatusOr(const Status &status) : variant_(status), has_value_(false) {$/;"	f	class:asylo::StatusOr
StatusOr	./util/statusor.h	/^  StatusOr(const StatusOr &other) : has_value_(other.has_value_) {$/;"	f	class:asylo::StatusOr
StatusOr	./util/statusor.h	/^  StatusOr(const StatusOr<U> &other) : has_value_(other.has_value_) {$/;"	f	class:asylo::StatusOr
StatusOr	./util/statusor.h	/^  explicit StatusOr()$/;"	f	class:asylo::StatusOr
StatusOr	./util/statusor.h	/^class StatusOr {$/;"	c	namespace:asylo
StatusOrTest	./util/statusor_test.cc	/^class StatusOrTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon231	file:
StatusOrTest	./util/statusor_test.cc	/^class StatusOrTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon485	file:
StatusSerializer	./platform/core/trusted_application.cc	/^  StatusSerializer(char **output, size_t *output_len)$/;"	f	class:asylo::__anon135::StatusSerializer
StatusSerializer	./platform/core/trusted_application.cc	/^  StatusSerializer(char **output, size_t *output_len)$/;"	f	class:asylo::__anon389::StatusSerializer
StatusSerializer	./platform/core/trusted_application.cc	/^  StatusSerializer(const OutputProto *output_proto, StatusProto *status_proto,$/;"	f	class:asylo::__anon135::StatusSerializer
StatusSerializer	./platform/core/trusted_application.cc	/^  StatusSerializer(const OutputProto *output_proto, StatusProto *status_proto,$/;"	f	class:asylo::__anon389::StatusSerializer
StatusSerializer	./platform/core/trusted_application.cc	/^class StatusSerializer {$/;"	c	namespace:asylo::__anon135	file:
StatusSerializer	./platform/core/trusted_application.cc	/^class StatusSerializer {$/;"	c	namespace:asylo::__anon389	file:
StressMallocs	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus StressMallocs(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon335
StressMallocs	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus StressMallocs(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon81
StressMallocsOrDie	./platform/primitives/test/primitives_test.cc	/^uint64_t StressMallocsOrDie(const std::shared_ptr<Client> &client,$/;"	f	namespace:asylo::primitives::__anon334
StressMallocsOrDie	./platform/primitives/test/primitives_test.cc	/^uint64_t StressMallocsOrDie(const std::shared_ptr<Client> &client,$/;"	f	namespace:asylo::primitives::__anon80
StringCtor	./util/statusor_test.cc	/^struct StringCtor {$/;"	s	namespace:asylo::__anon231	file:
StringCtor	./util/statusor_test.cc	/^struct StringCtor {$/;"	s	namespace:asylo::__anon485	file:
StringVectorCtor	./util/statusor_test.cc	/^struct StringVectorCtor {$/;"	s	namespace:asylo::__anon231	file:
StringVectorCtor	./util/statusor_test.cc	/^struct StringVectorCtor {$/;"	s	namespace:asylo::__anon485	file:
StructProperties	./platform/system_call/type_conversions/types_conversions_generator.cc	/^struct StructProperties {$/;"	s	file:
Sum	./platform/system_call/serialize.cc	/^typename T::value_type Sum(const T &values) {$/;"	f	namespace:asylo::system_call::__anon117
Sum	./platform/system_call/serialize.cc	/^typename T::value_type Sum(const T &values) {$/;"	f	namespace:asylo::system_call::__anon371
SumOverflowOnRoundUpToMultipleOf8	./platform/system_call/message.cc	/^bool SumOverflowOnRoundUpToMultipleOf8(uint64_t v1, uint64_t v2) {$/;"	f	namespace:asylo::system_call::__anon118
SumOverflowOnRoundUpToMultipleOf8	./platform/system_call/message.cc	/^bool SumOverflowOnRoundUpToMultipleOf8(uint64_t v1, uint64_t v2) {$/;"	f	namespace:asylo::system_call::__anon372
Summarize	./platform/system_call/metadata_test.cc	/^std::string Summarize(int sysno) {$/;"	f	namespace:asylo::system_call::__anon120
Summarize	./platform/system_call/metadata_test.cc	/^std::string Summarize(int sysno) {$/;"	f	namespace:asylo::system_call::__anon374
SymLink	./platform/posix/io/io_manager.cc	/^int IOManager::SymLink(const char *from, const char *to) {$/;"	f	class:asylo::io::IOManager
SymLink	./platform/posix/io/io_manager.h	/^    virtual int SymLink(const char *path1, const char *path2) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
SymLink	./platform/posix/io/native_paths.cc	/^int NativePathHandler::SymLink(const char *path1, const char *path2) {$/;"	f	class:asylo::io::NativePathHandler
SymLink	./platform/posix/io/random_devices.cc	/^int RandomPathHandler::SymLink(const char *path1, const char *path2) {$/;"	f	class:asylo::RandomPathHandler
Sync	./platform/storage/utils/untrusted_file.cc	/^Status UntrustedFile::Sync() {$/;"	f	class:asylo::UntrustedFile
SysLogFacilities	./platform/common/bridge_types.h	/^enum SysLogFacilities {$/;"	g
SysLogLevel	./platform/common/bridge_types.h	/^enum SysLogLevel {$/;"	g
SysLogOptions	./platform/common/bridge_types.h	/^enum SysLogOptions {$/;"	g
SyscallsEnclave	./platform/posix/syscalls_test_enclave.cc	/^class SyscallsEnclave : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
SyscallsTest	./platform/posix/syscalls_test_driver.cc	/^class SyscallsTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon302	file:
SyscallsTest	./platform/posix/syscalls_test_driver.cc	/^class SyscallsTest : public EnclaveTest {$/;"	c	namespace:asylo::__anon48	file:
SysconfConstants	./platform/common/bridge_types.h	/^enum SysconfConstants {$/;"	g
SystemCallDescription	./platform/system_call/generate_tables.cc	/^struct SystemCallDescription {$/;"	s	file:
SystemCallDescriptor	./platform/system_call/metadata.h	/^  explicit SystemCallDescriptor(int sysno) : sysno_(sysno) {}$/;"	f	class:asylo::system_call::SystemCallDescriptor
SystemCallDescriptor	./platform/system_call/metadata.h	/^class SystemCallDescriptor {$/;"	c	namespace:asylo::system_call
SystemCallDispatcher	./platform/host_call/trusted/host_call_dispatcher.cc	/^primitives::PrimitiveStatus SystemCallDispatcher(const uint8_t* request_buffer,$/;"	f	namespace:asylo::host_call
SystemCallDispatcher	./platform/system_call/system_call_test.cc	/^asylo::primitives::PrimitiveStatus SystemCallDispatcher($/;"	f	namespace:asylo::system_call::__anon115
SystemCallDispatcher	./platform/system_call/system_call_test.cc	/^asylo::primitives::PrimitiveStatus SystemCallDispatcher($/;"	f	namespace:asylo::system_call::__anon369
SystemCallHandler	./platform/host_call/untrusted/host_call_handlers.cc	/^Status SystemCallHandler(const std::shared_ptr<primitives::Client> &client,$/;"	f	namespace:asylo::host_call
SystemCallTable	./platform/system_call/generate_tables.cc	/^std::map<int, SystemCallDescription> *SystemCallTable() {$/;"	f
SystemCallTableEntry	./platform/system_call/metadata.cc	/^struct SystemCallTableEntry {$/;"	s	namespace:asylo::system_call::__anon116	file:
SystemCallTableEntry	./platform/system_call/metadata.cc	/^struct SystemCallTableEntry {$/;"	s	namespace:asylo::system_call::__anon370	file:
T	./platform/common/bridge_functions.cc	/^void ReinterpretCopyArray(T (&dst)[M], const U (&src)[N],$/;"	m	namespace:asylo	file:
TCP_KEEPCNT	./platform/posix/include/netinet/tcp.h	29;"	d
TCP_KEEPIDLE	./platform/posix/include/netinet/tcp.h	27;"	d
TCP_KEEPINTVL	./platform/posix/include/netinet/tcp.h	28;"	d
TCP_NODELAY	./platform/posix/include/netinet/tcp.h	26;"	d
TCSAFLUSH	./platform/posix/include/sys/termios.h	62;"	d
TEMP_FAILURE_RETRY	./platform/posix/include/errno.h	34;"	d
TEST	./bazel/application_wrapper/argv_test.cc	/^TEST(ArgvTest, ArgcArgvToRepeatedStringField) {$/;"	f	namespace:asylo::__anon183
TEST	./bazel/application_wrapper/argv_test.cc	/^TEST(ArgvTest, ArgcArgvToRepeatedStringField) {$/;"	f	namespace:asylo::__anon437
TEST	./bazel/application_wrapper/argv_test.cc	/^TEST(ArgvTest, RepeatedStringFieldToArgcArgv) {$/;"	f	namespace:asylo::__anon183
TEST	./bazel/application_wrapper/argv_test.cc	/^TEST(ArgvTest, RepeatedStringFieldToArgcArgv) {$/;"	f	namespace:asylo::__anon437
TEST	./bazel/gtest_test.cc	/^TEST(GtestTest, Smoke) { EXPECT_THAT(1, Eq(1)); }$/;"	f	namespace:__anon180
TEST	./bazel/gtest_test.cc	/^TEST(GtestTest, Smoke) { EXPECT_THAT(1, Eq(1)); }$/;"	f	namespace:__anon434
TEST	./crypto/aes_gcm_siv_test.cc	/^TEST(AesGcmSivTest, AesGcmSivTestVectors) {$/;"	f	namespace:asylo::__anon26
TEST	./crypto/aes_gcm_siv_test.cc	/^TEST(AesGcmSivTest, AesGcmSivTestVectors) {$/;"	f	namespace:asylo::__anon280
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest, ValidateCertificateReturnsErrorIfNoData) {$/;"	f	namespace:asylo::__anon17
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest, ValidateCertificateReturnsErrorIfNoData) {$/;"	f	namespace:asylo::__anon271
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest, ValidateCertificateReturnsErrorIfNoFormat) {$/;"	f	namespace:asylo::__anon17
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest, ValidateCertificateReturnsErrorIfNoFormat) {$/;"	f	namespace:asylo::__anon271
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest, ValidateCertificateReturnsErrorIfUnknownFormat) {$/;"	f	namespace:asylo::__anon17
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest, ValidateCertificateReturnsErrorIfUnknownFormat) {$/;"	f	namespace:asylo::__anon271
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest, ValidateCertificateSucceedsIfCertificateIsValid) {$/;"	f	namespace:asylo::__anon17
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest, ValidateCertificateSucceedsIfCertificateIsValid) {$/;"	f	namespace:asylo::__anon271
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest,$/;"	f	namespace:asylo::__anon17
TEST	./crypto/certificate_util_test.cc	/^TEST(CertificateUtilTest,$/;"	f	namespace:asylo::__anon271
TEST	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST(EcdsaP256Sha256VerifyingKeyCreateTest,$/;"	f	namespace:asylo::__anon19
TEST	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST(EcdsaP256Sha256VerifyingKeyCreateTest,$/;"	f	namespace:asylo::__anon273
TEST	./crypto/random_nonce_generator_test.cc	/^TEST(RandomNonceGeneratorTest, RandomNonceGeneratorGeneratesNoCollisions) {$/;"	f	namespace:asylo::__anon18
TEST	./crypto/random_nonce_generator_test.cc	/^TEST(RandomNonceGeneratorTest, RandomNonceGeneratorGeneratesNoCollisions) {$/;"	f	namespace:asylo::__anon272
TEST	./crypto/random_nonce_generator_test.cc	/^TEST(RandomNonceGeneratorTest, RandomNonceGeneratorIncorrectNonceSize) {$/;"	f	namespace:asylo::__anon18
TEST	./crypto/random_nonce_generator_test.cc	/^TEST(RandomNonceGeneratorTest, RandomNonceGeneratorIncorrectNonceSize) {$/;"	f	namespace:asylo::__anon272
TEST	./crypto/random_nonce_generator_test.cc	/^TEST(RandomNonceGeneratorTest, RandomNonceGeneratorNonceSize) {$/;"	f	namespace:asylo::__anon18
TEST	./crypto/random_nonce_generator_test.cc	/^TEST(RandomNonceGeneratorTest, RandomNonceGeneratorNonceSize) {$/;"	f	namespace:asylo::__anon272
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestCreateFromInvalidDerSerializationFails) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestCreateFromInvalidDerSerializationFails) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestCreateFromInvalidPemSerializationFails) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestCreateFromInvalidPemSerializationFails) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestCreateFromPemSerializationSuccess) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestCreateFromPemSerializationSuccess) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestDecryptInvalidInputFails) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestDecryptInvalidInputFails) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestDecryptionKeySerializeAndRestoreSuccess) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestDecryptionKeySerializeAndRestoreSuccess) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestEncryptDecryptSuccess) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestEncryptDecryptSuccess) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestEncryptionKeySerializeAndRestoreSuccess) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestEncryptionKeySerializeAndRestoreSuccess) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestGetAsymmetricEncryptionKeySchemeOaep2048) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestGetAsymmetricEncryptionKeySchemeOaep2048) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestGetAsymmetricEncryptionKeySchemeOaep3072) {$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest, TestGetAsymmetricEncryptionKeySchemeOaep3072) {$/;"	f	namespace:asylo::__anon264
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest,$/;"	f	namespace:asylo::__anon10
TEST	./crypto/rsa_oaep_encryption_key_test.cc	/^TEST(RsaOaepEncryptionKeyTest,$/;"	f	namespace:asylo::__anon264
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, Algorithm) {$/;"	f	namespace:asylo::__anon16
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, Algorithm) {$/;"	f	namespace:asylo::__anon270
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, DigestSize) {$/;"	f	namespace:asylo::__anon16
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, DigestSize) {$/;"	f	namespace:asylo::__anon270
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, InitBetweenUpdates) {$/;"	f	namespace:asylo::__anon16
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, InitBetweenUpdates) {$/;"	f	namespace:asylo::__anon270
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, MultipleUpdates) {$/;"	f	namespace:asylo::__anon16
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, MultipleUpdates) {$/;"	f	namespace:asylo::__anon270
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, TestVector1) {$/;"	f	namespace:asylo::__anon16
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, TestVector1) {$/;"	f	namespace:asylo::__anon270
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, TestVector2) {$/;"	f	namespace:asylo::__anon16
TEST	./crypto/sha256_hash_test.cc	/^TEST(Sha256HashTest, TestVector2) {$/;"	f	namespace:asylo::__anon270
TEST	./crypto/util/byte_container_util_test.cc	/^TEST(ByteContainerUtilTest, MakeSpan) {$/;"	f	namespace:asylo::__anon21
TEST	./crypto/util/byte_container_util_test.cc	/^TEST(ByteContainerUtilTest, MakeSpan) {$/;"	f	namespace:asylo::__anon275
TEST	./crypto/util/byte_container_util_test.cc	/^TEST(ByteContainerUtilTest, MakeStringView) {$/;"	f	namespace:asylo::__anon21
TEST	./crypto/util/byte_container_util_test.cc	/^TEST(ByteContainerUtilTest, MakeStringView) {$/;"	f	namespace:asylo::__anon275
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, AtMethod) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, AtMethod) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, BackMethod) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, BackMethod) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, ConstIterator) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, ConstIterator) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, ConstReverseIterator) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, ConstReverseIterator) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, EmptyMethodNegative) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, EmptyMethodNegative) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, EmptyMethodPositive) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, EmptyMethodPositive) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, EqualityOperatorNegative) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, EqualityOperatorNegative) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, EqualityOperatorPositive) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, EqualityOperatorPositive) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, FrontMethod) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, FrontMethod) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, InequalityOperatorNegative) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, InequalityOperatorNegative) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, InequalityOperatorPositive) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, InequalityOperatorPositive) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, Iterator) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, Iterator) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, ReverseIterator) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, ReverseIterator) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, SafeEqualsNegative) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, SafeEqualsNegative) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, SafeEqualsPositive) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, SafeEqualsPositive) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, SubscriptOperator) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, SubscriptOperator) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, VerifyTraitsCorrectness) {$/;"	f	namespace:asylo::__anon23
TEST	./crypto/util/byte_container_view_test.cc	/^TEST(ByteContainerViewTest, VerifyTraitsCorrectness) {$/;"	f	namespace:asylo::__anon277
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, SafeEqualityOperatorNegative1) {$/;"	f	namespace:asylo::__anon24
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, SafeEqualityOperatorNegative1) {$/;"	f	namespace:asylo::__anon278
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, SafeInequalityOperatorPositive1) {$/;"	f	namespace:asylo::__anon24
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, SafeInequalityOperatorPositive1) {$/;"	f	namespace:asylo::__anon278
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, SafeParams) {$/;"	f	namespace:asylo::__anon24
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, SafeParams) {$/;"	f	namespace:asylo::__anon278
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, UnsafeBytesIsTrivial) {$/;"	f	namespace:asylo::__anon24
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, UnsafeBytesIsTrivial) {$/;"	f	namespace:asylo::__anon278
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, UnsafeEqualityOperatorNegative1) {$/;"	f	namespace:asylo::__anon24
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, UnsafeEqualityOperatorNegative1) {$/;"	f	namespace:asylo::__anon278
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, UnsafeInequalityOperatorPositive1) {$/;"	f	namespace:asylo::__anon24
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, UnsafeInequalityOperatorPositive1) {$/;"	f	namespace:asylo::__anon278
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, UnsafeParams) {$/;"	f	namespace:asylo::__anon24
TEST	./crypto/util/bytes_test.cc	/^TEST(BytesTest, UnsafeParams) {$/;"	f	namespace:asylo::__anon278
TEST	./daemon/identity/attestation_domain_client_test.cc	/^TEST(AttestationDomainClientMockTest, GeAttestationDomain) {$/;"	f	namespace:asylo::__anon185
TEST	./daemon/identity/attestation_domain_client_test.cc	/^TEST(AttestationDomainClientMockTest, GeAttestationDomain) {$/;"	f	namespace:asylo::__anon439
TEST	./daemon/identity/attestation_domain_client_test.cc	/^TEST(AttestationDomainClientMockTest, GeAttestationDomainFails) {$/;"	f	namespace:asylo::__anon185
TEST	./daemon/identity/attestation_domain_client_test.cc	/^TEST(AttestationDomainClientMockTest, GeAttestationDomainFails) {$/;"	f	namespace:asylo::__anon439
TEST	./daemon/identity/attestation_domain_service_impl_test.cc	/^TEST(AttestationDomainServiceImplTest, GetAttestationDomain) {$/;"	f	namespace:asylo::__anon187
TEST	./daemon/identity/attestation_domain_service_impl_test.cc	/^TEST(AttestationDomainServiceImplTest, GetAttestationDomain) {$/;"	f	namespace:asylo::__anon441
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, ComputeClientHandshakeAuthenticatorBadCipherSuite) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, ComputeClientHandshakeAuthenticatorBadCipherSuite) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, ComputeClientHandshakeAuthenticatorSha256) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, ComputeClientHandshakeAuthenticatorSha256) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, ComputeServerHandshakeAuthenticatorBadCipherSuite) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, ComputeServerHandshakeAuthenticatorBadCipherSuite) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, ComputeServerHandshakeAuthenticatorSha256) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, ComputeServerHandshakeAuthenticatorSha256) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveRecordProtocolKeyBadCiphersuite) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveRecordProtocolKeyBadCiphersuite) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveRecordProtocolKeyBadRecordProtocol) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveRecordProtocolKeyBadRecordProtocol) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveRecordProtocolKeySealAes128Gcm) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveRecordProtocolKeySealAes128Gcm) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveSecretsBadCiphersuite) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveSecretsBadCiphersuite) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveSecretsBadPrivateParameterSize) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveSecretsBadPrivateParameterSize) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveSecretsBadPublicParameterSize) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveSecretsBadPublicParameterSize) {$/;"	f	namespace:asylo::__anon512
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveSecretsWithCurve25519Sha256) {$/;"	f	namespace:asylo::__anon258
TEST	./grpc/auth/core/ekep_crypto_test.cc	/^TEST(EkepCryptoTest, DeriveSecretsWithCurve25519Sha256) {$/;"	f	namespace:asylo::__anon512
TEST	./identity/additional_authenticated_data_generator_test.cc	/^TEST(AdditionalAuthenticatedDataGeneratorTest, EkepGeneratorSucceeds) {$/;"	f	namespace:asylo::__anon141
TEST	./identity/additional_authenticated_data_generator_test.cc	/^TEST(AdditionalAuthenticatedDataGeneratorTest, EkepGeneratorSucceeds) {$/;"	f	namespace:asylo::__anon395
TEST	./identity/additional_authenticated_data_generator_test.cc	/^TEST(AdditionalAuthenticatedDataGeneratorTest, GetPceInfoGeneratorSucceeds) {$/;"	f	namespace:asylo::__anon141
TEST	./identity/additional_authenticated_data_generator_test.cc	/^TEST(AdditionalAuthenticatedDataGeneratorTest, GetPceInfoGeneratorSucceeds) {$/;"	f	namespace:asylo::__anon395
TEST	./identity/additional_authenticated_data_generator_test.cc	/^TEST(AdditionalAuthenticatedDataGeneratorTest,$/;"	f	namespace:asylo::__anon141
TEST	./identity/additional_authenticated_data_generator_test.cc	/^TEST(AdditionalAuthenticatedDataGeneratorTest,$/;"	f	namespace:asylo::__anon395
TEST	./identity/assertion_description_util_test.cc	/^TEST(AssertionDescriptionUtilTest, EqualityFunctorDifferentAuthorityType) {$/;"	f	namespace:asylo::__anon178
TEST	./identity/assertion_description_util_test.cc	/^TEST(AssertionDescriptionUtilTest, EqualityFunctorDifferentAuthorityType) {$/;"	f	namespace:asylo::__anon432
TEST	./identity/assertion_description_util_test.cc	/^TEST(AssertionDescriptionUtilTest, EqualityFunctorDifferentIdentityType) {$/;"	f	namespace:asylo::__anon178
TEST	./identity/assertion_description_util_test.cc	/^TEST(AssertionDescriptionUtilTest, EqualityFunctorDifferentIdentityType) {$/;"	f	namespace:asylo::__anon432
TEST	./identity/assertion_description_util_test.cc	/^TEST(AssertionDescriptionUtilTest, EqualityFunctorPositive) {$/;"	f	namespace:asylo::__anon178
TEST	./identity/assertion_description_util_test.cc	/^TEST(AssertionDescriptionUtilTest, EqualityFunctorPositive) {$/;"	f	namespace:asylo::__anon432
TEST	./identity/assertion_description_util_test.cc	/^TEST(AssertionDescriptionUtilTest, UnorderedSet) {$/;"	f	namespace:asylo::__anon178
TEST	./identity/assertion_description_util_test.cc	/^TEST(AssertionDescriptionUtilTest, UnorderedSet) {$/;"	f	namespace:asylo::__anon432
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest, MatchFailsIfDescriptionMatchFails) {$/;"	f	namespace:asylo::__anon170
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest, MatchFailsIfDescriptionMatchFails) {$/;"	f	namespace:asylo::__anon424
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest, MatchFailsIfIdentityDescriptionInvalid) {$/;"	f	namespace:asylo::__anon170
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest, MatchFailsIfIdentityDescriptionInvalid) {$/;"	f	namespace:asylo::__anon424
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest, MatchFailsIfIdentityMatchFails) {$/;"	f	namespace:asylo::__anon170
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest, MatchFailsIfIdentityMatchFails) {$/;"	f	namespace:asylo::__anon424
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest, MatchIfDescriptionsAndIdentitiesMatch) {$/;"	f	namespace:asylo::__anon170
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest, MatchIfDescriptionsAndIdentitiesMatch) {$/;"	f	namespace:asylo::__anon424
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest,$/;"	f	namespace:asylo::__anon170
TEST	./identity/identity_expectation_matcher_test.cc	/^TEST(IdentityExpectationMatcherTest,$/;"	f	namespace:asylo::__anon424
TEST	./identity/init_test.cc	/^TEST(InitTest, InitializeFailsWithNonMatchingConfigs) {$/;"	f	namespace:asylo::__anon176
TEST	./identity/init_test.cc	/^TEST(InitTest, InitializeFailsWithNonMatchingConfigs) {$/;"	f	namespace:asylo::__anon430
TEST	./identity/init_test.cc	/^TEST(InitTest, InitializeSucceedsRepeatedlyAfterFirstSuccess) {$/;"	f	namespace:asylo::__anon176
TEST	./identity/init_test.cc	/^TEST(InitTest, InitializeSucceedsRepeatedlyAfterFirstSuccess) {$/;"	f	namespace:asylo::__anon430
TEST	./identity/init_test.cc	/^TEST(InitTest, InitializeSucceedsWithConfigs) {$/;"	f	namespace:asylo::__anon176
TEST	./identity/init_test.cc	/^TEST(InitTest, InitializeSucceedsWithConfigs) {$/;"	f	namespace:asylo::__anon430
TEST	./identity/init_test.cc	/^TEST(InitTest, InitializeSucceedsWithEmptyConfigs) {$/;"	f	namespace:asylo::__anon176
TEST	./identity/init_test.cc	/^TEST(InitTest, InitializeSucceedsWithEmptyConfigs) {$/;"	f	namespace:asylo::__anon430
TEST	./identity/null_identity/null_identity_util_test.cc	/^TEST(NullIdentityUtilTest, IsNullIdentityDescription) {$/;"	f	namespace:asylo::__anon175
TEST	./identity/null_identity/null_identity_util_test.cc	/^TEST(NullIdentityUtilTest, IsNullIdentityDescription) {$/;"	f	namespace:asylo::__anon429
TEST	./identity/null_identity/null_identity_util_test.cc	/^TEST(NullIdentityUtilTest, SetNullAssertionDescription) {$/;"	f	namespace:asylo::__anon175
TEST	./identity/null_identity/null_identity_util_test.cc	/^TEST(NullIdentityUtilTest, SetNullAssertionDescription) {$/;"	f	namespace:asylo::__anon429
TEST	./identity/null_identity/null_identity_util_test.cc	/^TEST(NullIdentityUtilTest, SetNullIdentityDescription) {$/;"	f	namespace:asylo::__anon175
TEST	./identity/null_identity/null_identity_util_test.cc	/^TEST(NullIdentityUtilTest, SetNullIdentityDescription) {$/;"	f	namespace:asylo::__anon429
TEST	./identity/null_identity/null_identity_util_test.cc	/^TEST(NullIdentityUtilTest, SetNullIdentityExpectation) {$/;"	f	namespace:asylo::__anon175
TEST	./identity/null_identity/null_identity_util_test.cc	/^TEST(NullIdentityUtilTest, SetNullIdentityExpectation) {$/;"	f	namespace:asylo::__anon429
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, FmspcWithValueFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, FmspcWithValueFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, FmspcWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, FmspcWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, PceIdWithTooLargeValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, PceIdWithTooLargeValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, PceIdWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, PceIdWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, PceSvnWithTooLargeValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, PceSvnWithTooLargeValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, PceSvnWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, PceSvnWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ReportProtoWithValueFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ReportProtoWithValueFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ReportProtoWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ReportProtoWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, TargetInfoProtoWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, TargetInfoProtoWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidFmspcIsValid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidFmspcIsValid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidPceIdIsValid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidPceIdIsValid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidPceSvnIsValid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidPceSvnIsValid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidReportCanBeConvertedToHardwareReport) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidReportCanBeConvertedToHardwareReport) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidTargetInfoProtoCanBeConvertedToTargetinfo) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest, ValidTargetInfoProtoCanBeConvertedToTargetinfo) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest,$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(PlatformProvisioningTest,$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, CpuSvnWithValueFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, CpuSvnWithValueFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, CpuSvnWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, CpuSvnWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, PpidWithValueFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, PpidWithValueFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, PpidWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, PpidWithoutValueFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, ValidCpuSvnIsValid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, ValidCpuSvnIsValid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, ValidPpidIsValid) {$/;"	f	namespace:asylo::sgx::__anon165
TEST	./identity/sgx/platform_provisioning_test.cc	/^TEST(ProvisioningPlatformTest, ValidPpidIsValid) {$/;"	f	namespace:asylo::sgx::__anon419
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityHasAttributesByName) {$/;"	f	namespace:asylo::sgx::__anon161
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityHasAttributesByName) {$/;"	f	namespace:asylo::sgx::__anon415
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityHasHexEncodedBytesFields) {$/;"	f	namespace:asylo::sgx::__anon161
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityHasHexEncodedBytesFields) {$/;"	f	namespace:asylo::sgx::__anon415
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityHasMiscselectBitsByName) {$/;"	f	namespace:asylo::sgx::__anon161
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityHasMiscselectBitsByName) {$/;"	f	namespace:asylo::sgx::__anon415
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityMatchSpecHasAttributesByName) {$/;"	f	namespace:asylo::sgx::__anon161
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityMatchSpecHasAttributesByName) {$/;"	f	namespace:asylo::sgx::__anon415
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityMatchSpecHasMiscselectBitsByName) {$/;"	f	namespace:asylo::sgx::__anon161
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, CodeIdentityMatchSpecHasMiscselectBitsByName) {$/;"	f	namespace:asylo::sgx::__anon415
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, MiscselectBitsByName) {$/;"	f	namespace:asylo::sgx::__anon161
TEST	./identity/sgx/proto_format_test.cc	/^TEST(ProtoFormatTest, MiscselectBitsByName) {$/;"	f	namespace:asylo::sgx::__anon415
TEST	./identity/sgx/remote_assertion_util_test.cc	/^TEST(RemoteAssertionUtilTest, MakeRemoteAssertionSucceeds) {$/;"	f	namespace:asylo::sgx::__anon155
TEST	./identity/sgx/remote_assertion_util_test.cc	/^TEST(RemoteAssertionUtilTest, MakeRemoteAssertionSucceeds) {$/;"	f	namespace:asylo::sgx::__anon409
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, GetPrintableMiscselectListEmpty) {$/;"	f	namespace:asylo::sgx::__anon143
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, GetPrintableMiscselectListEmpty) {$/;"	f	namespace:asylo::sgx::__anon397
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, GetPrintableMiscselectListNonempty) {$/;"	f	namespace:asylo::sgx::__anon143
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, GetPrintableMiscselectListNonempty) {$/;"	f	namespace:asylo::sgx::__anon397
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, TestMiscselectBitFalse) {$/;"	f	namespace:asylo::sgx::__anon143
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, TestMiscselectBitFalse) {$/;"	f	namespace:asylo::sgx::__anon397
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, TestMiscselectBitInvalid) {$/;"	f	namespace:asylo::sgx::__anon143
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, TestMiscselectBitInvalid) {$/;"	f	namespace:asylo::sgx::__anon397
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, TestMiscselectBitTrue) {$/;"	f	namespace:asylo::sgx::__anon143
TEST	./identity/sgx/secs_miscselect_test.cc	/^TEST(SecsMiscselectTest, TestMiscselectBitTrue) {$/;"	f	namespace:asylo::sgx::__anon397
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherCheckDescription) {$/;"	f	namespace:asylo::__anon154
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherCheckDescription) {$/;"	f	namespace:asylo::__anon408
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherExistsInStaticMap) {$/;"	f	namespace:asylo::__anon154
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherExistsInStaticMap) {$/;"	f	namespace:asylo::__anon408
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherInvalidExpectation) {$/;"	f	namespace:asylo::__anon154
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherInvalidExpectation) {$/;"	f	namespace:asylo::__anon408
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherInvalidIdentity) {$/;"	f	namespace:asylo::__anon154
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherInvalidIdentity) {$/;"	f	namespace:asylo::__anon408
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherInvalidIdentityExpectation) {$/;"	f	namespace:asylo::__anon154
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherInvalidIdentityExpectation) {$/;"	f	namespace:asylo::__anon408
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherPositive) {$/;"	f	namespace:asylo::__anon154
TEST	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^TEST(SgxCodeIdentityExpectationMatcherTest, MatcherPositive) {$/;"	f	namespace:asylo::__anon408
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, CorrectTcbJsonParsesSuccessfully) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, CorrectTcbJsonParsesSuccessfully) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, ExtraFieldsCausesLogWarning) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, ExtraFieldsCausesLogWarning) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, MissingSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, MissingSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, NonIntegerPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, NonIntegerPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, NonIntegerSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, NonIntegerSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, NonObjectJsonValueFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, NonObjectJsonValueFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, OutOfBoundsPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, OutOfBoundsPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, OutOfBoundsSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, OutOfBoundsSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, WithoutPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonTest, WithoutPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonValueTest, ImproperJsonFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbFromJsonValueTest, ImproperJsonFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, CorrectTcbInfoJsonParsesSuccessfully) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, CorrectTcbInfoJsonParsesSuccessfully) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, ImproperJsonFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, ImproperJsonFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, NonObjectJsonValueFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, NonObjectJsonValueFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithBadHexInFmspcFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithBadHexInFmspcFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithBadHexInPceIdFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithBadHexInPceIdFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithExtraFieldsCausesLogWarning) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithExtraFieldsCausesLogWarning) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithGarbledIssueDateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithGarbledIssueDateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithGarbledNextUpdateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithGarbledNextUpdateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithIssueDateAfterNextUpdateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithIssueDateAfterNextUpdateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonArrayTcbLevelsFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonArrayTcbLevelsFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonIntegerVersionFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonIntegerVersionFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonStringFmspcFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonStringFmspcFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonStringIssueDateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonStringIssueDateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonStringNextUpdateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonStringNextUpdateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonStringPceIdFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonStringPceIdFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonZeroPceIdParsesSuccessfully) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithNonZeroPceIdParsesSuccessfully) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithOutOfRangeIssueDateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithOutOfRangeIssueDateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithOutOfRangeNextUpdateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithOutOfRangeNextUpdateFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithOutOfRangeVersionFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithOutOfRangeVersionFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithUnknownVersionFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithUnknownVersionFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithWrongSizeOfFmspcFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithWrongSizeOfFmspcFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithWrongSizeOfPceIdFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithWrongSizeOfPceIdFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutFmspcFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutFmspcFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutIssueDateFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutIssueDateFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutNextUpdateFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutNextUpdateFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutPceIdFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutPceIdFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutTcbLevelsFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutTcbLevelsFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutVersionFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbInfoJsonWithoutVersionFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithExtraFieldsCausesLogWarning) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithExtraFieldsCausesLogWarning) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithMissingSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithMissingSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithNonIntegerPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithNonIntegerPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithNonIntegerSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithNonIntegerSgxTcbComponentSvnFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithOutOfBoundsPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithOutOfBoundsPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithoutPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbJsonWithoutPceSvnFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithExtraFieldsCausesLogWarning) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithExtraFieldsCausesLogWarning) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithNonObjectTcbFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithNonObjectTcbFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithNonStringStatusFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithNonStringStatusFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithoutStatusFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithoutStatusFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithoutTcbFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest, TcbLevelJsonWithoutTcbFieldFailsToParse) {$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest,$/;"	f	namespace:asylo::sgx::__anon150
TEST	./identity/sgx/tcb_info_from_json_test.cc	/^TEST(TcbInfoFromJsonTest,$/;"	f	namespace:asylo::sgx::__anon404
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, CompareTcbsComparesArgumentsCorrectly) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, CompareTcbsComparesArgumentsCorrectly) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, RawTcbWithInvalidCpuSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, RawTcbWithInvalidCpuSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, RawTcbWithInvalidPceSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, RawTcbWithInvalidPceSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, RawTcbWithoutCpuSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, RawTcbWithoutCpuSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, RawTcbWithoutPceSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, RawTcbWithoutPceSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithInvalidFmspcIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithInvalidFmspcIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithInvalidIssueDateIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithInvalidIssueDateIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithInvalidNextUpdateIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithInvalidNextUpdateIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithInvalidPceIdIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithInvalidPceIdIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithUnknownVersionIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithUnknownVersionIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutFmspcFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutFmspcFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutIssueDateFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutIssueDateFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutNextUpdateFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutNextUpdateFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutPceIdFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutPceIdFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutVersionFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoImplWithoutVersionFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoWithoutValueVariantIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbInfoWithoutValueVariantIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbLevelWithInvalidTcbIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbLevelWithInvalidTcbIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbLevelWithoutStatusFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbLevelWithoutStatusFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbLevelWithoutTcbFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbLevelWithoutTcbFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbStatusWithUnknownKnownStatusVariantIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbStatusWithUnknownKnownStatusVariantIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbStatusWithoutValueVariantIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbStatusWithoutValueVariantIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbWithComponentsFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbWithComponentsFieldOfBadLengthIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbWithInvalidPceSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbWithInvalidPceSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbWithoutComponentsFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbWithoutComponentsFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbWithoutPceSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, TcbWithoutPceSvnFieldIsInvalid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, ValidRawTcbIsValid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, ValidRawTcbIsValid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, ValidTcbInfoIsValid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, ValidTcbInfoIsValid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, ValidTcbIsValid) {$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest, ValidTcbIsValid) {$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest,$/;"	f	namespace:asylo::sgx::__anon167
TEST	./identity/sgx/tcb_test.cc	/^TEST(TcbTest,$/;"	f	namespace:asylo::sgx::__anon421
TEST	./identity/sgx/verify_hardware_report_test.cc	/^TEST(VerifyHardwareReportTest, VerifyHardwareReportFailsWhenTargetIsNotSelf) {$/;"	f	namespace:asylo::sgx::__anon157
TEST	./identity/sgx/verify_hardware_report_test.cc	/^TEST(VerifyHardwareReportTest, VerifyHardwareReportFailsWhenTargetIsNotSelf) {$/;"	f	namespace:asylo::sgx::__anon411
TEST	./identity/sgx/verify_hardware_report_test.cc	/^TEST(VerifyHardwareReportTest, VerifyHardwareReportSucceedsWhenTargetIsSelf) {$/;"	f	namespace:asylo::sgx::__anon157
TEST	./identity/sgx/verify_hardware_report_test.cc	/^TEST(VerifyHardwareReportTest, VerifyHardwareReportSucceedsWhenTargetIsSelf) {$/;"	f	namespace:asylo::sgx::__anon411
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, NegativeLength) {$/;"	f	namespace:asylo::__anon110
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, NegativeLength) {$/;"	f	namespace:asylo::__anon364
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, NonemptyBufferDecimalDigits) {$/;"	f	namespace:asylo::__anon110
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, NonemptyBufferDecimalDigits) {$/;"	f	namespace:asylo::__anon364
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, NonemptyBufferHighDigits) {$/;"	f	namespace:asylo::__anon110
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, NonemptyBufferHighDigits) {$/;"	f	namespace:asylo::__anon364
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, NonemptyNullBuffer) {$/;"	f	namespace:asylo::__anon110
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, NonemptyNullBuffer) {$/;"	f	namespace:asylo::__anon364
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, Null) {$/;"	f	namespace:asylo::__anon110
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, Null) {$/;"	f	namespace:asylo::__anon364
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, SingletonNullBuffer) {$/;"	f	namespace:asylo::__anon110
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, SingletonNullBuffer) {$/;"	f	namespace:asylo::__anon364
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, ZeroLength) {$/;"	f	namespace:asylo::__anon110
TEST	./platform/common/debug_strings_test.cc	/^TEST(DebugStringsTest, ZeroLength) {$/;"	f	namespace:asylo::__anon364
TEST	./platform/common/spin_lock_test.cc	/^TEST(ScopedSpinLockTest, ManyThreadsTest) {$/;"	f	namespace:__anon104
TEST	./platform/common/spin_lock_test.cc	/^TEST(ScopedSpinLockTest, ManyThreadsTest) {$/;"	f	namespace:__anon358
TEST	./platform/common/spin_lock_test.cc	/^TEST(SpinLockTest, ManyThreadsTest) {$/;"	f	namespace:__anon104
TEST	./platform/common/spin_lock_test.cc	/^TEST(SpinLockTest, ManyThreadsTest) {$/;"	f	namespace:__anon358
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestAccessEmptyStaticMap) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestAccessEmptyStaticMap) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestAlgorithmConstIterator) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestAlgorithmConstIterator) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestAlgorithmIterator) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestAlgorithmIterator) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestConstIterator) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestConstIterator) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestGetNonExistentMapElement) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestGetNonExistentMapElement) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestIterator) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestIterator) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestIteratorConversion) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestIteratorConversion) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestRangeBasedFor) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestRangeBasedFor) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestStaticMapBasic) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestStaticMapBasic) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestStaticMapCustomNamer) {$/;"	f	namespace:asylo::__anon101
TEST	./platform/common/static_map_test.cc	/^TEST(StaticMapTest, TestStaticMapCustomNamer) {$/;"	f	namespace:asylo::__anon355
TEST	./platform/common/time_util_test.cc	/^TEST(TimeTests, Conversions) {$/;"	f	namespace:asylo::__anon111
TEST	./platform/common/time_util_test.cc	/^TEST(TimeTests, Conversions) {$/;"	f	namespace:asylo::__anon365
TEST	./platform/common/time_util_test.cc	/^TEST(TimeTests, Range) {$/;"	f	namespace:asylo::__anon111
TEST	./platform/common/time_util_test.cc	/^TEST(TimeTests, Range) {$/;"	f	namespace:asylo::__anon365
TEST	./platform/common/time_util_test.cc	/^TEST(TimeTests, TimeSpecSubtract) {$/;"	f	namespace:asylo::__anon111
TEST	./platform/common/time_util_test.cc	/^TEST(TimeTests, TimeSpecSubtract) {$/;"	f	namespace:asylo::__anon365
TEST	./platform/core/enclave_clock_test.cc	/^TEST(EnclaveClockTest, ErrorBounds) {$/;"	f	namespace:asylo::__anon136
TEST	./platform/core/enclave_clock_test.cc	/^TEST(EnclaveClockTest, ErrorBounds) {$/;"	f	namespace:asylo::__anon390
TEST	./platform/core/test/random_test.cc	/^TEST(BoringSSLTest, RandomHandlerTest) {$/;"	f	namespace:asylo::__anon129
TEST	./platform/core/test/random_test.cc	/^TEST(BoringSSLTest, RandomHandlerTest) {$/;"	f	namespace:asylo::__anon383
TEST	./platform/core/test/random_test.cc	/^TEST(DevicesTest, RandomHandlerTest) {$/;"	f	namespace:asylo::__anon129
TEST	./platform/core/test/random_test.cc	/^TEST(DevicesTest, RandomHandlerTest) {$/;"	f	namespace:asylo::__anon383
TEST	./platform/core/test/shared_resource_test.cc	/^TEST(EnclaveResourcesTest, CustomDeleter) {$/;"	f	namespace:asylo::__anon134
TEST	./platform/core/test/shared_resource_test.cc	/^TEST(EnclaveResourcesTest, CustomDeleter) {$/;"	f	namespace:asylo::__anon388
TEST	./platform/core/test/shared_resource_test.cc	/^TEST(EnclaveResourcesTest, ResourceLifeCycle) {$/;"	f	namespace:asylo::__anon134
TEST	./platform/core/test/shared_resource_test.cc	/^TEST(EnclaveResourcesTest, ResourceLifeCycle) {$/;"	f	namespace:asylo::__anon388
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptAfterEncryptInPlaceReturnsOriginalTexts) {$/;"	f	namespace:asylo::__anon287
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptAfterEncryptInPlaceReturnsOriginalTexts) {$/;"	f	namespace:asylo::__anon33
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptAfterEncryptReturnsOriginalTexts) {$/;"	f	namespace:asylo::__anon287
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptAfterEncryptReturnsOriginalTexts) {$/;"	f	namespace:asylo::__anon33
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptWithAlteredCiphertextFails) {$/;"	f	namespace:asylo::__anon287
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptWithAlteredCiphertextFails) {$/;"	f	namespace:asylo::__anon33
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptWithAlteredKeyFails) {$/;"	f	namespace:asylo::__anon287
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptWithAlteredKeyFails) {$/;"	f	namespace:asylo::__anon33
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptWithAlteredNonceFails) {$/;"	f	namespace:asylo::__anon287
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, DecryptWithAlteredNonceFails) {$/;"	f	namespace:asylo::__anon33
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, GetGcmCryptorIsConsistent) {$/;"	f	namespace:asylo::__anon287
TEST	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^TEST(GcmCryptorTest, GetGcmCryptorIsConsistent) {$/;"	f	namespace:asylo::__anon33
TEST	./platform/host_call/untrusted/host_call_handlers_initializer_test.cc	/^TEST(HostCallHandlersInitializerTest, RegisterHostCallHandlersTest) {$/;"	f	namespace:asylo::host_call
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, IsAttyIncorrectParameterStackSizeTest) {$/;"	f	namespace:asylo::host_call::__anon292
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, IsAttyIncorrectParameterStackSizeTest) {$/;"	f	namespace:asylo::host_call::__anon38
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, IsAttyValidRequestTest) {$/;"	f	namespace:asylo::host_call::__anon292
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, IsAttyValidRequestTest) {$/;"	f	namespace:asylo::host_call::__anon38
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, SyscallHandlerEmptyParameterStackTest) {$/;"	f	namespace:asylo::host_call::__anon292
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, SyscallHandlerEmptyParameterStackTest) {$/;"	f	namespace:asylo::host_call::__anon38
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, SyscallHandlerInvalidRequestOnParameterStackTest) {$/;"	f	namespace:asylo::host_call::__anon292
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, SyscallHandlerInvalidRequestOnParameterStackTest) {$/;"	f	namespace:asylo::host_call::__anon38
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, SyscallHandlerMoreThanOneRequestOnStackTest) {$/;"	f	namespace:asylo::host_call::__anon292
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, SyscallHandlerMoreThanOneRequestOnStackTest) {$/;"	f	namespace:asylo::host_call::__anon38
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, SyscallHandlerValidRequestOnParameterStackTest) {$/;"	f	namespace:asylo::host_call::__anon292
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, SyscallHandlerValidRequestOnParameterStackTest) {$/;"	f	namespace:asylo::host_call::__anon38
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, USleepIncorrectParameterStackSizeTest) {$/;"	f	namespace:asylo::host_call::__anon292
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, USleepIncorrectParameterStackSizeTest) {$/;"	f	namespace:asylo::host_call::__anon38
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, USleepValidRequestTest) {$/;"	f	namespace:asylo::host_call::__anon292
TEST	./platform/host_call/untrusted/host_call_handlers_test.cc	/^TEST(HostCallHandlersTest, USleepValidRequestTest) {$/;"	f	namespace:asylo::host_call::__anon38
TEST	./platform/posix/bswap_test.cc	/^TEST(ByteSwapTest, Swaps) {$/;"	f	namespace:asylo::__anon315
TEST	./platform/posix/bswap_test.cc	/^TEST(ByteSwapTest, Swaps) {$/;"	f	namespace:asylo::__anon61
TEST	./platform/posix/errno_test.cc	/^TEST(EnclaveErrnoTest, EISDIRTest) {$/;"	f	namespace:asylo::__anon330
TEST	./platform/posix/errno_test.cc	/^TEST(EnclaveErrnoTest, EISDIRTest) {$/;"	f	namespace:asylo::__anon76
TEST	./platform/posix/errno_test.cc	/^TEST(EnclaveErrnoTest, ENOENTTest) { CheckHostErrno(empty_path, ENOENT); }$/;"	f	namespace:asylo::__anon330
TEST	./platform/posix/errno_test.cc	/^TEST(EnclaveErrnoTest, ENOENTTest) { CheckHostErrno(empty_path, ENOENT); }$/;"	f	namespace:asylo::__anon76
TEST	./platform/posix/errno_test.cc	/^TEST(EnclaveErrnoTest, ENOTDIRTest) {$/;"	f	namespace:asylo::__anon330
TEST	./platform/posix/errno_test.cc	/^TEST(EnclaveErrnoTest, ENOTDIRTest) {$/;"	f	namespace:asylo::__anon76
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, AbsoluteBackChange) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, AbsoluteBackChange) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, CrossHandlerChange) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, CrossHandlerChange) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, CrossHandlerResolve) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, CrossHandlerResolve) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, EmptyChange) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, EmptyChange) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, EmptyResolve) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, EmptyResolve) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, PastRootChange) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, PastRootChange) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, RelativeAbsoluteResolve) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, RelativeAbsoluteResolve) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, RelativeBackChange) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, RelativeBackChange) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, RelativeChange) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, RelativeChange) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, SimpleChange) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, SimpleChange) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, SplitBackHandlerResolve) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, SplitBackHandlerResolve) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, SplitHandlerResolve) {$/;"	f	namespace:asylo::__anon319
TEST	./platform/posix/io/cwd_test.cc	/^TEST(CwdTest, SplitHandlerResolve) {$/;"	f	namespace:asylo::__anon65
TEST	./platform/posix/io/read_write_multithread_test.cc	/^TEST(ReadWriteMultiThreadTest, MultiThreadTest) {$/;"	f	namespace:asylo::__anon329
TEST	./platform/posix/io/read_write_multithread_test.cc	/^TEST(ReadWriteMultiThreadTest, MultiThreadTest) {$/;"	f	namespace:asylo::__anon75
TEST	./platform/posix/io/realpath_test.cc	/^TEST(RealpathTest, ParentDir) {$/;"	f	namespace:__anon323
TEST	./platform/posix/io/realpath_test.cc	/^TEST(RealpathTest, ParentDir) {$/;"	f	namespace:__anon69
TEST	./platform/posix/io/realpath_test.cc	/^TEST(RealpathTest, SimpleBuf) {$/;"	f	namespace:__anon323
TEST	./platform/posix/io/realpath_test.cc	/^TEST(RealpathTest, SimpleBuf) {$/;"	f	namespace:__anon69
TEST	./platform/posix/io/realpath_test.cc	/^TEST(RealpathTest, SimpleNoBuf) {$/;"	f	namespace:__anon323
TEST	./platform/posix/io/realpath_test.cc	/^TEST(RealpathTest, SimpleNoBuf) {$/;"	f	namespace:__anon69
TEST	./platform/posix/memory/heap_switch_test.cc	/^TEST(HeapSwitchTest, HeapSwitch) {$/;"	f	namespace:asylo::__anon317
TEST	./platform/posix/memory/heap_switch_test.cc	/^TEST(HeapSwitchTest, HeapSwitch) {$/;"	f	namespace:asylo::__anon63
TEST	./platform/posix/memory/heap_switch_test.cc	/^TEST(HeapSwitchTest, MemoryAlignment) {$/;"	f	namespace:asylo::__anon317
TEST	./platform/posix/memory/heap_switch_test.cc	/^TEST(HeapSwitchTest, MemoryAlignment) {$/;"	f	namespace:asylo::__anon63
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, BadAddress) {$/;"	f	namespace:asylo::__anon309
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, BadAddress) {$/;"	f	namespace:asylo::__anon55
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, EnumerateMany) {$/;"	f	namespace:asylo::__anon309
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, EnumerateMany) {$/;"	f	namespace:asylo::__anon55
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, FourChunks) {$/;"	f	namespace:asylo::__anon309
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, FourChunks) {$/;"	f	namespace:asylo::__anon55
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, OneChunk) {$/;"	f	namespace:asylo::__anon309
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, OneChunk) {$/;"	f	namespace:asylo::__anon55
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, ThreeChunks) {$/;"	f	namespace:asylo::__anon309
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, ThreeChunks) {$/;"	f	namespace:asylo::__anon55
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, TwoChunks) {$/;"	f	namespace:asylo::__anon309
TEST	./platform/posix/sockets/inet_aton_test.cc	/^TEST(InetAtonTest, TwoChunks) {$/;"	f	namespace:asylo::__anon55
TEST	./platform/posix/sockets/inet_pton_test.cc	/^TEST(InetPtonTest, IPv4) {$/;"	f	namespace:__anon308
TEST	./platform/posix/sockets/inet_pton_test.cc	/^TEST(InetPtonTest, IPv4) {$/;"	f	namespace:__anon54
TEST	./platform/posix/sockets/inet_pton_test.cc	/^TEST(InetPtonTest, IPv6) {$/;"	f	namespace:__anon308
TEST	./platform/posix/sockets/inet_pton_test.cc	/^TEST(InetPtonTest, IPv6) {$/;"	f	namespace:__anon54
TEST	./platform/posix/syslog_test.cc	/^TEST(AsyloLambdaTest, LambdaNoScopedTest) {$/;"	f	namespace:asylo::__anon299
TEST	./platform/posix/syslog_test.cc	/^TEST(AsyloLambdaTest, LambdaNoScopedTest) {$/;"	f	namespace:asylo::__anon45
TEST	./platform/posix/syslog_test.cc	/^TEST(AsyloLambdaTest, LambdaScopedTest) {$/;"	f	namespace:asylo::__anon299
TEST	./platform/posix/syslog_test.cc	/^TEST(AsyloLambdaTest, LambdaScopedTest) {$/;"	f	namespace:asylo::__anon45
TEST	./platform/posix/syslog_test.cc	/^TEST(AsyloLambdaTest, NoLambdaNoScopeTest) {$/;"	f	namespace:asylo::__anon299
TEST	./platform/posix/syslog_test.cc	/^TEST(AsyloLambdaTest, NoLambdaNoScopeTest) {$/;"	f	namespace:asylo::__anon45
TEST	./platform/posix/syslog_test.cc	/^TEST(AsyloLambdaTest, NoLambdaScopeTest) {$/;"	f	namespace:asylo::__anon299
TEST	./platform/posix/syslog_test.cc	/^TEST(AsyloLambdaTest, NoLambdaScopeTest) {$/;"	f	namespace:asylo::__anon45
TEST	./platform/posix/times_test.cc	/^TEST(TimesTest, TimesIncrementing) {$/;"	f	namespace:asylo::__anon303
TEST	./platform/posix/times_test.cc	/^TEST(TimesTest, TimesIncrementing) {$/;"	f	namespace:asylo::__anon49
TEST	./platform/primitives/extent_test.cc	/^TEST(ExtentTest, ExtentDefaultExtentIsEmpty) { EXPECT_TRUE(Extent().empty()); }$/;"	f	namespace:asylo::primitives::__anon348
TEST	./platform/primitives/extent_test.cc	/^TEST(ExtentTest, ExtentDefaultExtentIsEmpty) { EXPECT_TRUE(Extent().empty()); }$/;"	f	namespace:asylo::primitives::__anon94
TEST	./platform/primitives/extent_test.cc	/^TEST(ExtentTest, ExtentFromConst) {$/;"	f	namespace:asylo::primitives::__anon348
TEST	./platform/primitives/extent_test.cc	/^TEST(ExtentTest, ExtentFromConst) {$/;"	f	namespace:asylo::primitives::__anon94
TEST	./platform/primitives/extent_test.cc	/^TEST(ExtentTest, ExtentOfPointerAndCountRefersToArray) {$/;"	f	namespace:asylo::primitives::__anon348
TEST	./platform/primitives/extent_test.cc	/^TEST(ExtentTest, ExtentOfPointerAndCountRefersToArray) {$/;"	f	namespace:asylo::primitives::__anon94
TEST	./platform/primitives/extent_test.cc	/^TEST(ExtentTest, ExtentOfPointerRefersToObjectMemoryLocation) {$/;"	f	namespace:asylo::primitives::__anon348
TEST	./platform/primitives/extent_test.cc	/^TEST(ExtentTest, ExtentOfPointerRefersToObjectMemoryLocation) {$/;"	f	namespace:asylo::primitives::__anon94
TEST	./platform/primitives/parameter_stack_test.cc	/^TEST(ParameterStackTest, PushByCopyPointerCopyTest) {$/;"	f	namespace:asylo::primitives::__anon331
TEST	./platform/primitives/parameter_stack_test.cc	/^TEST(ParameterStackTest, PushByCopyPointerCopyTest) {$/;"	f	namespace:asylo::primitives::__anon77
TEST	./platform/primitives/parameter_stack_test.cc	/^TEST(ParameterStackTest, PushCopyTest) {$/;"	f	namespace:asylo::primitives::__anon331
TEST	./platform/primitives/parameter_stack_test.cc	/^TEST(ParameterStackTest, PushCopyTest) {$/;"	f	namespace:asylo::primitives::__anon77
TEST	./platform/primitives/parameter_stack_test.cc	/^TEST(ParameterStackTest, PushPopMixture) {$/;"	f	namespace:asylo::primitives::__anon331
TEST	./platform/primitives/parameter_stack_test.cc	/^TEST(ParameterStackTest, PushPopMixture) {$/;"	f	namespace:asylo::primitives::__anon77
TEST	./platform/primitives/parameter_stack_test.cc	/^TEST(ParameterStackTest, PushPopSpans) {$/;"	f	namespace:asylo::primitives::__anon331
TEST	./platform/primitives/parameter_stack_test.cc	/^TEST(ParameterStackTest, PushPopSpans) {$/;"	f	namespace:asylo::primitives::__anon77
TEST	./platform/primitives/primitive_status_test.cc	/^TEST(PrimitiveStatusTest, PrimitiveStatusFromLengthAndSize) {$/;"	f	namespace:asylo::primitives::__anon332
TEST	./platform/primitives/primitive_status_test.cc	/^TEST(PrimitiveStatusTest, PrimitiveStatusFromLengthAndSize) {$/;"	f	namespace:asylo::primitives::__anon78
TEST	./platform/primitives/util/dispatch_table_test.cc	/^TEST(DispatchTableTest, HandlersInMultipleThreads) {$/;"	f	namespace:asylo::primitives::__anon343
TEST	./platform/primitives/util/dispatch_table_test.cc	/^TEST(DispatchTableTest, HandlersInMultipleThreads) {$/;"	f	namespace:asylo::primitives::__anon89
TEST	./platform/primitives/util/dispatch_table_test.cc	/^TEST(DispatchTableTest, HandlersInvocation) {$/;"	f	namespace:asylo::primitives::__anon343
TEST	./platform/primitives/util/dispatch_table_test.cc	/^TEST(DispatchTableTest, HandlersInvocation) {$/;"	f	namespace:asylo::primitives::__anon89
TEST	./platform/primitives/util/dispatch_table_test.cc	/^TEST(DispatchTableTest, HandlersRegistration) {$/;"	f	namespace:asylo::primitives::__anon343
TEST	./platform/primitives/util/dispatch_table_test.cc	/^TEST(DispatchTableTest, HandlersRegistration) {$/;"	f	namespace:asylo::primitives::__anon89
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, EmptyWriterReaderTest) {$/;"	f	namespace:asylo::primitives::__anon342
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, EmptyWriterReaderTest) {$/;"	f	namespace:asylo::primitives::__anon88
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, PushByReferenceTest) {$/;"	f	namespace:asylo::primitives::__anon342
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, PushByReferenceTest) {$/;"	f	namespace:asylo::primitives::__anon88
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, PushPopDataByValue) {$/;"	f	namespace:asylo::primitives::__anon342
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, PushPopDataByValue) {$/;"	f	namespace:asylo::primitives::__anon88
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, PushPopNums) {$/;"	f	namespace:asylo::primitives::__anon342
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, PushPopNums) {$/;"	f	namespace:asylo::primitives::__anon88
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, PushPopStrings) {$/;"	f	namespace:asylo::primitives::__anon342
TEST	./platform/primitives/util/message_test.cc	/^TEST(MessageTest, PushPopStrings) {$/;"	f	namespace:asylo::primitives::__anon88
TEST	./platform/primitives/x86/spin_lock_test.cc	/^TEST(LockTest, ManyThreadsTest) {$/;"	f	namespace:asylo::__anon333
TEST	./platform/primitives/x86/spin_lock_test.cc	/^TEST(LockTest, ManyThreadsTest) {$/;"	f	namespace:asylo::__anon79
TEST	./platform/storage/utils/offset_translator_test.cc	/^TEST(CreateFailureTest, OffsetTranslatorTest) {$/;"	f	namespace:asylo::__anon350
TEST	./platform/storage/utils/offset_translator_test.cc	/^TEST(CreateFailureTest, OffsetTranslatorTest) {$/;"	f	namespace:asylo::__anon96
TEST	./platform/storage/utils/record_store_test.cc	/^TEST(RecordStoreTest, Eviction) {$/;"	f	namespace:asylo::__anon349
TEST	./platform/storage/utils/record_store_test.cc	/^TEST(RecordStoreTest, Eviction) {$/;"	f	namespace:asylo::__anon95
TEST	./platform/storage/utils/record_store_test.cc	/^TEST(RecordStoreTest, Flush) {$/;"	f	namespace:asylo::__anon349
TEST	./platform/storage/utils/record_store_test.cc	/^TEST(RecordStoreTest, Flush) {$/;"	f	namespace:asylo::__anon95
TEST	./platform/storage/utils/record_store_test.cc	/^TEST(RecordStoreTest, WriteRead) {$/;"	f	namespace:asylo::__anon349
TEST	./platform/storage/utils/record_store_test.cc	/^TEST(RecordStoreTest, WriteRead) {$/;"	f	namespace:asylo::__anon95
TEST	./platform/storage/utils/untrusted_file_test.cc	/^TEST(UntrustedFileTest, WriteHoles) {$/;"	f	namespace:asylo::__anon352
TEST	./platform/storage/utils/untrusted_file_test.cc	/^TEST(UntrustedFileTest, WriteHoles) {$/;"	f	namespace:asylo::__anon98
TEST	./platform/storage/utils/untrusted_file_test.cc	/^TEST(UntrustedFileTest, WriteRead) {$/;"	f	namespace:asylo::__anon352
TEST	./platform/storage/utils/untrusted_file_test.cc	/^TEST(UntrustedFileTest, WriteRead) {$/;"	f	namespace:asylo::__anon98
TEST	./platform/system/cmath_test.cc	/^TEST(CmathTest, LongDoubleFunctions) {$/;"	f	namespace:__anon289
TEST	./platform/system/cmath_test.cc	/^TEST(CmathTest, LongDoubleFunctions) {$/;"	f	namespace:__anon35
TEST	./platform/system/cmath_test.cc	/^TEST(CmathTest, Tr1DoubleFunctions) {$/;"	f	namespace:__anon289
TEST	./platform/system/cmath_test.cc	/^TEST(CmathTest, Tr1DoubleFunctions) {$/;"	f	namespace:__anon35
TEST	./platform/system/cmath_test.cc	/^TEST(CmathTest, Tr1FloatFunctions) {$/;"	f	namespace:__anon289
TEST	./platform/system/cmath_test.cc	/^TEST(CmathTest, Tr1FloatFunctions) {$/;"	f	namespace:__anon35
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, BoundedInTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, BoundedInTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, BoundedOutTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, BoundedOutTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, FixedDataSizeMissMatchTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, FixedDataSizeMissMatchTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, FixedTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, FixedTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, MessageFlagBothRequestResponseTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, MessageFlagBothRequestResponseTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, MessageHeaderNotCompleteTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, MessageHeaderNotCompleteTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, MessageMagicNumberMissMatchTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, MessageMagicNumberMissMatchTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, MessageSystemCallNumberInvalidTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, MessageSystemCallNumberInvalidTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, NegativeSizeTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, NegativeSizeTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, NonNullTerminatedStringParameterTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, NonNullTerminatedStringParameterTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, NullPointerTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, NullPointerTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, OffsetDriftTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, OffsetDriftTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, OffsetOverflowFromUint64Test) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, OffsetOverflowFromUint64Test) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, OffsetOverflowTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, OffsetOverflowTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, ScalarDataSizeMissMatchTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, ScalarDataSizeMissMatchTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, ScalarInTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, ScalarInTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, StringDataSizeMissMatchTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, StringDataSizeMissMatchTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, StringInTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, StringInTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, StringOutTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, StringOutTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, ZeroParameterTest) {$/;"	f	namespace:asylo::system_call::__anon122
TEST	./platform/system_call/message_test.cc	/^TEST(MessageTest, ZeroParameterTest) {$/;"	f	namespace:asylo::system_call::__anon376
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, InvalidSystemCallDescriptor) {$/;"	f	namespace:asylo::system_call::__anon120
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, InvalidSystemCallDescriptor) {$/;"	f	namespace:asylo::system_call::__anon374
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, InvalidSystemCallParameter) {$/;"	f	namespace:asylo::system_call::__anon120
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, InvalidSystemCallParameter) {$/;"	f	namespace:asylo::system_call::__anon374
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, SanityCheck) {$/;"	f	namespace:asylo::system_call::__anon120
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, SanityCheck) {$/;"	f	namespace:asylo::system_call::__anon374
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, Summarize) {$/;"	f	namespace:asylo::system_call::__anon120
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, Summarize) {$/;"	f	namespace:asylo::system_call::__anon374
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, ValidParameterDescriptor) {$/;"	f	namespace:asylo::system_call::__anon120
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, ValidParameterDescriptor) {$/;"	f	namespace:asylo::system_call::__anon374
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, ValidSystemCallDescriptor) {$/;"	f	namespace:asylo::system_call::__anon120
TEST	./platform/system_call/metadata_test.cc	/^TEST(MetaDataTest, ValidSystemCallDescriptor) {$/;"	f	namespace:asylo::system_call::__anon374
TEST	./platform/system_call/serialize_test.cc	/^TEST(SerializeTest, SerializeRequestInvalidSysnoTest) {$/;"	f	namespace:asylo::system_call::__anon114
TEST	./platform/system_call/serialize_test.cc	/^TEST(SerializeTest, SerializeRequestInvalidSysnoTest) {$/;"	f	namespace:asylo::system_call::__anon368
TEST	./platform/system_call/serialize_test.cc	/^TEST(SerializeTest, SerializeResponseInvalidSysnoTest) {$/;"	f	namespace:asylo::system_call::__anon114
TEST	./platform/system_call/serialize_test.cc	/^TEST(SerializeTest, SerializeResponseInvalidSysnoTest) {$/;"	f	namespace:asylo::system_call::__anon368
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, AbortOnCallbackFailure) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, AbortOnCallbackFailure) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, AbortOnResponseMessageFailure) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, AbortOnResponseMessageFailure) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, AbortOnSerializationFailure) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, AbortOnSerializationFailure) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, ArrayOutTest) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, ArrayOutTest) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, BufferOutTest) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, BufferOutTest) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, CustomExtentAllocatorTest) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, CustomExtentAllocatorTest) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, FixedOutTest) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, FixedOutTest) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, NullBufferTest) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, NullBufferTest) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, ScalarInTest) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, ScalarInTest) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, StringInTest) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, StringInTest) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, SysCallNumbers) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, SysCallNumbers) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, ZeroParameterTest) {$/;"	f	namespace:asylo::system_call::__anon115
TEST	./platform/system_call/system_call_test.cc	/^TEST(SystemCallTest, ZeroParameterTest) {$/;"	f	namespace:asylo::system_call::__anon369
TEST	./platform/system_call/type_conversions/manual_types_functions_test.cc	/^TEST(ManualTypesFunctionsTest, SocketTypeTest) {$/;"	f	namespace:asylo::system_call::__anon124
TEST	./platform/system_call/type_conversions/manual_types_functions_test.cc	/^TEST(ManualTypesFunctionsTest, SocketTypeTest) {$/;"	f	namespace:asylo::system_call::__anon378
TEST	./test/misc/condvar_test.cc	/^TEST(EnclaveCondVar, IllegalPointer) {$/;"	f	namespace:asylo::__anon194
TEST	./test/misc/condvar_test.cc	/^TEST(EnclaveCondVar, IllegalPointer) {$/;"	f	namespace:asylo::__anon448
TEST	./test/misc/condvar_test.cc	/^TEST(EnclaveCondVar, Timeout) {$/;"	f	namespace:asylo::__anon194
TEST	./test/misc/condvar_test.cc	/^TEST(EnclaveCondVar, Timeout) {$/;"	f	namespace:asylo::__anon448
TEST	./test/misc/embedded_enclave_test_driver.cc	/^TEST(EmbeddedEnclaveTest, EnclaveLoadsAndRuns) {$/;"	f	namespace:asylo::__anon195
TEST	./test/misc/embedded_enclave_test_driver.cc	/^TEST(EmbeddedEnclaveTest, EnclaveLoadsAndRuns) {$/;"	f	namespace:asylo::__anon449
TEST	./test/misc/fail_finalize_enclave_test.cc	/^TEST(FailFinalizeEnclaveTest, FailFinalize) {$/;"	f	namespace:asylo::__anon200
TEST	./test/misc/fail_finalize_enclave_test.cc	/^TEST(FailFinalizeEnclaveTest, FailFinalize) {$/;"	f	namespace:asylo::__anon454
TEST	./test/misc/malloc_stress_test.cc	/^TEST(MallocTest, EnclaveMalloc) {$/;"	f	namespace:asylo::__anon196
TEST	./test/misc/malloc_stress_test.cc	/^TEST(MallocTest, EnclaveMalloc) {$/;"	f	namespace:asylo::__anon450
TEST	./test/misc/memory_layout_test.cc	/^TEST(EnclaveMemoryLayout, MemoryLayout) {$/;"	f	namespace:asylo::__anon202
TEST	./test/misc/memory_layout_test.cc	/^TEST(EnclaveMemoryLayout, MemoryLayout) {$/;"	f	namespace:asylo::__anon456
TEST	./test/misc/mutex_test.cc	/^TEST(RunWithMutexLockTest, EnclaveMutex) {$/;"	f	namespace:asylo::__anon189
TEST	./test/misc/mutex_test.cc	/^TEST(RunWithMutexLockTest, EnclaveMutex) {$/;"	f	namespace:asylo::__anon443
TEST	./test/misc/mutex_test.cc	/^TEST(RunWithMutexTest, EnclaveMutex) {$/;"	f	namespace:asylo::__anon189
TEST	./test/misc/mutex_test.cc	/^TEST(RunWithMutexTest, EnclaveMutex) {$/;"	f	namespace:asylo::__anon443
TEST	./test/misc/mutex_test.cc	/^TEST(RunWithTryLockTest, EnclaveMutex) {$/;"	f	namespace:asylo::__anon189
TEST	./test/misc/mutex_test.cc	/^TEST(RunWithTryLockTest, EnclaveMutex) {$/;"	f	namespace:asylo::__anon443
TEST	./test/misc/mutex_test.cc	/^TEST(RunWithUnguardedTest, EnclaveMutex) {$/;"	f	namespace:asylo::__anon189
TEST	./test/misc/mutex_test.cc	/^TEST(RunWithUnguardedTest, EnclaveMutex) {$/;"	f	namespace:asylo::__anon443
TEST	./test/misc/nanosleep_test.cc	/^TEST(NanosleepTest, Nanosleep) {$/;"	f	namespace:asylo::__anon210
TEST	./test/misc/nanosleep_test.cc	/^TEST(NanosleepTest, Nanosleep) {$/;"	f	namespace:asylo::__anon464
TEST	./test/misc/raise_signal_test.cc	/^TEST(SignalTest, RaiseSignal) {$/;"	f	namespace:asylo::__anon199
TEST	./test/misc/raise_signal_test.cc	/^TEST(SignalTest, RaiseSignal) {$/;"	f	namespace:asylo::__anon453
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, GetValue) {$/;"	f	namespace:asylo::__anon205
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, GetValue) {$/;"	f	namespace:asylo::__anon459
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, InitialValue) {$/;"	f	namespace:asylo::__anon205
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, InitialValue) {$/;"	f	namespace:asylo::__anon459
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, InvalidSemPointer) {$/;"	f	namespace:asylo::__anon205
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, InvalidSemPointer) {$/;"	f	namespace:asylo::__anon459
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, PostAndWait) {$/;"	f	namespace:asylo::__anon205
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, PostAndWait) {$/;"	f	namespace:asylo::__anon459
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, SharedNotAllowed) {$/;"	f	namespace:asylo::__anon205
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, SharedNotAllowed) {$/;"	f	namespace:asylo::__anon459
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, Timeout) {$/;"	f	namespace:asylo::__anon205
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, Timeout) {$/;"	f	namespace:asylo::__anon459
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, TimeoutWithReadySempahore) {$/;"	f	namespace:asylo::__anon205
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, TimeoutWithReadySempahore) {$/;"	f	namespace:asylo::__anon459
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, TryWait) {$/;"	f	namespace:asylo::__anon205
TEST	./test/misc/sem_test.cc	/^TEST(EnclaveSem, TryWait) {$/;"	f	namespace:asylo::__anon459
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, DetachThread) {$/;"	f	namespace:asylo::__anon208
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, DetachThread) {$/;"	f	namespace:asylo::__anon462
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, DetachedThread) {$/;"	f	namespace:asylo::__anon208
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, DetachedThread) {$/;"	f	namespace:asylo::__anon462
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, EnclaveThread) {$/;"	f	namespace:asylo::__anon208
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, EnclaveThread) {$/;"	f	namespace:asylo::__anon462
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, ThreadKeys) {$/;"	f	namespace:asylo::__anon208
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, ThreadKeys) {$/;"	f	namespace:asylo::__anon462
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, ThreadSpecific) {$/;"	f	namespace:asylo::__anon208
TEST	./test/misc/threaded_test.cc	/^TEST(ThreadedTest, ThreadSpecific) {$/;"	f	namespace:asylo::__anon462
TEST	./test/util/mock_test.cc	/^TEST(MockTest, MockEnclaveClient) { MockEnclaveClient loader; }$/;"	f	namespace:asylo::__anon217
TEST	./test/util/mock_test.cc	/^TEST(MockTest, MockEnclaveClient) { MockEnclaveClient loader; }$/;"	f	namespace:asylo::__anon471
TEST	./test/util/mock_test.cc	/^TEST(MockTest, MockEnclaveLoader) { MockEnclaveLoader loader; }$/;"	f	namespace:asylo::__anon217
TEST	./test/util/mock_test.cc	/^TEST(MockTest, MockEnclaveLoader) { MockEnclaveLoader loader; }$/;"	f	namespace:asylo::__anon471
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsConvertsNonMatcherArgsToEqMatchers) {$/;"	f	namespace:asylo::__anon218
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsConvertsNonMatcherArgsToEqMatchers) {$/;"	f	namespace:asylo::__anon472
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsDoesNotExplainSuccessfulMatch) {$/;"	f	namespace:asylo::__anon218
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsDoesNotExplainSuccessfulMatch) {$/;"	f	namespace:asylo::__anon472
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsDoesNotMatchIfValueMatcherFails) {$/;"	f	namespace:asylo::__anon218
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsDoesNotMatchIfValueMatcherFails) {$/;"	f	namespace:asylo::__anon472
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsDoesNotMatchNonOkStatus) {$/;"	f	namespace:asylo::__anon218
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsDoesNotMatchNonOkStatus) {$/;"	f	namespace:asylo::__anon472
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsExplainsNonMatchCorrectly) {$/;"	f	namespace:asylo::__anon218
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsExplainsNonMatchCorrectly) {$/;"	f	namespace:asylo::__anon472
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsMatchesOkStatusWithMatchingValue) {$/;"	f	namespace:asylo::__anon218
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest, IsOkAndHoldsMatchesOkStatusWithMatchingValue) {$/;"	f	namespace:asylo::__anon472
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest,$/;"	f	namespace:asylo::__anon218
TEST	./test/util/status_matchers_test.cc	/^TEST(StatusMatchersTest,$/;"	f	namespace:asylo::__anon472
TEST	./util/binary_search_test.cc	/^TEST(BinarySearchTest, ConstantsSearchTest) {$/;"	f	namespace:asylo::__anon227
TEST	./util/binary_search_test.cc	/^TEST(BinarySearchTest, ConstantsSearchTest) {$/;"	f	namespace:asylo::__anon481
TEST	./util/cleanup_test.cc	/^TEST(CleanupTest, DestructorCallsCleanupFunction) {$/;"	f	namespace:asylo::__anon230
TEST	./util/cleanup_test.cc	/^TEST(CleanupTest, DestructorCallsCleanupFunction) {$/;"	f	namespace:asylo::__anon484
TEST	./util/cleanup_test.cc	/^TEST(CleanupTest, EmptyCleanupDoesNotThrowExceptions) { Cleanup do_nothing; }$/;"	f	namespace:asylo::__anon230
TEST	./util/cleanup_test.cc	/^TEST(CleanupTest, EmptyCleanupDoesNotThrowExceptions) { Cleanup do_nothing; }$/;"	f	namespace:asylo::__anon484
TEST	./util/cleanup_test.cc	/^TEST(CleanupTest, ReleasePreventsDestructorCleanupFunctionCall) {$/;"	f	namespace:asylo::__anon230
TEST	./util/cleanup_test.cc	/^TEST(CleanupTest, ReleasePreventsDestructorCleanupFunctionCall) {$/;"	f	namespace:asylo::__anon484
TEST	./util/elf_reader_test.cc	/^TEST(ElfReaderFixturelessTest, ReturnsAppropriateErrorIfFileTooSmall) {$/;"	f	namespace:asylo::__anon226
TEST	./util/elf_reader_test.cc	/^TEST(ElfReaderFixturelessTest, ReturnsAppropriateErrorIfFileTooSmall) {$/;"	f	namespace:asylo::__anon480
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, GetFdFlagsReflectsAddFdFlagsAndRemoveFdFlagsChanges) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, GetFdFlagsReflectsAddFdFlagsAndRemoveFdFlagsChanges) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, GetFdFlagsReflectsSetFdFlagsChanges) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, GetFdFlagsReflectsSetFdFlagsChanges) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllNoBlockWriteAllNoBlockBlockingPipe) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllNoBlockWriteAllNoBlockBlockingPipe) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllNoBlockWriteAllNoBlockNonBlockingPipe) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllNoBlockWriteAllNoBlockNonBlockingPipe) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllNoBlockWriteAllNoBlockNonBlockingPipeMultithreaded) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllNoBlockWriteAllNoBlockNonBlockingPipeMultithreaded) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllWriteAllBlockingPipe) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllWriteAllBlockingPipe) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllWriteAllBlockingPipeMultithreaded) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllWriteAllBlockingPipeMultithreaded) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllWriteAllNonBlockingPipe) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllWriteAllNonBlockingPipe) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllWriteAllNonBlockingPipeMultithreaded) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, ReadAllWriteAllNonBlockingPipeMultithreaded) {$/;"	f	namespace:asylo::__anon494
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, WaitForEventsBlocksUntilEventsOccur) {$/;"	f	namespace:asylo::__anon240
TEST	./util/fd_utils_test.cc	/^TEST(FdUtilsTest, WaitForEventsBlocksUntilEventsOccur) {$/;"	f	namespace:asylo::__anon494
TEST	./util/file_mapping_test.cc	/^TEST(FileMappingFixturelessTest, DefaultConstructedMappingDoesntCrash) {$/;"	f	namespace:asylo::__anon243
TEST	./util/file_mapping_test.cc	/^TEST(FileMappingFixturelessTest, DefaultConstructedMappingDoesntCrash) {$/;"	f	namespace:asylo::__anon497
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, HeldReaderLocksDoNotPreventAcquiringOtherReaderLocks) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, HeldReaderLocksDoNotPreventAcquiringOtherReaderLocks) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, HeldReaderLocksPreventAcquiringWriterLocks) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, HeldReaderLocksPreventAcquiringWriterLocks) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, HeldWriterLocksPreventAcquiringOtherWriterLocks) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, HeldWriterLocksPreventAcquiringOtherWriterLocks) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, HeldWriterLocksPreventAcquiringReaderLocks) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, HeldWriterLocksPreventAcquiringReaderLocks) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockViewAwaitLocksAfterConditionIsTrue) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockViewAwaitLocksAfterConditionIsTrue) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockWhenLocksAfterConditionIsTrue) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockWhenLocksAfterConditionIsTrue) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockedViewObjectsCanBeMoveAssignedSafely) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockedViewObjectsCanBeMoveAssignedSafely) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockedViewObjectsCanBeMoveConstructedSafely) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockedViewObjectsCanBeMoveConstructedSafely) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockingStressTest) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, LockingStressTest) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, ReaderLockViewAwaitLocksAfterConditionIsTrue) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, ReaderLockViewAwaitLocksAfterConditionIsTrue) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, ReaderLockWhenLocksAfterConditionIsTrue) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, ReaderLockWhenLocksAfterConditionIsTrue) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, ReaderLockedViewObjectsCanBeMoveAssignedSafely) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, ReaderLockedViewObjectsCanBeMoveAssignedSafely) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, ReaderLockedViewObjectsCanBeMoveConstructedSafely) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, ReaderLockedViewObjectsCanBeMoveConstructedSafely) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, WritesAreVisibleToReadsAfterMoveAssignment) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, WritesAreVisibleToReadsAfterMoveAssignment) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, WritesAreVisibleToReadsAfterMoveConstruction) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, WritesAreVisibleToReadsAfterMoveConstruction) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, WritesFromAllThreadsAreVisibleFromALaterRelease) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, WritesFromAllThreadsAreVisibleFromALaterRelease) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, WritesFromAllThreadsAreVisibleFromLaterReads) {$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest, WritesFromAllThreadsAreVisibleFromLaterReads) {$/;"	f	namespace:asylo::__anon488
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest,$/;"	f	namespace:asylo::__anon234
TEST	./util/mutex_guarded_test.cc	/^TEST(MutexGuardedTest,$/;"	f	namespace:asylo::__anon488
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathManyArgs1) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathManyArgs1) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathManyArgs2) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathManyArgs2) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathNoArgs) { EXPECT_EQ(JoinPath(), ""); }$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathNoArgs) { EXPECT_EQ(JoinPath(), ""); }$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathOneArg) { EXPECT_EQ(JoinPath("foo"), "foo"); }$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathOneArg) { EXPECT_EQ(JoinPath("foo"), "foo"); }$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathThreeArgsNoSlash) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathThreeArgsNoSlash) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathThreeArgsWithSlash) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathThreeArgsWithSlash) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsFirstEmpty) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsFirstEmpty) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsNoSlash) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsNoSlash) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsSecondEmpty) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsSecondEmpty) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsWithFirstSlash) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsWithFirstSlash) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsWithSecondSlash) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsWithSecondSlash) {$/;"	f	namespace:asylo::__anon491
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsWithWithTwoSlashes) {$/;"	f	namespace:asylo::__anon237
TEST	./util/path_test.cc	/^TEST(PathTest, JoinPathTwoArgsWithWithTwoSlashes) {$/;"	f	namespace:asylo::__anon491
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetArrayFailsOnNonArrays) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetArrayFailsOnNonArrays) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetArraySucceedsOnArrays) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetArraySucceedsOnArrays) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetNumberFailsOnNonNumbers) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetNumberFailsOnNonNumbers) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetNumberSucceedsOnNumbers) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetNumberSucceedsOnNumbers) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetObjectFailsOnNonObjects) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetObjectFailsOnNonObjects) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetObjectSucceedsOnObjects) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetObjectSucceedsOnObjects) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetStringFailsOnNonStrings) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetStringFailsOnNonStrings) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetStringSucceedsOnStrings) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonGetStringSucceedsOnStrings) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonObjectGetFieldFailsIfTheFieldIsAbsent) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonObjectGetFieldFailsIfTheFieldIsAbsent) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonObjectGetFieldSucceedsIfTheFieldIsPresent) {$/;"	f	namespace:asylo::sgx::__anon232
TEST	./util/proto_struct_util_test.cc	/^TEST(JsonUtilTest, JsonObjectGetFieldSucceedsIfTheFieldIsPresent) {$/;"	f	namespace:asylo::sgx::__anon486
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, AssignsMultipleVariablesInSequence) {$/;"	f	namespace:asylo::__anon229
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, AssignsMultipleVariablesInSequence) {$/;"	f	namespace:asylo::__anon483
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, AssignsRepeatedlyToSingleVariable) {$/;"	f	namespace:asylo::__anon229
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, AssignsRepeatedlyToSingleVariable) {$/;"	f	namespace:asylo::__anon483
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, DoesNotAssignUniquePtrOnErrorStatus) {$/;"	f	namespace:asylo::__anon229
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, DoesNotAssignUniquePtrOnErrorStatus) {$/;"	f	namespace:asylo::__anon483
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, MovesUniquePtr) {$/;"	f	namespace:asylo::__anon229
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, MovesUniquePtr) {$/;"	f	namespace:asylo::__anon483
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, MovesUniquePtrRepeatedlyToSingleVariable) {$/;"	f	namespace:asylo::__anon229
TEST	./util/status_macros_test.cc	/^TEST(AssignOrReturn, MovesUniquePtrRepeatedlyToSingleVariable) {$/;"	f	namespace:asylo::__anon483
TEST	./util/status_macros_test.cc	/^TEST(ReturnIfError, ReturnsOnErrorFromLambda) {$/;"	f	namespace:asylo::__anon229
TEST	./util/status_macros_test.cc	/^TEST(ReturnIfError, ReturnsOnErrorFromLambda) {$/;"	f	namespace:asylo::__anon483
TEST	./util/status_macros_test.cc	/^TEST(ReturnIfError, ReturnsOnErrorStatus) {$/;"	f	namespace:asylo::__anon229
TEST	./util/status_macros_test.cc	/^TEST(ReturnIfError, ReturnsOnErrorStatus) {$/;"	f	namespace:asylo::__anon483
TEST	./util/status_test.cc	/^TEST(StatusTest, CanonicalCodeNonOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, CanonicalCodeNonOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, CanonicalCodeNonOkNonCanonical) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, CanonicalCodeNonOkNonCanonical) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, CanonicalCodeOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, CanonicalCodeOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ConstructFromGrpcStatusNonOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ConstructFromGrpcStatusNonOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ConstructFromGrpcStatusOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ConstructFromGrpcStatusOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ConstructorWithErrorSpaceNotOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ConstructorWithErrorSpaceNotOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ConstructorWithErrorSpaceOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ConstructorWithErrorSpaceOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ConvertToGrpcStatusNonOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ConvertToGrpcStatusNonOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ConvertToGrpcStatusNonOkNonCanonical) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ConvertToGrpcStatusNonOkNonCanonical) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ConvertToGrpcStatusOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ConvertToGrpcStatusOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, CopyConstructorTestNonOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, CopyConstructorTestNonOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, CopyConstructorTestOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, CopyConstructorTestOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, Equality) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, Equality) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorCodeNonOkStatus) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorCodeNonOkStatus) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorCodeOkStatus) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorCodeOkStatus) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorMessageNonOkStatus) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorMessageNonOkStatus) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorMessageOkStatus) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorMessageOkStatus) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorSpaceNonOkStatus) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorSpaceNonOkStatus) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorSpaceOkStatus) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, GetErrorSpaceOkStatus) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, Inequality) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, Inequality) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, IsNegativeTest) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, IsNegativeTest) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, IsOkMatcher) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, IsOkMatcher) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, IsPositiveTest) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, IsPositiveTest) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, MoveAssignmentTestNonOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, MoveAssignmentTestNonOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, MoveAssignmentTestOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, MoveAssignmentTestOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, MoveConstructorTest) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, MoveConstructorTest) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, OkFailure) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, OkFailure) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, OkSuccess) { EXPECT_TRUE(::asylo::Status::OkStatus().ok()); }$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, OkSuccess) { EXPECT_TRUE(::asylo::Status::OkStatus().ok()); }$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromNonOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromNonOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromNonOkInvalidCanonicalCode) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromNonOkInvalidCanonicalCode) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromUnknownErrorSpace) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromUnknownErrorSpace) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromUnknownErrorSpaceInvalid) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromUnknownErrorSpaceInvalid) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromUnknownErrorSpaceMissingCanonicalCode) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, RestoreFromUnknownErrorSpaceMissingCanonicalCode) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, SaveTo) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, SaveTo) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, SaveToRestoreFromEndToEnd) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, SaveToRestoreFromEndToEnd) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, StatusIsMatcher) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, StatusIsMatcher) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ToCanonicalNonOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ToCanonicalNonOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ToCanonicalNonOkNonCanonical) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ToCanonicalNonOkNonCanonical) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ToCanonicalOk) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ToCanonicalOk) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ToStringNonOkStatus) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ToStringNonOkStatus) {$/;"	f	namespace:asylo::__anon496
TEST	./util/status_test.cc	/^TEST(StatusTest, ToStringOkStatus) {$/;"	f	namespace:asylo::__anon242
TEST	./util/status_test.cc	/^TEST(StatusTest, ToStringOkStatus) {$/;"	f	namespace:asylo::__anon496
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, InitializationMoveOnlyType) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, InitializationMoveOnlyType) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, MoveAssignmentMoveOnlyType) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, MoveAssignmentMoveOnlyType) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, MoveConstructorMoveOnlyType) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, MoveConstructorMoveOnlyType) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateCopyAssign) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateCopyAssign) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateCopyConstruct) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateCopyConstruct) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateMoveAssign) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateMoveAssign) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateMoveConstruct) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateMoveConstruct) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateValueCopyConstruction) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateValueCopyConstruction) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateValueMoveConstruction) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, TemplateValueMoveConstruction) {$/;"	f	namespace:asylo::__anon485
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, ValueOrDieMovedValue) {$/;"	f	namespace:asylo::__anon231
TEST	./util/statusor_test.cc	/^TEST(StatusOrTest, ValueOrDieMovedValue) {$/;"	f	namespace:asylo::__anon485
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, ForwardsFailureStatusFromEnterAndRun) {$/;"	f	namespace:asylo::__anon184
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, ForwardsFailureStatusFromEnterAndRun) {$/;"	f	namespace:asylo::__anon438
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, ForwardsFailureStatusFromLoadEnclave) {$/;"	f	namespace:asylo::__anon184
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, ForwardsFailureStatusFromLoadEnclave) {$/;"	f	namespace:asylo::__anon438
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, PropagatesApplicationConfig) {$/;"	f	namespace:asylo::__anon184
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, PropagatesApplicationConfig) {$/;"	f	namespace:asylo::__anon438
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, PropagatesCommandLineArgs) {$/;"	f	namespace:asylo::__anon184
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, PropagatesCommandLineArgs) {$/;"	f	namespace:asylo::__anon438
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, PropagatesMainReturnValue) {$/;"	f	namespace:asylo::__anon184
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest, PropagatesMainReturnValue) {$/;"	f	namespace:asylo::__anon438
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest,$/;"	f	namespace:asylo::__anon184
TEST_F	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^TEST_F(ApplicationWrapperDriverMainTest,$/;"	f	namespace:asylo::__anon438
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, FinalizeLogsWarningIfNoRun) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, FinalizeLogsWarningIfNoRun) {$/;"	f	namespace:asylo::__anon436
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, ManyArgs) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, ManyArgs) {$/;"	f	namespace:asylo::__anon436
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, ManyArgsAndEnvironmentVariables) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, ManyArgsAndEnvironmentVariables) {$/;"	f	namespace:asylo::__anon436
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoArgs) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoArgs) {$/;"	f	namespace:asylo::__anon436
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoArgsAndEnvironmentVariables) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoArgsAndEnvironmentVariables) {$/;"	f	namespace:asylo::__anon436
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoArgsExtension) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoArgsExtension) {$/;"	f	namespace:asylo::__anon436
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoMultipleRun) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoMultipleRun) {$/;"	f	namespace:asylo::__anon436
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoMultipleRunFromMultipleThreads) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, NoMultipleRunFromMultipleThreads) {$/;"	f	namespace:asylo::__anon436
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, OneArg) {$/;"	f	namespace:asylo::__anon182
TEST_F	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^TEST_F(ApplicationWrapperEnclaveTest, OneArg) {$/;"	f	namespace:asylo::__anon436
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, CreateSigningKeyFromPemMatchesDer) {$/;"	f	namespace:asylo::__anon19
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, CreateSigningKeyFromPemMatchesDer) {$/;"	f	namespace:asylo::__anon273
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, CreateSigningKeyWithBadGroupFails) {$/;"	f	namespace:asylo::__anon19
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, CreateSigningKeyWithBadGroupFails) {$/;"	f	namespace:asylo::__anon273
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, RestoreFromAndSerializeToDerSigningKey) {$/;"	f	namespace:asylo::__anon19
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, RestoreFromAndSerializeToDerSigningKey) {$/;"	f	namespace:asylo::__anon273
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, SerializeToDerAndRestoreSigningKey) {$/;"	f	namespace:asylo::__anon19
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, SerializeToDerAndRestoreSigningKey) {$/;"	f	namespace:asylo::__anon273
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, SignAndVerify) {$/;"	f	namespace:asylo::__anon19
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, SignAndVerify) {$/;"	f	namespace:asylo::__anon273
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, SignatureScheme) {$/;"	f	namespace:asylo::__anon19
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest, SignatureScheme) {$/;"	f	namespace:asylo::__anon273
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest,$/;"	f	namespace:asylo::__anon19
TEST_F	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_F(EcdsaP256Sha256SigningKeyTest,$/;"	f	namespace:asylo::__anon273
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainBadChars) {$/;"	f	namespace:asylo::__anon188
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainBadChars) {$/;"	f	namespace:asylo::__anon442
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainCreate) {$/;"	f	namespace:asylo::__anon188
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainCreate) {$/;"	f	namespace:asylo::__anon442
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainReadAll0) {$/;"	f	namespace:asylo::__anon188
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainReadAll0) {$/;"	f	namespace:asylo::__anon442
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainReadAllF) {$/;"	f	namespace:asylo::__anon188
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainReadAllF) {$/;"	f	namespace:asylo::__anon442
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainTooLong) {$/;"	f	namespace:asylo::__anon188
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainTooLong) {$/;"	f	namespace:asylo::__anon442
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainTooShort) {$/;"	f	namespace:asylo::__anon188
TEST_F	./daemon/identity/attestation_domain_test.cc	/^TEST_F(AttestationDomainTest, AttestationDomainTooShort) {$/;"	f	namespace:asylo::__anon442
TEST_F	./examples/grpc_server/grpc_server_test.cc	/^TEST_F(GrpcServerTest, AsyloTranslatesToSanctuary) {$/;"	f	namespace:examples::grpc_server::__anon244
TEST_F	./examples/grpc_server/grpc_server_test.cc	/^TEST_F(GrpcServerTest, AsyloTranslatesToSanctuary) {$/;"	f	namespace:examples::grpc_server::__anon498
TEST_F	./examples/grpc_server/grpc_server_test.cc	/^TEST_F(GrpcServerTest, IstioTranslatesToSail) {$/;"	f	namespace:examples::grpc_server::__anon244
TEST_F	./examples/grpc_server/grpc_server_test.cc	/^TEST_F(GrpcServerTest, IstioTranslatesToSail) {$/;"	f	namespace:examples::grpc_server::__anon498
TEST_F	./examples/grpc_server/grpc_server_test.cc	/^TEST_F(GrpcServerTest, KubernetesTranslatesToHelmsman) {$/;"	f	namespace:examples::grpc_server::__anon244
TEST_F	./examples/grpc_server/grpc_server_test.cc	/^TEST_F(GrpcServerTest, KubernetesTranslatesToHelmsman) {$/;"	f	namespace:examples::grpc_server::__anon498
TEST_F	./examples/grpc_server/grpc_server_test.cc	/^TEST_F(GrpcServerTest, OrkutTranslationNotFound) {$/;"	f	namespace:examples::grpc_server::__anon244
TEST_F	./examples/grpc_server/grpc_server_test.cc	/^TEST_F(GrpcServerTest, OrkutTranslationNotFound) {$/;"	f	namespace:examples::grpc_server::__anon498
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, ArrayAssignAtOutOfBounds) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, ArrayAssignAtOutOfBounds) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionEmptyDest) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionEmptyDest) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionPopulatedDest) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionPopulatedDest) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionsArrayEmptyDest) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionsArrayEmptyDest) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionsArrayLargerDest) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionsArrayLargerDest) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionsArraySmallerDest) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, CopyAssertionDescriptionsArraySmallerDest) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, EmptyArrayAssignAt) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, EmptyArrayAssignAt) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, FreeEmptyAssertionDescription) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, FreeEmptyAssertionDescription) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, FreeEmptyAssertionDescriptionsArray) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, FreeEmptyAssertionDescriptionsArray) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, PopulateAssertionDescription) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, PopulateAssertionDescription) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, PopulatedArrayAssignAt) {$/;"	f	namespace:asylo::__anon259
TEST_F	./grpc/auth/core/assertion_description_test.cc	/^TEST_F(AssertionDescriptionTest, PopulatedArrayAssignAt) {$/;"	f	namespace:asylo::__anon513
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, GetInvalidEnclaveAssertionGenerator) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, GetInvalidEnclaveAssertionGenerator) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, GetInvalidEnclaveAssertionVerifier) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, GetInvalidEnclaveAssertionVerifier) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, GetNullEnclaveAssertionGenerator) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, GetNullEnclaveAssertionGenerator) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, GetNullEnclaveAssertionVerifier) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, GetNullEnclaveAssertionVerifier) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateBadAadSize) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateBadAadSize) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateBadFrameSize) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateBadFrameSize) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateInvalidAcceptedPeerAssertions) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateInvalidAcceptedPeerAssertions) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateInvalidSelfAssertions) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateInvalidSelfAssertions) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateMissingAcceptedPeerIdentities) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateMissingAcceptedPeerIdentities) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateMissingSelfIdentities) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateMissingSelfIdentities) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateSuccess) {$/;"	f	namespace:asylo::__anon257
TEST_F	./grpc/auth/core/ekep_handshaker_util_test.cc	/^TEST_F(EkepHandshakerUtilTest, ValidateSuccess) {$/;"	f	namespace:asylo::__anon511
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateFailsBadIdentityProto) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateFailsBadIdentityProto) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateFailsBadTransportSecurityType) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateFailsBadTransportSecurityType) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateFailsPeerUnauthenticated) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateFailsPeerUnauthenticated) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateFailsUnrecognizedAuthProperty) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateFailsUnrecognizedAuthProperty) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateSuccess) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, CreateSuccess) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, FindEnclaveIdentityNotFound) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, FindEnclaveIdentityNotFound) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, FindEnclaveIdentitySuccess) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, FindEnclaveIdentitySuccess) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, GetRecordProtocol) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, GetRecordProtocol) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, HasEnclaveIdentity) {$/;"	f	namespace:asylo::__anon248
TEST_F	./grpc/auth/enclave_auth_context_test.cc	/^TEST_F(EnclaveAuthContextTest, HasEnclaveIdentity) {$/;"	f	namespace:asylo::__anon502
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, BidirectionalNull) {$/;"	f	namespace:asylo::__anon249
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, BidirectionalNull) {$/;"	f	namespace:asylo::__anon503
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, BidirectionalSgxLocal) {$/;"	f	namespace:asylo::__anon249
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, BidirectionalSgxLocal) {$/;"	f	namespace:asylo::__anon503
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, BidirectionalSgxLocalNull) {$/;"	f	namespace:asylo::__anon249
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, BidirectionalSgxLocalNull) {$/;"	f	namespace:asylo::__anon503
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, SelfNullPeerSgxLocal) {$/;"	f	namespace:asylo::__anon249
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, SelfNullPeerSgxLocal) {$/;"	f	namespace:asylo::__anon503
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, SelfSgxLocalPeerSgxLocalSgxLocal) {$/;"	f	namespace:asylo::__anon249
TEST_F	./grpc/auth/enclave_credentials_options_test.cc	/^TEST_F(EnclaveCredentialsOptionsTest, SelfSgxLocalPeerSgxLocalSgxLocal) {$/;"	f	namespace:asylo::__anon503
TEST_F	./grpc/auth/peer_identity_util_test.cc	/^TEST_F(PeerIdentityUtilTest, ExtractAndMatchEnclaveIdentityFindIdentityFails) {$/;"	f	namespace:asylo::__anon250
TEST_F	./grpc/auth/peer_identity_util_test.cc	/^TEST_F(PeerIdentityUtilTest, ExtractAndMatchEnclaveIdentityFindIdentityFails) {$/;"	f	namespace:asylo::__anon504
TEST_F	./grpc/auth/peer_identity_util_test.cc	/^TEST_F(PeerIdentityUtilTest, ExtractAndMatchEnclaveIdentityMatcherFails) {$/;"	f	namespace:asylo::__anon250
TEST_F	./grpc/auth/peer_identity_util_test.cc	/^TEST_F(PeerIdentityUtilTest, ExtractAndMatchEnclaveIdentityMatcherFails) {$/;"	f	namespace:asylo::__anon504
TEST_F	./grpc/auth/peer_identity_util_test.cc	/^TEST_F(PeerIdentityUtilTest, ExtractAndMatchEnclaveIdentitySucceedsAndMatches) {$/;"	f	namespace:asylo::__anon250
TEST_F	./grpc/auth/peer_identity_util_test.cc	/^TEST_F(PeerIdentityUtilTest, ExtractAndMatchEnclaveIdentitySucceedsAndMatches) {$/;"	f	namespace:asylo::__anon504
TEST_F	./grpc/auth/peer_identity_util_test.cc	/^TEST_F(PeerIdentityUtilTest,$/;"	f	namespace:asylo::__anon250
TEST_F	./grpc/auth/peer_identity_util_test.cc	/^TEST_F(PeerIdentityUtilTest,$/;"	f	namespace:asylo::__anon504
TEST_F	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^TEST_F(BridgeCppToCTest, CopyEnclaveCredentialsOptionsEmpty) {$/;"	f	namespace:asylo::__anon252
TEST_F	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^TEST_F(BridgeCppToCTest, CopyEnclaveCredentialsOptionsEmpty) {$/;"	f	namespace:asylo::__anon506
TEST_F	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^TEST_F(BridgeCppToCTest, CopyEnclaveCredentialsOptionsNonEmpty) {$/;"	f	namespace:asylo::__anon252
TEST_F	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^TEST_F(BridgeCppToCTest, CopyEnclaveCredentialsOptionsNonEmpty) {$/;"	f	namespace:asylo::__anon506
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, AssignOnce) {$/;"	f	namespace:asylo::__anon253
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, AssignOnce) {$/;"	f	namespace:asylo::__anon507
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, CopyLargerString) {$/;"	f	namespace:asylo::__anon253
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, CopyLargerString) {$/;"	f	namespace:asylo::__anon507
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, CopyNullString) {$/;"	f	namespace:asylo::__anon253
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, CopyNullString) {$/;"	f	namespace:asylo::__anon507
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, CopySmallerString) {$/;"	f	namespace:asylo::__anon253
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, CopySmallerString) {$/;"	f	namespace:asylo::__anon507
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, Free) {$/;"	f	namespace:asylo::__anon253
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, Free) {$/;"	f	namespace:asylo::__anon507
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, ReassignLargerString) {$/;"	f	namespace:asylo::__anon253
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, ReassignLargerString) {$/;"	f	namespace:asylo::__anon507
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, ReassignNull) {$/;"	f	namespace:asylo::__anon253
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, ReassignNull) {$/;"	f	namespace:asylo::__anon507
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, ReassignSmallerString) {$/;"	f	namespace:asylo::__anon253
TEST_F	./grpc/auth/util/safe_string_test.cc	/^TEST_F(SafeStringTest, ReassignSmallerString) {$/;"	f	namespace:asylo::__anon507
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, DoubleShutdown) {$/;"	f	namespace:asylo::__anon263
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, DoubleShutdown) {$/;"	f	namespace:asylo::__anon517
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, DoubleWait) {$/;"	f	namespace:asylo::__anon263
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, DoubleWait) {$/;"	f	namespace:asylo::__anon517
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, LaunchAfterShutdown) {$/;"	f	namespace:asylo::__anon263
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, LaunchAfterShutdown) {$/;"	f	namespace:asylo::__anon517
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, ModifyAfterStart) {$/;"	f	namespace:asylo::__anon263
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, ModifyAfterStart) {$/;"	f	namespace:asylo::__anon517
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, PreLaunchState) {$/;"	f	namespace:asylo::__anon263
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, PreLaunchState) {$/;"	f	namespace:asylo::__anon517
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, ShutdownBeforeStart) {$/;"	f	namespace:asylo::__anon263
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, ShutdownBeforeStart) {$/;"	f	namespace:asylo::__anon517
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, TwoServiceSanityTest) {$/;"	f	namespace:asylo::__anon263
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, TwoServiceSanityTest) {$/;"	f	namespace:asylo::__anon517
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, WaitBeforeStart) {$/;"	f	namespace:asylo::__anon263
TEST_F	./grpc/util/grpc_server_launcher_test.cc	/^TEST_F(GrpcServerLauncherTest, WaitBeforeStart) {$/;"	f	namespace:asylo::__anon517
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, CanGenerateFailsBadAssertionRequest) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, CanGenerateFailsBadAssertionRequest) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, CanGenerateSuceedsValidAssertionRequest) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, CanGenerateSuceedsValidAssertionRequest) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, CanVerifyFailsBadAssertionOffer) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, CanVerifyFailsBadAssertionOffer) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, CanVerifySuceedsVerifyAssertionOffer) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, CanVerifySuceedsVerifyAssertionOffer) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, GenerateFailsBadAssertionRequest) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, GenerateFailsBadAssertionRequest) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, GenerateSuceedsValidAssertionRequest) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, GenerateSuceedsValidAssertionRequest) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, VerifyFailsBadAssertion) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, VerifyFailsBadAssertion) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, VerifyFailsBadAssertionRequest) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, VerifyFailsBadAssertionRequest) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, VerifyFailsEmptyAssertion) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, VerifyFailsEmptyAssertion) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, VerifySuceedsValidAssertion) {$/;"	f	namespace:asylo::__anon174
TEST_F	./identity/null_identity/null_assertion_authority_test.cc	/^TEST_F(NullAssertionAuthorityTest, VerifySuceedsValidAssertion) {$/;"	f	namespace:asylo::__anon428
TEST_F	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^TEST_F(NullIdentityExpectationMatcherTest, DescriptionCorrectness) {$/;"	f	namespace:asylo::__anon173
TEST_F	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^TEST_F(NullIdentityExpectationMatcherTest, DescriptionCorrectness) {$/;"	f	namespace:asylo::__anon427
TEST_F	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^TEST_F(NullIdentityExpectationMatcherTest, MatchNullIdentityToNullExpectation) {$/;"	f	namespace:asylo::__anon173
TEST_F	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^TEST_F(NullIdentityExpectationMatcherTest, MatchNullIdentityToNullExpectation) {$/;"	f	namespace:asylo::__anon427
TEST_F	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^TEST_F(NullIdentityExpectationMatcherTest, MatcherExistsInStaticMap) {$/;"	f	namespace:asylo::__anon173
TEST_F	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^TEST_F(NullIdentityExpectationMatcherTest, MatcherExistsInStaticMap) {$/;"	f	namespace:asylo::__anon427
TEST_F	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^TEST_F(NullIdentityExpectationMatcherTest,$/;"	f	namespace:asylo::__anon173
TEST_F	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^TEST_F(NullIdentityExpectationMatcherTest,$/;"	f	namespace:asylo::__anon427
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness1) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness1) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness2) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness2) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness3) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness3) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness4) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness4) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness5) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness5) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness6) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, BitwiseAndCorrectness6) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, EqualityOperatorNegative) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, EqualityOperatorNegative) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, EqualityOperatorPositive) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, EqualityOperatorPositive) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, InequalityOperatorNegative) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, InequalityOperatorNegative) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, InequalityOperatorPositive) {$/;"	f	namespace:asylo::sgx::__anon146
TEST_F	./identity/sgx/attributes_util_test.cc	/^TEST_F(AttributesTest, InequalityOperatorPositive) {$/;"	f	namespace:asylo::sgx::__anon400
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityAttributesMismatch) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityAttributesMismatch) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityDifferingDoNotCareFields) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityDifferingDoNotCareFields) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMatchIdentityMissingMrenclave) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMatchIdentityMissingMrenclave) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMatchIdentityMissingMrsigner) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMatchIdentityMissingMrsigner) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMatchInvalidExpectation) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMatchInvalidExpectation) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMatchInvalidIdentity) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMatchInvalidIdentity) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMiscSelectMismatch) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMiscSelectMismatch) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMrEnclaveMismatch) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityMrEnclaveMismatch) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySelfMatch) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySelfMatch) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySignerAssignedIdentityMismatch1) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySignerAssignedIdentityMismatch1) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySignerAssignedIdentityMismatch2) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySignerAssignedIdentityMismatch2) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySignerAssignedIdentityMismatch3) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySignerAssignedIdentityMismatch3) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySignerAssignedIdentitySVNMatch) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentitySignerAssignedIdentitySVNMatch) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityNegative1) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityNegative1) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityNegative2) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityNegative2) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityNegative3) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityNegative3) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityPositive1) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityPositive1) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityPositive2) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, CodeIdentityValidityPositive2) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityNegative1) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityNegative1) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityNegative2) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityNegative2) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityPositive1) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityPositive1) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityPositive2) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityPositive2) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityPositive3) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityPositive3) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityPositive4) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ExpectationValidityPositive4) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityNegative1) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityNegative1) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityNegative2) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityNegative2) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityNegative3) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityNegative3) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityNegative4) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityNegative4) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityPositive) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, MatchSpecValidityPositive) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseIdentityFromHardwareReport) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseIdentityFromHardwareReport) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxExpectationFailure) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxExpectationFailure) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxExpectationSuccess) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxExpectationSuccess) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxIdentityFailure) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxIdentityFailure) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxIdentitySuccess) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxIdentitySuccess) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxMatchSpecFailure) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxMatchSpecFailure) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxMatchSpecSuccess) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, ParseSgxMatchSpecSuccess) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SerializeAndParseSgxExpectationEndToEnd) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SerializeAndParseSgxExpectationEndToEnd) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SerializeAndParseSgxIdentityEndToEnd) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SerializeAndParseSgxIdentityEndToEnd) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SerializeAndParseSgxMatchSpecEndToEnd) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SerializeAndParseSgxMatchSpecEndToEnd) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetDefaultMatchSpec) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetDefaultMatchSpec) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetDefaultSelfCodeIdentityExpectation) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetDefaultSelfCodeIdentityExpectation) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetSelfCodeIdentity) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetSelfCodeIdentity) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetSgxIdentityDescription) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetSgxIdentityDescription) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetSgxLocalAssertionDescription) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetSgxLocalAssertionDescription) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetSgxRemoteAssertionDescription) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetSgxRemoteAssertionDescription) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetStrictMatchSpec) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetStrictMatchSpec) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetStrictSelfCodeIdentityExpectation) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetStrictSelfCodeIdentityExpectation) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetTargetinfoFromSelfIdentity) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SetTargetinfoFromSelfIdentity) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SignerAssignedIdentityValidityNegative1) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SignerAssignedIdentityValidityNegative1) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SignerAssignedIdentityValidityNegative2) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SignerAssignedIdentityValidityNegative2) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SignerAssignedIdentityValidityPositive1) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SignerAssignedIdentityValidityPositive1) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SignerAssignedIdentityValidityPositive2) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, SignerAssignedIdentityValidityPositive2) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, VerifyHardwareReportBadReport) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, VerifyHardwareReportBadReport) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, VerifyHardwareReportPositive) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, VerifyHardwareReportPositive) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, VerifyHardwareReportWrongTarget) {$/;"	f	namespace:asylo::sgx::__anon152
TEST_F	./identity/sgx/code_identity_util_test.cc	/^TEST_F(CodeIdentityUtilTest, VerifyHardwareReportWrongTarget) {$/;"	f	namespace:asylo::sgx::__anon406
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, CurrentEnclave) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, CurrentEnclave) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, GetHardwareRand) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, GetHardwareRand) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, GetIdentity) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, GetIdentity) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, Report) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, Report) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithAttributes) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithAttributes) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithConfigid) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithConfigid) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithConfigsvn) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithConfigsvn) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithIsvextprodid) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithIsvextprodid) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithIsvfamilyid) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithIsvfamilyid) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithIsvprodid) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithIsvprodid) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithIsvsvn) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithIsvsvn) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithMiscselect) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithMiscselect) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithMrenclave) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithMrenclave) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithMrsigner) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyChangesWithMrsigner) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyConfigsvnAccessControl) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyConfigsvnAccessControl) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyGeneratesNonZeroKey) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyGeneratesNonZeroKey) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyIsvsvnAccessControl) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SealKeyIsvsvnAccessControl) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SetIdentity) {$/;"	f	namespace:asylo::sgx::__anon148
TEST_F	./identity/sgx/fake_hardware_interface_test.cc	/^TEST_F(FakeEnclaveTest, SetIdentity) {$/;"	f	namespace:asylo::sgx::__anon402
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, AsymmetricEncryptionSchemeToPceCryptoSuiteSupported) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, AsymmetricEncryptionSchemeToPceCryptoSuiteSupported) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, AsymmetricEncryptionSchemeToPceCryptoSuiteUnsupported) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, AsymmetricEncryptionSchemeToPceCryptoSuiteUnsupported) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, CreateReportdataForGetPceInfoInvalidRsaModulusSizeFails) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, CreateReportdataForGetPceInfoInvalidRsaModulusSizeFails) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, CreateReportdataForGetPceInfoSuccess) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, CreateReportdataForGetPceInfoSuccess) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, ParseRsa3072PublicKeyInvalidSize) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, ParseRsa3072PublicKeyInvalidSize) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, ParseRsa3072PublicKeyRestoreFromSerializedKey) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, ParseRsa3072PublicKeyRestoreFromSerializedKey) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, ParseRsa3072PublicKeySuccess) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, ParseRsa3072PublicKeySuccess) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, SerializeRsa3072PublicKeySuccess) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, SerializeRsa3072PublicKeySuccess) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, SignatureSchemeToPceSignatureSchemeSupported) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, SignatureSchemeToPceSignatureSchemeSupported) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, SignatureSchemeToPceSignatureSchemeUnsupported) {$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest, SignatureSchemeToPceSignatureSchemeUnsupported) {$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest,$/;"	f	namespace:asylo::sgx::__anon151
TEST_F	./identity/sgx/pce_util_test.cc	/^TEST_F(PceUtilTest,$/;"	f	namespace:asylo::sgx::__anon405
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, AttributesToList) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, AttributesToList) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, AttributesToSet) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, AttributesToSet) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseAnd) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseAnd) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseAndAssign) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseAndAssign) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseNegation) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseNegation) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseOr) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseOr) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseOrAssign) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, BitwiseOrAssign) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ClearSecsAttributeSet) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ClearSecsAttributeSet) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, Equality) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, Equality) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, GetPrintableAttributeListFromAttributes) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, GetPrintableAttributeListFromAttributes) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, GetPrintableAttributeListFromList) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, GetPrintableAttributeListFromList) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, GetPrintableAttributeListFromSet) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, GetPrintableAttributeListFromSet) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, Inequality) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, Inequality) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ListToAttributes) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ListToAttributes) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ListToAttributesError) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ListToAttributesError) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ListToSet) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ListToSet) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ListToSetError) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, ListToSetError) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, MakeSecsAttributeSetNegative) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, MakeSecsAttributeSetNegative) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, MakeSecsAttributeSetPositive) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, MakeSecsAttributeSetPositive) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, SetDefaultSecsAttributesMask) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, SetDefaultSecsAttributesMask) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, SetStrictSecsAttributesMask) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, SetStrictSecsAttributesMask) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, SetToAttributes) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, SetToAttributes) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, SetToList) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, SetToList) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, TestAttributeAttributes) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, TestAttributeAttributes) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, TestAttributeAttributesError) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, TestAttributeAttributesError) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, TestAttributeSet) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, TestAttributeSet) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, TestAttributeSetError) {$/;"	f	namespace:asylo::sgx::__anon164
TEST_F	./identity/sgx/secs_attributes_test.cc	/^TEST_F(SecsAttributesTest, TestAttributeSetError) {$/;"	f	namespace:asylo::sgx::__anon418
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, AuthorityType) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, AuthorityType) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, CanGenerateFailsIfNotInitialized) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, CanGenerateFailsIfNotInitialized) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, CanGenerateSuccess) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, CanGenerateSuccess) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, CreateAssertionOfferSuccess) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, CreateAssertionOfferSuccess) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, GenerateFailsIfNotInitialized) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, GenerateFailsIfNotInitialized) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, GenerateSuccess) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, GenerateSuccess) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, GeneratorFoundInStaticMap) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, GeneratorFoundInStaticMap) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, IdentityType) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, IdentityType) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, InitializeFailsWithUnparsableConfig) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, InitializeFailsWithUnparsableConfig) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, InitializeSucceedsOnce) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, InitializeSucceedsOnce) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, IsInitializedBeforeAfterInitialization) {$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest, IsInitializedBeforeAfterInitialization) {$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest,$/;"	f	namespace:asylo::__anon149
TEST_F	./identity/sgx/sgx_local_assertion_generator_test.cc	/^TEST_F(SgxLocalAssertionGeneratorTest,$/;"	f	namespace:asylo::__anon403
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, AuthorityType) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, AuthorityType) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, CanVerifyFailsIfNotInitialized) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, CanVerifyFailsIfNotInitialized) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, CreateAssertionRequestSuccess) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, CreateAssertionRequestSuccess) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, IdentityType) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, IdentityType) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, InitializeFailsMissingAttestationDomain) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, InitializeFailsMissingAttestationDomain) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, InitializeFailsWithUnparsableConfig) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, InitializeFailsWithUnparsableConfig) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, InitializeSucceedsOnce) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, InitializeSucceedsOnce) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, IsInitializedBeforeAfterInitialization) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, IsInitializedBeforeAfterInitialization) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifierFoundInStaticMap) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifierFoundInStaticMap) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifyFailsIfNotInitialized) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifyFailsIfNotInitialized) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifyFailsIfReportIsUnverifiable) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifyFailsIfReportIsUnverifiable) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifyFailsIfReportMalformed) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifyFailsIfReportMalformed) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifyFailsIfUnparseableAssertion) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifyFailsIfUnparseableAssertion) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifySuccess) {$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest, VerifySuccess) {$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest,$/;"	f	namespace:asylo::__anon159
TEST_F	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^TEST_F(SgxLocalAssertionVerifierTest,$/;"	f	namespace:asylo::__anon413
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadAdditionalInfo) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadAdditionalInfo) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadCipherSuite) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadCipherSuite) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadClientAcl) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadClientAcl) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadCpusvn) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadCpusvn) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadSealingRootName) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadSealingRootName) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadSealingRootType) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsBadSealingRootType) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsMrenclaveFailure) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsMrenclaveFailure) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsMrsignerFailure) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, ParseKeyGenerationParamsMrsignerFailure) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrenclaveFailureDifferentMrenclave) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrenclaveFailureDifferentMrenclave) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrenclaveSuccessSameEnclave) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrenclaveSuccessSameEnclave) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrsignerFailureDifferentMrsigner) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrsignerFailureDifferentMrsigner) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrsignerSuccessSameEnclave) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrsignerSuccessSameEnclave) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrsignerSuccessSameMrsigner) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, SealUnsealMrsignerSuccessSameMrsigner) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, VerifyRootAcl) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, VerifyRootAcl) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, VerifyRootName) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, VerifyRootName) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, VerifyRootType) {$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest, VerifyRootType) {$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest,$/;"	f	namespace:asylo::__anon168
TEST_F	./identity/sgx/sgx_local_secret_sealer_test.cc	/^TEST_F(SgxLocalSecretSealerTest,$/;"	f	namespace:asylo::__anon422
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, ClassAlign) {$/;"	f	namespace:asylo::__anon172
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, ClassAlign) {$/;"	f	namespace:asylo::__anon426
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, ConstructorForward) {$/;"	f	namespace:asylo::__anon172
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, ConstructorForward) {$/;"	f	namespace:asylo::__anon426
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, MoveAndAssign) {$/;"	f	namespace:asylo::__anon172
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, MoveAndAssign) {$/;"	f	namespace:asylo::__anon426
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, SelfMoveAssign) {$/;"	f	namespace:asylo::__anon172
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, SelfMoveAssign) {$/;"	f	namespace:asylo::__anon426
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, StructAlign) {$/;"	f	namespace:asylo::__anon172
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, StructAlign) {$/;"	f	namespace:asylo::__anon426
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, Uint64_tAlign) {$/;"	f	namespace:asylo::__anon172
TEST_F	./identity/util/aligned_object_ptr_test.cc	/^TEST_F(AlignedObjectPtrTest, Uint64_tAlign) {$/;"	f	namespace:asylo::__anon426
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, ConversionToHexString) {$/;"	f	namespace:asylo::__anon171
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, ConversionToHexString) {$/;"	f	namespace:asylo::__anon425
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, EqualityOperatorNegative) {$/;"	f	namespace:asylo::__anon171
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, EqualityOperatorNegative) {$/;"	f	namespace:asylo::__anon425
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, EqualityOperatorPositive) {$/;"	f	namespace:asylo::__anon171
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, EqualityOperatorPositive) {$/;"	f	namespace:asylo::__anon425
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, InequalityOperatorNegative) {$/;"	f	namespace:asylo::__anon171
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, InequalityOperatorNegative) {$/;"	f	namespace:asylo::__anon425
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, InequalityOperatorPositive) {$/;"	f	namespace:asylo::__anon171
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, InequalityOperatorPositive) {$/;"	f	namespace:asylo::__anon425
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, SuccessfulConversionFromHexString) {$/;"	f	namespace:asylo::__anon171
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, SuccessfulConversionFromHexString) {$/;"	f	namespace:asylo::__anon425
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, UnsuccessfulConversionFromHexString) {$/;"	f	namespace:asylo::__anon171
TEST_F	./identity/util/sha256_hash_util_test.cc	/^TEST_F(Sha256HashUtilTest, UnsuccessfulConversionFromHexString) {$/;"	f	namespace:asylo::__anon425
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeAddressInfoFlagsTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeAddressInfoFlagsTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeAfFamilyTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeAfFamilyTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeFDFlagsTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeFDFlagsTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeFLockOperationTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeFLockOperationTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeFcntlCommandsTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeFcntlCommandsTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeFileFlagsTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeFileFlagsTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeOptionNameTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeOptionNameTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeRUsageTargetTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeRUsageTargetTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSigInfoTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSigInfoTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSigMaskActionTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSigMaskActionTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSignalCodeTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSignalCodeTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSysLogFacilityTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSysLogFacilityTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSysLogOptionTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSysLogOptionTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSysLogPriorityTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSysLogPriorityTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSysconfConstantsTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeSysconfConstantsTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeTimerTypeTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeTimerTypeTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeWaitOptionsTest) {$/;"	f	namespace:asylo::__anon113
TEST_F	./platform/common/bridge_functions_test.cc	/^TEST_F(BridgeTest, BridgeWaitOptionsTest) {$/;"	f	namespace:asylo::__anon367
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, BasicProperties) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, BlockingReadWriteTest) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, ClosedFlags) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, ReadEmptyBuffer) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, ReadLargerThanBuffer) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, ReadNearlyEmpty) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, SingleThreadedStressTest) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, VersionMatching) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, WriteFullBuffer) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, WriteLargerThanBuffer) {$/;"	f	namespace:asylo
TEST_F	./platform/common/ring_buffer_test.cc	/^TEST_F(RingBufferTest, WriteNearlyFull) {$/;"	f	namespace:asylo
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_in6_addr) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_in6_addr) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_in_addr) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_in_addr) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_pollfd) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_pollfd) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_sockaddr) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_sockaddr) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_sockaddr_in) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_sockaddr_in) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_sockaddr_in6) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_sockaddr_in6) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_sockaddr_un) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_sockaddr_un) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_stat) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_stat) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_timespec) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_timespec) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_timeval) {$/;"	f	namespace:asylo::__anon106
TEST_F	./platform/common/test/bridge_types_test_driver.cc	/^TEST_F(BridgeTypesTest, TestPackedSize_bridge_timeval) {$/;"	f	namespace:asylo::__anon360
TEST_F	./platform/core/test/enclave_api_test_driver.cc	/^TEST_F(ClientApiTest, InputOutputTest) {$/;"	f	namespace:asylo::__anon133
TEST_F	./platform/core/test/enclave_api_test_driver.cc	/^TEST_F(ClientApiTest, InputOutputTest) {$/;"	f	namespace:asylo::__anon387
TEST_F	./platform/core/test/getenv_test_driver.cc	/^TEST_F(EnclaveGetenvTest, GetenvTest) {$/;"	f	namespace:asylo::__anon132
TEST_F	./platform/core/test/getenv_test_driver.cc	/^TEST_F(EnclaveGetenvTest, GetenvTest) {$/;"	f	namespace:asylo::__anon386
TEST_F	./platform/core/test/proto_test_driver.cc	/^TEST_F(EnclaveProtoTest, ReadWriteTest) {$/;"	f	namespace:asylo::__anon131
TEST_F	./platform/core/test/proto_test_driver.cc	/^TEST_F(EnclaveProtoTest, ReadWriteTest) {$/;"	f	namespace:asylo::__anon385
TEST_F	./platform/core/untrusted_cache_malloc_test.cc	/^TEST_F(UntrustedCacheMallocTest, StressTest) {$/;"	f	namespace:asylo::__anon128
TEST_F	./platform/core/untrusted_cache_malloc_test.cc	/^TEST_F(UntrustedCacheMallocTest, StressTest) {$/;"	f	namespace:asylo::__anon382
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestAccess) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestAccess) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestAccessNonExistentPath) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestAccessNonExistentPath) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestChmod) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestChmod) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestChmodNonExistentFile) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestChmodNonExistentFile) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestChown) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestChown) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestClose) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestClose) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestCloseNonExistentFile) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestCloseNonExistentFile) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFChown) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFChown) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFTruncate) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFTruncate) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFchmod) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFchmod) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFchmodNonExistentFile) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFchmodNonExistentFile) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFcntl) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFcntl) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFcntlInvalidCmd) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFcntlInvalidCmd) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFlock) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFlock) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFsync) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestFsync) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetEgid) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetEgid) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetEuid) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetEuid) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetPpid) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetPpid) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetgid) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetgid) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetpid) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetpid) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetuid) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestGetuid) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestInotifyAddWatch) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestInotifyAddWatch) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestInotifyInit1) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestInotifyInit1) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestInotifyRmWatch) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestInotifyRmWatch) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestIsAtty) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestIsAtty) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestKill) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestKill) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestLink) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestLink) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestLseek) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestLseek) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestLseekBadReturn) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestLseekBadReturn) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestMkdir) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestMkdir) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestMkdirNonExistentPath) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestMkdirNonExistentPath) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestOpen) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestOpen) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestOpenExistingFile) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestOpenExistingFile) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestRead) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestRead) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestReadlink) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestReadlink) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestRename) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestRename) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestRmdir) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestRmdir) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSchedYield) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSchedYield) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSetSid) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSetSid) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSetSockOpt) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSetSockOpt) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSocket) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSocket) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSymlink) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestSymlink) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestTruncate) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestTruncate) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestUSleep) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestUSleep) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestUmask) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestUmask) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestUnlink) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestUnlink) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestUnlinkNonExistingFile) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestUnlinkNonExistingFile) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestWrite) {$/;"	f	namespace:asylo::host_call::__anon290
TEST_F	./platform/host_call/test/host_call_test.cc	/^TEST_F(HostCallTest, TestWrite) {$/;"	f	namespace:asylo::host_call::__anon36
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreSucceed) {$/;"	f	namespace:asylo::__anon305
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreSucceed) {$/;"	f	namespace:asylo::__anon51
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyBss) {$/;"	f	namespace:asylo::__anon305
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyBss) {$/;"	f	namespace:asylo::__anon51
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyData) {$/;"	f	namespace:asylo::__anon305
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyData) {$/;"	f	namespace:asylo::__anon51
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyHeap) {$/;"	f	namespace:asylo::__anon305
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyHeap) {$/;"	f	namespace:asylo::__anon51
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyStack) {$/;"	f	namespace:asylo::__anon305
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyStack) {$/;"	f	namespace:asylo::__anon51
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyThread) {$/;"	f	namespace:asylo::__anon305
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, RestoreWithModifyThread) {$/;"	f	namespace:asylo::__anon51
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, SnapshotFailsWithourForkRequest) {$/;"	f	namespace:asylo::__anon305
TEST_F	./platform/posix/fork_security_test_driver.cc	/^TEST_F(ForkSecurityTest, SnapshotFailsWithourForkRequest) {$/;"	f	namespace:asylo::__anon51
TEST_F	./platform/posix/fork_test_driver.cc	/^TEST_F(ForkTest, Fork) {$/;"	f	namespace:asylo::__anon300
TEST_F	./platform/posix/fork_test_driver.cc	/^TEST_F(ForkTest, Fork) {$/;"	f	namespace:asylo::__anon46
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EdgeTriggeredBasic) { BasicEpollTest(true); }$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EdgeTriggeredBasic) { BasicEpollTest(true); }$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EdgeTriggeredBehavior) { LevelEdgeBehaviorTest(true); }$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EdgeTriggeredBehavior) { LevelEdgeBehaviorTest(true); }$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollCtlDel) {$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollCtlDel) {$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollCtlMix) {$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollCtlMix) {$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollCtlMod) {$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollCtlMod) {$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollWaitTimeoutExceeded) { TimeoutTest(500, 50); }$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollWaitTimeoutExceeded) { TimeoutTest(500, 50); }$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollWaitTimeoutNotExceeded) { TimeoutTest(10, 2000); }$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, EpollWaitTimeoutNotExceeded) { TimeoutTest(10, 2000); }$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, LevelTriggeredBasic) { BasicEpollTest(false); }$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, LevelTriggeredBasic) { BasicEpollTest(false); }$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, LevelTriggeredBehavior) { LevelEdgeBehaviorTest(false); }$/;"	f	namespace:asylo::__anon318
TEST_F	./platform/posix/io/epoll_test.cc	/^TEST_F(EpollTest, LevelTriggeredBehavior) { LevelEdgeBehaviorTest(false); }$/;"	f	namespace:asylo::__anon64
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, MaxCounterBlock) {$/;"	f	namespace:asylo::__anon327
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, MaxCounterBlock) {$/;"	f	namespace:asylo::__anon73
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, MaxCounterNonBlock) {$/;"	f	namespace:asylo::__anon327
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, MaxCounterNonBlock) {$/;"	f	namespace:asylo::__anon73
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, NonSemaphoreNonBlock) {$/;"	f	namespace:asylo::__anon327
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, NonSemaphoreNonBlock) {$/;"	f	namespace:asylo::__anon73
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, NonSemaphoreWaitWhenZero) {$/;"	f	namespace:asylo::__anon327
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, NonSemaphoreWaitWhenZero) {$/;"	f	namespace:asylo::__anon73
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, SemaphoreMultipleThreads) {$/;"	f	namespace:asylo::__anon327
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, SemaphoreMultipleThreads) {$/;"	f	namespace:asylo::__anon73
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, SemaphoreNonBlock) {$/;"	f	namespace:asylo::__anon327
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, SemaphoreNonBlock) {$/;"	f	namespace:asylo::__anon73
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, SemaphoreWaitWhenZero) {$/;"	f	namespace:asylo::__anon327
TEST_F	./platform/posix/io/eventfd_test.cc	/^TEST_F(EventFdTest, SemaphoreWaitWhenZero) {$/;"	f	namespace:asylo::__anon73
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, BufferTooSmall) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, BufferTooSmall) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, EventsQueued) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, EventsQueued) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, MultipleEvents) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, MultipleEvents) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, NonBlock) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, NonBlock) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileClosed) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileClosed) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileRead) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileRead) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileWrite) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileWrite) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileWriteBlock) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileWriteBlock) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileWriteDir) {$/;"	f	namespace:asylo::__anon321
TEST_F	./platform/posix/io/inotify_test.cc	/^TEST_F(InotifyTest, SingleFileWriteDir) {$/;"	f	namespace:asylo::__anon67
TEST_F	./platform/posix/io/pipe_test_driver.cc	/^TEST_F(PipeOutputTest, WriteTest) {$/;"	f	namespace:asylo::__anon325
TEST_F	./platform/posix/io/pipe_test_driver.cc	/^TEST_F(PipeOutputTest, WriteTest) {$/;"	f	namespace:asylo::__anon71
TEST_F	./platform/posix/io/read_write_test.cc	/^TEST_F(ReadWriteTest, FileDescriptorOrderingTest) {$/;"	f	namespace:asylo::__anon322
TEST_F	./platform/posix/io/read_write_test.cc	/^TEST_F(ReadWriteTest, FileDescriptorOrderingTest) {$/;"	f	namespace:asylo::__anon68
TEST_F	./platform/posix/io/read_write_test.cc	/^TEST_F(ReadWriteTest, ReadWriteSecureTest) {$/;"	f	namespace:asylo::__anon322
TEST_F	./platform/posix/io/read_write_test.cc	/^TEST_F(ReadWriteTest, ReadWriteSecureTest) {$/;"	f	namespace:asylo::__anon68
TEST_F	./platform/posix/io/read_write_test.cc	/^TEST_F(ReadWriteTest, ReadWriteUntrustedTest) {$/;"	f	namespace:asylo::__anon322
TEST_F	./platform/posix/io/read_write_test.cc	/^TEST_F(ReadWriteTest, ReadWriteUntrustedTest) {$/;"	f	namespace:asylo::__anon68
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, BasicFileMatch) {$/;"	f	namespace:asylo::__anon326
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, BasicFileMatch) {$/;"	f	namespace:asylo::__anon72
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, BasicPrefixMatch) {$/;"	f	namespace:asylo::__anon326
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, BasicPrefixMatch) {$/;"	f	namespace:asylo::__anon72
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, NoMatch) {$/;"	f	namespace:asylo::__anon326
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, NoMatch) {$/;"	f	namespace:asylo::__anon72
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, OverlappingPrefixMatchFirst) {$/;"	f	namespace:asylo::__anon326
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, OverlappingPrefixMatchFirst) {$/;"	f	namespace:asylo::__anon72
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, OverlappingPrefixMatchSecond) {$/;"	f	namespace:asylo::__anon326
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, OverlappingPrefixMatchSecond) {$/;"	f	namespace:asylo::__anon72
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, PartialFileMatch) {$/;"	f	namespace:asylo::__anon326
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, PartialFileMatch) {$/;"	f	namespace:asylo::__anon72
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, SiblingMatch) {$/;"	f	namespace:asylo::__anon326
TEST_F	./platform/posix/io/virtual_test.cc	/^TEST_F(VirtualHandlerTest, SiblingMatch) {$/;"	f	namespace:asylo::__anon72
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, FcntlCannotShrinkPipeBelowCurrentlyHeldBytes) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, FcntlCannotShrinkPipeBelowCurrentlyHeldBytes) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, FcntlFSetpipeSzChangesPipeSize) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, FcntlFSetpipeSzChangesPipeSize) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, LargeReadsFromFullNonBlockingPipesSucceed) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, LargeReadsFromFullNonBlockingPipesSucceed) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, LargeReadsFromODirectPipesSucceedButOnlyReadPipeBufBytes) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, LargeReadsFromODirectPipesSucceedButOnlyReadPipeBufBytes) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, LargeWritesToNonBlockingPipesFailWithEAgain) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, LargeWritesToNonBlockingPipesFailWithEAgain) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, LargeWritesToODirectPipesSucceedAndWriteOnlyPipeBufBytes) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, LargeWritesToODirectPipesSucceedAndWriteOnlyPipeBufBytes) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ManyPipesCanBeOpened) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ManyPipesCanBeOpened) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumReadsFromFullNonBlockingPipesSucceed) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumReadsFromFullNonBlockingPipesSucceed) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumWritesToNonBlockingPipesSucceed) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumWritesToNonBlockingPipesSucceed) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumWritesToODirectPipesSucceedAndWriteAllData) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumWritesToODirectPipesSucceedAndWriteAllData) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumWritingToOpenPipe2PipesSucceeds) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumWritingToOpenPipe2PipesSucceeds) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumWritingToOpenPipesSucceeds) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, MediumWritingToOpenPipesSucceeds) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, NonBlockingPipesHaveONonblockFileStatusFlag) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, NonBlockingPipesHaveONonblockFileStatusFlag) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, OCloexecPipesAreNormalPipes) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, OCloexecPipesAreNormalPipes) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, OCloexecPipesHaveFdCloexecFlagSet) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, OCloexecPipesHaveFdCloexecFlagSet) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, Pipe2FdsAreFifos) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, Pipe2FdsAreFifos) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, Pipe2GivesValidFileDescriptorPairs) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, Pipe2GivesValidFileDescriptorPairs) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, Pipe2RejectsUnknownFlags) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, Pipe2RejectsUnknownFlags) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, Pipe2WithODirectGivesDistinctValidFileDescriptors) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, Pipe2WithODirectGivesDistinctValidFileDescriptors) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, PipeBufSizedReadsFromODirectPipesSucceed) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, PipeBufSizedReadsFromODirectPipesSucceed) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, PipeFdsAreFifos) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, PipeFdsAreFifos) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, PipeGivesValidFileDescriptorPairs) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, PipeGivesValidFileDescriptorPairs) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadingFromOpenNonEmptyPipe2PipesSucceedsWithMediumData) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadingFromOpenNonEmptyPipe2PipesSucceedsWithMediumData) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadingFromOpenNonEmptyPipe2PipesSucceedsWithSmallData) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadingFromOpenNonEmptyPipe2PipesSucceedsWithSmallData) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadingFromOpenNonEmptyPipesSucceedsWithMediumData) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadingFromOpenNonEmptyPipesSucceedsWithMediumData) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadingFromOpenNonEmptyPipesSucceedsWithSmallData) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadingFromOpenNonEmptyPipesSucceedsWithSmallData) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadsFromEmptyNonBlockingPipesFailWithEAgain) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ReadsFromEmptyNonBlockingPipesFailWithEAgain) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ResizedPipesHaveSmallerCapacity) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, ResizedPipesHaveSmallerCapacity) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, SmallReadsFromODirectPipesSucceedAndDiscardRestOfPacket) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, SmallReadsFromODirectPipesSucceedAndDiscardRestOfPacket) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, SmallWritesToODirectPipesSucceedAndWriteAllData) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, SmallWritesToODirectPipesSucceedAndWriteAllData) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, SmallWritingToOpenPipe2PipesSucceeds) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, SmallWritingToOpenPipe2PipesSucceeds) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, SmallWritingToOpenPipesSucceeds) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, SmallWritingToOpenPipesSucceeds) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, WriteFdOnODirectPipeHasODirectFlagSet) {$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest, WriteFdOnODirectPipeHasODirectFlagSet) {$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest,$/;"	f	namespace:asylo::__anon301
TEST_F	./platform/posix/pipe_test.cc	/^TEST_F(PipeTest,$/;"	f	namespace:asylo::__anon47
TEST_F	./platform/posix/select_test.cc	/^TEST_F(SelectTest, Read) { RunSelectTest(true); }$/;"	f	namespace:asylo::__anon304
TEST_F	./platform/posix/select_test.cc	/^TEST_F(SelectTest, Read) { RunSelectTest(true); }$/;"	f	namespace:asylo::__anon50
TEST_F	./platform/posix/select_test.cc	/^TEST_F(SelectTest, Write) { RunSelectTest(false); }$/;"	f	namespace:asylo::__anon304
TEST_F	./platform/posix/select_test.cc	/^TEST_F(SelectTest, Write) { RunSelectTest(false); }$/;"	f	namespace:asylo::__anon50
TEST_F	./platform/posix/sockets/addrinfo_test_driver.cc	/^TEST_F(AddrinfoTest, AddrinfoIpHintsTest) {$/;"	f	namespace:asylo::__anon311
TEST_F	./platform/posix/sockets/addrinfo_test_driver.cc	/^TEST_F(AddrinfoTest, AddrinfoIpHintsTest) {$/;"	f	namespace:asylo::__anon57
TEST_F	./platform/posix/sockets/addrinfo_test_driver.cc	/^TEST_F(AddrinfoTest, AddrinfoNoHintsTest) {$/;"	f	namespace:asylo::__anon311
TEST_F	./platform/posix/sockets/addrinfo_test_driver.cc	/^TEST_F(AddrinfoTest, AddrinfoNoHintsTest) {$/;"	f	namespace:asylo::__anon57
TEST_F	./platform/posix/sockets/addrinfo_test_driver.cc	/^TEST_F(AddrinfoTest, AddrinfoUnspecHintsTest) {$/;"	f	namespace:asylo::__anon311
TEST_F	./platform/posix/sockets/addrinfo_test_driver.cc	/^TEST_F(AddrinfoTest, AddrinfoUnspecHintsTest) {$/;"	f	namespace:asylo::__anon57
TEST_F	./platform/posix/sockets/domain_socket_test_driver.cc	/^TEST_F(DomainSocketDriver, EnclaveClientTestWithUsePathLenFalse) {$/;"	f	namespace:asylo::__anon310
TEST_F	./platform/posix/sockets/domain_socket_test_driver.cc	/^TEST_F(DomainSocketDriver, EnclaveClientTestWithUsePathLenFalse) {$/;"	f	namespace:asylo::__anon56
TEST_F	./platform/posix/sockets/domain_socket_test_driver.cc	/^TEST_F(DomainSocketDriver, EnclaveClientTestWithUsePathLenTrue) {$/;"	f	namespace:asylo::__anon310
TEST_F	./platform/posix/sockets/domain_socket_test_driver.cc	/^TEST_F(DomainSocketDriver, EnclaveClientTestWithUsePathLenTrue) {$/;"	f	namespace:asylo::__anon56
TEST_F	./platform/posix/sockets/domain_socket_test_driver.cc	/^TEST_F(DomainSocketDriver, EnclaveServerTestWithUsePathLenFalse) {$/;"	f	namespace:asylo::__anon310
TEST_F	./platform/posix/sockets/domain_socket_test_driver.cc	/^TEST_F(DomainSocketDriver, EnclaveServerTestWithUsePathLenFalse) {$/;"	f	namespace:asylo::__anon56
TEST_F	./platform/posix/sockets/domain_socket_test_driver.cc	/^TEST_F(DomainSocketDriver, EnclaveServerTestWithUsePathLenTrue) {$/;"	f	namespace:asylo::__anon310
TEST_F	./platform/posix/sockets/domain_socket_test_driver.cc	/^TEST_F(DomainSocketDriver, EnclaveServerTestWithUsePathLenTrue) {$/;"	f	namespace:asylo::__anon56
TEST_F	./platform/posix/sockets/inet6_socket_test_driver.cc	/^TEST_F(Inet6SocketDriver, EnclaveClientTest) {$/;"	f	namespace:asylo::__anon313
TEST_F	./platform/posix/sockets/inet6_socket_test_driver.cc	/^TEST_F(Inet6SocketDriver, EnclaveClientTest) {$/;"	f	namespace:asylo::__anon59
TEST_F	./platform/posix/sockets/inet6_socket_test_driver.cc	/^TEST_F(Inet6SocketDriver, EnclaveServerTest) {$/;"	f	namespace:asylo::__anon313
TEST_F	./platform/posix/sockets/inet6_socket_test_driver.cc	/^TEST_F(Inet6SocketDriver, EnclaveServerTest) {$/;"	f	namespace:asylo::__anon59
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(CustomConfigSyscallsTest, GetCwd) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(CustomConfigSyscallsTest, GetCwd) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(CustomConfigSyscallsTest, GetCwdInsufficientSize) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(CustomConfigSyscallsTest, GetCwdInsufficientSize) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(CustomConfigSyscallsTest, GetCwdNoBufferInsufficientSize) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(CustomConfigSyscallsTest, GetCwdNoBufferInsufficientSize) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(CustomConfigSyscallsTest, GetHostName) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(CustomConfigSyscallsTest, GetHostName) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, ChMod) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, ChMod) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, CpuSetMacros) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, CpuSetMacros) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Dup) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Dup) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, FChMod) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, FChMod) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, FStat) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, FStat) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, FStatOnSymlink) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, FStatOnSymlink) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Fcntl) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Fcntl) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetCwd) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetCwd) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetCwdNoBuffer) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetCwdNoBuffer) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetCwdNoBufferNoSize) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetCwdNoBufferNoSize) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetCwdNoSize) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetCwdNoSize) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetEgid) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetEgid) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetEuid) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetEuid) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetGid) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetGid) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetHostName) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetHostName) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetIfAddrs) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetIfAddrs) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetPWUid) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetPWUid) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetPid) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetPid) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetPpid) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetPpid) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetUid) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, GetUid) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Itimer) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Itimer) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, LStat) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, LStat) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, LStatOnSymlink) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, LStatOnSymlink) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Link) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Link) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Mkdir) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Mkdir) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Mmap) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Mmap) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_EBADF) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_EBADF) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_EFAULT) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_EFAULT) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_EINVAL) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_EINVAL) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_ENOTCONN) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_ENOTCONN) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_ENOTSOCK) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, PeernameFailure_ENOTSOCK) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Readv) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Readv) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Rename) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Rename) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, RlimitInvalidNoFile) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, RlimitInvalidNoFile) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, RlimitLowNoFile) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, RlimitLowNoFile) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, RlimitNoFile) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, RlimitNoFile) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Rmdir) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Rmdir) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SchedGetAffinity) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SchedGetAffinity) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SchedGetAffinityAfterSet) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SchedGetAffinityAfterSet) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SchedGetAffinityFailure) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SchedGetAffinityFailure) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SocknameFailure_EBADF) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SocknameFailure_EBADF) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SocknameFailure_EFAULT) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SocknameFailure_EFAULT) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SocknameFailure_EINVAL) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SocknameFailure_EINVAL) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SocknameFailure_ENOTSOCK) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SocknameFailure_ENOTSOCK) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Sockname_SUCCESS) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Sockname_SUCCESS) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Stat) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Stat) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, StatOnSymlink) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, StatOnSymlink) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SysconfScNprocessorsConf) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SysconfScNprocessorsConf) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SysconfScNprocessorsOnln) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SysconfScNprocessorsOnln) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SysconfScPagesize) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, SysconfScPagesize) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Truncate) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Truncate) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Umask) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Umask) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Uname) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Uname) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Unlink) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Unlink) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Utimes) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Utimes) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Writev) {$/;"	f	namespace:asylo::__anon302
TEST_F	./platform/posix/syscalls_test_driver.cc	/^TEST_F(SyscallsTest, Writev) {$/;"	f	namespace:asylo::__anon48
TEST_F	./platform/primitives/examples/hello_test.cc	/^TEST_F(HelloTest, Hello) {$/;"	f	namespace:asylo::primitives::test
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, AbortEnclave) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, AbortEnclave) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, BadCall) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, BadCall) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, CallChain) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, CallChain) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, CopyMultipleParams) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, CopyMultipleParams) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, EnclaveLifetime) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, EnclaveLifetime) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, LoadEnclave) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, LoadEnclave) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, ThreadLocalStorageTest) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, ThreadLocalStorageTest) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, ThreadedStressMallocsTest) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, ThreadedStressMallocsTest) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, ThreadedTest) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, ThreadedTest) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, TrustedMalloc) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, TrustedMalloc) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, UnrustedAlloc) {$/;"	f	namespace:asylo::primitives::__anon334
TEST_F	./platform/primitives/test/primitives_test.cc	/^TEST_F(PrimitivesTest, UnrustedAlloc) {$/;"	f	namespace:asylo::primitives::__anon80
TEST_F	./platform/primitives/util/status_conversions_test.cc	/^TEST_F(StatusConversionsTest, PrimitiveStatusTestForStatusInGoogleError) {$/;"	f	namespace:asylo::primitives::__anon339
TEST_F	./platform/primitives/util/status_conversions_test.cc	/^TEST_F(StatusConversionsTest, PrimitiveStatusTestForStatusInGoogleError) {$/;"	f	namespace:asylo::primitives::__anon85
TEST_F	./platform/primitives/util/status_conversions_test.cc	/^TEST_F(StatusConversionsTest, PrimitiveStatusTestForStatusNotInGoogleError) {$/;"	f	namespace:asylo::primitives::__anon339
TEST_F	./platform/primitives/util/status_conversions_test.cc	/^TEST_F(StatusConversionsTest, PrimitiveStatusTestForStatusNotInGoogleError) {$/;"	f	namespace:asylo::primitives::__anon85
TEST_F	./platform/primitives/util/status_conversions_test.cc	/^TEST_F(StatusConversionsTest, ValidateStatus) {$/;"	f	namespace:asylo::primitives::__anon339
TEST_F	./platform/primitives/util/status_conversions_test.cc	/^TEST_F(StatusConversionsTest, ValidateStatus) {$/;"	f	namespace:asylo::primitives::__anon85
TEST_F	./platform/storage/utils/fd_closer_test.cc	/^TEST_F(FdCloserTest, FdCloserDefaultResetTest) {$/;"	f	namespace:asylo::platform::storage::__anon351
TEST_F	./platform/storage/utils/fd_closer_test.cc	/^TEST_F(FdCloserTest, FdCloserDefaultResetTest) {$/;"	f	namespace:asylo::platform::storage::__anon97
TEST_F	./platform/storage/utils/fd_closer_test.cc	/^TEST_F(FdCloserTest, FdCloserDestructorTest) {$/;"	f	namespace:asylo::platform::storage::__anon351
TEST_F	./platform/storage/utils/fd_closer_test.cc	/^TEST_F(FdCloserTest, FdCloserDestructorTest) {$/;"	f	namespace:asylo::platform::storage::__anon97
TEST_F	./platform/storage/utils/fd_closer_test.cc	/^TEST_F(FdCloserTest, FdCloserReleaseTest) {$/;"	f	namespace:asylo::platform::storage::__anon351
TEST_F	./platform/storage/utils/fd_closer_test.cc	/^TEST_F(FdCloserTest, FdCloserReleaseTest) {$/;"	f	namespace:asylo::platform::storage::__anon97
TEST_F	./platform/storage/utils/fd_closer_test.cc	/^TEST_F(FdCloserTest, FdCloserResetTest) {$/;"	f	namespace:asylo::platform::storage::__anon351
TEST_F	./platform/storage/utils/fd_closer_test.cc	/^TEST_F(FdCloserTest, FdCloserResetTest) {$/;"	f	namespace:asylo::platform::storage::__anon97
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, AfFamilyTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, AfFamilyTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, FDFlagTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, FDFlagTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, FcntlCommandTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, FcntlCommandTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, FileStatusFlagTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, FileStatusFlagTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, FlockOperationTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, FlockOperationTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, InotifyEventMaskTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, InotifyEventMaskTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, InotifyFlagsTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, InotifyFlagsTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, IpV6OptionNameTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, IpV6OptionNameTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, SocketOptionNameTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, SocketOptionNameTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, TcpOptionNameTest) {$/;"	f	namespace:asylo::system_call::__anon123
TEST_F	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^TEST_F(GeneratedTypesFunctionsTest, TcpOptionNameTest) {$/;"	f	namespace:asylo::system_call::__anon377
TEST_F	./test/grpc/enclave_communication_test.cc	/^TEST_F(EnclaveCommunicationTest, SimpleSynchronousRpc) {$/;"	f	namespace:asylo::__anon221
TEST_F	./test/grpc/enclave_communication_test.cc	/^TEST_F(EnclaveCommunicationTest, SimpleSynchronousRpc) {$/;"	f	namespace:asylo::__anon475
TEST_F	./test/grpc/enclave_insecure_server_test.cc	/^TEST_F(EnclaveServerTest, SimpleEnd2EndTest) {$/;"	f	namespace:asylo::test::__anon223
TEST_F	./test/grpc/enclave_insecure_server_test.cc	/^TEST_F(EnclaveServerTest, SimpleEnd2EndTest) {$/;"	f	namespace:asylo::test::__anon477
TEST_F	./test/grpc/enclave_secure_server_test.cc	/^TEST_F(EnclaveSecureGrpcTest, SimpleEnd2EndTest) {$/;"	f	namespace:asylo::test::__anon225
TEST_F	./test/grpc/enclave_secure_server_test.cc	/^TEST_F(EnclaveSecureGrpcTest, SimpleEnd2EndTest) {$/;"	f	namespace:asylo::test::__anon479
TEST_F	./test/loader/loader_test.cc	/^TEST_F(LoaderTest, DuplicateNamesFail) {$/;"	f	namespace:asylo::__anon215
TEST_F	./test/loader/loader_test.cc	/^TEST_F(LoaderTest, DuplicateNamesFail) {$/;"	f	namespace:asylo::__anon469
TEST_F	./test/loader/loader_test.cc	/^TEST_F(LoaderTest, FetchAfterDestroy) {$/;"	f	namespace:asylo::__anon215
TEST_F	./test/loader/loader_test.cc	/^TEST_F(LoaderTest, FetchAfterDestroy) {$/;"	f	namespace:asylo::__anon469
TEST_F	./test/loader/loader_test.cc	/^TEST_F(LoaderTest, Overall) {$/;"	f	namespace:asylo::__anon215
TEST_F	./test/loader/loader_test.cc	/^TEST_F(LoaderTest, Overall) {$/;"	f	namespace:asylo::__anon469
TEST_F	./test/loader/loader_test.cc	/^TEST_F(LoaderTest, PropagateLoaderFailure) {$/;"	f	namespace:asylo::__anon215
TEST_F	./test/loader/loader_test.cc	/^TEST_F(LoaderTest, PropagateLoaderFailure) {$/;"	f	namespace:asylo::__anon469
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, HandlerTest) {$/;"	f	namespace:asylo::__anon198
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, HandlerTest) {$/;"	f	namespace:asylo::__anon452
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, ResetHandlerTest) {$/;"	f	namespace:asylo::__anon198
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, ResetHandlerTest) {$/;"	f	namespace:asylo::__anon452
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, SigactionMaskTest) {$/;"	f	namespace:asylo::__anon198
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, SigactionMaskTest) {$/;"	f	namespace:asylo::__anon452
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, SigactionTest) {$/;"	f	namespace:asylo::__anon198
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, SigactionTest) {$/;"	f	namespace:asylo::__anon452
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, SignalMaskTest) {$/;"	f	namespace:asylo::__anon198
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, SignalMaskTest) {$/;"	f	namespace:asylo::__anon452
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, SignalTest) {$/;"	f	namespace:asylo::__anon198
TEST_F	./test/misc/active_enclave_signal_test_driver.cc	/^TEST_F(ActiveEnclaveSignalTest, SignalTest) {$/;"	f	namespace:asylo::__anon452
TEST_F	./test/misc/block_enclave_entries_test_driver.cc	/^TEST_F(BlockEnclaveEntriesTest, BlockUnblock) {$/;"	f	namespace:asylo::__anon203
TEST_F	./test/misc/block_enclave_entries_test_driver.cc	/^TEST_F(BlockEnclaveEntriesTest, BlockUnblock) {$/;"	f	namespace:asylo::__anon457
TEST_F	./test/misc/condvar_test.cc	/^TEST_F(BroadcastTest, Broadcast) {$/;"	f	namespace:asylo::__anon194
TEST_F	./test/misc/condvar_test.cc	/^TEST_F(BroadcastTest, Broadcast) {$/;"	f	namespace:asylo::__anon448
TEST_F	./test/misc/condvar_test.cc	/^TEST_F(ProducerConsumerTest, ProducerConsumer) {$/;"	f	namespace:asylo::__anon194
TEST_F	./test/misc/condvar_test.cc	/^TEST_F(ProducerConsumerTest, ProducerConsumer) {$/;"	f	namespace:asylo::__anon448
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, CheckSIGILL) {$/;"	f	namespace:asylo::__anon204
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, CheckSIGILL) {$/;"	f	namespace:asylo::__anon458
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, DieRaisesSIGILL) {$/;"	f	namespace:asylo::__anon204
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, DieRaisesSIGILL) {$/;"	f	namespace:asylo::__anon458
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, HaltExits) {$/;"	f	namespace:asylo::__anon204
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, HaltExits) {$/;"	f	namespace:asylo::__anon458
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, NoEntryAfterDie) {$/;"	f	namespace:asylo::__anon204
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, NoEntryAfterDie) {$/;"	f	namespace:asylo::__anon458
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, TrapExits) {$/;"	f	namespace:asylo::__anon204
TEST_F	./test/misc/die_test.cc	/^TEST_F(DieTest, TrapExits) {$/;"	f	namespace:asylo::__anon458
TEST_F	./test/misc/enclave_entry_count_test_driver.cc	/^TEST_F(EnclaveEntryCountTest, MultiThread) {$/;"	f	namespace:asylo::__anon211
TEST_F	./test/misc/enclave_entry_count_test_driver.cc	/^TEST_F(EnclaveEntryCountTest, MultiThread) {$/;"	f	namespace:asylo::__anon465
TEST_F	./test/misc/enclave_entry_count_test_driver.cc	/^TEST_F(EnclaveEntryCountTest, SingleThread) {$/;"	f	namespace:asylo::__anon211
TEST_F	./test/misc/enclave_entry_count_test_driver.cc	/^TEST_F(EnclaveEntryCountTest, SingleThread) {$/;"	f	namespace:asylo::__anon465
TEST_F	./test/misc/error_propagation_test.cc	/^TEST_F(ErrorPropagationTest, ErrorCanonical) {$/;"	f	namespace:asylo::__anon207
TEST_F	./test/misc/error_propagation_test.cc	/^TEST_F(ErrorPropagationTest, ErrorCanonical) {$/;"	f	namespace:asylo::__anon461
TEST_F	./test/misc/error_propagation_test.cc	/^TEST_F(ErrorPropagationTest, ErrorNonCanonical) {$/;"	f	namespace:asylo::__anon207
TEST_F	./test/misc/error_propagation_test.cc	/^TEST_F(ErrorPropagationTest, ErrorNonCanonical) {$/;"	f	namespace:asylo::__anon461
TEST_F	./test/misc/error_propagation_test.cc	/^TEST_F(ErrorPropagationTest, NoError) {$/;"	f	namespace:asylo::__anon207
TEST_F	./test/misc/error_propagation_test.cc	/^TEST_F(ErrorPropagationTest, NoError) {$/;"	f	namespace:asylo::__anon461
TEST_F	./test/misc/exception_test.cc	/^TEST_F(ExceptionTest, Caught) {$/;"	f	namespace:asylo::__anon214
TEST_F	./test/misc/exception_test.cc	/^TEST_F(ExceptionTest, Caught) {$/;"	f	namespace:asylo::__anon468
TEST_F	./test/misc/exception_test.cc	/^TEST_F(ExceptionTest, Uncaught) {$/;"	f	namespace:asylo::__anon214
TEST_F	./test/misc/exception_test.cc	/^TEST_F(ExceptionTest, Uncaught) {$/;"	f	namespace:asylo::__anon468
TEST_F	./test/misc/exhaust_sgx_tcs_test.cc	/^TEST_F(ExhaustSgxTcsTest, StdThreadResourceExhausted) {$/;"	f	namespace:asylo::__anon212
TEST_F	./test/misc/exhaust_sgx_tcs_test.cc	/^TEST_F(ExhaustSgxTcsTest, StdThreadResourceExhausted) {$/;"	f	namespace:asylo::__anon466
TEST_F	./test/misc/hello_world_test.cc	/^TEST_F(HelloWorldTest, HelloTest) {$/;"	f	namespace:asylo::__anon209
TEST_F	./test/misc/hello_world_test.cc	/^TEST_F(HelloWorldTest, HelloTest) {$/;"	f	namespace:asylo::__anon463
TEST_F	./test/misc/inactive_enclave_signal_test_driver.cc	/^TEST_F(InactiveEnclaveSignalTest, HandlerTest) {$/;"	f	namespace:asylo::__anon193
TEST_F	./test/misc/inactive_enclave_signal_test_driver.cc	/^TEST_F(InactiveEnclaveSignalTest, HandlerTest) {$/;"	f	namespace:asylo::__anon447
TEST_F	./test/misc/inactive_enclave_signal_test_driver.cc	/^TEST_F(InactiveEnclaveSignalTest, SigactionTest) {$/;"	f	namespace:asylo::__anon193
TEST_F	./test/misc/inactive_enclave_signal_test_driver.cc	/^TEST_F(InactiveEnclaveSignalTest, SigactionTest) {$/;"	f	namespace:asylo::__anon447
TEST_F	./test/misc/inactive_enclave_signal_test_driver.cc	/^TEST_F(InactiveEnclaveSignalTest, SignalTest) {$/;"	f	namespace:asylo::__anon193
TEST_F	./test/misc/inactive_enclave_signal_test_driver.cc	/^TEST_F(InactiveEnclaveSignalTest, SignalTest) {$/;"	f	namespace:asylo::__anon447
TEST_F	./test/misc/logging_test_driver.cc	/^TEST_F(EnclaveLoggingTest, ReadWriteTest) {$/;"	f	namespace:asylo::__anon206
TEST_F	./test/misc/logging_test_driver.cc	/^TEST_F(EnclaveLoggingTest, ReadWriteTest) {$/;"	f	namespace:asylo::__anon460
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, CleanupExecutedExplicitly) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, CleanupExecutedExplicitly) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, CleanupExecutedImplicitly) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, CleanupExecutedImplicitly) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, NestedCleanup) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, NestedCleanup) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, PartialPopWithExecution) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, PartialPopWithExecution) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, PartialPopWithoutExecution) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, PartialPopWithoutExecution) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, PopAllExecuteSome) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, PopAllExecuteSome) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, PoppedWithoutExecuting) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(PthreadCleanupTest, PoppedWithoutExecuting) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, Clear) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, Clear) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, Contains) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, Contains) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, ContainsFirst) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, ContainsFirst) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, Dequeue) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, Dequeue) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, DequeueEmpty) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, DequeueEmpty) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, EndToEnd) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, EndToEnd) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, First) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, First) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, InsertLast) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, InsertLast) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, Remove) {$/;"	f	namespace:asylo::pthread_impl::__anon201
TEST_F	./test/misc/pthread_test.cc	/^TEST_F(QueueOperationsTest, Remove) {$/;"	f	namespace:asylo::pthread_impl::__anon455
TEST_F	./test/misc/rdrand_test.cc	/^TEST_F(RdrandTest, HasRDRAND) {$/;"	f	namespace:__anon197
TEST_F	./test/misc/rdrand_test.cc	/^TEST_F(RdrandTest, HasRDRAND) {$/;"	f	namespace:__anon451
TEST_F	./test/misc/rwlock_test.cc	/^TEST_F(RwLockTest, Init) {$/;"	f	namespace:asylo::__anon213
TEST_F	./test/misc/rwlock_test.cc	/^TEST_F(RwLockTest, Init) {$/;"	f	namespace:asylo::__anon467
TEST_F	./test/misc/rwlock_test.cc	/^TEST_F(RwLockTest, InvalidPointers) {$/;"	f	namespace:asylo::__anon213
TEST_F	./test/misc/rwlock_test.cc	/^TEST_F(RwLockTest, InvalidPointers) {$/;"	f	namespace:asylo::__anon467
TEST_F	./test/misc/rwlock_test.cc	/^TEST_F(RwLockTest, ManyThreads) {$/;"	f	namespace:asylo::__anon213
TEST_F	./test/misc/rwlock_test.cc	/^TEST_F(RwLockTest, ManyThreads) {$/;"	f	namespace:asylo::__anon467
TEST_F	./test/misc/rwlock_test.cc	/^TEST_F(RwLockTest, MultipleReaders) {$/;"	f	namespace:asylo::__anon213
TEST_F	./test/misc/rwlock_test.cc	/^TEST_F(RwLockTest, MultipleReaders) {$/;"	f	namespace:asylo::__anon467
TEST_F	./test/misc/sem_test.cc	/^TEST_F(ProducerConsumerTest, ProducerConsumer) {$/;"	f	namespace:asylo::__anon205
TEST_F	./test/misc/sem_test.cc	/^TEST_F(ProducerConsumerTest, ProducerConsumer) {$/;"	f	namespace:asylo::__anon459
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckExit3) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckExit3) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckNoPrintB) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckNoPrintB) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckPrintA) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckPrintA) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckPrintB5) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckPrintB5) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckPrintB5Not3Times) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckPrintB5Not3Times) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckSIGILL) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckSIGILL) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckSIGSEGV) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckSIGSEGV) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckStderrFoo) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckStderrFoo) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckStdin) {$/;"	f	namespace:asylo::experimental::__anon216
TEST_F	./test/util/exec_tester_test.cc	/^TEST_F(ExecTesterTest, CheckStdin) {$/;"	f	namespace:asylo::experimental::__anon470
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIf32BitElf) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIf32BitElf) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBadMagicNumber) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBadMagicNumber) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBadNameTableType) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBadNameTableType) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBadShentsize) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBadShentsize) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBadShstrndx) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBadShstrndx) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBigEndian) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfBigEndian) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfDuplicateSectionNames) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfDuplicateSectionNames) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfNameTableTooBig) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfNameTableTooBig) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfNoSectionHeaderTable) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfNoSectionHeaderTable) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfNoSectionNameStringTable) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfNoSectionNameStringTable) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfSectionHeaderTableOverflow) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfSectionHeaderTableOverflow) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfSectionNameOutsideTable) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfSectionNameOutsideTable) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfSectionNotFound) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfSectionNotFound) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfSectionTooBig) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfSectionTooBig) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfTargetSectionHasNoData) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfTargetSectionHasNoData) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfTooManySections) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfTooManySections) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfWrongVersion) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, ReturnsAppropriateErrorIfWrongVersion) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, WorksOnValidInputs) {$/;"	f	namespace:asylo::__anon226
TEST_F	./util/elf_reader_test.cc	/^TEST_F(ElfReaderTest, WorksOnValidInputs) {$/;"	f	namespace:asylo::__anon480
TEST_F	./util/error_space_test.cc	/^TEST_F(ErrorSpaceTest, GoogleErrorSpaceInterface) {$/;"	f	namespace:asylo::error::__anon238
TEST_F	./util/error_space_test.cc	/^TEST_F(ErrorSpaceTest, GoogleErrorSpaceInterface) {$/;"	f	namespace:asylo::error::__anon492
TEST_F	./util/error_space_test.cc	/^TEST_F(ErrorSpaceTest, GoogleErrorSpaceSingleton) {$/;"	f	namespace:asylo::error::__anon238
TEST_F	./util/error_space_test.cc	/^TEST_F(ErrorSpaceTest, GoogleErrorSpaceSingleton) {$/;"	f	namespace:asylo::error::__anon492
TEST_F	./util/file_mapping_test.cc	/^TEST_F(FileMappingTest, MapExhibitsCopyOnWriteSemantics) {$/;"	f	namespace:asylo::__anon243
TEST_F	./util/file_mapping_test.cc	/^TEST_F(FileMappingTest, MapExhibitsCopyOnWriteSemantics) {$/;"	f	namespace:asylo::__anon497
TEST_F	./util/file_mapping_test.cc	/^TEST_F(FileMappingTest, MapsFileSuccessfully) {$/;"	f	namespace:asylo::__anon243
TEST_F	./util/file_mapping_test.cc	/^TEST_F(FileMappingTest, MapsFileSuccessfully) {$/;"	f	namespace:asylo::__anon497
TEST_F	./util/posix_error_space_test.cc	/^TEST_F(PosixErrorSpaceTest, PosixErrorSpaceGoogleErrorCode) {$/;"	f	namespace:asylo::error::__anon235
TEST_F	./util/posix_error_space_test.cc	/^TEST_F(PosixErrorSpaceTest, PosixErrorSpaceGoogleErrorCode) {$/;"	f	namespace:asylo::error::__anon489
TEST_F	./util/posix_error_space_test.cc	/^TEST_F(PosixErrorSpaceTest, PosixErrorSpaceSingletonCorrectness) {$/;"	f	namespace:asylo::error::__anon235
TEST_F	./util/posix_error_space_test.cc	/^TEST_F(PosixErrorSpaceTest, PosixErrorSpaceSingletonCorrectness) {$/;"	f	namespace:asylo::error::__anon489
TEST_F	./util/posix_error_space_test.cc	/^TEST_F(PosixErrorSpaceTest, PosixErrorSpaceSpaceName) {$/;"	f	namespace:asylo::error::__anon235
TEST_F	./util/posix_error_space_test.cc	/^TEST_F(PosixErrorSpaceTest, PosixErrorSpaceSpaceName) {$/;"	f	namespace:asylo::error::__anon489
TEST_F	./util/posix_error_space_test.cc	/^TEST_F(PosixErrorSpaceTest, PosixErrorSpaceString) {$/;"	f	namespace:asylo::error::__anon235
TEST_F	./util/posix_error_space_test.cc	/^TEST_F(PosixErrorSpaceTest, PosixErrorSpaceString) {$/;"	f	namespace:asylo::error::__anon489
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, CStyleDetachedThread) {$/;"	f	namespace:asylo::__anon233
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, CStyleDetachedThread) {$/;"	f	namespace:asylo::__anon487
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, CStyleThread) {$/;"	f	namespace:asylo::__anon233
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, CStyleThread) {$/;"	f	namespace:asylo::__anon487
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, DetachedThread) {$/;"	f	namespace:asylo::__anon233
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, DetachedThread) {$/;"	f	namespace:asylo::__anon487
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, MovedThread) {$/;"	f	namespace:asylo::__anon233
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, MovedThread) {$/;"	f	namespace:asylo::__anon487
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, MultipleThreads) {$/;"	f	namespace:asylo::__anon233
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, MultipleThreads) {$/;"	f	namespace:asylo::__anon487
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, MultipleThreadsMultipleTimes) {$/;"	f	namespace:asylo::__anon233
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, MultipleThreadsMultipleTimes) {$/;"	f	namespace:asylo::__anon487
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, SimpleThread) {$/;"	f	namespace:asylo::__anon233
TEST_F	./util/thread_test.cc	/^TEST_F(ThreadTest, SimpleThread) {$/;"	f	namespace:asylo::__anon487
TEST_P	./crypto/aead_cryptor_test.cc	/^TEST_P(AeadCryptorTest, EndToEndTest) {$/;"	f	namespace:asylo::experimental::__anon11
TEST_P	./crypto/aead_cryptor_test.cc	/^TEST_P(AeadCryptorTest, EndToEndTest) {$/;"	f	namespace:asylo::experimental::__anon265
TEST_P	./crypto/aead_cryptor_test.cc	/^TEST_P(AeadCryptorTest, OpenTest) {$/;"	f	namespace:asylo::experimental::__anon11
TEST_P	./crypto/aead_cryptor_test.cc	/^TEST_P(AeadCryptorTest, OpenTest) {$/;"	f	namespace:asylo::experimental::__anon265
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestAeadScheme) {$/;"	f	namespace:asylo::__anon12
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestAeadScheme) {$/;"	f	namespace:asylo::__anon266
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestInvalidInputOpen) {$/;"	f	namespace:asylo::__anon12
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestInvalidInputOpen) {$/;"	f	namespace:asylo::__anon266
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestInvalidInputSeal) {$/;"	f	namespace:asylo::__anon12
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestInvalidInputSeal) {$/;"	f	namespace:asylo::__anon266
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestInvalidKey) {$/;"	f	namespace:asylo::__anon12
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestInvalidKey) {$/;"	f	namespace:asylo::__anon266
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestNonceSize) {$/;"	f	namespace:asylo::__anon12
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestNonceSize) {$/;"	f	namespace:asylo::__anon266
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestVector) {$/;"	f	namespace:asylo::__anon12
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestVector) {$/;"	f	namespace:asylo::__anon266
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestWrongInformation) {$/;"	f	namespace:asylo::__anon12
TEST_P	./crypto/aead_key_test.cc	/^TEST_P(AeadKeyTest, AeadKeyTestWrongInformation) {$/;"	f	namespace:asylo::__anon266
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest, SignatureScheme) {$/;"	f	namespace:asylo::__anon19
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest, SignatureScheme) {$/;"	f	namespace:asylo::__anon273
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest, VerifySuccess) {$/;"	f	namespace:asylo::__anon19
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest, VerifySuccess) {$/;"	f	namespace:asylo::__anon273
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest, VerifyWithIncorrectSignatureFails) {$/;"	f	namespace:asylo::__anon19
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest, VerifyWithIncorrectSignatureFails) {$/;"	f	namespace:asylo::__anon273
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest, VerifyingKeySerializeToDer) {$/;"	f	namespace:asylo::__anon19
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest, VerifyingKeySerializeToDer) {$/;"	f	namespace:asylo::__anon273
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest,$/;"	f	namespace:asylo::__anon19
TEST_P	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^TEST_P(EcdsaP256Sha256VerifyingKeyTest,$/;"	f	namespace:asylo::__anon273
TEST_P	./identity/sgx/sgx_local_assertion_authority_test.cc	/^TEST_P(SgxLocalAssertionAuthorityTest, CanGenerate) {$/;"	f	namespace:asylo::__anon160
TEST_P	./identity/sgx/sgx_local_assertion_authority_test.cc	/^TEST_P(SgxLocalAssertionAuthorityTest, CanGenerate) {$/;"	f	namespace:asylo::__anon414
TEST_P	./identity/sgx/sgx_local_assertion_authority_test.cc	/^TEST_P(SgxLocalAssertionAuthorityTest, CanVerify) {$/;"	f	namespace:asylo::__anon160
TEST_P	./identity/sgx/sgx_local_assertion_authority_test.cc	/^TEST_P(SgxLocalAssertionAuthorityTest, CanVerify) {$/;"	f	namespace:asylo::__anon414
TEST_P	./identity/sgx/sgx_local_assertion_authority_test.cc	/^TEST_P(SgxLocalAssertionAuthorityTest, VerifyAssertionSameEnclave) {$/;"	f	namespace:asylo::__anon160
TEST_P	./identity/sgx/sgx_local_assertion_authority_test.cc	/^TEST_P(SgxLocalAssertionAuthorityTest, VerifyAssertionSameEnclave) {$/;"	f	namespace:asylo::__anon414
TEST_P	./platform/posix/io/path_normalization_test.cc	/^TEST_P(PathNormalizationTest, HasExpectedResult) {$/;"	f	namespace:asylo::io::util::__anon328
TEST_P	./platform/posix/io/path_normalization_test.cc	/^TEST_P(PathNormalizationTest, HasExpectedResult) {$/;"	f	namespace:asylo::io::util::__anon74
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, FileTruncateAttack) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, FileTruncateAttack) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, KeyNotSetFailure) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, KeyNotSetFailure) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, LseekEndSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, LseekEndSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, LseekReadWriteInterlacedMultiFdSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, LseekReadWriteInterlacedMultiFdSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, LseekReadWriteInterlacedSingleFdSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, LseekReadWriteInterlacedSingleFdSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ModificationWriteSuccessTest) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ModificationWriteSuccessTest) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteAuthTagsModified) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteAuthTagsModified) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteDataModified) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteDataModified) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteDigestModified) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteDigestModified) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteInterlacedSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteInterlacedSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteTokensModified) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteTokensModified) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteWithSparseSuccessTest) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReadWriteWithSparseSuccessTest) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, RedundantIoctlFailure) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, RedundantIoctlFailure) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, RedundantIoctlSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, RedundantIoctlSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReopenReadWriteSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, ReopenReadWriteSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, SimpleMisalignedReadSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, SimpleMisalignedReadSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, SimpleMisalignedWriteSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, SimpleMisalignedWriteSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, StatReturnLogicalFileSizeSuccess) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, StatReturnLogicalFileSizeSuccess) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, UnknownFdIoctlFailure) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, UnknownFdIoctlFailure) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, UnsupportedFileCreationFlagFailure) {$/;"	f	namespace:asylo::__anon100
TEST_P	./platform/storage/secure/enclave_storage_secure_test.cc	/^TEST_P(EnclaveStorageSecureTest, UnsupportedFileCreationFlagFailure) {$/;"	f	namespace:asylo::__anon354
TEST_P	./platform/storage/utils/offset_translator_test.cc	/^TEST_P(OffsetTranslatorTest, LogicalToPhysicalTest) {$/;"	f	namespace:asylo::__anon350
TEST_P	./platform/storage/utils/offset_translator_test.cc	/^TEST_P(OffsetTranslatorTest, LogicalToPhysicalTest) {$/;"	f	namespace:asylo::__anon96
TEST_P	./platform/storage/utils/offset_translator_test.cc	/^TEST_P(OffsetTranslatorTest, PhysicalToLogicalTest) {$/;"	f	namespace:asylo::__anon350
TEST_P	./platform/storage/utils/offset_translator_test.cc	/^TEST_P(OffsetTranslatorTest, PhysicalToLogicalTest) {$/;"	f	namespace:asylo::__anon96
TEST_P	./platform/storage/utils/offset_translator_test.cc	/^TEST_P(OffsetTranslatorTest, ReduceLogicalRangeToFullLogicalBlocksTest) {$/;"	f	namespace:asylo::__anon350
TEST_P	./platform/storage/utils/offset_translator_test.cc	/^TEST_P(OffsetTranslatorTest, ReduceLogicalRangeToFullLogicalBlocksTest) {$/;"	f	namespace:asylo::__anon96
THIRD_PARTY_ASYLO_PLATFORM_POSIX_SRC_RESOURCE_H_	./platform/posix/resource.cc	20;"	d	file:
TIOCGWINSZ	./platform/posix/include/sys/ioctl.h	34;"	d
TSI_ENCLAVE_CERTIFICATE_TYPE	./grpc/auth/core/enclave_transport_security.h	28;"	d
TSI_ENCLAVE_IDENTITIES_PROTO_PEER_PROPERTY	./grpc/auth/core/enclave_transport_security.h	31;"	d
TSI_ENCLAVE_RECORD_PROTOCOL_PEER_PROPERTY	./grpc/auth/core/enclave_transport_security.h	33;"	d
TYPED_TEST	./crypto/aes_gcm_siv_test.cc	/^TYPED_TEST(TypedAesGcmSivTest, KeySize128) {$/;"	f	namespace:asylo::__anon26
TYPED_TEST	./crypto/aes_gcm_siv_test.cc	/^TYPED_TEST(TypedAesGcmSivTest, KeySize128) {$/;"	f	namespace:asylo::__anon280
TYPED_TEST	./crypto/aes_gcm_siv_test.cc	/^TYPED_TEST(TypedAesGcmSivTest, KeySize256) {$/;"	f	namespace:asylo::__anon26
TYPED_TEST	./crypto/aes_gcm_siv_test.cc	/^TYPED_TEST(TypedAesGcmSivTest, KeySize256) {$/;"	f	namespace:asylo::__anon280
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, CopyToByteContainer) {$/;"	f	namespace:asylo::__anon21
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, CopyToByteContainer) {$/;"	f	namespace:asylo::__anon275
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, EmptySerialization) {$/;"	f	namespace:asylo::__anon21
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, EmptySerialization) {$/;"	f	namespace:asylo::__anon275
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, EmptySerializationAppend) {$/;"	f	namespace:asylo::__anon21
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, EmptySerializationAppend) {$/;"	f	namespace:asylo::__anon275
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SafeCompareNegative) {$/;"	f	namespace:asylo::__anon21
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SafeCompareNegative) {$/;"	f	namespace:asylo::__anon275
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SafeComparePositive) {$/;"	f	namespace:asylo::__anon21
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SafeComparePositive) {$/;"	f	namespace:asylo::__anon275
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SerializationContainsAllByteContainers) {$/;"	f	namespace:asylo::__anon21
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SerializationContainsAllByteContainers) {$/;"	f	namespace:asylo::__anon275
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SerializationsAreUnique) {$/;"	f	namespace:asylo::__anon21
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SerializationsAreUnique) {$/;"	f	namespace:asylo::__anon275
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SerializeLargeNumberOfInputs) {$/;"	f	namespace:asylo::__anon21
TYPED_TEST	./crypto/util/byte_container_util_test.cc	/^TYPED_TEST(ByteContainerUtilTypedTest, SerializeLargeNumberOfInputs) {$/;"	f	namespace:asylo::__anon275
TYPED_TEST	./crypto/util/byte_container_view_test.cc	/^TYPED_TEST(TypedByteContainerViewTest, DataMethod) {$/;"	f	namespace:asylo::__anon23
TYPED_TEST	./crypto/util/byte_container_view_test.cc	/^TYPED_TEST(TypedByteContainerViewTest, DataMethod) {$/;"	f	namespace:asylo::__anon277
TYPED_TEST	./crypto/util/byte_container_view_test.cc	/^TYPED_TEST(TypedByteContainerViewTest, SizeMethod) {$/;"	f	namespace:asylo::__anon23
TYPED_TEST	./crypto/util/byte_container_view_test.cc	/^TYPED_TEST(TypedByteContainerViewTest, SizeMethod) {$/;"	f	namespace:asylo::__anon277
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Cleanse) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Cleanse) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Constructors) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Constructors) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, CopyViaAtMethod) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, CopyViaAtMethod) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, CopyViaSubscriptOperator) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, CopyViaSubscriptOperator) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Destructor) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Destructor) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualityOperatorNegative2) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualityOperatorNegative2) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualityOperatorPositive1) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualityOperatorPositive1) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualsNegative1) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualsNegative1) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualsNegative2) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualsNegative2) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualsPositive1) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, EqualsPositive1) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ExplicitImmutableIteratorArithmeticAndComparison) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ExplicitImmutableIteratorArithmeticAndComparison) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ExplicitImmutableIteratorBasic) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ExplicitImmutableIteratorBasic) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ExplicitImmutableReverseIteratorBasic) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ExplicitImmutableReverseIteratorBasic) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Fill) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Fill) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ImplicitImmutableIteratorArithmeticAndComparison) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ImplicitImmutableIteratorArithmeticAndComparison) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ImplicitImmutableIteratorBasic) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ImplicitImmutableIteratorBasic) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ImplicitImmutableReverseIteratorBasic) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ImplicitImmutableReverseIteratorBasic) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, InequalityOperatorNegative1) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, InequalityOperatorNegative1) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, InequalityOperatorPositive2) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, InequalityOperatorPositive2) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, MutableIteratorArithmeticAndComparison) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, MutableIteratorArithmeticAndComparison) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, MutableIteratorBasic) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, MutableIteratorBasic) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, MutableReverseIteratorBasic) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, MutableReverseIteratorBasic) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, NewPlacement) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, NewPlacement) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, PrintTo) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, PrintTo) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplacePtrLargeRange) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplacePtrLargeRange) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplacePtrWithLargePos) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplacePtrWithLargePos) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplacePtrWithinRange) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplacePtrWithinRange) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplaceValueLargeRange) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplaceValueLargeRange) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplaceValueWithLargePos) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplaceValueWithLargePos) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplaceValueWithinRange) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, ReplaceValueWithinRange) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Set) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Set) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, SetLargerInput) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, SetLargerInput) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, SetSmallerInput) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, SetSmallerInput) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Traits) {$/;"	f	namespace:asylo::__anon24
TYPED_TEST	./crypto/util/bytes_test.cc	/^TYPED_TEST(TypedBytesTest, Traits) {$/;"	f	namespace:asylo::__anon278
TYPED_TEST	./crypto/util/trivial_object_util_test.cc	/^TYPED_TEST(TypedTrivialObjectUtilTest, BinaryStringConversions) {$/;"	f	namespace:asylo::__anon22
TYPED_TEST	./crypto/util/trivial_object_util_test.cc	/^TYPED_TEST(TypedTrivialObjectUtilTest, BinaryStringConversions) {$/;"	f	namespace:asylo::__anon276
TYPED_TEST	./crypto/util/trivial_object_util_test.cc	/^TYPED_TEST(TypedTrivialObjectUtilTest, Ones) {$/;"	f	namespace:asylo::__anon22
TYPED_TEST	./crypto/util/trivial_object_util_test.cc	/^TYPED_TEST(TypedTrivialObjectUtilTest, Ones) {$/;"	f	namespace:asylo::__anon276
TYPED_TEST	./crypto/util/trivial_object_util_test.cc	/^TYPED_TEST(TypedTrivialObjectUtilTest, Random) {$/;"	f	namespace:asylo::__anon22
TYPED_TEST	./crypto/util/trivial_object_util_test.cc	/^TYPED_TEST(TypedTrivialObjectUtilTest, Random) {$/;"	f	namespace:asylo::__anon276
TYPED_TEST	./crypto/util/trivial_object_util_test.cc	/^TYPED_TEST(TypedTrivialObjectUtilTest, Zero) {$/;"	f	namespace:asylo::__anon22
TYPED_TEST	./crypto/util/trivial_object_util_test.cc	/^TYPED_TEST(TypedTrivialObjectUtilTest, Zero) {$/;"	f	namespace:asylo::__anon276
TYPED_TEST	./grpc/auth/core/transcript_test.cc	/^TYPED_TEST(TranscriptTest, AddBytesAndHash) {$/;"	f	namespace:asylo::grpc::auth::__anon261
TYPED_TEST	./grpc/auth/core/transcript_test.cc	/^TYPED_TEST(TranscriptTest, AddBytesAndHash) {$/;"	f	namespace:asylo::grpc::auth::__anon515
TYPED_TEST	./grpc/auth/core/transcript_test.cc	/^TYPED_TEST(TranscriptTest, HashFailsWithNoHashFunction) {$/;"	f	namespace:asylo::grpc::auth::__anon261
TYPED_TEST	./grpc/auth/core/transcript_test.cc	/^TYPED_TEST(TranscriptTest, HashFailsWithNoHashFunction) {$/;"	f	namespace:asylo::grpc::auth::__anon515
TYPED_TEST	./grpc/auth/core/transcript_test.cc	/^TYPED_TEST(TranscriptTest, HashSameAsUnderlyingHash) {$/;"	f	namespace:asylo::grpc::auth::__anon261
TYPED_TEST	./grpc/auth/core/transcript_test.cc	/^TYPED_TEST(TranscriptTest, HashSameAsUnderlyingHash) {$/;"	f	namespace:asylo::grpc::auth::__anon515
TYPED_TEST	./grpc/auth/core/transcript_test.cc	/^TYPED_TEST(TranscriptTest, SetHasherSucceedsOnce) {$/;"	f	namespace:asylo::grpc::auth::__anon261
TYPED_TEST	./grpc/auth/core/transcript_test.cc	/^TYPED_TEST(TranscriptTest, SetHasherSucceedsOnce) {$/;"	f	namespace:asylo::grpc::auth::__anon515
TYPED_TEST	./platform/common/singleton_test.cc	/^TYPED_TEST(TypedSingletonTest, SingletonCorrectness) {$/;"	f	namespace:asylo::__anon112
TYPED_TEST	./platform/common/singleton_test.cc	/^TYPED_TEST(TypedSingletonTest, SingletonCorrectness) {$/;"	f	namespace:asylo::__anon366
TYPED_TEST	./platform/core/test/lock_test.cc	/^TYPED_TEST(LockTest, NonRecursiveManyThreadsTest) {$/;"	f	namespace:asylo::__anon130
TYPED_TEST	./platform/core/test/lock_test.cc	/^TYPED_TEST(LockTest, NonRecursiveManyThreadsTest) {$/;"	f	namespace:asylo::__anon384
TYPED_TEST	./platform/core/test/lock_test.cc	/^TYPED_TEST(LockTest, RecursiveManyThreadsTest) {$/;"	f	namespace:asylo::__anon130
TYPED_TEST	./platform/core/test/lock_test.cc	/^TYPED_TEST(LockTest, RecursiveManyThreadsTest) {$/;"	f	namespace:asylo::__anon384
TYPED_TEST	./platform/core/test/lock_test.cc	/^TYPED_TEST(LockTest, RecursiveTest) {$/;"	f	namespace:asylo::__anon130
TYPED_TEST	./platform/core/test/lock_test.cc	/^TYPED_TEST(LockTest, RecursiveTest) {$/;"	f	namespace:asylo::__anon384
TYPED_TEST	./platform/posix/endian_test.cc	/^TYPED_TEST(EndianTest, DiffToHostByteswapsValues) {$/;"	f	namespace:asylo::__anon298
TYPED_TEST	./platform/posix/endian_test.cc	/^TYPED_TEST(EndianTest, DiffToHostByteswapsValues) {$/;"	f	namespace:asylo::__anon44
TYPED_TEST	./platform/posix/endian_test.cc	/^TYPED_TEST(EndianTest, HostToDiffByteswapsValues) {$/;"	f	namespace:asylo::__anon298
TYPED_TEST	./platform/posix/endian_test.cc	/^TYPED_TEST(EndianTest, HostToDiffByteswapsValues) {$/;"	f	namespace:asylo::__anon44
TYPED_TEST	./platform/posix/endian_test.cc	/^TYPED_TEST(EndianTest, HostToSamePreservesValues) {$/;"	f	namespace:asylo::__anon298
TYPED_TEST	./platform/posix/endian_test.cc	/^TYPED_TEST(EndianTest, HostToSamePreservesValues) {$/;"	f	namespace:asylo::__anon44
TYPED_TEST	./platform/posix/endian_test.cc	/^TYPED_TEST(EndianTest, SameToHostPreservesValues) {$/;"	f	namespace:asylo::__anon298
TYPED_TEST	./platform/posix/endian_test.cc	/^TYPED_TEST(EndianTest, SameToHostPreservesValues) {$/;"	f	namespace:asylo::__anon44
TYPED_TEST	./test/grpc/channel_test.cc	/^TYPED_TEST(ChannelTest, EndToEnd) {$/;"	f	namespace:asylo::__anon224
TYPED_TEST	./test/grpc/channel_test.cc	/^TYPED_TEST(ChannelTest, EndToEnd) {$/;"	f	namespace:asylo::__anon478
TYPED_TEST	./util/cleansing_allocator_test.cc	/^TYPED_TEST(TypedCleansingAllocatorTest, ListTest) {$/;"	f	namespace:asylo::__anon239
TYPED_TEST	./util/cleansing_allocator_test.cc	/^TYPED_TEST(TypedCleansingAllocatorTest, ListTest) {$/;"	f	namespace:asylo::__anon493
TYPED_TEST	./util/cleansing_allocator_test.cc	/^TYPED_TEST(TypedCleansingAllocatorTest, StringTest) {$/;"	f	namespace:asylo::__anon239
TYPED_TEST	./util/cleansing_allocator_test.cc	/^TYPED_TEST(TypedCleansingAllocatorTest, StringTest) {$/;"	f	namespace:asylo::__anon493
TYPED_TEST	./util/cleansing_allocator_test.cc	/^TYPED_TEST(TypedCleansingAllocatorTest, VectorTest) {$/;"	f	namespace:asylo::__anon239
TYPED_TEST	./util/cleansing_allocator_test.cc	/^TYPED_TEST(TypedCleansingAllocatorTest, VectorTest) {$/;"	f	namespace:asylo::__anon493
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, ConstructorDefault) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, ConstructorDefault) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, ConstructorElementConstReference) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, ConstructorElementConstReference) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, ConstructorElementRValue) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, ConstructorElementRValue) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, ConstructorStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, ConstructorStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyAssignmentNonOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyAssignmentNonOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyAssignmentOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyAssignmentOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyAssignmentSelfNonOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyAssignmentSelfNonOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyAssignmentSelfOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyAssignmentSelfOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyConstructorNonOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyConstructorNonOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyConstructorOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, CopyConstructorOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, IsOkMatcher) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, IsOkMatcher) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveAssignmentOperatorNonOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveAssignmentOperatorNonOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveAssignmentOperatorOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveAssignmentOperatorOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveAssignmentSelfNonOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveAssignmentSelfNonOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveAssignmentSelfOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveAssignmentSelfOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveConstructorNonOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveConstructorNonOkStatus) {$/;"	f	namespace:asylo::__anon485
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveConstructorOkStatus) {$/;"	f	namespace:asylo::__anon231
TYPED_TEST	./util/statusor_test.cc	/^TYPED_TEST(StatusOrTest, MoveConstructorOkStatus) {$/;"	f	namespace:asylo::__anon485
T_A	./platform/posix/include/arpa/nameser.h	158;"	d
T_A	./platform/system/include/arpa/nameser_compat.h	37;"	d
T_A6	./platform/posix/include/arpa/nameser.h	193;"	d
T_AAAA	./platform/posix/include/arpa/nameser.h	185;"	d
T_AAAA	./platform/system/include/arpa/nameser_compat.h	43;"	d
T_AFSDB	./platform/posix/include/arpa/nameser.h	175;"	d
T_ANY	./platform/posix/include/arpa/nameser.h	200;"	d
T_ATMA	./platform/posix/include/arpa/nameser.h	191;"	d
T_AXFR	./platform/posix/include/arpa/nameser.h	197;"	d
T_CNAME	./platform/posix/include/arpa/nameser.h	162;"	d
T_CNAME	./platform/system/include/arpa/nameser_compat.h	39;"	d
T_DNAME	./platform/posix/include/arpa/nameser.h	194;"	d
T_EID	./platform/posix/include/arpa/nameser.h	188;"	d
T_GPOS	./platform/posix/include/arpa/nameser.h	184;"	d
T_HINFO	./platform/posix/include/arpa/nameser.h	170;"	d
T_ISDN	./platform/posix/include/arpa/nameser.h	177;"	d
T_IXFR	./platform/posix/include/arpa/nameser.h	196;"	d
T_KEY	./platform/posix/include/arpa/nameser.h	182;"	d
T_LOC	./platform/posix/include/arpa/nameser.h	186;"	d
T_MAILA	./platform/posix/include/arpa/nameser.h	199;"	d
T_MAILB	./platform/posix/include/arpa/nameser.h	198;"	d
T_MB	./platform/posix/include/arpa/nameser.h	164;"	d
T_MD	./platform/posix/include/arpa/nameser.h	160;"	d
T_MF	./platform/posix/include/arpa/nameser.h	161;"	d
T_MG	./platform/posix/include/arpa/nameser.h	165;"	d
T_MINFO	./platform/posix/include/arpa/nameser.h	171;"	d
T_MR	./platform/posix/include/arpa/nameser.h	166;"	d
T_MX	./platform/posix/include/arpa/nameser.h	172;"	d
T_MX	./platform/system/include/arpa/nameser_compat.h	41;"	d
T_NAPTR	./platform/posix/include/arpa/nameser.h	192;"	d
T_NIMLOC	./platform/posix/include/arpa/nameser.h	189;"	d
T_NS	./platform/posix/include/arpa/nameser.h	159;"	d
T_NS	./platform/system/include/arpa/nameser_compat.h	38;"	d
T_NSAP	./platform/posix/include/arpa/nameser.h	179;"	d
T_NSAP_PTR	./platform/posix/include/arpa/nameser.h	180;"	d
T_NULL	./platform/posix/include/arpa/nameser.h	167;"	d
T_NXT	./platform/posix/include/arpa/nameser.h	187;"	d
T_PTR	./platform/posix/include/arpa/nameser.h	169;"	d
T_PTR	./platform/system/include/arpa/nameser_compat.h	40;"	d
T_PX	./platform/posix/include/arpa/nameser.h	183;"	d
T_RP	./platform/posix/include/arpa/nameser.h	174;"	d
T_RT	./platform/posix/include/arpa/nameser.h	178;"	d
T_SIG	./platform/posix/include/arpa/nameser.h	181;"	d
T_SOA	./platform/posix/include/arpa/nameser.h	163;"	d
T_SRV	./platform/posix/include/arpa/nameser.h	190;"	d
T_TSIG	./platform/posix/include/arpa/nameser.h	195;"	d
T_TXT	./platform/posix/include/arpa/nameser.h	173;"	d
T_TXT	./platform/system/include/arpa/nameser_compat.h	42;"	d
T_WKS	./platform/posix/include/arpa/nameser.h	168;"	d
T_X25	./platform/posix/include/arpa/nameser.h	176;"	d
TakeSnapshotForFork	./platform/arch/common/trusted/fork.cc	/^Status TakeSnapshotForFork(SnapshotLayout *snapshot_layout) {$/;"	f	namespace:asylo
TakeSnapshotForFork	./platform/arch/sgx/trusted/fork.cc	/^Status TakeSnapshotForFork(SnapshotLayout *snapshot_layout) {$/;"	f	namespace:asylo
Targetinfo	./identity/sgx/identity_key_management_structs.h	/^struct Targetinfo {$/;"	s	class:asylo::sgx::KeyrequestKeyname
TcbFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<Tcb> TcbFromJson(const std::string &json_string) {$/;"	f	namespace:asylo::sgx
TcbFromJsonValue	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<Tcb> TcbFromJsonValue(const google::protobuf::Value &json_value) {$/;"	f	namespace:asylo::sgx::__anon158
TcbFromJsonValue	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<Tcb> TcbFromJsonValue(const google::protobuf::Value &json_value) {$/;"	f	namespace:asylo::sgx::__anon412
TcbInfoFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<TcbInfo> TcbInfoFromJson(const std::string &json_string) {$/;"	f	namespace:asylo::sgx
TcbInfoFromJsonV1	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<TcbInfo> TcbInfoFromJsonV1($/;"	f	namespace:asylo::sgx::__anon158
TcbInfoFromJsonV1	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<TcbInfo> TcbInfoFromJsonV1($/;"	f	namespace:asylo::sgx::__anon412
TcbLevelFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<TcbLevel> TcbLevelFromJson($/;"	f	namespace:asylo::sgx::__anon158
TcbLevelFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<TcbLevel> TcbLevelFromJson($/;"	f	namespace:asylo::sgx::__anon412
TcbLevelsFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<google::protobuf::RepeatedPtrField<TcbLevel>> TcbLevelsFromJson($/;"	f	namespace:asylo::sgx::__anon158
TcbLevelsFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<google::protobuf::RepeatedPtrField<TcbLevel>> TcbLevelsFromJson($/;"	f	namespace:asylo::sgx::__anon412
TcbStatusFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<TcbStatus> TcbStatusFromJson($/;"	f	namespace:asylo::sgx::__anon158
TcbStatusFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<TcbStatus> TcbStatusFromJson($/;"	f	namespace:asylo::sgx::__anon412
TcpOptionNames	./platform/common/bridge_types.h	/^enum TcpOptionNames {$/;"	g
TearDown	./test/util/enclave_test_launcher.cc	/^Status EnclaveTestLauncher::TearDown(const EnclaveFinal &efinal,$/;"	f	class:asylo::EnclaveTestLauncher
TearDownBase	./test/util/enclave_test.cc	/^void EnclaveTest::TearDownBase(bool skip_finalize) {$/;"	f	class:asylo::EnclaveTest
TearDownSecureFullstack	./grpc/auth/test/h2_enclave_security_test.cc	/^void TearDownSecureFullstack(grpc_end2end_test_fixture *f) {$/;"	f	namespace:asylo::__anon247
TearDownSecureFullstack	./grpc/auth/test/h2_enclave_security_test.cc	/^void TearDownSecureFullstack(grpc_end2end_test_fixture *f) {$/;"	f	namespace:asylo::__anon501
TearDownTestSuite	./platform/primitives/test/primitives_test.cc	/^  static void TearDownTestSuite() {$/;"	f	class:asylo::primitives::__anon334::PrimitivesTest
TearDownTestSuite	./platform/primitives/test/primitives_test.cc	/^  static void TearDownTestSuite() {$/;"	f	class:asylo::primitives::__anon80::PrimitivesTest
TestAccess	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestAccess($/;"	f	namespace:asylo::host_call::__anon291
TestAccess	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestAccess($/;"	f	namespace:asylo::host_call::__anon37
TestAllocator	./util/cleansing_allocator_test.cc	/^  explicit TestAllocator(const TestAllocator<U> &a)$/;"	f	class:asylo::__anon239::TestAllocator
TestAllocator	./util/cleansing_allocator_test.cc	/^  explicit TestAllocator(const TestAllocator<U> &a)$/;"	f	class:asylo::__anon493::TestAllocator
TestAllocator	./util/cleansing_allocator_test.cc	/^class TestAllocator : public std::allocator<T> {$/;"	c	namespace:asylo::__anon239	file:
TestAllocator	./util/cleansing_allocator_test.cc	/^class TestAllocator : public std::allocator<T> {$/;"	c	namespace:asylo::__anon493	file:
TestAttribute	./identity/sgx/secs_attributes.cc	/^bool TestAttribute(SecsAttributeBit attribute, const Attributes &attributes) {$/;"	f	namespace:asylo::sgx
TestAttribute	./identity/sgx/secs_attributes.cc	/^bool TestAttribute(SecsAttributeBit attribute,$/;"	f	namespace:asylo::sgx
TestBackend	./platform/primitives/test/test_backend.h	/^class TestBackend {$/;"	c	namespace:asylo::primitives::test
TestChmod	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestChmod($/;"	f	namespace:asylo::host_call::__anon291
TestChmod	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestChmod($/;"	f	namespace:asylo::host_call::__anon37
TestChown	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestChown($/;"	f	namespace:asylo::host_call::__anon291
TestChown	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestChown($/;"	f	namespace:asylo::host_call::__anon37
TestClass	./identity/util/aligned_object_ptr_test.cc	/^  TestClass() : a_{0}, b_{0} {}$/;"	f	class:asylo::__anon172::TestClass
TestClass	./identity/util/aligned_object_ptr_test.cc	/^  TestClass() : a_{0}, b_{0} {}$/;"	f	class:asylo::__anon426::TestClass
TestClass	./identity/util/aligned_object_ptr_test.cc	/^  TestClass(uint64_t a, uint32_t b) : a_{a}, b_{b} {}$/;"	f	class:asylo::__anon172::TestClass
TestClass	./identity/util/aligned_object_ptr_test.cc	/^  TestClass(uint64_t a, uint32_t b) : a_{a}, b_{b} {}$/;"	f	class:asylo::__anon426::TestClass
TestClass	./identity/util/aligned_object_ptr_test.cc	/^class TestClass {$/;"	c	namespace:asylo::__anon172	file:
TestClass	./identity/util/aligned_object_ptr_test.cc	/^class TestClass {$/;"	c	namespace:asylo::__anon426	file:
TestClient	./test/loader/loader_test.cc	/^  TestClient() : EnclaveClient("test") {}$/;"	f	class:asylo::__anon215::TestClient
TestClient	./test/loader/loader_test.cc	/^  TestClient() : EnclaveClient("test") {}$/;"	f	class:asylo::__anon469::TestClient
TestClient	./test/loader/loader_test.cc	/^class TestClient : public EnclaveClient {$/;"	c	namespace:asylo::__anon215	file:
TestClient	./test/loader/loader_test.cc	/^class TestClient : public EnclaveClient {$/;"	c	namespace:asylo::__anon469	file:
TestClose	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestClose($/;"	f	namespace:asylo::host_call::__anon291
TestClose	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestClose($/;"	f	namespace:asylo::host_call::__anon37
TestContext	./platform/posix/io/virtual_test.cc	/^    TestContext(std::string label) : label_(label) {}$/;"	f	class:asylo::__anon326::VirtualHandlerTest::TestContext
TestContext	./platform/posix/io/virtual_test.cc	/^    TestContext(std::string label) : label_(label) {}$/;"	f	class:asylo::__anon72::VirtualHandlerTest::TestContext
TestContext	./platform/posix/io/virtual_test.cc	/^  class TestContext : public io::IOManager::IOContext {$/;"	c	class:asylo::__anon326::VirtualHandlerTest	file:
TestContext	./platform/posix/io/virtual_test.cc	/^  class TestContext : public io::IOManager::IOContext {$/;"	c	class:asylo::__anon72::VirtualHandlerTest	file:
TestData	./platform/posix/endian_test.cc	/^struct TestData<uint16_t> {$/;"	s	namespace:asylo::__anon298	file:
TestData	./platform/posix/endian_test.cc	/^struct TestData<uint16_t> {$/;"	s	namespace:asylo::__anon44	file:
TestData	./platform/posix/endian_test.cc	/^struct TestData<uint32_t> {$/;"	s	namespace:asylo::__anon298	file:
TestData	./platform/posix/endian_test.cc	/^struct TestData<uint32_t> {$/;"	s	namespace:asylo::__anon44	file:
TestData	./platform/posix/endian_test.cc	/^struct TestData<uint64_t> {$/;"	s	namespace:asylo::__anon298	file:
TestData	./platform/posix/endian_test.cc	/^struct TestData<uint64_t> {$/;"	s	namespace:asylo::__anon44	file:
TestDie	./test/misc/die.cc	/^class TestDie : public TrustedApplication {$/;"	c	namespace:asylo	file:
TestException	./test/misc/exception.cc	/^TestException::TestException(const TestException &other)$/;"	f	class:asylo::TestException
TestException	./test/misc/exception.cc	/^TestException::TestException(int code, const std::string &message)$/;"	f	class:asylo::TestException
TestException	./test/misc/exception.h	/^class TestException {$/;"	c	namespace:asylo
TestFChown	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFChown($/;"	f	namespace:asylo::host_call::__anon291
TestFChown	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFChown($/;"	f	namespace:asylo::host_call::__anon37
TestFTruncate	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFTruncate($/;"	f	namespace:asylo::host_call::__anon291
TestFTruncate	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFTruncate($/;"	f	namespace:asylo::host_call::__anon37
TestFchmod	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFchmod($/;"	f	namespace:asylo::host_call::__anon291
TestFchmod	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFchmod($/;"	f	namespace:asylo::host_call::__anon37
TestFcntl	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFcntl($/;"	f	namespace:asylo::host_call::__anon291
TestFcntl	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFcntl($/;"	f	namespace:asylo::host_call::__anon37
TestFlock	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFlock($/;"	f	namespace:asylo::host_call::__anon291
TestFlock	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFlock($/;"	f	namespace:asylo::host_call::__anon37
TestFsync	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFsync($/;"	f	namespace:asylo::host_call::__anon291
TestFsync	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestFsync($/;"	f	namespace:asylo::host_call::__anon37
TestGetPpid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetPpid($/;"	f	namespace:asylo::host_call::__anon291
TestGetPpid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetPpid($/;"	f	namespace:asylo::host_call::__anon37
TestGetegid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetegid($/;"	f	namespace:asylo::host_call::__anon291
TestGetegid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetegid($/;"	f	namespace:asylo::host_call::__anon37
TestGeteuid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGeteuid($/;"	f	namespace:asylo::host_call::__anon291
TestGeteuid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGeteuid($/;"	f	namespace:asylo::host_call::__anon37
TestGetgid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetgid($/;"	f	namespace:asylo::host_call::__anon291
TestGetgid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetgid($/;"	f	namespace:asylo::host_call::__anon37
TestGetpid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetpid($/;"	f	namespace:asylo::host_call::__anon291
TestGetpid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetpid($/;"	f	namespace:asylo::host_call::__anon37
TestGetuid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetuid($/;"	f	namespace:asylo::host_call::__anon291
TestGetuid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestGetuid($/;"	f	namespace:asylo::host_call::__anon37
TestHandler	./platform/posix/io/virtual_test.cc	/^    TestHandler(std::string label) : label_(label) {}$/;"	f	class:asylo::__anon326::VirtualHandlerTest::TestHandler
TestHandler	./platform/posix/io/virtual_test.cc	/^    TestHandler(std::string label) : label_(label) {}$/;"	f	class:asylo::__anon72::VirtualHandlerTest::TestHandler
TestHandler	./platform/posix/io/virtual_test.cc	/^  class TestHandler : public io::IOManager::VirtualPathHandler {$/;"	c	class:asylo::__anon326::VirtualHandlerTest	file:
TestHandler	./platform/posix/io/virtual_test.cc	/^  class TestHandler : public io::IOManager::VirtualPathHandler {$/;"	c	class:asylo::__anon72::VirtualHandlerTest	file:
TestInotifyAddWatch	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestInotifyAddWatch($/;"	f	namespace:asylo::host_call::__anon291
TestInotifyAddWatch	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestInotifyAddWatch($/;"	f	namespace:asylo::host_call::__anon37
TestInotifyInit1	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestInotifyInit1($/;"	f	namespace:asylo::host_call::__anon291
TestInotifyInit1	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestInotifyInit1($/;"	f	namespace:asylo::host_call::__anon37
TestInotifyRmWatch	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestInotifyRmWatch($/;"	f	namespace:asylo::host_call::__anon291
TestInotifyRmWatch	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestInotifyRmWatch($/;"	f	namespace:asylo::host_call::__anon37
TestIsAtty	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestIsAtty($/;"	f	namespace:asylo::host_call::__anon291
TestIsAtty	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestIsAtty($/;"	f	namespace:asylo::host_call::__anon37
TestKill	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestKill($/;"	f	namespace:asylo::host_call::__anon291
TestKill	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestKill($/;"	f	namespace:asylo::host_call::__anon37
TestLink	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestLink($/;"	f	namespace:asylo::host_call::__anon291
TestLink	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestLink($/;"	f	namespace:asylo::host_call::__anon37
TestLseek	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestLseek($/;"	f	namespace:asylo::host_call::__anon291
TestLseek	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestLseek($/;"	f	namespace:asylo::host_call::__anon37
TestMiscselectBit	./identity/sgx/secs_miscselect.cc	/^StatusOr<bool> TestMiscselectBit(SecsMiscselectBit miscselect_bit,$/;"	f	namespace:asylo::sgx
TestMkdir	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestMkdir($/;"	f	namespace:asylo::host_call::__anon291
TestMkdir	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestMkdir($/;"	f	namespace:asylo::host_call::__anon37
TestMoveAssign	./identity/util/aligned_object_ptr_test.cc	/^void TestMoveAssign(AlignedObjectPtr<T, ALIGN> *t) {$/;"	f	namespace:asylo::__anon172
TestMoveAssign	./identity/util/aligned_object_ptr_test.cc	/^void TestMoveAssign(AlignedObjectPtr<T, ALIGN> *t) {$/;"	f	namespace:asylo::__anon426
TestMultiValuedEnums	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^  void TestMultiValuedEnums($/;"	f	class:asylo::system_call::__anon123::GeneratedTypesFunctionsTest
TestMultiValuedEnums	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^  void TestMultiValuedEnums($/;"	f	class:asylo::system_call::__anon377::GeneratedTypesFunctionsTest
TestOpen	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestOpen($/;"	f	namespace:asylo::host_call::__anon291
TestOpen	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestOpen($/;"	f	namespace:asylo::host_call::__anon37
TestRead	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestRead($/;"	f	namespace:asylo::host_call::__anon291
TestRead	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestRead($/;"	f	namespace:asylo::host_call::__anon37
TestReadlink	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestReadlink($/;"	f	namespace:asylo::host_call::__anon291
TestReadlink	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestReadlink($/;"	f	namespace:asylo::host_call::__anon37
TestRename	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestRename($/;"	f	namespace:asylo::host_call::__anon291
TestRename	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestRename($/;"	f	namespace:asylo::host_call::__anon37
TestResource	./platform/core/test/shared_resource_test.cc	/^  explicit TestResource(bool *alive) : alive(alive) { *alive = true; }$/;"	f	struct:asylo::__anon134::TestResource
TestResource	./platform/core/test/shared_resource_test.cc	/^  explicit TestResource(bool *alive) : alive(alive) { *alive = true; }$/;"	f	struct:asylo::__anon388::TestResource
TestResource	./platform/core/test/shared_resource_test.cc	/^struct TestResource {$/;"	s	namespace:asylo::__anon134	file:
TestResource	./platform/core/test/shared_resource_test.cc	/^struct TestResource {$/;"	s	namespace:asylo::__anon388	file:
TestRmdir	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestRmdir($/;"	f	namespace:asylo::host_call::__anon291
TestRmdir	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestRmdir($/;"	f	namespace:asylo::host_call::__anon37
TestSchedYield	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSchedYield($/;"	f	namespace:asylo::host_call::__anon291
TestSchedYield	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSchedYield($/;"	f	namespace:asylo::host_call::__anon37
TestSetSid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSetSid($/;"	f	namespace:asylo::host_call::__anon291
TestSetSid	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSetSid($/;"	f	namespace:asylo::host_call::__anon37
TestSetsockopt	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSetsockopt($/;"	f	namespace:asylo::host_call::__anon291
TestSetsockopt	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSetsockopt($/;"	f	namespace:asylo::host_call::__anon37
TestShimEnclave	./bazel/test_shim_enclave.cc	/^class TestShimEnclave : public EnclaveTestCase {$/;"	c	namespace:asylo	file:
TestSingleton	./platform/common/singleton_test.cc	/^void TestSingleton(T **ptr, absl::Mutex *mu) {$/;"	f	namespace:asylo::__anon112
TestSingleton	./platform/common/singleton_test.cc	/^void TestSingleton(T **ptr, absl::Mutex *mu) {$/;"	f	namespace:asylo::__anon366
TestSocket	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSocket($/;"	f	namespace:asylo::host_call::__anon291
TestSocket	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSocket($/;"	f	namespace:asylo::host_call::__anon37
TestStruct	./identity/util/aligned_object_ptr_test.cc	/^struct TestStruct {$/;"	s	namespace:asylo::__anon172	file:
TestStruct	./identity/util/aligned_object_ptr_test.cc	/^struct TestStruct {$/;"	s	namespace:asylo::__anon426	file:
TestSymlink	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSymlink($/;"	f	namespace:asylo::host_call::__anon291
TestSymlink	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestSymlink($/;"	f	namespace:asylo::host_call::__anon37
TestThread	./test/misc/pthread_test.cc	/^pthread_t TestThread(uint64_t num) { return static_cast<pthread_t>(num); }$/;"	f	namespace:asylo::pthread_impl::__anon201
TestThread	./test/misc/pthread_test.cc	/^pthread_t TestThread(uint64_t num) { return static_cast<pthread_t>(num); }$/;"	f	namespace:asylo::pthread_impl::__anon455
TestTruncate	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestTruncate($/;"	f	namespace:asylo::host_call::__anon291
TestTruncate	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestTruncate($/;"	f	namespace:asylo::host_call::__anon37
TestTypes	./grpc/auth/core/transcript_test.cc	/^typedef ::testing::Types<FakeHash, Sha256Hash> TestTypes;$/;"	t	namespace:asylo::grpc::auth::__anon261	file:
TestTypes	./grpc/auth/core/transcript_test.cc	/^typedef ::testing::Types<FakeHash, Sha256Hash> TestTypes;$/;"	t	namespace:asylo::grpc::auth::__anon515	file:
TestTypes	./util/statusor_test.cc	/^    TestTypes;$/;"	t	namespace:asylo::__anon231	file:
TestTypes	./util/statusor_test.cc	/^    TestTypes;$/;"	t	namespace:asylo::__anon485	file:
TestUSleep	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestUSleep($/;"	f	namespace:asylo::host_call::__anon291
TestUSleep	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestUSleep($/;"	f	namespace:asylo::host_call::__anon37
TestUmask	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestUmask($/;"	f	namespace:asylo::host_call::__anon291
TestUmask	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestUmask($/;"	f	namespace:asylo::host_call::__anon37
TestUnlink	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestUnlink($/;"	f	namespace:asylo::host_call::__anon291
TestUnlink	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestUnlink($/;"	f	namespace:asylo::host_call::__anon37
TestWrite	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestWrite($/;"	f	namespace:asylo::host_call::__anon291
TestWrite	./platform/host_call/test/test_enclave.cc	/^primitives::PrimitiveStatus TestWrite($/;"	f	namespace:asylo::host_call::__anon37
Thread	./platform/posix/threading/thread_manager.cc	/^ThreadManager::Thread::Thread(const ThreadOptions &options,$/;"	f	class:asylo::ThreadManager::Thread
Thread	./platform/posix/threading/thread_manager.h	/^  class Thread {$/;"	c	class:asylo::ThreadManager
Thread	./util/std_thread.h	/^  Thread(bool is_detached, Function &&f, Args &&... args)$/;"	f	class:asylo::Thread
Thread	./util/std_thread.h	/^  explicit Thread(Function &&f, Args &&... args)$/;"	f	class:asylo::Thread
Thread	./util/std_thread.h	/^class Thread {$/;"	c	namespace:asylo
ThreadManager	./platform/posix/threading/thread_manager.h	/^class ThreadManager {$/;"	c	namespace:asylo
ThreadMemoryLayout	./platform/arch/sgx/trusted/fork.cc	/^struct ThreadMemoryLayout {$/;"	s	namespace:asylo::__anon284	file:
ThreadMemoryLayout	./platform/arch/sgx/trusted/fork.cc	/^struct ThreadMemoryLayout {$/;"	s	namespace:asylo::__anon30	file:
ThreadOptions	./platform/posix/threading/thread_manager.h	/^  struct ThreadOptions {$/;"	s	class:asylo::ThreadManager
ThreadRoutine	./test/misc/rwlock_test.cc	/^  void ThreadRoutine() {$/;"	f	class:asylo::__anon213::RwLockTest
ThreadRoutine	./test/misc/rwlock_test.cc	/^  void ThreadRoutine() {$/;"	f	class:asylo::__anon467::RwLockTest
ThreadState	./platform/posix/threading/thread_manager.h	/^    enum class ThreadState { QUEUED, RUNNING, DONE, JOINED };$/;"	c	class:asylo::ThreadManager::Thread
ThreadTest	./util/thread_test.cc	/^class ThreadTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon233	file:
ThreadTest	./util/thread_test.cc	/^class ThreadTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon487	file:
ThreadTrampoline	./test/misc/rwlock_test.cc	/^  static void *ThreadTrampoline(void *arg) {$/;"	f	class:asylo::__anon213::RwLockTest
ThreadTrampoline	./test/misc/rwlock_test.cc	/^  static void *ThreadTrampoline(void *arg) {$/;"	f	class:asylo::__anon467::RwLockTest
ThreadedFinalize	./test/misc/threaded_finalize.cc	/^class ThreadedFinalize : public TrustedApplication {$/;"	c	namespace:asylo	file:
Throw	./test/misc/exception_enclave.cc	/^  void ABSL_ATTRIBUTE_NORETURN Throw() { throw TestException(54, "Nope"); }$/;"	f	class:asylo::Exception
Tick	./platform/core/enclave_manager.cc	/^void EnclaveManager::Tick() {$/;"	f	class:asylo::EnclaveManager
TimeSpecSubtract	./platform/common/time_util.cc	/^bool TimeSpecSubtract(const struct timespec &lhs, const struct timespec &rhs,$/;"	f	namespace:asylo
TimeSpecToNanoseconds	./platform/common/time_util.cc	/^int64_t TimeSpecToNanoseconds(const timespec *ts) {$/;"	f	namespace:asylo
TimeValToNanoseconds	./platform/common/time_util.cc	/^int64_t TimeValToNanoseconds(const timeval *tv) {$/;"	f	namespace:asylo
TimeoutTest	./platform/posix/io/epoll_test.cc	/^  void TimeoutTest(int sleep_dur, int timeout) {$/;"	f	class:asylo::__anon318::EpollTest
TimeoutTest	./platform/posix/io/epoll_test.cc	/^  void TimeoutTest(int sleep_dur, int timeout) {$/;"	f	class:asylo::__anon64::EpollTest
TimeoutTest	./test/misc/sem_test.cc	/^static void TimeoutTest(sem_t *sem) {$/;"	f	namespace:asylo::__anon205
TimeoutTest	./test/misc/sem_test.cc	/^static void TimeoutTest(sem_t *sem) {$/;"	f	namespace:asylo::__anon459
Timer	./platform/core/shared_name.h	/^  static SharedName Timer(const std::string &name) {$/;"	f	class:asylo::SharedName
TimerType	./platform/common/bridge_types.h	/^enum TimerType {$/;"	g
TimestampFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<google::protobuf::Timestamp> TimestampFromJson($/;"	f	namespace:asylo::sgx::__anon158
TimestampFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<google::protobuf::Timestamp> TimestampFromJson($/;"	f	namespace:asylo::sgx::__anon412
ToBridgeAddressInfoFlags	./platform/common/bridge_functions.cc	/^int ToBridgeAddressInfoFlags(int ai_flag) {$/;"	f	namespace:asylo
ToBridgeFDFlags	./platform/common/bridge_functions.cc	/^int ToBridgeFDFlags(int fd_flag) {$/;"	f	namespace:asylo
ToBridgeFLockOperation	./platform/common/bridge_functions.cc	/^int ToBridgeFLockOperation(int flock_operation) {$/;"	f	namespace:asylo
ToBridgeFcntlCmd	./platform/common/bridge_functions.cc	/^int ToBridgeFcntlCmd(int fcntl_cmd) {$/;"	f	namespace:asylo
ToBridgeFileFlags	./platform/common/bridge_functions.cc	/^int ToBridgeFileFlags(int file_flag) {$/;"	f	namespace:asylo
ToBridgeIpV6OptionName	./platform/common/bridge_functions.cc	/^int ToBridgeIpV6OptionName(int ipv6_option_name) {$/;"	f	namespace:asylo::__anon103
ToBridgeIpV6OptionName	./platform/common/bridge_functions.cc	/^int ToBridgeIpV6OptionName(int ipv6_option_name) {$/;"	f	namespace:asylo::__anon357
ToBridgeOptionName	./platform/common/bridge_functions.cc	/^int ToBridgeOptionName(int level, int option_name) {$/;"	f	namespace:asylo
ToBridgePollEvents	./platform/common/bridge_functions.cc	/^int ToBridgePollEvents(int bridge_events) {$/;"	f	namespace:asylo::__anon103
ToBridgePollEvents	./platform/common/bridge_functions.cc	/^int ToBridgePollEvents(int bridge_events) {$/;"	f	namespace:asylo::__anon357
ToBridgeRUsageTarget	./platform/common/bridge_functions.cc	/^enum RUsageTarget ToBridgeRUsageTarget(int rusage_target) {$/;"	f	namespace:asylo
ToBridgeSigInfo	./platform/common/bridge_functions.cc	/^struct bridge_siginfo_t *ToBridgeSigInfo($/;"	f	namespace:asylo
ToBridgeSigMaskAction	./platform/common/bridge_functions.cc	/^int ToBridgeSigMaskAction(int how) {$/;"	f	namespace:asylo
ToBridgeSigSet	./platform/common/bridge_functions.cc	/^bridge_sigset_t *ToBridgeSigSet(const sigset_t *set,$/;"	f	namespace:asylo
ToBridgeSignal	./platform/common/bridge_functions.cc	/^int ToBridgeSignal(int signum) {$/;"	f	namespace:asylo
ToBridgeSignalCode	./platform/common/bridge_functions.cc	/^int ToBridgeSignalCode(int si_code) {$/;"	f	namespace:asylo
ToBridgeSignalFlags	./platform/common/bridge_functions.cc	/^int ToBridgeSignalFlags(int sa_flags) {$/;"	f	namespace:asylo
ToBridgeSocketOptionName	./platform/common/bridge_functions.cc	/^int ToBridgeSocketOptionName(int socket_option_name) {$/;"	f	namespace:asylo::__anon103
ToBridgeSocketOptionName	./platform/common/bridge_functions.cc	/^int ToBridgeSocketOptionName(int socket_option_name) {$/;"	f	namespace:asylo::__anon357
ToBridgeStat	./platform/common/bridge_functions.cc	/^struct bridge_stat *ToBridgeStat(const struct stat *statbuf,$/;"	f	namespace:asylo
ToBridgeSysLogFacility	./platform/common/bridge_functions.cc	/^int ToBridgeSysLogFacility(int syslog_facility) {$/;"	f	namespace:asylo
ToBridgeSysLogLevel	./platform/common/bridge_functions.cc	/^int ToBridgeSysLogLevel(int syslog_level) {$/;"	f	namespace:asylo::__anon103
ToBridgeSysLogLevel	./platform/common/bridge_functions.cc	/^int ToBridgeSysLogLevel(int syslog_level) {$/;"	f	namespace:asylo::__anon357
ToBridgeSysLogOption	./platform/common/bridge_functions.cc	/^int ToBridgeSysLogOption(int syslog_option) {$/;"	f	namespace:asylo
ToBridgeSysLogPriority	./platform/common/bridge_functions.cc	/^int ToBridgeSysLogPriority(int syslog_priority) {$/;"	f	namespace:asylo
ToBridgeSysconfConstants	./platform/common/bridge_functions.cc	/^enum SysconfConstants ToBridgeSysconfConstants(int sysconf_constant) {$/;"	f	namespace:asylo
ToBridgeTcpOptionName	./platform/common/bridge_functions.cc	/^int ToBridgeTcpOptionName(int tcp_option_name) {$/;"	f	namespace:asylo::__anon103
ToBridgeTcpOptionName	./platform/common/bridge_functions.cc	/^int ToBridgeTcpOptionName(int tcp_option_name) {$/;"	f	namespace:asylo::__anon357
ToBridgeTimerType	./platform/common/bridge_functions.cc	/^enum TimerType ToBridgeTimerType(int timer_type) {$/;"	f	namespace:asylo
ToBridgeWaitOptions	./platform/common/bridge_functions.cc	/^int ToBridgeWaitOptions(int wait_options) {$/;"	f	namespace:asylo
ToCanonical	./util/status.cc	/^Status Status::ToCanonical() const {$/;"	f	class:asylo::Status
ToHex	./platform/common/debug_strings.cc	/^std::string ToHex(absl::Span<const uint8_t> buffer) {$/;"	f	namespace:asylo::__anon105
ToHex	./platform/common/debug_strings.cc	/^std::string ToHex(absl::Span<const uint8_t> buffer) {$/;"	f	namespace:asylo::__anon359
ToOtherStatus	./util/status.h	/^  StatusT ToOtherStatus() {$/;"	f	class:asylo::Status
ToProtoIffFlags	./platform/common/bridge_proto_serializer.cc	/^void ToProtoIffFlags(int flags, IfAddrProto *out) {$/;"	f	namespace:asylo::__anon109
ToProtoIffFlags	./platform/common/bridge_proto_serializer.cc	/^void ToProtoIffFlags(int flags, IfAddrProto *out) {$/;"	f	namespace:asylo::__anon363
ToString	./util/status.cc	/^std::string Status::ToString() const {$/;"	f	class:asylo::Status
TokLinuxOptionName	./platform/system_call/type_conversions/manual_types_functions.cc	/^void TokLinuxOptionName(const int *level, const int *option_name, int *output) {$/;"	f
TokLinuxSocketType	./platform/system_call/type_conversions/manual_types_functions.cc	/^void TokLinuxSocketType(const int *input, int *output) {$/;"	f
Token	./platform/crypto/gcmlib/gcm_cryptor.h	/^  struct Token {$/;"	s	class:asylo::platform::crypto::gcmlib::GcmCryptor
Top	./platform/primitives/parameter_stack.h	/^  Extent Top() { return top_->extent; }$/;"	f	class:asylo::primitives::ParameterStack
Transcript	./grpc/auth/core/transcript.h	/^class Transcript {$/;"	c	namespace:asylo
TranscriptTest	./grpc/auth/core/transcript_test.cc	/^class TranscriptTest : public ::testing::Test {};$/;"	c	namespace:asylo::grpc::auth::__anon261	file:
TranscriptTest	./grpc/auth/core/transcript_test.cc	/^class TranscriptTest : public ::testing::Test {};$/;"	c	namespace:asylo::grpc::auth::__anon515	file:
TransferFromQueueToBuffer	./platform/posix/io/io_context_inotify.cc	/^size_t IOContextInotify::TransferFromQueueToBuffer(char *buf_ptr,$/;"	f	class:asylo::io::IOContextInotify
TransferSecureSnapshotKey	./platform/arch/common/trusted/fork.cc	/^Status TransferSecureSnapshotKey($/;"	f	namespace:asylo
TransferSecureSnapshotKey	./platform/arch/sgx/trusted/fork.cc	/^Status TransferSecureSnapshotKey($/;"	f	namespace:asylo
TranslateAndHandleSignal	./platform/arch/sgx_sim/trusted/register_signal.cc	/^void TranslateAndHandleSignal(int bridge_signum,$/;"	f	namespace:asylo
TranslateToBridgeAndHandleSignal	./platform/arch/sgx/untrusted/ocalls.cc	/^void TranslateToBridgeAndHandleSignal(int signum, siginfo_t *info,$/;"	f	namespace:__anon286
TranslateToBridgeAndHandleSignal	./platform/arch/sgx/untrusted/ocalls.cc	/^void TranslateToBridgeAndHandleSignal(int signum, siginfo_t *info,$/;"	f	namespace:__anon32
TranslatorServerImpl	./examples/grpc_server/translator_server_impl.cc	/^TranslatorServerImpl::TranslatorServerImpl($/;"	f	class:examples::grpc_server::TranslatorServerImpl
TrimFront	./grpc/auth/util/multi_buffer_input_stream.cc	/^void MultiBufferInputStream::TrimFront() {$/;"	f	class:asylo::MultiBufferInputStream
TrivialOnesObject	./crypto/util/trivial_object_util.h	/^T TrivialOnesObject() {$/;"	f	namespace:asylo
TrivialRandomObject	./crypto/util/trivial_object_util.h	/^T TrivialRandomObject() {$/;"	f	namespace:asylo
TrivialStructure	./crypto/util/trivial_object_util_test.cc	/^struct TrivialStructure {$/;"	s	namespace:asylo::__anon22	file:
TrivialStructure	./crypto/util/trivial_object_util_test.cc	/^struct TrivialStructure {$/;"	s	namespace:asylo::__anon276	file:
TrivialZeroObject	./crypto/util/trivial_object_util.h	/^T TrivialZeroObject() {$/;"	f	namespace:asylo
Truncate	./platform/posix/io/io_manager.cc	/^int IOManager::Truncate(const char *path, off_t length) {$/;"	f	class:asylo::io::IOManager
Truncate	./platform/posix/io/io_manager.h	/^    virtual int Truncate(const char *path, off_t length) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Truncate	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Truncate(const char *path, off_t length) {$/;"	f	class:asylo::io::NativePathHandler
Truncate	./platform/storage/utils/untrusted_file.cc	/^Status UntrustedFile::Truncate(size_t size) {$/;"	f	class:asylo::UntrustedFile
TrustedApplication	./platform/core/trusted_application.h	/^class TrustedApplication {$/;"	c	namespace:asylo
TrustedFibonacci	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus TrustedFibonacci(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon335
TrustedFibonacci	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus TrustedFibonacci(void *context, TrustedParameterStack *params) {$/;"	f	namespace:asylo::primitives::__anon81
TrustedMallocTest	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus TrustedMallocTest(void *context,$/;"	f	namespace:asylo::primitives::__anon335
TrustedMallocTest	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus TrustedMallocTest(void *context,$/;"	f	namespace:asylo::primitives::__anon81
TrustedMutex	./platform/core/trusted_mutex.cc	/^TrustedMutex::TrustedMutex(bool is_recursive)$/;"	f	class:asylo::TrustedMutex
TrustedMutex	./platform/core/trusted_mutex.h	/^class TrustedMutex {$/;"	c	namespace:asylo
TrustedPrimitives	./platform/primitives/trusted_primitives.h	/^class TrustedPrimitives {$/;"	c	namespace:asylo::primitives
TryInitialize	./identity/init_internal.h	/^Status TryInitialize(const std::string &config, IteratorT authority_it) {$/;"	f	namespace:asylo::internal
TryLock	./platform/common/spin_lock.h	/^  bool TryLock() {$/;"	f	class:SpinLock
TryLock	./platform/core/trusted_mutex.cc	/^bool TrustedMutex::TryLock() {$/;"	f	class:asylo::TrustedMutex
TryLock	./platform/core/trusted_spin_lock.cc	/^bool TrustedSpinLock::TryLock() {$/;"	f	class:asylo::TrustedSpinLock
TryLock	./platform/core/untrusted_mutex.cc	/^bool UntrustedMutex::TryLock() {$/;"	f	class:asylo::UntrustedMutex
TsiEnclaveHandshakerResult	./grpc/auth/core/enclave_transport_security.cc	/^  TsiEnclaveHandshakerResult($/;"	f	class:asylo::TsiEnclaveHandshakerResult
TsiEnclaveHandshakerResult	./grpc/auth/core/enclave_transport_security.cc	/^class TsiEnclaveHandshakerResult {$/;"	c	namespace:asylo	file:
TypeFlags	./platform/system_call/generate_tables.cc	/^std::string TypeFlags(const std::string &syscall, const std::string &name) {$/;"	f
TypeSize	./platform/system_call/generate_tables.cc	/^constexpr size_t TypeSize() {$/;"	f
TypeSize	./platform/system_call/generate_tables.cc	/^constexpr size_t TypeSize<const void>() {$/;"	f
TypeSize	./platform/system_call/generate_tables.cc	/^constexpr size_t TypeSize<void>() {$/;"	f
TypeVersion	./platform/common/ring_buffer.h	/^  static constexpr uint64_t TypeVersion() {$/;"	f	class:asylo::RingBuffer
TypedAesGcmSivTest	./crypto/aes_gcm_siv_test.cc	/^class TypedAesGcmSivTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon26	file:
TypedAesGcmSivTest	./crypto/aes_gcm_siv_test.cc	/^class TypedAesGcmSivTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon280	file:
TypedByteContainerViewTest	./crypto/util/byte_container_view_test.cc	/^class TypedByteContainerViewTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon23	file:
TypedByteContainerViewTest	./crypto/util/byte_container_view_test.cc	/^class TypedByteContainerViewTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon277	file:
TypedBytesTest	./crypto/util/bytes_test.cc	/^class TypedBytesTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon24	file:
TypedBytesTest	./crypto/util/bytes_test.cc	/^class TypedBytesTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon278	file:
TypedCleansingAllocatorTest	./util/cleansing_allocator_test.cc	/^class TypedCleansingAllocatorTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon239	file:
TypedCleansingAllocatorTest	./util/cleansing_allocator_test.cc	/^class TypedCleansingAllocatorTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon493	file:
TypedSingletonTest	./platform/common/singleton_test.cc	/^class TypedSingletonTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon112	file:
TypedSingletonTest	./platform/common/singleton_test.cc	/^class TypedSingletonTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon366	file:
TypedTrivialObjectUtilTest	./crypto/util/trivial_object_util_test.cc	/^class TypedTrivialObjectUtilTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon22	file:
TypedTrivialObjectUtilTest	./crypto/util/trivial_object_util_test.cc	/^class TypedTrivialObjectUtilTest : public ::testing::Test {};$/;"	c	namespace:asylo::__anon276	file:
USleepHandler	./platform/host_call/untrusted/host_call_handlers.cc	/^Status USleepHandler(const std::shared_ptr<primitives::Client> &client,$/;"	f	namespace:asylo::host_call
UTSNAME_FIELD_LENGTH	./platform/posix/include/sys/utsname.h	30;"	d
Umask	./platform/posix/io/io_manager.cc	/^mode_t IOManager::Umask(mode_t mask) { return enc_untrusted_umask(mask); }$/;"	f	class:asylo::io::IOManager
UnblockSignals	./platform/posix/signal/signal_manager.cc	/^void SignalManager::UnblockSignals(const sigset_t &set) {$/;"	f	class:asylo::SignalManager
UniformOutputChecker	./test/util/exec_tester_test.cc	/^    UniformOutputChecker(const std::string &line,$/;"	f	class:asylo::experimental::__anon216::ExecTesterTest::UniformOutputChecker
UniformOutputChecker	./test/util/exec_tester_test.cc	/^    UniformOutputChecker(const std::string &line,$/;"	f	class:asylo::experimental::__anon470::ExecTesterTest::UniformOutputChecker
UniformOutputChecker	./test/util/exec_tester_test.cc	/^  class UniformOutputChecker : public ExecTester {$/;"	c	class:asylo::experimental::__anon216::ExecTesterTest	file:
UniformOutputChecker	./test/util/exec_tester_test.cc	/^  class UniformOutputChecker : public ExecTester {$/;"	c	class:asylo::experimental::__anon470::ExecTesterTest	file:
Unlink	./platform/posix/io/io_manager.cc	/^int IOManager::Unlink(const char *pathname) {$/;"	f	class:asylo::io::IOManager
Unlink	./platform/posix/io/io_manager.h	/^    virtual int Unlink(const char *pathname) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Unlink	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Unlink(const char *pathname) {$/;"	f	class:asylo::io::NativePathHandler
Unlink	./platform/posix/io/random_devices.cc	/^int RandomPathHandler::Unlink(const char *pathname) {$/;"	f	class:asylo::RandomPathHandler
Unlock	./platform/core/trusted_mutex.cc	/^void TrustedMutex::Unlock() {$/;"	f	class:asylo::TrustedMutex
Unlock	./platform/core/trusted_spin_lock.cc	/^void TrustedSpinLock::Unlock() {$/;"	f	class:asylo::TrustedSpinLock
Unlock	./platform/core/untrusted_mutex.cc	/^void UntrustedMutex::Unlock() {$/;"	f	class:asylo::UntrustedMutex
Unlock	./platform/posix/pthread.cc	/^  void Unlock() { pthread_spin_unlock(lock_); }$/;"	f	class:__anon296::LockableGuard
Unlock	./platform/posix/pthread.cc	/^  void Unlock() { pthread_spin_unlock(lock_); }$/;"	f	class:__anon42::LockableGuard
UnmanagedResource	./platform/core/shared_resource_manager.h	/^    UnmanagedResource(const SharedName &name, T *pointer)$/;"	f	struct:asylo::SharedResourceManager::UnmanagedResource
UnmanagedResource	./platform/core/shared_resource_manager.h	/^  struct UnmanagedResource : public ResourceHandle {$/;"	s	class:asylo::SharedResourceManager
UnsafeBytes	./crypto/util/bytes.h	/^  UnsafeBytes(Args &&... args)$/;"	f	class:asylo::final
UnsafePolicy	./crypto/util/bytes.h	/^struct UnsafePolicy {$/;"	s	namespace:asylo
Unseal	./identity/sgx/sgx_local_secret_sealer.cc	/^Status SgxLocalSecretSealer::Unseal(const SealedSecret &sealed_secret,$/;"	f	class:asylo::SgxLocalSecretSealer
UnsynchronizedClear	./platform/common/ring_buffer.h	/^  void UnsynchronizedClear() {$/;"	f	class:asylo::RingBuffer
UntrustedCacheMalloc	./platform/core/untrusted_cache_malloc.cc	/^UntrustedCacheMalloc::UntrustedCacheMalloc() {$/;"	f	class:asylo::UntrustedCacheMalloc
UntrustedCacheMalloc	./platform/core/untrusted_cache_malloc.h	/^class UntrustedCacheMalloc {$/;"	c	namespace:asylo
UntrustedCacheMallocTest	./platform/core/untrusted_cache_malloc_test.cc	/^class UntrustedCacheMallocTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon128	file:
UntrustedCacheMallocTest	./platform/core/untrusted_cache_malloc_test.cc	/^class UntrustedCacheMallocTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon382	file:
UntrustedCall	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus TrustedPrimitives::UntrustedCall($/;"	f	class:asylo::primitives::TrustedPrimitives
UntrustedCall	./platform/primitives/sim/trusted_sim.cc	/^PrimitiveStatus TrustedPrimitives::UntrustedCall($/;"	f	class:asylo::primitives::TrustedPrimitives
UntrustedDeleter	./platform/primitives/util/trusted_memory.h	/^struct UntrustedDeleter {$/;"	s	namespace:asylo
UntrustedFile	./platform/storage/utils/untrusted_file.cc	/^UntrustedFile::UntrustedFile(int fd) : fd_(fd) {}$/;"	f	class:asylo::UntrustedFile
UntrustedFile	./platform/storage/utils/untrusted_file.h	/^class UntrustedFile : public RandomAccessStorage {$/;"	c	namespace:asylo
UntrustedInvoke	./platform/system_call/untrusted_invoke.cc	/^primitives::PrimitiveStatus UntrustedInvoke($/;"	f	namespace:asylo::system_call
UntrustedLocalAlloc	./platform/primitives/sgx/trusted_sgx.cc	/^void *TrustedPrimitives::UntrustedLocalAlloc(size_t size) {$/;"	f	class:asylo::primitives::TrustedPrimitives
UntrustedLocalAlloc	./platform/primitives/sim/trusted_sim.cc	/^void *TrustedPrimitives::UntrustedLocalAlloc(size_t size) {$/;"	f	class:asylo::primitives::TrustedPrimitives
UntrustedLocalAllocTest	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus UntrustedLocalAllocTest(void *context,$/;"	f	namespace:asylo::primitives::__anon335
UntrustedLocalAllocTest	./platform/primitives/test/test_enclave.cc	/^PrimitiveStatus UntrustedLocalAllocTest(void *context,$/;"	f	namespace:asylo::primitives::__anon81
UntrustedLocalFree	./platform/primitives/sgx/trusted_sgx.cc	/^void TrustedPrimitives::UntrustedLocalFree(void *ptr) {$/;"	f	class:asylo::primitives::TrustedPrimitives
UntrustedLocalFree	./platform/primitives/sim/trusted_sim.cc	/^void TrustedPrimitives::UntrustedLocalFree(void *ptr) {$/;"	f	class:asylo::primitives::TrustedPrimitives
UntrustedMutex	./platform/core/untrusted_mutex.cc	/^UntrustedMutex::UntrustedMutex(bool is_recursive)$/;"	f	class:asylo::UntrustedMutex
UntrustedMutex	./platform/core/untrusted_mutex.h	/^class UntrustedMutex {$/;"	c	namespace:asylo
Update	./crypto/sha256_hash.cc	/^void Sha256Hash::Update(ByteContainerView data) {$/;"	f	class:asylo::Sha256Hash
UpdateDigest	./platform/storage/secure/aead_handler.cc	/^bool AeadHandler::UpdateDigest(FileControl *file_ctrl,$/;"	f	class:asylo::platform::storage::AeadHandler
UpdateEnclaveState	./platform/primitives/util/trusted_runtime_helper.cc	/^void UpdateEnclaveState(const Flag &flag) {$/;"	f	namespace:asylo::primitives::__anon340
UpdateEnclaveState	./platform/primitives/util/trusted_runtime_helper.cc	/^void UpdateEnclaveState(const Flag &flag) {$/;"	f	namespace:asylo::primitives::__anon86
UpdateLeaf	./platform/storage/secure/ctmmt_authenticated_dictionary.cc	/^bool CTMMTAuthenticatedDictionary::UpdateLeaf(size_t leaf,$/;"	f	class:asylo::platform::storage::CTMMTAuthenticatedDictionary
UpdateThreadId	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::UpdateThreadId(const pthread_t thread_id) {$/;"	f	class:asylo::ThreadManager::Thread
UpdateThreadState	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::UpdateThreadState(const ThreadState &new_state) {$/;"	f	class:asylo::ThreadManager::Thread
UpdateTranscriptWithIncomingBytes	./grpc/auth/core/ekep_handshaker.cc	/^void EkepHandshaker::UpdateTranscriptWithIncomingBytes() {$/;"	f	class:asylo::EkepHandshaker
UpdateTranscriptWithOutgoingBytes	./grpc/auth/core/ekep_handshaker.cc	/^void EkepHandshaker::UpdateTranscriptWithOutgoingBytes($/;"	f	class:asylo::EkepHandshaker
Utime	./platform/posix/io/io_manager.cc	/^int IOManager::Utime(const char *filename, const struct utimbuf *times) {$/;"	f	class:asylo::io::IOManager
Utime	./platform/posix/io/io_manager.h	/^    virtual int Utime(const char *filename, const struct utimbuf *times) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Utime	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Utime(const char *filename,$/;"	f	class:asylo::io::NativePathHandler
Utimes	./platform/posix/io/io_manager.cc	/^int IOManager::Utimes(const char *filename, const struct timeval times[2]) {$/;"	f	class:asylo::io::IOManager
Utimes	./platform/posix/io/io_manager.h	/^    virtual int Utimes(const char *filename, const struct timeval times[2]) {$/;"	f	class:asylo::io::IOManager::VirtualPathHandler
Utimes	./platform/posix/io/native_paths.cc	/^int NativePathHandler::Utimes(const char *filename,$/;"	f	class:asylo::io::NativePathHandler
VLOG	./util/logging.h	85;"	d
VMIN	./platform/posix/include/sys/termios.h	43;"	d
VTIME	./platform/posix/include/sys/termios.h	44;"	d
Validate	./grpc/auth/core/ekep_handshaker_util.cc	/^Status EkepHandshakerOptions::Validate() const {$/;"	f	class:asylo::EkepHandshakerOptions
Validate	./platform/system_call/message.cc	/^primitives::PrimitiveStatus MessageReader::Validate() const {$/;"	f	class:asylo::system_call::MessageReader
ValidateCertificate	./crypto/certificate_util.cc	/^Status ValidateCertificate(const Certificate &certificate) {$/;"	f	namespace:asylo
ValidateCertificateChain	./crypto/certificate_util.cc	/^Status ValidateCertificateChain(const CertificateChain &certificate_chain) {$/;"	f	namespace:asylo
ValidateCertificateRevocationList	./crypto/certificate_util.cc	/^Status ValidateCertificateRevocationList(const CertificateRevocationList &crl) {$/;"	f	namespace:asylo
ValidateCertificateSigningRequest	./crypto/certificate_util.cc	/^Status ValidateCertificateSigningRequest(const CertificateSigningRequest &csr) {$/;"	f	namespace:asylo
ValidateCpuSvn	./identity/sgx/platform_provisioning.cc	/^Status ValidateCpuSvn(const CpuSvn &cpu_svn) {$/;"	f	namespace:asylo::sgx
ValidateFmspc	./identity/sgx/platform_provisioning.cc	/^Status ValidateFmspc(const Fmspc &fmspc) {$/;"	f	namespace:asylo::sgx
ValidateMessageHeader	./platform/system_call/message.cc	/^primitives::PrimitiveStatus MessageReader::ValidateMessageHeader() const {$/;"	f	class:asylo::system_call::MessageReader
ValidatePceId	./identity/sgx/platform_provisioning.cc	/^Status ValidatePceId(const PceId &pce_id) {$/;"	f	namespace:asylo::sgx
ValidatePceSvn	./identity/sgx/platform_provisioning.cc	/^Status ValidatePceSvn(const PceSvn &pce_svn) {$/;"	f	namespace:asylo::sgx
ValidatePpid	./identity/sgx/platform_provisioning.cc	/^Status ValidatePpid(const Ppid &ppid) {$/;"	f	namespace:asylo::sgx
ValidateRawTcb	./identity/sgx/tcb.cc	/^Status ValidateRawTcb(const RawTcb &raw_tcb) {$/;"	f	namespace:asylo::sgx
ValidateReportProto	./identity/sgx/platform_provisioning.cc	/^Status ValidateReportProto(const ReportProto &report_proto) {$/;"	f	namespace:asylo::sgx
ValidateSpinLock	./platform/core/trusted_spin_lock.cc	/^void ValidateSpinLock(uint32_t spin_lock) {$/;"	f	namespace:asylo::__anon138
ValidateSpinLock	./platform/core/trusted_spin_lock.cc	/^void ValidateSpinLock(uint32_t spin_lock) {$/;"	f	namespace:asylo::__anon392
ValidateTargetInfoProto	./identity/sgx/platform_provisioning.cc	/^Status ValidateTargetInfoProto(const TargetInfoProto &target_info_proto) {$/;"	f	namespace:asylo::sgx
ValidateTcb	./identity/sgx/tcb.cc	/^Status ValidateTcb(const Tcb &tcb) {$/;"	f	namespace:asylo::sgx
ValidateTcbInfo	./identity/sgx/tcb.cc	/^Status ValidateTcbInfo(const TcbInfo &tcb_info) {$/;"	f	namespace:asylo::sgx
ValidateTcbInfoImpl	./identity/sgx/tcb.cc	/^Status ValidateTcbInfoImpl(const TcbInfoImpl &tcb_info_impl) {$/;"	f	namespace:asylo::sgx::__anon145
ValidateTcbInfoImpl	./identity/sgx/tcb.cc	/^Status ValidateTcbInfoImpl(const TcbInfoImpl &tcb_info_impl) {$/;"	f	namespace:asylo::sgx::__anon399
ValidateTcbInfoImplV1	./identity/sgx/tcb.cc	/^Status ValidateTcbInfoImplV1(const TcbInfoImpl &tcb_info_impl) {$/;"	f	namespace:asylo::sgx::__anon145
ValidateTcbInfoImplV1	./identity/sgx/tcb.cc	/^Status ValidateTcbInfoImplV1(const TcbInfoImpl &tcb_info_impl) {$/;"	f	namespace:asylo::sgx::__anon399
ValidateTcbLevel	./identity/sgx/tcb.cc	/^Status ValidateTcbLevel(const TcbLevel &tcb_level) {$/;"	f	namespace:asylo::sgx::__anon145
ValidateTcbLevel	./identity/sgx/tcb.cc	/^Status ValidateTcbLevel(const TcbLevel &tcb_level) {$/;"	f	namespace:asylo::sgx::__anon399
ValidateTcbStatus	./identity/sgx/tcb.cc	/^Status ValidateTcbStatus(const TcbStatus &tcb_status) {$/;"	f	namespace:asylo::sgx::__anon145
ValidateTcbStatus	./identity/sgx/tcb.cc	/^Status ValidateTcbStatus(const TcbStatus &tcb_status) {$/;"	f	namespace:asylo::sgx::__anon399
ValidateTimestamp	./identity/sgx/tcb.cc	/^Status ValidateTimestamp(const google::protobuf::Timestamp &timestamp) {$/;"	f	namespace:asylo::sgx::__anon145
ValidateTimestamp	./identity/sgx/tcb.cc	/^Status ValidateTimestamp(const google::protobuf::Timestamp &timestamp) {$/;"	f	namespace:asylo::sgx::__anon399
ValueCollection	./platform/common/static_map.h	/^  class ValueCollection {$/;"	c	class:asylo::StaticMap
ValueInserter	./platform/common/static_map.h	/^  class ValueInserter {$/;"	c	class:asylo::StaticMap
ValueIterator	./platform/common/static_map_internal.h	/^  ValueIterator($/;"	f	class:asylo::internal::ValueIterator
ValueIterator	./platform/common/static_map_internal.h	/^  explicit ValueIterator(MapIteratorT &&iter) : MapIteratorT(std::move(iter)) {}$/;"	f	class:asylo::internal::ValueIterator
ValueIterator	./platform/common/static_map_internal.h	/^class ValueIterator : public MapIteratorT {$/;"	c	namespace:asylo::internal
ValueOrDie	./util/statusor.h	/^  T &ValueOrDie() & {$/;"	f	class:asylo::StatusOr
ValueOrDie	./util/statusor.h	/^  T ValueOrDie() && {$/;"	f	class:asylo::StatusOr
ValueOrDie	./util/statusor.h	/^  const T &ValueOrDie() const & {$/;"	f	class:asylo::StatusOr
Verify	./crypto/ecdsa_p256_sha256_signing_key.cc	/^Status EcdsaP256Sha256VerifyingKey::Verify(ByteContainerView message,$/;"	f	class:asylo::EcdsaP256Sha256VerifyingKey
Verify	./identity/null_identity/null_assertion_verifier.cc	/^Status NullAssertionVerifier::Verify(const std::string &user_data,$/;"	f	class:asylo::NullAssertionVerifier
Verify	./identity/sgx/sgx_local_assertion_verifier.cc	/^Status SgxLocalAssertionVerifier::Verify(const std::string &user_data,$/;"	f	class:asylo::SgxLocalAssertionVerifier
VerifyAndSetState	./platform/core/trusted_application.cc	/^Status TrustedApplication::VerifyAndSetState(const EnclaveState &expected_state,$/;"	f	class:asylo::TrustedApplication
VerifyAssertionDescription	./grpc/auth/core/assertion_description_test.cc	/^  void VerifyAssertionDescription(const assertion_description &desc,$/;"	f	class:asylo::__anon259::AssertionDescriptionTest
VerifyAssertionDescription	./grpc/auth/core/assertion_description_test.cc	/^  void VerifyAssertionDescription(const assertion_description &desc,$/;"	f	class:asylo::__anon513::AssertionDescriptionTest
VerifyAssertionDescription	./grpc/auth/core/assertion_description_test.cc	/^  void VerifyAssertionDescription(int test_pool_index,$/;"	f	class:asylo::__anon259::AssertionDescriptionTest
VerifyAssertionDescription	./grpc/auth/core/assertion_description_test.cc	/^  void VerifyAssertionDescription(int test_pool_index,$/;"	f	class:asylo::__anon513::AssertionDescriptionTest
VerifyEncryptionDecryptionSuccess	./crypto/rsa_oaep_encryption_key_test.cc	/^void VerifyEncryptionDecryptionSuccess($/;"	f	namespace:asylo::__anon10
VerifyEncryptionDecryptionSuccess	./crypto/rsa_oaep_encryption_key_test.cc	/^void VerifyEncryptionDecryptionSuccess($/;"	f	namespace:asylo::__anon264
VerifyHardwareReport	./identity/sgx/code_identity_util.cc	/^Status VerifyHardwareReport(const Report &report) {$/;"	f	namespace:asylo::sgx
VerifyListContentsAndDelete	./test/misc/pthread_test.cc	/^  void VerifyListContentsAndDelete(const std::vector<int> &expected_list) {$/;"	f	class:asylo::pthread_impl::__anon201::QueueOperationsTest
VerifyListContentsAndDelete	./test/misc/pthread_test.cc	/^  void VerifyListContentsAndDelete(const std::vector<int> &expected_list) {$/;"	f	class:asylo::pthread_impl::__anon455::QueueOperationsTest
VerifyLocalHostAddrInfoAddress	./platform/posix/sockets/addrinfo_test_enclave.cc	/^  bool VerifyLocalHostAddrInfoAddress(const struct addrinfo *info) {$/;"	f	class:asylo::AddrinfoTestEnclave	file:
VerifyLocalHostAddrInfoCanonname	./platform/posix/sockets/addrinfo_test_enclave.cc	/^  bool VerifyLocalHostAddrInfoCanonname(const struct addrinfo *info) {$/;"	f	class:asylo::AddrinfoTestEnclave	file:
VerifyOutputArguments	./platform/core/trusted_application.cc	/^Status VerifyOutputArguments(char **output, size_t *output_len) {$/;"	f	namespace:asylo
VerifyReadEvents	./platform/posix/io/epoll_test.cc	/^  void VerifyReadEvents(int epfd) {$/;"	f	class:asylo::__anon318::EpollTest
VerifyReadEvents	./platform/posix/io/epoll_test.cc	/^  void VerifyReadEvents(int epfd) {$/;"	f	class:asylo::__anon64::EpollTest
VerifyRemoteAssertion	./identity/sgx/remote_assertion_util.cc	/^Status VerifyRemoteAssertion(const std::string &user_data,$/;"	f	namespace:asylo::sgx
VerifyUntrustedAddressRange	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus VerifyUntrustedAddressRange(void *address, size_t size) {$/;"	f	namespace:asylo::primitives::__anon336
VerifyUntrustedAddressRange	./platform/primitives/sgx/trusted_sgx.cc	/^PrimitiveStatus VerifyUntrustedAddressRange(void *address, size_t size) {$/;"	f	namespace:asylo::primitives::__anon82
VerifyingKey	./crypto/signing_key.h	/^class VerifyingKey {$/;"	c	namespace:asylo
VerifyingKeyParam	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^struct VerifyingKeyParam {$/;"	s	namespace:asylo::__anon19	file:
VerifyingKeyParam	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^struct VerifyingKeyParam {$/;"	s	namespace:asylo::__anon273	file:
VersionFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<int> VersionFromJson(const google::protobuf::Value &version_json) {$/;"	f	namespace:asylo::sgx::__anon158
VersionFromJson	./identity/sgx/tcb_info_from_json.cc	/^StatusOr<int> VersionFromJson(const google::protobuf::Value &version_json) {$/;"	f	namespace:asylo::sgx::__anon412
VirtualHandlerTest	./platform/posix/io/virtual_test.cc	/^class VirtualHandlerTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon326	file:
VirtualHandlerTest	./platform/posix/io/virtual_test.cc	/^class VirtualHandlerTest : public ::testing::Test {$/;"	c	namespace:asylo::__anon72	file:
VirtualPathHandler	./platform/posix/io/io_manager.h	/^  class VirtualPathHandler {$/;"	c	class:asylo::io::IOManager
WARNING	./util/logging.h	/^enum LogSeverity { INFO, WARNING, ERROR, FATAL, QFATAL };$/;"	e	enum:LogSeverity
WNOHANG	./platform/posix/include/sys/wait.h	28;"	d
WStatusCode	./platform/common/bridge_types.h	/^enum WStatusCode {$/;"	g
Wait	./grpc/util/grpc_server_launcher.cc	/^Status GrpcServerLauncher::Wait() const {$/;"	f	class:asylo::GrpcServerLauncher
WaitFor	./platform/posix/threading/thread_manager.cc	/^void WaitFor(const std::function<bool()> &predicate, pthread_cond_t *cond,$/;"	f	namespace:asylo::__anon297
WaitFor	./platform/posix/threading/thread_manager.cc	/^void WaitFor(const std::function<bool()> &predicate, pthread_cond_t *cond,$/;"	f	namespace:asylo::__anon43
WaitForEvents	./util/fd_utils.cc	/^StatusOr<short> WaitForEvents(int fd, short target_events, short ok_events) {$/;"	f	namespace:asylo
WaitForSignal	./test/misc/condvar_test.cc	/^  void WaitForSignal() {$/;"	f	class:asylo::__anon194::BroadcastTest
WaitForSignal	./test/misc/condvar_test.cc	/^  void WaitForSignal() {$/;"	f	class:asylo::__anon448::BroadcastTest
WaitForSignalTrampoline	./test/misc/condvar_test.cc	/^  static void *WaitForSignalTrampoline(void *arg) {$/;"	f	class:asylo::__anon194::BroadcastTest
WaitForSignalTrampoline	./test/misc/condvar_test.cc	/^  static void *WaitForSignalTrampoline(void *arg) {$/;"	f	class:asylo::__anon448::BroadcastTest
WaitForThreadToEnterState	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::WaitForThreadToEnterState($/;"	f	class:asylo::ThreadManager::Thread
WaitForThreadToExitState	./platform/posix/threading/thread_manager.cc	/^void ThreadManager::Thread::WaitForThreadToExitState($/;"	f	class:asylo::ThreadManager::Thread
WaitOptions	./platform/common/bridge_types.h	/^enum WaitOptions {$/;"	g
WaitUntil	./platform/core/enclave_manager.cc	/^void WaitUntil(int64_t deadline) {$/;"	f	namespace:asylo::__anon125
WaitUntil	./platform/core/enclave_manager.cc	/^void WaitUntil(int64_t deadline) {$/;"	f	namespace:asylo::__anon379
WithLogContents	./test/misc/logging_test_driver.cc	/^  void WithLogContents(const checker_t &checker) {$/;"	f	class:asylo::__anon206::EnclaveLoggingTest
WithLogContents	./test/misc/logging_test_driver.cc	/^  void WithLogContents(const checker_t &checker) {$/;"	f	class:asylo::__anon460::EnclaveLoggingTest
WithLogContentsFrom	./test/misc/logging_test_driver.cc	/^  static void WithLogContentsFrom(const std::string &log_directory,$/;"	f	class:asylo::__anon206::EnclaveLoggingTest
WithLogContentsFrom	./test/misc/logging_test_driver.cc	/^  static void WithLogContentsFrom(const std::string &log_directory,$/;"	f	class:asylo::__anon460::EnclaveLoggingTest
WordNum	./platform/posix/sched.cc	/^inline size_t WordNum(int cpu) { return cpu \/ (8 * sizeof(CpuSetWord)); }$/;"	f
Work	./platform/posix/io/eventfd_test.cc	/^  void Work(int i, absl::flat_hash_set<int> *thread_indexes,$/;"	f	class:asylo::__anon327::EventFdTest
Work	./platform/posix/io/eventfd_test.cc	/^  void Work(int i, absl::flat_hash_set<int> *thread_indexes,$/;"	f	class:asylo::__anon73::EventFdTest
WorkerLoop	./platform/core/enclave_manager.cc	/^void EnclaveManager::WorkerLoop() {$/;"	f	class:asylo::EnclaveManager
Write	./platform/common/ring_buffer.h	/^  size_t Write(const uint8_t *buf, size_t nbyte) {$/;"	f	class:asylo::RingBuffer
Write	./platform/posix/io/eventfd_test.cc	/^  int Write(uint64_t add) {$/;"	f	class:asylo::__anon327::EventFdTest
Write	./platform/posix/io/eventfd_test.cc	/^  int Write(uint64_t add) {$/;"	f	class:asylo::__anon73::EventFdTest
Write	./platform/posix/io/io_context_epoll.cc	/^ssize_t IOContextEpoll::Write(const void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextEpoll
Write	./platform/posix/io/io_context_eventfd.cc	/^ssize_t IOContextEventFd::Write(const void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextEventFd
Write	./platform/posix/io/io_context_inotify.cc	/^ssize_t IOContextInotify::Write(const void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextInotify
Write	./platform/posix/io/io_manager.cc	/^int IOManager::Write(int fd, const char *buf, size_t count) {$/;"	f	class:asylo::io::IOManager
Write	./platform/posix/io/native_paths.cc	/^ssize_t IOContextNative::Write(const void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextNative
Write	./platform/posix/io/random_devices.cc	/^ssize_t RandomIOContext::Write(const void *buf, size_t count) {$/;"	f	class:asylo::RandomIOContext
Write	./platform/posix/io/secure_paths.cc	/^ssize_t IOContextSecure::Write(const void *buf, size_t count) {$/;"	f	class:asylo::io::IOContextSecure
Write	./platform/posix/sockets/socket_client.cc	/^Status SocketClient::Write(const void *buf, size_t write_len) {$/;"	f	class:asylo::SocketClient
Write	./platform/posix/sockets/socket_server.cc	/^Status SocketServer::Write(const void *buf, size_t write_len) {$/;"	f	class:asylo::SocketServer
Write	./platform/posix/sockets/socket_transmit.cc	/^Status SocketTransmit::Write(int fd, const void *buf, size_t write_len) {$/;"	f	class:asylo::SocketTransmit
Write	./platform/primitives/util/message.h	/^  void Write(void *message) const {$/;"	f	class:asylo::primitives::MessageWriter
Write	./platform/storage/utils/record_store.h	/^  ASYLO_MUST_USE_RESULT Status Write(off_t offset, const T &item) {$/;"	f	class:asylo::RecordStore
Write	./platform/storage/utils/untrusted_file.cc	/^Status UntrustedFile::Write(const void *buffer, off_t offset, size_t size) {$/;"	f	class:asylo::UntrustedFile
Write	./platform/system_call/message.cc	/^bool MessageWriter::Write(primitives::Extent *message) const {$/;"	f	class:asylo::system_call::MessageWriter
WriteAll	./util/fd_utils.cc	/^Status WriteAll(int fd, absl::string_view data) {$/;"	f	namespace:asylo
WriteAllNoBlock	./util/fd_utils.cc	/^StatusOr<size_t> WriteAllNoBlock(int fd, absl::string_view data) {$/;"	f	namespace:asylo
WriteArgvToRepeatedStringField	./bazel/application_wrapper/argv.cc	/^void Argv::WriteArgvToRepeatedStringField($/;"	f	class:asylo::Argv
WriteClientFinish	./grpc/auth/core/client_ekep_handshaker.cc	/^Status ClientEkepHandshaker::WriteClientFinish(std::string *output) {$/;"	f	class:asylo::ClientEkepHandshaker
WriteClientId	./grpc/auth/core/client_ekep_handshaker.cc	/^Status ClientEkepHandshaker::WriteClientId($/;"	f	class:asylo::ClientEkepHandshaker
WriteClientPrecommit	./grpc/auth/core/client_ekep_handshaker.cc	/^Status ClientEkepHandshaker::WriteClientPrecommit(std::string *output) {$/;"	f	class:asylo::ClientEkepHandshaker
WriteCloseResultTo	./platform/posix/io/io_manager.h	/^      void WriteCloseResultTo(int *close_result) {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable::AutoCloseIOContext
WriteData	./platform/posix/io/epoll_test.cc	/^  Status WriteData(int fd, const char *str) {$/;"	f	class:asylo::__anon318::EpollTest
WriteData	./platform/posix/io/epoll_test.cc	/^  Status WriteData(int fd, const char *str) {$/;"	f	class:asylo::__anon64::EpollTest
WriteEnumConversions	./platform/system_call/type_conversions/types_conversions_generator.cc	/^void WriteEnumConversions(const absl::flat_hash_map<std::string, EnumProperties>$/;"	f
WriteEnumDefinitions	./platform/system_call/type_conversions/types_conversions_generator.cc	/^void WriteEnumDefinitions(const absl::flat_hash_map<std::string, EnumProperties>$/;"	f
WriteFrameAndUpdateTranscript	./grpc/auth/core/ekep_handshaker.cc	/^Status EkepHandshaker::WriteFrameAndUpdateTranscript($/;"	f	class:asylo::EkepHandshaker
WriteInternal	./util/fd_utils.cc	/^StatusOr<size_t> WriteInternal(int fd, absl::string_view data,$/;"	f	namespace:asylo::__anon228
WriteInternal	./util/fd_utils.cc	/^StatusOr<size_t> WriteInternal(int fd, absl::string_view data,$/;"	f	namespace:asylo::__anon482
WriteMacroProvidedIncludes	./platform/system_call/type_conversions/types_conversions_generator.cc	/^void WriteMacroProvidedIncludes(std::ostream *os) {$/;"	f
WriteRead	./platform/posix/io/read_write_multithread_test.cc	/^Status WriteRead(const char *path) {$/;"	f	namespace:asylo::__anon329
WriteRead	./platform/posix/io/read_write_multithread_test.cc	/^Status WriteRead(const char *path) {$/;"	f	namespace:asylo::__anon75
WriteServerFinish	./grpc/auth/core/server_ekep_handshaker.cc	/^Status ServerEkepHandshaker::WriteServerFinish(std::string *output) {$/;"	f	class:asylo::ServerEkepHandshaker
WriteServerId	./grpc/auth/core/server_ekep_handshaker.cc	/^Status ServerEkepHandshaker::WriteServerId(std::string *output) {$/;"	f	class:asylo::ServerEkepHandshaker
WriteServerPrecommit	./grpc/auth/core/server_ekep_handshaker.cc	/^Status ServerEkepHandshaker::WriteServerPrecommit(std::string *output) {$/;"	f	class:asylo::ServerEkepHandshaker
WriteStructConversions	./platform/system_call/type_conversions/types_conversions_generator.cc	/^void WriteStructConversions($/;"	f
WriteStructDefinitions	./platform/system_call/type_conversions/types_conversions_generator.cc	/^void WriteStructDefinitions($/;"	f
WriteTestData	./platform/common/ring_buffer_test.cc	/^  void WriteTestData() {$/;"	f	class:asylo::RingBufferTest
WriteToFile	./platform/posix/select_test.cc	/^  Status WriteToFile(int fd, const char *message) {$/;"	f	class:asylo::__anon304::SelectTest
WriteToFile	./platform/posix/select_test.cc	/^  Status WriteToFile(int fd, const char *message) {$/;"	f	class:asylo::__anon50::SelectTest
WriteToPipes	./platform/posix/io/epoll_test.cc	/^  void WriteToPipes(const std::vector<int> &write_fds, const char *str) {$/;"	f	class:asylo::__anon318::EpollTest
WriteToPipes	./platform/posix/io/epoll_test.cc	/^  void WriteToPipes(const std::vector<int> &write_fds, const char *str) {$/;"	f	class:asylo::__anon64::EpollTest
WriteTypeDefinitions	./platform/system_call/type_conversions/types_conversions_generator.cc	/^void WriteTypeDefinitions($/;"	f
WriteTypesConversions	./platform/system_call/type_conversions/types_conversions_generator.cc	/^void WriteTypesConversions($/;"	f
Writev	./platform/posix/io/io_manager.cc	/^ssize_t IOManager::Writev(int fd, const struct iovec *iov, int iovcnt) {$/;"	f	class:asylo::io::IOManager
Writev	./platform/posix/io/io_manager.h	/^    virtual ssize_t Writev(const struct iovec *iov, int iovcnt) {$/;"	f	class:asylo::io::IOManager::IOContext
Writev	./platform/posix/io/native_paths.cc	/^ssize_t IOContextNative::Writev(const struct iovec *iov, int iovcnt) {$/;"	f	class:asylo::io::IOContextNative
YXDOMAIN	./platform/posix/include/arpa/nameser.h	229;"	d
YXRRSET	./platform/posix/include/arpa/nameser.h	230;"	d
ZMM_HI256	./identity/sgx/secs_attributes.h	/^  ZMM_HI256 = 64 + 6,  \/\/ Determines the behavior of certain AVX capabilities.$/;"	m	class:asylo::sgx::SecsAttributeBit
_GNU_SOURCE	./bazel/application_wrapper/test_application.cc	20;"	d	file:
_GNU_SOURCE	./platform/arch/sgx/untrusted/ocalls.cc	23;"	d	file:
_GNU_SOURCE	./platform/common/bridge_functions.cc	23;"	d	file:
_GNU_SOURCE	./platform/posix/pipe_test.cc	25;"	d	file:
_GNU_SOURCE	./platform/posix/signal.cc	20;"	d	file:
_GNU_SOURCE	./util/fd_utils.cc	21;"	d	file:
_NETDB_H	./platform/posix/include/netdb.h	29;"	d
_SGX_DEFS_H_	./third_party/intel/posix/sgx_defs.h	33;"	d
_SGX_THREAD_H_	./third_party/intel/posix/sgx_thread.h	33;"	d
_XOPEN_SOURCE	./platform/common/bridge_functions.cc	28;"	d	file:
_XOPEN_SOURCE	./util/fd_utils.cc	26;"	d	file:
__asylo_donate_thread	./platform/core/enclave_manager.cc	/^int __asylo_donate_thread(const char *name) {$/;"	f
__asylo_handle_signal	./platform/core/trusted_application.cc	/^int __asylo_handle_signal(const char *input, size_t input_len) {$/;"	f
__asylo_initiate_migration	./platform/core/trusted_application.cc	/^int __asylo_initiate_migration() {$/;"	f
__asylo_restore	./platform/core/trusted_application.cc	/^int __asylo_restore(const char *input, size_t input_len, char **output,$/;"	f
__asylo_take_snapshot	./platform/core/trusted_application.cc	/^int __asylo_take_snapshot(char **output, size_t *output_len) {$/;"	f
__asylo_threading_donate	./platform/core/trusted_application.cc	/^int __asylo_threading_donate() {$/;"	f
__asylo_transfer_secure_snapshot_key	./platform/core/trusted_application.cc	/^int __asylo_transfer_secure_snapshot_key(const char *input, size_t input_len,$/;"	f
__asylo_user_fini	./platform/core/trusted_application.cc	/^int __asylo_user_fini(const char *input, size_t input_len, char **output,$/;"	f
__asylo_user_init	./platform/core/trusted_application.cc	/^int __asylo_user_init(const char *name, const char *config, size_t config_len,$/;"	f
__asylo_user_run	./platform/core/trusted_application.cc	/^int __asylo_user_run(const char *input, size_t input_len, char **output,$/;"	f
__errno	./platform/posix/errno.cc	/^int *__errno() { return &local_errno; }$/;"	f
__malloc_lock	./platform/posix/malloc_lock.cc	/^void __malloc_lock(struct reent *) {$/;"	f
__malloc_lock	./platform/primitives/sim/malloc_lock.cc	/^void __malloc_lock(struct reent *) {$/;"	f
__malloc_unlock	./platform/posix/malloc_lock.cc	/^void __malloc_unlock(struct reent *) {$/;"	f
__malloc_unlock	./platform/primitives/sim/malloc_lock.cc	/^void __malloc_unlock(struct reent *) {$/;"	f
__ns_class	./platform/posix/include/arpa/nameser.h	/^typedef enum __ns_class {$/;"	g
__ns_class	./platform/system/include/arpa/nameser.h	/^typedef enum __ns_class {$/;"	g
__ns_opcode	./platform/posix/include/arpa/nameser.h	/^typedef enum __ns_opcode {$/;"	g
__ns_opcode	./platform/system/include/arpa/nameser.h	/^typedef enum __ns_opcode {$/;"	g
__ns_rcode	./platform/posix/include/arpa/nameser.h	/^typedef enum __ns_rcode {$/;"	g
__ns_rcode	./platform/system/include/arpa/nameser.h	/^typedef enum __ns_rcode {$/;"	g
__ns_type	./platform/posix/include/arpa/nameser.h	/^typedef enum __ns_type {$/;"	g
__ns_type	./platform/system/include/arpa/nameser.h	/^typedef enum __ns_type {$/;"	g
__padding	./platform/posix/include/sys/socket.h	/^  uint64_t __padding[4];$/;"	m	struct:sockaddr_storage
__socklen_t	./platform/posix/include/sys/socket.h	/^typedef uint32_t __socklen_t;$/;"	t
_pthread_cleanup_pop	./platform/posix/pthread.cc	/^void _pthread_cleanup_pop(struct _pthread_cleanup_context *context,$/;"	f
_pthread_cleanup_push	./platform/posix/pthread.cc	/^void _pthread_cleanup_push(struct _pthread_cleanup_context *context,$/;"	f
_sgx_thread_cond_attr_t	./third_party/intel/posix/sgx_thread.h	/^typedef struct _sgx_thread_cond_attr_t$/;"	s
_sgx_thread_cond_t	./third_party/intel/posix/sgx_thread.h	/^typedef struct _sgx_thread_cond_t$/;"	s
_sgx_thread_mutex_attr_t	./third_party/intel/posix/sgx_thread.h	/^typedef struct _sgx_thread_mutex_attr_t$/;"	s
_sgx_thread_mutex_t	./third_party/intel/posix/sgx_thread.h	/^typedef struct _sgx_thread_mutex_t$/;"	s
_sgx_thread_queue_t	./third_party/intel/posix/sgx_thread.h	/^typedef struct _sgx_thread_queue_t$/;"	s
a	./identity/util/aligned_object_ptr_test.cc	/^  uint64_t a;$/;"	m	struct:asylo::__anon172::TestStruct	file:
a	./identity/util/aligned_object_ptr_test.cc	/^  uint64_t a;$/;"	m	struct:asylo::__anon426::TestStruct	file:
a_	./identity/util/aligned_object_ptr_test.cc	/^  uint64_t a_;$/;"	m	class:asylo::__anon172::TestClass	file:
a_	./identity/util/aligned_object_ptr_test.cc	/^  uint64_t a_;$/;"	m	class:asylo::__anon426::TestClass	file:
aad	./crypto/aead_test_vector.h	/^  std::string aad;$/;"	m	struct:asylo::AeadTestVector
aad1_hex	./crypto/aes_gcm_siv_test.cc	/^const char aad1_hex[] = "";$/;"	m	namespace:asylo::__anon26	file:
aad1_hex	./crypto/aes_gcm_siv_test.cc	/^const char aad1_hex[] = "";$/;"	m	namespace:asylo::__anon280	file:
aad2_hex	./crypto/aes_gcm_siv_test.cc	/^const char aad2_hex[] = "";$/;"	m	namespace:asylo::__anon26	file:
aad2_hex	./crypto/aes_gcm_siv_test.cc	/^const char aad2_hex[] = "";$/;"	m	namespace:asylo::__anon280	file:
accept	./platform/posix/sockets/socket.cc	/^int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen) {$/;"	f
accepted_peer_assertions	./grpc/auth/core/ekep_handshaker_util.h	/^  std::vector<AssertionDescription> accepted_peer_assertions;$/;"	m	struct:asylo::EkepHandshakerOptions
accepted_peer_assertions	./grpc/auth/core/enclave_credentials_options.h	/^  assertion_description_array accepted_peer_assertions;$/;"	m	struct:__anon7
accepted_peer_assertions	./grpc/auth/enclave_credentials_options.h	/^  AssertionDescriptionHashSet accepted_peer_assertions;$/;"	m	struct:asylo::EnclaveCredentialsOptions
accepted_peer_assertions_	./grpc/auth/core/client_ekep_handshaker.h	/^  const std::vector<AssertionDescription> accepted_peer_assertions_;$/;"	m	class:asylo::final
accepted_peer_assertions_	./grpc/auth/core/enclave_credentials.h	/^  assertion_description_array accepted_peer_assertions_;$/;"	m	class:final
accepted_peer_assertions_	./grpc/auth/core/server_ekep_handshaker.h	/^  const std::vector<AssertionDescription> accepted_peer_assertions_;$/;"	m	class:asylo::final
access	./platform/posix/unistd.cc	/^int access(const char *path_name, int mode) {$/;"	f
access	./platform/primitives/sim/runtime_stubs.c	/^int access() { return 0; }$/;"	f
accessible_directory	./platform/posix/errno_test.cc	/^constexpr char accessible_directory[] = "\/tmp";$/;"	m	namespace:asylo::__anon330	file:
accessible_directory	./platform/posix/errno_test.cc	/^constexpr char accessible_directory[] = "\/tmp";$/;"	m	namespace:asylo::__anon76	file:
actime	./platform/common/bridge_types.h	/^  int64_t actime;$/;"	m	struct:bridge_utimbuf
actime	./platform/posix/include/utime.h	/^  time_t actime;$/;"	m	struct:utimbuf
ad	./platform/storage/secure/aead_handler.h	/^    std::unique_ptr<AuthenticatedDictionary> ad;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileControl
add_required_attribute	./identity/sgx/fake_enclave.h	/^  void add_required_attribute(SecsAttributeBit bit) {$/;"	f	class:asylo::sgx::FakeEnclave
add_valid_attribute	./identity/sgx/fake_enclave.h	/^  void add_valid_attribute(SecsAttributeBit bit) {$/;"	f	class:asylo::sgx::FakeEnclave
additional_authenticated_data	./grpc/auth/core/ekep_handshaker_util.h	/^  std::string additional_authenticated_data;$/;"	m	struct:asylo::EkepHandshakerOptions
additional_authenticated_data	./grpc/auth/core/enclave_credentials_options.h	/^  safe_string additional_authenticated_data;$/;"	m	struct:__anon7
additional_authenticated_data	./grpc/auth/enclave_credentials_options.h	/^  std::string additional_authenticated_data;$/;"	m	struct:asylo::EnclaveCredentialsOptions
additional_authenticated_data_	./grpc/auth/core/client_ekep_handshaker.h	/^  const std::string additional_authenticated_data_;$/;"	m	class:asylo::final
additional_authenticated_data_	./grpc/auth/core/enclave_credentials.h	/^  safe_string additional_authenticated_data_;$/;"	m	class:final
additional_authenticated_data_	./grpc/auth/core/server_ekep_handshaker.h	/^  const std::string additional_authenticated_data_;$/;"	m	class:asylo::final
addr_in	./platform/common/bridge_types.h	/^    struct bridge_sockaddr_in addr_in;$/;"	m	union:bridge_sockaddr::__anon5	typeref:struct:bridge_sockaddr::__anon5::bridge_sockaddr_in
addr_in6	./platform/common/bridge_types.h	/^    struct bridge_sockaddr_in6 addr_in6;$/;"	m	union:bridge_sockaddr::__anon5	typeref:struct:bridge_sockaddr::__anon5::bridge_sockaddr_in6
addr_un	./platform/common/bridge_types.h	/^    struct bridge_sockaddr_un addr_un;$/;"	m	union:bridge_sockaddr::__anon5	typeref:struct:bridge_sockaddr::__anon5::bridge_sockaddr_un
address	./util/cleansing_allocator.h	/^  const_pointer address(const T &r) {$/;"	f	class:asylo::CleansingAllocator
address	./util/cleansing_allocator.h	/^  pointer address(T &r) {$/;"	f	class:asylo::CleansingAllocator
address_	./test/grpc/enclave_insecure_server_test.cc	/^  std::string address_;$/;"	m	class:asylo::test::__anon223::EnclaveServerTest	file:
address_	./test/grpc/enclave_insecure_server_test.cc	/^  std::string address_;$/;"	m	class:asylo::test::__anon477::EnclaveServerTest	file:
address_	./test/grpc/enclave_secure_server_test.cc	/^  std::string address_;$/;"	m	class:asylo::test::__anon225::EnclaveSecureGrpcTest	file:
address_	./test/grpc/enclave_secure_server_test.cc	/^  std::string address_;$/;"	m	class:asylo::test::__anon479::EnclaveSecureGrpcTest	file:
addrinfo	./platform/posix/include/sys/socket.h	/^typedef struct addrinfo {$/;"	s
addrinfo	./platform/posix/include/sys/socket.h	/^} addrinfo;$/;"	t	typeref:struct:addrinfo
aead_	./crypto/aead_key.h	/^  const EVP_AEAD *const aead_;$/;"	m	class:asylo::AeadKey
aead_scheme_	./crypto/aead_key.h	/^  const AeadScheme aead_scheme_;$/;"	m	class:asylo::AeadKey
ai_addr	./platform/posix/include/sys/socket.h	/^  struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	./platform/posix/include/sys/socket.h	/^  socklen_t ai_addrlen;$/;"	m	struct:addrinfo
ai_canonname	./platform/posix/include/sys/socket.h	/^  char *ai_canonname;$/;"	m	struct:addrinfo
ai_family	./platform/posix/include/sys/socket.h	/^  int ai_family;$/;"	m	struct:addrinfo
ai_flags	./platform/posix/include/sys/socket.h	/^  int ai_flags;$/;"	m	struct:addrinfo
ai_next	./platform/posix/include/sys/socket.h	/^  struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	./platform/posix/include/sys/socket.h	/^  int ai_protocol;$/;"	m	struct:addrinfo
ai_socktype	./platform/posix/include/sys/socket.h	/^  int ai_socktype;$/;"	m	struct:addrinfo
align	./identity/util/aligned_object_ptr.h	/^  uint8_t *align(size_t alignment, uint8_t *addr) {$/;"	f	class:asylo::AlignedObjectPtr
alive	./platform/core/test/shared_resource_test.cc	/^  bool *alive;$/;"	m	struct:asylo::__anon134::TestResource	file:
alive	./platform/core/test/shared_resource_test.cc	/^  bool *alive;$/;"	m	struct:asylo::__anon388::TestResource	file:
all_attributes_	./identity/sgx/secs_attributes_test.cc	/^  const SecsAttributeSet all_attributes_ = {0xb7, 0x2FF};$/;"	m	class:asylo::sgx::__anon164::SecsAttributesTest	file:
all_attributes_	./identity/sgx/secs_attributes_test.cc	/^  const SecsAttributeSet all_attributes_ = {0xb7, 0x2FF};$/;"	m	class:asylo::sgx::__anon418::SecsAttributesTest	file:
alloc_	./util/cleansing_allocator.h	/^  A alloc_;$/;"	m	class:asylo::CleansingAllocator
alloc_list_node	./platform/posix/pthread.cc	/^__pthread_list_node_t *alloc_list_node(pthread_t thread_id) {$/;"	f	namespace:__anon296
alloc_list_node	./platform/posix/pthread.cc	/^__pthread_list_node_t *alloc_list_node(pthread_t thread_id) {$/;"	f	namespace:__anon42
allocate	./util/cleansing_allocator.h	/^  pointer allocate(size_type n) {$/;"	f	class:asylo::CleansingAllocator
always_care_attributes_	./identity/sgx/fake_hardware_interface_test.cc	/^  SecsAttributeSet always_care_attributes_;$/;"	m	class:asylo::sgx::__anon148::FakeEnclaveTest	file:
always_care_attributes_	./identity/sgx/fake_hardware_interface_test.cc	/^  SecsAttributeSet always_care_attributes_;$/;"	m	class:asylo::sgx::__anon402::FakeEnclaveTest	file:
app_	./test/misc/die_test.cc	/^  std::string app_;$/;"	m	class:asylo::__anon204::DieTest	file:
app_	./test/misc/die_test.cc	/^  std::string app_;$/;"	m	class:asylo::__anon458::DieTest	file:
app_	./test/util/exec_tester_test.cc	/^  std::string app_;$/;"	m	class:asylo::experimental::__anon216::ExecTesterTest	file:
app_	./test/util/exec_tester_test.cc	/^  std::string app_;$/;"	m	class:asylo::experimental::__anon470::ExecTesterTest	file:
argc	./bazel/application_wrapper/argv.cc	/^int Argv::argc() const { return argv_.size(); }$/;"	f	class:asylo::Argv
args_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  std::vector<std::string> args_;$/;"	m	class:asylo::__anon182::ApplicationWrapperEnclaveTest	file:
args_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  std::vector<std::string> args_;$/;"	m	class:asylo::__anon436::ApplicationWrapperEnclaveTest	file:
args_	./test/util/exec_tester.h	/^  std::vector<std::string> args_;$/;"	m	class:asylo::experimental::ExecTester
args_unmarshaler_	./bazel/application_wrapper/application_wrapper_enclave.cc	/^  Argv args_unmarshaler_;$/;"	m	class:asylo::final	file:
argv	./bazel/application_wrapper/argv.cc	/^char **Argv::argv() { return argv_c_str_.data(); }$/;"	f	class:asylo::Argv
argv_	./bazel/application_wrapper/argv.h	/^  std::vector<std::string> argv_;$/;"	m	class:asylo::Argv
argv_c_str_	./bazel/application_wrapper/argv.h	/^  std::vector<char *> argv_c_str_;$/;"	m	class:asylo::Argv
array1_	./grpc/auth/core/assertion_description_test.cc	/^  assertion_description_array array1_;$/;"	m	class:asylo::__anon259::AssertionDescriptionTest	file:
array1_	./grpc/auth/core/assertion_description_test.cc	/^  assertion_description_array array1_;$/;"	m	class:asylo::__anon513::AssertionDescriptionTest	file:
array2_	./grpc/auth/core/assertion_description_test.cc	/^  assertion_description_array array2_;$/;"	m	class:asylo::__anon259::AssertionDescriptionTest	file:
array2_	./grpc/auth/core/assertion_description_test.cc	/^  assertion_description_array array2_;$/;"	m	class:asylo::__anon513::AssertionDescriptionTest	file:
arraysize	./examples/quickstart/demo_enclave.cc	31;"	d	file:
arraysize	./examples/quickstart/solution/demo_enclave.cc	31;"	d	file:
arraysize	./identity/sgx/secs_attributes.cc	33;"	d	file:
assertion_description	./grpc/auth/core/assertion_description.h	/^} assertion_description;$/;"	t	typeref:struct:__anon8
assertion_description_array	./grpc/auth/core/assertion_description.h	/^} assertion_description_array;$/;"	t	typeref:struct:__anon9
assertion_description_array_assign_at	./grpc/auth/core/assertion_description.cc	/^bool assertion_description_array_assign_at(size_t index, int32_t identity_type,$/;"	f
assertion_description_array_copy	./grpc/auth/core/assertion_description.cc	/^void assertion_description_array_copy(const assertion_description_array *src,$/;"	f
assertion_description_array_free	./grpc/auth/core/assertion_description.cc	/^void assertion_description_array_free(assertion_description_array *array) {$/;"	f
assertion_description_array_init	./grpc/auth/core/assertion_description.cc	/^void assertion_description_array_init(size_t count,$/;"	f
assertion_description_assign	./grpc/auth/core/assertion_description.cc	/^void assertion_description_assign(int32_t identity_type,$/;"	f
assertion_description_copy	./grpc/auth/core/assertion_description.cc	/^void assertion_description_copy(const assertion_description *src,$/;"	f
assertion_description_free	./grpc/auth/core/assertion_description.cc	/^void assertion_description_free(assertion_description *desc) {$/;"	f
assertion_description_init	./grpc/auth/core/assertion_description.cc	/^void assertion_description_init(assertion_description *desc) {$/;"	f
assign	./crypto/util/bytes.h	/^  size_t assign(ByteContainerView view) {$/;"	f	class:asylo::Bytes
assign	./crypto/util/bytes.h	/^  size_t assign(const void *ptr, size_t count) {$/;"	f	class:asylo::Bytes
assign_key	./platform/posix/pthread.cc	/^bool assign_key(pthread_key_t *key) {$/;"	f
asylo	./bazel/application_wrapper/application_wrapper_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./bazel/application_wrapper/application_wrapper_driver_main.cc	/^namespace asylo {$/;"	n	file:
asylo	./bazel/application_wrapper/application_wrapper_driver_main.h	/^namespace asylo {$/;"	n
asylo	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./bazel/application_wrapper/application_wrapper_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./bazel/application_wrapper/argv.cc	/^namespace asylo {$/;"	n	file:
asylo	./bazel/application_wrapper/argv.h	/^namespace asylo {$/;"	n
asylo	./bazel/application_wrapper/argv_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./bazel/test_shim_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/aead_cryptor.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/aead_cryptor.h	/^namespace asylo {$/;"	n
asylo	./crypto/aead_cryptor_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/aead_key.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/aead_key.h	/^namespace asylo {$/;"	n
asylo	./crypto/aead_key_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/aead_test_vector.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/aead_test_vector.h	/^namespace asylo {$/;"	n
asylo	./crypto/aes_gcm_siv.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/aes_gcm_siv.h	/^namespace asylo {$/;"	n
asylo	./crypto/aes_gcm_siv_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/asymmetric_encryption_key.h	/^namespace asylo {$/;"	n
asylo	./crypto/certificate_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/certificate_util.h	/^namespace asylo {$/;"	n
asylo	./crypto/certificate_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/ecdsa_p256_sha256_signing_key.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/ecdsa_p256_sha256_signing_key.h	/^namespace asylo {$/;"	n
asylo	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/hash_interface.h	/^namespace asylo {$/;"	n
asylo	./crypto/nonce_generator.h	/^namespace asylo {$/;"	n
asylo	./crypto/nonce_generator_interface.h	/^namespace asylo {$/;"	n
asylo	./crypto/random_nonce_generator.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/random_nonce_generator.h	/^namespace asylo {$/;"	n
asylo	./crypto/random_nonce_generator_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/rsa_oaep_encryption_key.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/rsa_oaep_encryption_key.h	/^namespace asylo {$/;"	n
asylo	./crypto/rsa_oaep_encryption_key_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/sha256_hash.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/sha256_hash.h	/^namespace asylo {$/;"	n
asylo	./crypto/sha256_hash_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/signing_key.h	/^namespace asylo {$/;"	n
asylo	./crypto/util/bssl_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/util/bssl_util.h	/^namespace asylo {$/;"	n
asylo	./crypto/util/byte_container_util.h	/^namespace asylo {$/;"	n
asylo	./crypto/util/byte_container_util_internal.h	/^namespace asylo {$/;"	n
asylo	./crypto/util/byte_container_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/util/byte_container_view.h	/^namespace asylo {$/;"	n
asylo	./crypto/util/byte_container_view_internal.h	/^namespace asylo {$/;"	n
asylo	./crypto/util/byte_container_view_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/util/bytes.h	/^namespace asylo {$/;"	n
asylo	./crypto/util/bytes_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./crypto/util/trivial_object_util.h	/^namespace asylo {$/;"	n
asylo	./crypto/util/trivial_object_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./daemon/identity/attestation_domain.cc	/^namespace asylo {$/;"	n	file:
asylo	./daemon/identity/attestation_domain.h	/^namespace asylo {$/;"	n
asylo	./daemon/identity/attestation_domain_client.cc	/^namespace asylo {$/;"	n	file:
asylo	./daemon/identity/attestation_domain_client.h	/^namespace asylo {$/;"	n
asylo	./daemon/identity/attestation_domain_client_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./daemon/identity/attestation_domain_service_impl.cc	/^namespace asylo {$/;"	n	file:
asylo	./daemon/identity/attestation_domain_service_impl.h	/^namespace asylo {$/;"	n
asylo	./daemon/identity/attestation_domain_service_impl_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./daemon/identity/attestation_domain_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./examples/grpc_server/grpc_server_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./examples/hello_world/hello_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./examples/quickstart/demo_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./examples/quickstart/solution/demo_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/assertion_description_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/client_ekep_handshaker.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/client_ekep_handshaker.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/core/ekep_crypto.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/ekep_crypto.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/core/ekep_crypto_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/ekep_error_space.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/ekep_error_space.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/core/ekep_handshaker.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/ekep_handshaker.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/core/ekep_handshaker_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/ekep_handshaker_util.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/core/ekep_handshaker_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/enclave_transport_security.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/server_ekep_handshaker.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/server_ekep_handshaker.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/core/transcript.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/core/transcript.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/core/transcript_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/enclave_auth_context.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/enclave_auth_context.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/enclave_auth_context_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/enclave_channel_credentials.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/enclave_channel_credentials.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/enclave_credentials_options.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/enclave_credentials_options.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/enclave_credentials_options_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/enclave_server_credentials.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/enclave_server_credentials.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/null_credentials_options.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/null_credentials_options.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/peer_identity_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/peer_identity_util.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/peer_identity_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/sgx_local_credentials_options.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/sgx_local_credentials_options.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/test/h2_enclave_security_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/test/mock_enclave_auth_context.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/util/bridge_cpp_to_c.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/util/bridge_cpp_to_c.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/util/multi_buffer_input_stream.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/auth/util/multi_buffer_input_stream.h	/^namespace asylo {$/;"	n
asylo	./grpc/auth/util/safe_string_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/util/enclave_server.h	/^namespace asylo {$/;"	n
asylo	./grpc/util/grpc_server_launcher.cc	/^namespace asylo {$/;"	n	file:
asylo	./grpc/util/grpc_server_launcher.h	/^namespace asylo {$/;"	n
asylo	./grpc/util/grpc_server_launcher_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/additional_authenticated_data_generator.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/additional_authenticated_data_generator.h	/^namespace asylo {$/;"	n
asylo	./identity/additional_authenticated_data_generator_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/assertion_description_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/assertion_description_util.h	/^namespace asylo {$/;"	n
asylo	./identity/assertion_description_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/delegating_identity_expectation_matcher.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/delegating_identity_expectation_matcher.h	/^namespace asylo {$/;"	n
asylo	./identity/descriptions.h	/^namespace asylo {$/;"	n
asylo	./identity/enclave_assertion_authority.h	/^namespace asylo {$/;"	n
asylo	./identity/enclave_assertion_generator.h	/^namespace asylo {$/;"	n
asylo	./identity/enclave_assertion_verifier.h	/^namespace asylo {$/;"	n
asylo	./identity/identity_acl_evaluator.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/identity_acl_evaluator.h	/^namespace asylo {$/;"	n
asylo	./identity/identity_expectation_matcher.h	/^namespace asylo {$/;"	n
asylo	./identity/identity_expectation_matcher_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/init.h	/^namespace asylo {$/;"	n
asylo	./identity/init_internal.h	/^namespace asylo {$/;"	n
asylo	./identity/init_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/named_identity_expectation_matcher.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/named_identity_expectation_matcher.h	/^namespace asylo {$/;"	n
asylo	./identity/null_identity/null_assertion_authority_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/null_identity/null_assertion_generator.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/null_identity/null_assertion_generator.h	/^namespace asylo {$/;"	n
asylo	./identity/null_identity/null_assertion_verifier.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/null_identity/null_assertion_verifier.h	/^namespace asylo {$/;"	n
asylo	./identity/null_identity/null_identity_constants.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/null_identity/null_identity_constants.h	/^namespace asylo {$/;"	n
asylo	./identity/null_identity/null_identity_expectation_matcher.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/null_identity/null_identity_expectation_matcher.h	/^namespace asylo {$/;"	n
asylo	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/null_identity/null_identity_util.h	/^namespace asylo {$/;"	n
asylo	./identity/null_identity/null_identity_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/secret_sealer.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/secret_sealer.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/attributes_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/attributes_util.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/attributes_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/code_identity_constants.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/code_identity_constants.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/code_identity_test_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/code_identity_test_util.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/code_identity_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/code_identity_util.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/code_identity_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/dcap_intel_architectural_enclave_interface.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/dcap_intel_architectural_enclave_interface.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/fake_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/fake_enclave.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/fake_hardware_interface.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/fake_hardware_interface_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/fake_self_identity.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/hardware_interface.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/hardware_interface.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/identity_key_management_structs.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/intel_architectural_enclave_interface.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/intel_certs/intel_sgx_root_ca_cert.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/intel_certs/intel_sgx_root_ca_cert.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/local_secret_sealer_helpers.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/local_secret_sealer_helpers.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/pce_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/pce_util.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/pce_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/platform_provisioning.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/platform_provisioning.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/platform_provisioning_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/proto_format.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/proto_format.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/proto_format_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/remote_assertion_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/remote_assertion_util.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/remote_assertion_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/secs_attributes.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/secs_attributes.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/secs_attributes_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/secs_miscselect.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/secs_miscselect.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/secs_miscselect_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/self_identity.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/self_identity.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/self_identity_internal.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/sgx_code_identity_expectation_matcher.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/sgx_code_identity_expectation_matcher.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/sgx_code_identity_expectation_matcher_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/sgx_local_assertion_authority_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/sgx_local_assertion_generator.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/sgx_local_assertion_generator.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/sgx_local_assertion_generator_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/sgx_local_assertion_verifier.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/sgx_local_assertion_verifier.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/sgx_local_secret_sealer.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/sgx_local_secret_sealer.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/sgx_local_secret_sealer_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/tcb.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/tcb.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/tcb_info_from_json.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/tcb_info_from_json.h	/^namespace asylo {$/;"	n
asylo	./identity/sgx/tcb_info_from_json_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/tcb_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/sgx/verify_hardware_report_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/test/mock_identity_expectation_matcher.h	/^namespace asylo {$/;"	n
asylo	./identity/util/aligned_object_ptr.h	/^namespace asylo {$/;"	n
asylo	./identity/util/aligned_object_ptr_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/util/sha256_hash_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./identity/util/sha256_hash_util.h	/^namespace asylo {$/;"	n
asylo	./identity/util/sha256_hash_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/arch/common/trusted/fork.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/arch/include/trusted/fork.h	/^namespace asylo {$/;"	n
asylo	./platform/arch/sgx/trusted/fork.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/arch/sgx/trusted/hardware_random.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/arch/sgx/trusted/host_calls.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/arch/sgx/untrusted/sgx_client.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/arch/sgx/untrusted/sgx_client.h	/^namespace asylo {$/;"	n
asylo	./platform/arch/sgx_sim/trusted/register_signal.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/bridge_functions.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/bridge_functions.h	/^namespace asylo {$/;"	n
asylo	./platform/common/bridge_functions_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/bridge_proto_serializer.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/bridge_proto_serializer.h	/^namespace asylo {$/;"	n
asylo	./platform/common/debug_strings.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/debug_strings.h	/^namespace asylo {$/;"	n
asylo	./platform/common/debug_strings_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/futex.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/hash_combine.h	/^namespace asylo {$/;"	n
asylo	./platform/common/memory.h	/^namespace asylo {$/;"	n
asylo	./platform/common/ring_buffer.h	/^namespace asylo {$/;"	n
asylo	./platform/common/ring_buffer_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/singleton.h	/^namespace asylo {$/;"	n
asylo	./platform/common/singleton_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/static_map.h	/^namespace asylo {$/;"	n
asylo	./platform/common/static_map_internal.h	/^namespace asylo {$/;"	n
asylo	./platform/common/static_map_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/test/bridge_types_test_data.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/test/bridge_types_test_data.h	/^namespace asylo {$/;"	n
asylo	./platform/common/test/bridge_types_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/test/bridge_types_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/time_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/common/time_util.h	/^namespace asylo {$/;"	n
asylo	./platform/common/time_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/atomic.h	/^namespace asylo {$/;"	n
asylo	./platform/core/bridge_msghdr_wrapper.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/bridge_msghdr_wrapper.h	/^namespace asylo {$/;"	n
asylo	./platform/core/enclave_client.h	/^namespace asylo {$/;"	n
asylo	./platform/core/enclave_clock_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/enclave_config_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/enclave_config_util.h	/^namespace asylo {$/;"	n
asylo	./platform/core/enclave_manager.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/enclave_manager.h	/^namespace asylo {$/;"	n
asylo	./platform/core/entry_points.h	/^namespace asylo {$/;"	n
asylo	./platform/core/fake_trusted_global_state.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/shared_name.h	/^namespace asylo {$/;"	n
asylo	./platform/core/shared_resource_manager.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/shared_resource_manager.h	/^namespace asylo {$/;"	n
asylo	./platform/core/test/enclave_api_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/test/enclave_api_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/test/getenv_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/test/getenv_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/test/lock_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/test/proto_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/test/proto_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/test/random_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/test/shared_resource_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/trusted_application.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/trusted_application.h	/^namespace asylo {$/;"	n
asylo	./platform/core/trusted_global_state.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/trusted_global_state.h	/^namespace asylo {$/;"	n
asylo	./platform/core/trusted_mutex.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/trusted_mutex.h	/^namespace asylo {$/;"	n
asylo	./platform/core/trusted_spin_lock.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/trusted_spin_lock.h	/^namespace asylo {$/;"	n
asylo	./platform/core/untrusted_cache_malloc.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/untrusted_cache_malloc.h	/^namespace asylo {$/;"	n
asylo	./platform/core/untrusted_cache_malloc_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/untrusted_mutex.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/core/untrusted_mutex.h	/^namespace asylo {$/;"	n
asylo	./platform/crypto/gcmlib/gcm_cryptor.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/crypto/gcmlib/gcm_cryptor.h	/^namespace asylo {$/;"	n
asylo	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/host_call/exit_handler_constants.h	/^namespace asylo {$/;"	n
asylo	./platform/host_call/test/enclave_test_selectors.h	/^namespace asylo {$/;"	n
asylo	./platform/host_call/test/host_call_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/host_call/test/test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/host_call/trusted/host_call_dispatcher.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/host_call/trusted/host_call_dispatcher.h	/^namespace asylo {$/;"	n
asylo	./platform/host_call/untrusted/host_call_handlers.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/host_call/untrusted/host_call_handlers.h	/^namespace asylo {$/;"	n
asylo	./platform/host_call/untrusted/host_call_handlers_initializer.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/host_call/untrusted/host_call_handlers_initializer.h	/^namespace asylo {$/;"	n
asylo	./platform/host_call/untrusted/host_call_handlers_initializer_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/host_call/untrusted/host_call_handlers_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/bswap_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/endian_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/errno_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/fork_security_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/fork_security_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/fork_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/fork_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/cwd_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/epoll_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/eventfd_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/inotify_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/io_context_epoll.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/io_context_epoll.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/io/io_context_eventfd.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/io_context_eventfd.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/io/io_context_inotify.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/io_context_inotify.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/io/io_manager.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/io_manager.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/io/native_paths.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/native_paths.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/io/path_normalization_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/pipe_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/pipe_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/random_devices.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/random_devices.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/io/read_write_multithread_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/read_write_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/secure_paths.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/secure_paths.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/io/util.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/io/util.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/io/virtual_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/memory/heap_switch_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/pipe_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/pthread.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/pthread_impl.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/select_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/signal/signal_manager.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/signal/signal_manager.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/sockets/addrinfo_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/addrinfo_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/domain_socket_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/domain_socket_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/inet6_socket_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/inet6_socket_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/inet_aton_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/socket_client.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/socket_client.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/sockets/socket_server.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/socket_server.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/sockets/socket_test_transmit.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/socket_test_transmit.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/sockets/socket_transmit.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/sockets/socket_transmit.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/syscalls_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/syscalls_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/syslog_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/threading/thread_manager.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/posix/threading/thread_manager.h	/^namespace asylo {$/;"	n
asylo	./platform/posix/times_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/examples/hello_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/examples/hello_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/examples/hello_enclave.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/examples/hello_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/extent.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/extent_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/parameter_stack.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/parameter_stack_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/primitive_status.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/primitive_status_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/primitives.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/sgx/sgx_error_space.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/sgx/sgx_error_space.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/sgx/trusted_sgx.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/sgx/trusted_sgx.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/sgx/untrusted_sgx.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/sgx/untrusted_sgx.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/sim/malloc_lock.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/sim/shared_sim.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/sim/trusted_sim.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/sim/untrusted_sim.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/sim/untrusted_sim.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/test/primitives_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/test/sgx_test_backend.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/test/sgx_test_backend.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/test/sim_test_backend.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/test/sim_test_backend.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/test/test_backend.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/test/test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/test/test_selectors.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/trusted_primitives.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/untrusted_primitives.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/untrusted_primitives.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/util/dispatch_table.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/util/dispatch_table.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/util/dispatch_table_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/util/message.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/util/message_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/util/primitive_locks.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/util/status_conversions.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/util/status_conversions.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/util/status_conversions_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/util/trusted_memory.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/util/trusted_runtime_helper.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/primitives/util/trusted_runtime_helper.h	/^namespace asylo {$/;"	n
asylo	./platform/primitives/x86/spin_lock_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/secure/aead_handler.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/secure/aead_handler.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/secure/authenticated_dictionary.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/secure/ctmmt_authenticated_dictionary.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/secure/ctmmt_authenticated_dictionary.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/secure/enclave_storage_secure.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/secure/enclave_storage_secure.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/secure/enclave_storage_secure_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/utils/fd_closer.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/utils/fd_closer.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/utils/fd_closer_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/utils/offset_translator.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/utils/offset_translator.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/utils/offset_translator_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/utils/random_access_storage.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/utils/record_store.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/utils/record_store_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/utils/test_utils.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/utils/test_utils.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/utils/untrusted_file.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/storage/utils/untrusted_file.h	/^namespace asylo {$/;"	n
asylo	./platform/storage/utils/untrusted_file_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/message.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/message.h	/^namespace asylo {$/;"	n
asylo	./platform/system_call/message_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/metadata.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/metadata.h	/^namespace asylo {$/;"	n
asylo	./platform/system_call/metadata_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/serialize.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/serialize.h	/^namespace asylo {$/;"	n
asylo	./platform/system_call/serialize_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/system_call_message_fuzzer.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/system_call_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/type_conversions/manual_types_functions_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/untrusted_invoke.cc	/^namespace asylo {$/;"	n	file:
asylo	./platform/system_call/untrusted_invoke.h	/^namespace asylo {$/;"	n
asylo	./test/grpc/channel_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/grpc/client_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/grpc/client_enclave.h	/^namespace asylo {$/;"	n
asylo	./test/grpc/enclave_communication_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/grpc/enclave_insecure_server.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/grpc/enclave_insecure_server_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/grpc/enclave_secure_server.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/grpc/enclave_secure_server_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/grpc/messenger_client_impl.h	/^namespace asylo {$/;"	n
asylo	./test/grpc/messenger_server_impl.h	/^namespace asylo {$/;"	n
asylo	./test/grpc/server_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/loader/loader_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/active_enclave_signal_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/active_enclave_signal_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/block_enclave_entries_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/block_enclave_entries_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/condvar_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/die.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/die_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/double_die.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/embedded_enclave_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/enclave_entry_count_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/enclave_entry_count_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/error_propagation_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/error_propagation_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/exception.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/exception.h	/^namespace asylo {$/;"	n
asylo	./test/misc/exception_app.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/exception_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/exception_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/exhaust_sgx_tcs.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/exhaust_sgx_tcs_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/fail_finalize_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/fail_finalize_enclave_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/hello_world.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/hello_world_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/inactive_enclave_signal_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/inactive_enclave_signal_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/initfini.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/logging_test_driver.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/logging_test_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/malloc_stress_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/memory_layout_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/mutex_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/nanosleep_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/pthread_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/raise_signal_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/rwlock_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/sem_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/threaded_finalize.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/misc/threaded_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/do_nothing_enclave.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/enclave_assertion_authority_configs.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/enclave_assertion_authority_configs.h	/^namespace asylo {$/;"	n
asylo	./test/util/enclave_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/enclave_test.h	/^namespace asylo {$/;"	n
asylo	./test/util/enclave_test_application.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/enclave_test_application.h	/^namespace asylo {$/;"	n
asylo	./test/util/enclave_test_launcher.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/enclave_test_launcher.h	/^namespace asylo {$/;"	n
asylo	./test/util/exec_tester.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/exec_tester.h	/^namespace asylo {$/;"	n
asylo	./test/util/exec_tester_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/fake_enclave_loader.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/fake_enclave_loader.h	/^namespace asylo {$/;"	n
asylo	./test/util/finite_domain_fuzz.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/finite_domain_fuzz.h	/^namespace asylo {$/;"	n
asylo	./test/util/grpc_debug_config.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/grpc_debug_config.h	/^namespace asylo {$/;"	n
asylo	./test/util/mock_enclave_client.h	/^namespace asylo {$/;"	n
asylo	./test/util/mock_enclave_loader.h	/^namespace asylo {$/;"	n
asylo	./test/util/mock_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/output_collector.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/output_collector.h	/^namespace asylo {$/;"	n
asylo	./test/util/proto_matchers.h	/^namespace asylo {$/;"	n
asylo	./test/util/pthread_test_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/pthread_test_util.h	/^namespace asylo {$/;"	n
asylo	./test/util/status_matchers.h	/^namespace asylo {$/;"	n
asylo	./test/util/status_matchers_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./test/util/test_flags.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/binary_search.h	/^namespace asylo {$/;"	n
asylo	./util/binary_search_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/cleansing_allocator.h	/^namespace asylo {$/;"	n
asylo	./util/cleansing_allocator_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/cleansing_types.h	/^namespace asylo {$/;"	n
asylo	./util/cleanup.h	/^namespace asylo {$/;"	n
asylo	./util/cleanup_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/elf_reader.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/elf_reader.h	/^namespace asylo {$/;"	n
asylo	./util/elf_reader_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/error_codes.h	/^namespace asylo {$/;"	n
asylo	./util/error_space.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/error_space.h	/^namespace asylo {$/;"	n
asylo	./util/error_space_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/fd_utils.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/fd_utils.h	/^namespace asylo {$/;"	n
asylo	./util/fd_utils_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/file_mapping.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/file_mapping.h	/^namespace asylo {$/;"	n
asylo	./util/file_mapping_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/logging.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/logging.h	/^namespace asylo {$/;"	n
asylo	./util/mutex_guarded.h	/^namespace asylo {$/;"	n
asylo	./util/mutex_guarded_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/path.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/path.h	/^namespace asylo {$/;"	n
asylo	./util/path_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/posix_error_space.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/posix_error_space.h	/^namespace asylo {$/;"	n
asylo	./util/posix_error_space_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/proto_struct_util.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/proto_struct_util.h	/^namespace asylo {$/;"	n
asylo	./util/proto_struct_util_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/status.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/status.h	/^namespace asylo {$/;"	n
asylo	./util/status_error_space.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/status_error_space.h	/^namespace asylo {$/;"	n
asylo	./util/status_internal.h	/^namespace asylo {$/;"	n
asylo	./util/status_macros_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/status_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/statusor.h	/^namespace asylo {$/;"	n
asylo	./util/statusor_test.cc	/^namespace asylo {$/;"	n	file:
asylo	./util/std_thread.h	/^namespace asylo {$/;"	n
asylo	./util/thread_test.cc	/^namespace asylo {$/;"	n	file:
asylo_enclave_call	./platform/primitives/sgx/trusted_sgx.cc	/^int asylo_enclave_call(uint64_t selector, void *params) {$/;"	f	namespace:asylo::primitives
asylo_enclave_call	./platform/primitives/sim/trusted_sim.cc	/^extern "C" PrimitiveStatus asylo_enclave_call(uint64_t selector,$/;"	f	namespace:asylo::primitives
asylo_enclave_fini	./platform/host_call/test/test_enclave.cc	/^extern "C" primitives::PrimitiveStatus asylo_enclave_fini() {$/;"	f	namespace:asylo::host_call
asylo_enclave_fini	./platform/primitives/examples/hello_enclave.cc	/^extern "C" PrimitiveStatus asylo_enclave_fini() {$/;"	f	namespace:asylo::primitives
asylo_enclave_fini	./platform/primitives/test/test_enclave.cc	/^extern "C" PrimitiveStatus asylo_enclave_fini() {$/;"	f	namespace:asylo::primitives
asylo_enclave_init	./platform/host_call/test/test_enclave.cc	/^extern "C" primitives::PrimitiveStatus asylo_enclave_init() {$/;"	f	namespace:asylo::host_call
asylo_enclave_init	./platform/primitives/examples/hello_enclave.cc	/^extern "C" PrimitiveStatus asylo_enclave_init() {$/;"	f	namespace:asylo::primitives
asylo_enclave_init	./platform/primitives/test/test_enclave.cc	/^extern "C" PrimitiveStatus asylo_enclave_init() {$/;"	f	namespace:asylo::primitives
asylo_exit_call	./platform/primitives/sim/shared_sim.h	/^  PrimitiveStatus (*asylo_exit_call)(uint64_t untrusted_selector, void *params);$/;"	m	struct:asylo::primitives::SimTrampoline
asylo_local_alloc_handler	./platform/primitives/sim/shared_sim.h	/^  void *(*asylo_local_alloc_handler)(size_t size);$/;"	m	struct:asylo::primitives::SimTrampoline
asylo_local_free_handler	./platform/primitives/sim/shared_sim.h	/^  void (*asylo_local_free_handler)(void *ptr);$/;"	m	struct:asylo::primitives::SimTrampoline
asylo_spin_lock	./platform/primitives/x86/spin_lock.h	/^inline void asylo_spin_lock(asylo_spinlock_t *lock) {$/;"	f
asylo_spin_trylock	./platform/primitives/x86/spin_lock.h	/^inline bool asylo_spin_trylock(asylo_spinlock_t *lock) {$/;"	f
asylo_spin_unlock	./platform/primitives/x86/spin_lock.h	/^inline void asylo_spin_unlock(asylo_spinlock_t *lock) {$/;"	f
asylo_spinlock_t	./platform/primitives/x86/spin_lock.h	/^typedef volatile uint32_t asylo_spinlock_t __attribute__((aligned(64)));$/;"	t
at	./crypto/util/byte_container_view.h	/^  const uint8_t &at(size_t offset) const {$/;"	f	class:asylo::ByteContainerView
at	./crypto/util/bytes.h	/^  inline const uint8_t &at(size_t pos) const {$/;"	f	class:asylo::Bytes
at	./crypto/util/bytes.h	/^  inline uint8_t &at(size_t pos) {$/;"	f	class:asylo::Bytes
attestation_domain_	./identity/sgx/sgx_local_assertion_generator.h	/^  std::string attestation_domain_;$/;"	m	class:asylo::final
attestation_domain_	./identity/sgx/sgx_local_assertion_verifier.h	/^  std::string attestation_domain_;$/;"	m	class:asylo::final
attribute_names_	./identity/sgx/secs_attributes_test.cc	/^  const std::vector<std::string> attribute_names_ = {$/;"	m	class:asylo::sgx::__anon164::SecsAttributesTest	file:
attribute_names_	./identity/sgx/secs_attributes_test.cc	/^  const std::vector<std::string> attribute_names_ = {$/;"	m	class:asylo::sgx::__anon418::SecsAttributesTest	file:
attribute_sets_	./identity/sgx/secs_attributes_test.cc	/^  const std::vector<SecsAttributeSet> attribute_sets_ = {$/;"	m	class:asylo::sgx::__anon164::SecsAttributesTest	file:
attribute_sets_	./identity/sgx/secs_attributes_test.cc	/^  const std::vector<SecsAttributeSet> attribute_sets_ = {$/;"	m	class:asylo::sgx::__anon418::SecsAttributesTest	file:
attributemask	./identity/sgx/fake_enclave.h	/^    SecsAttributeSet attributemask;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
attributemask	./identity/sgx/identity_key_management_structs.h	/^  SecsAttributeSet attributemask;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
attributemask	./identity/sgx/identity_key_management_structs.h	/^  SecsAttributeSet attributemask;$/;"	m	struct:asylo::sgx::SigstructBody
attributes	./identity/sgx/fake_enclave.h	/^    SecsAttributeSet attributes;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
attributes	./identity/sgx/identity_key_management_structs.h	/^  SecsAttributeSet attributes;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
attributes	./identity/sgx/identity_key_management_structs.h	/^  SecsAttributeSet attributes;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Targetinfo
attributes	./identity/sgx/identity_key_management_structs.h	/^  SecsAttributeSet attributes;$/;"	m	struct:asylo::sgx::SigstructBody
attributes	./identity/sgx/self_identity.h	/^  SecsAttributeSet attributes;$/;"	m	struct:asylo::sgx::SelfIdentity
attributes_	./identity/sgx/fake_enclave.h	/^  SecsAttributeSet attributes_;$/;"	m	class:asylo::sgx::FakeEnclave
attributes_	./identity/sgx/secs_attributes_test.cc	/^  const std::vector<SecsAttributeBit> attributes_ = {$/;"	m	class:asylo::sgx::__anon164::SecsAttributesTest	file:
attributes_	./identity/sgx/secs_attributes_test.cc	/^  const std::vector<SecsAttributeBit> attributes_ = {$/;"	m	class:asylo::sgx::__anon418::SecsAttributesTest	file:
attributes_all_0_	./identity/sgx/code_identity_util_test.cc	/^  Attributes attributes_all_0_;$/;"	m	class:asylo::sgx::__anon152::CodeIdentityUtilTest	file:
attributes_all_0_	./identity/sgx/code_identity_util_test.cc	/^  Attributes attributes_all_0_;$/;"	m	class:asylo::sgx::__anon406::CodeIdentityUtilTest	file:
attributes_all_5_	./identity/sgx/code_identity_util_test.cc	/^  Attributes attributes_all_5_;$/;"	m	class:asylo::sgx::__anon152::CodeIdentityUtilTest	file:
attributes_all_5_	./identity/sgx/code_identity_util_test.cc	/^  Attributes attributes_all_5_;$/;"	m	class:asylo::sgx::__anon406::CodeIdentityUtilTest	file:
attributes_all_a_	./identity/sgx/code_identity_util_test.cc	/^  Attributes attributes_all_a_;$/;"	m	class:asylo::sgx::__anon152::CodeIdentityUtilTest	file:
attributes_all_a_	./identity/sgx/code_identity_util_test.cc	/^  Attributes attributes_all_a_;$/;"	m	class:asylo::sgx::__anon406::CodeIdentityUtilTest	file:
attributes_all_f_	./identity/sgx/code_identity_util_test.cc	/^  Attributes attributes_all_f_;$/;"	m	class:asylo::sgx::__anon152::CodeIdentityUtilTest	file:
attributes_all_f_	./identity/sgx/code_identity_util_test.cc	/^  Attributes attributes_all_f_;$/;"	m	class:asylo::sgx::__anon406::CodeIdentityUtilTest	file:
auth	./grpc/auth/core/transcript_test.cc	/^namespace auth {$/;"	n	namespace:asylo::grpc	file:
authenticated_ciphertext	./crypto/aead_test_vector.h	/^  std::string authenticated_ciphertext;$/;"	m	struct:asylo::AeadTestVector
authenticator_secret_	./grpc/auth/core/client_ekep_handshaker.h	/^  CleansingVector<uint8_t> authenticator_secret_;$/;"	m	class:asylo::final
authenticator_secret_	./grpc/auth/core/server_ekep_handshaker.h	/^  CleansingVector<uint8_t> authenticator_secret_;$/;"	m	class:asylo::final
authority_type	./grpc/auth/core/assertion_description.h	/^  safe_string authority_type;$/;"	m	struct:__anon8
authority_type_	./identity/null_identity/null_assertion_generator.cc	/^const char *const NullAssertionGenerator::authority_type_ =$/;"	m	class:asylo::NullAssertionGenerator	file:
authority_type_	./identity/null_identity/null_assertion_generator.h	/^  static const char *const authority_type_;$/;"	m	class:asylo::final
authority_type_	./identity/null_identity/null_assertion_verifier.cc	/^const char *const NullAssertionVerifier::authority_type_ =$/;"	m	class:asylo::NullAssertionVerifier	file:
authority_type_	./identity/null_identity/null_assertion_verifier.h	/^  static const char *const authority_type_;$/;"	m	class:asylo::final
authority_type_	./identity/sgx/sgx_local_assertion_generator.cc	/^const char *const SgxLocalAssertionGenerator::authority_type_ =$/;"	m	class:asylo::SgxLocalAssertionGenerator	file:
authority_type_	./identity/sgx/sgx_local_assertion_generator.h	/^  static const char *const authority_type_;$/;"	m	class:asylo::final
authority_type_	./identity/sgx/sgx_local_assertion_verifier.cc	/^const char *const SgxLocalAssertionVerifier::authority_type_ =$/;"	m	class:asylo::SgxLocalAssertionVerifier	file:
authority_type_	./identity/sgx/sgx_local_assertion_verifier.h	/^  static const char *const authority_type_;$/;"	m	class:asylo::final
authority_types_	./grpc/auth/core/assertion_description_test.cc	/^  std::vector<std::string> authority_types_;$/;"	m	class:asylo::__anon259::AssertionDescriptionTest	file:
authority_types_	./grpc/auth/core/assertion_description_test.cc	/^  std::vector<std::string> authority_types_;$/;"	m	class:asylo::__anon513::AssertionDescriptionTest	file:
available	./platform/common/ring_buffer.h	/^  size_t available() const { return kCapacity - count_; }$/;"	f	class:asylo::RingBuffer
available_cipher_suites_	./grpc/auth/core/client_ekep_handshaker.h	/^  const std::vector<HandshakeCipher> available_cipher_suites_;$/;"	m	class:asylo::final
available_cipher_suites_	./grpc/auth/core/server_ekep_handshaker.h	/^  const std::vector<HandshakeCipher> available_cipher_suites_;$/;"	m	class:asylo::final
available_ekep_versions_	./grpc/auth/core/client_ekep_handshaker.h	/^  const std::vector<std::string> available_ekep_versions_;$/;"	m	class:asylo::final
available_ekep_versions_	./grpc/auth/core/server_ekep_handshaker.h	/^  const std::vector<std::string> available_ekep_versions_;$/;"	m	class:asylo::final
available_record_protocols_	./grpc/auth/core/client_ekep_handshaker.h	/^  const std::vector<RecordProtocol> available_record_protocols_;$/;"	m	class:asylo::final
available_record_protocols_	./grpc/auth/core/server_ekep_handshaker.h	/^  const std::vector<RecordProtocol> available_record_protocols_;$/;"	m	class:asylo::final
b	./identity/util/aligned_object_ptr_test.cc	/^  uint32_t b;$/;"	m	struct:asylo::__anon172::TestStruct	file:
b	./identity/util/aligned_object_ptr_test.cc	/^  uint32_t b;$/;"	m	struct:asylo::__anon426::TestStruct	file:
b	./util/status_internal.h	/^                  *str = s->error_message(), *b = s->ok(), std::true_type());$/;"	m	struct:asylo::status_internal::status_type_traits
b_	./identity/util/aligned_object_ptr_test.cc	/^  uint32_t b_;$/;"	m	class:asylo::__anon172::TestClass	file:
b_	./identity/util/aligned_object_ptr_test.cc	/^  uint32_t b_;$/;"	m	class:asylo::__anon426::TestClass	file:
back	./crypto/util/byte_container_view.h	/^  const uint8_t &back() const { return data_[size_ - 1]; }$/;"	f	class:asylo::ByteContainerView
bad_attribute_	./identity/sgx/secs_attributes_test.cc	/^  const SecsAttributeBit bad_attribute_ = static_cast<SecsAttributeBit>(129);$/;"	m	class:asylo::sgx::__anon164::SecsAttributesTest	file:
bad_attribute_	./identity/sgx/secs_attributes_test.cc	/^  const SecsAttributeBit bad_attribute_ = static_cast<SecsAttributeBit>(129);$/;"	m	class:asylo::sgx::__anon418::SecsAttributesTest	file:
bad_data_vector	./crypto/aead_key_test.cc	/^  AeadTestVector bad_data_vector;$/;"	m	struct:asylo::__anon12::AeadKeyParam	file:
bad_data_vector	./crypto/aead_key_test.cc	/^  AeadTestVector bad_data_vector;$/;"	m	struct:asylo::__anon266::AeadKeyParam	file:
bad_data_vector_	./crypto/aead_key_test.cc	/^  AeadTestVector bad_data_vector_;$/;"	m	class:asylo::__anon12::AeadKeyTest	file:
bad_data_vector_	./crypto/aead_key_test.cc	/^  AeadTestVector bad_data_vector_;$/;"	m	class:asylo::__anon266::AeadKeyTest	file:
bad_file_path	./platform/posix/errno_test.cc	/^constexpr char bad_file_path[] = "\/errno_test\/disallowed";$/;"	m	namespace:asylo::__anon330	file:
bad_file_path	./platform/posix/errno_test.cc	/^constexpr char bad_file_path[] = "\/errno_test\/disallowed";$/;"	m	namespace:asylo::__anon76	file:
bad_identity_description_	./grpc/auth/enclave_auth_context_test.cc	/^  EnclaveIdentityDescription bad_identity_description_;$/;"	m	class:asylo::__anon248::EnclaveAuthContextTest	file:
bad_identity_description_	./grpc/auth/enclave_auth_context_test.cc	/^  EnclaveIdentityDescription bad_identity_description_;$/;"	m	class:asylo::__anon502::EnclaveAuthContextTest	file:
bad_key_	./crypto/aead_key_test.cc	/^  std::unique_ptr<AeadKey> bad_key_;$/;"	m	class:asylo::__anon12::AeadKeyTest	file:
bad_key_	./crypto/aead_key_test.cc	/^  std::unique_ptr<AeadKey> bad_key_;$/;"	m	class:asylo::__anon266::AeadKeyTest	file:
bar	./crypto/util/trivial_object_util_test.cc	/^  uint64_t bar;$/;"	m	struct:asylo::__anon22::TrivialStructure	file:
bar	./crypto/util/trivial_object_util_test.cc	/^  uint64_t bar;$/;"	m	struct:asylo::__anon276::TrivialStructure	file:
bar	./util/statusor_test.cc	/^  int bar;$/;"	m	struct:asylo::__anon231::Foo	file:
bar	./util/statusor_test.cc	/^  int bar;$/;"	m	struct:asylo::__anon485::Foo	file:
base	./examples/hello_world/hello_driver.cc	/^void *base = 0;$/;"	v
base	./grpc/auth/core/enclave_transport_security.cc	/^  tsi_handshaker base;$/;"	m	struct:asylo::tsi_enclave_handshaker	file:
base	./grpc/auth/core/enclave_transport_security.cc	/^  tsi_handshaker_result base;$/;"	m	struct:asylo::tsi_enclave_handshaker_result	file:
base_address	./platform/arch/sgx/untrusted/sgx_client.h	/^  const void *base_address() const {$/;"	f	class:asylo::SgxClient
base_address	./platform/arch/sgx/untrusted/sgx_client.h	/^  void *base_address() { return primitive_sgx_client_->GetBaseAddress(); }$/;"	f	class:asylo::SgxClient
base_address	./platform/primitives/test/sgx_test_backend.h	/^    void *base_address;$/;"	m	struct:asylo::primitives::test::SgxTestBackend::LoadEnclaveConfig
base_address_	./platform/primitives/sgx/untrusted_sgx.h	/^  void *base_address_;              \/\/ Enclave base address.$/;"	m	class:asylo::primitives::SgxEnclaveClient
baz	./crypto/util/trivial_object_util_test.cc	/^  uint8_t baz[10];$/;"	m	struct:asylo::__anon22::TrivialStructure	file:
baz	./crypto/util/trivial_object_util_test.cc	/^  uint8_t baz[10];$/;"	m	struct:asylo::__anon276::TrivialStructure	file:
baz	./util/statusor_test.cc	/^  std::string baz;$/;"	m	struct:asylo::__anon231::Foo	file:
baz	./util/statusor_test.cc	/^  std::string baz;$/;"	m	struct:asylo::__anon485::Foo	file:
be16toh	./platform/posix/endian.cc	/^uint16_t be16toh(uint16_t big_endian_16bits) { return big_endian_16bits; }$/;"	f
be16toh	./platform/posix/endian.cc	/^uint16_t be16toh(uint16_t big_endian_16bits) {$/;"	f
be32toh	./platform/posix/endian.cc	/^uint32_t be32toh(uint32_t big_endian_32bits) { return big_endian_32bits; }$/;"	f
be32toh	./platform/posix/endian.cc	/^uint32_t be32toh(uint32_t big_endian_32bits) {$/;"	f
be64toh	./platform/posix/endian.cc	/^uint64_t be64toh(uint64_t big_endian_64bits) { return big_endian_64bits; }$/;"	f
be64toh	./platform/posix/endian.cc	/^uint64_t be64toh(uint64_t big_endian_64bits) {$/;"	f
begin	./crypto/util/byte_container_view.h	/^  const_iterator begin() const { return data_; }$/;"	f	class:asylo::ByteContainerView
begin	./crypto/util/bytes.h	/^  const_iterator begin() const { return cbegin(); }$/;"	f	class:asylo::Bytes
begin	./crypto/util/bytes.h	/^  iterator begin() { return data_; }$/;"	f	class:asylo::Bytes
bind	./platform/posix/sockets/socket.cc	/^int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen) {$/;"	f
block_length_	./platform/storage/utils/offset_translator.h	/^  const size_t block_length_;$/;"	m	class:asylo::platform::storage::OffsetTranslator
block_length_	./platform/storage/utils/offset_translator_test.cc	/^  size_t block_length_;$/;"	m	class:asylo::__anon350::OffsetTranslatorTest	file:
block_length_	./platform/storage/utils/offset_translator_test.cc	/^  size_t block_length_;$/;"	m	class:asylo::__anon96::OffsetTranslatorTest	file:
blocked_signal_handled	./test/misc/active_enclave_signal_test_enclave.cc	/^static volatile thread_local bool blocked_signal_handled = false;$/;"	m	namespace:asylo	file:
body	./identity/sgx/identity_key_management_structs.h	/^  SigstructBody body;$/;"	m	struct:asylo::sgx::Sigstruct
body	./identity/sgx/identity_key_management_structs.h	/^  SigstructBody body;$/;"	m	struct:asylo::sgx::SigstructSigningData
bounding_parameter	./platform/system_call/metadata.cc	/^ParameterDescriptor ParameterDescriptor::bounding_parameter() const {$/;"	f	class:asylo::system_call::ParameterDescriptor
bridge_clockid_t	./platform/common/bridge_types.h	/^typedef int64_t bridge_clockid_t;$/;"	t
bridge_in6_addr	./platform/common/bridge_types.h	/^struct bridge_in6_addr {$/;"	s
bridge_in_addr	./platform/common/bridge_types.h	/^struct bridge_in_addr {$/;"	s
bridge_iovec	./platform/common/bridge_types.h	/^struct bridge_iovec {$/;"	s
bridge_msghdr	./platform/common/bridge_types.h	/^struct bridge_msghdr {$/;"	s
bridge_options_	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^  grpc_enclave_credentials_options bridge_options_;$/;"	m	class:asylo::__anon252::BridgeCppToCTest	file:
bridge_options_	./grpc/auth/util/bridge_cpp_to_c_test.cc	/^  grpc_enclave_credentials_options bridge_options_;$/;"	m	class:asylo::__anon506::BridgeCppToCTest	file:
bridge_pollfd	./platform/common/bridge_types.h	/^struct bridge_pollfd {$/;"	s
bridge_siginfo_t	./platform/common/bridge_types.h	/^struct bridge_siginfo_t {$/;"	s
bridge_sigset_t	./platform/common/bridge_types.h	/^typedef int64_t bridge_sigset_t;$/;"	t
bridge_size_t	./platform/common/bridge_types.h	/^typedef uint64_t bridge_size_t;$/;"	t
bridge_sockaddr	./platform/common/bridge_types.h	/^struct bridge_sockaddr {$/;"	s
bridge_sockaddr_in	./platform/common/bridge_types.h	/^struct bridge_sockaddr_in {$/;"	s
bridge_sockaddr_in6	./platform/common/bridge_types.h	/^struct bridge_sockaddr_in6 {$/;"	s
bridge_sockaddr_un	./platform/common/bridge_types.h	/^struct bridge_sockaddr_un {$/;"	s
bridge_ssize_t	./platform/common/bridge_types.h	/^typedef int64_t bridge_ssize_t;$/;"	t
bridge_stat	./platform/common/bridge_types.h	/^struct bridge_stat {$/;"	s
bridge_timespec	./platform/common/bridge_types.h	/^struct bridge_timespec {$/;"	s
bridge_timeval	./platform/common/bridge_types.h	/^struct bridge_timeval {$/;"	s
bridge_type_size	./platform/common/test/bridge_types_test_data.cc	/^size_t bridge_type_size(const std::string &type_name) {$/;"	f	namespace:asylo
bridge_utimbuf	./platform/common/bridge_types.h	/^struct bridge_utimbuf {$/;"	s
brk	./platform/primitives/sim/trusted_sim.cc	/^  uint8_t *brk = heap;$/;"	m	struct:asylo::primitives::__anon345::__anon346	file:
brk	./platform/primitives/sim/trusted_sim.cc	/^  uint8_t *brk = heap;$/;"	m	struct:asylo::primitives::__anon91::__anon92	file:
broadcast_cv_	./test/misc/condvar_test.cc	/^  pthread_cond_t broadcast_cv_ = PTHREAD_COND_INITIALIZER;$/;"	m	class:asylo::__anon194::BroadcastTest	file:
broadcast_cv_	./test/misc/condvar_test.cc	/^  pthread_cond_t broadcast_cv_ = PTHREAD_COND_INITIALIZER;$/;"	m	class:asylo::__anon448::BroadcastTest	file:
bss_base	./platform/primitives/trusted_runtime.h	/^  void *bss_base;$/;"	m	struct:EnclaveMemoryLayout
bss_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> bss_deleter_;$/;"	m	class:asylo::__anon305::SnapshotDeleter	file:
bss_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> bss_deleter_;$/;"	m	class:asylo::__anon51::SnapshotDeleter	file:
bss_size	./platform/primitives/trusted_runtime.h	/^  size_t bss_size;$/;"	m	struct:EnclaveMemoryLayout
bswap_16	./platform/posix/include/byteswap.h	/^static inline uint16_t bswap_16(uint16_t n) { return __builtin_bswap16(n); }$/;"	f
bswap_32	./platform/posix/include/byteswap.h	/^static inline uint32_t bswap_32(uint32_t n) { return __builtin_bswap32(n); }$/;"	f
bswap_64	./platform/posix/include/byteswap.h	/^static inline uint64_t bswap_64(uint64_t n) { return __builtin_bswap64(n); }$/;"	f
buf_	./platform/common/ring_buffer_test.cc	/^  RingBufferForTest<kDataSize> buf_;$/;"	m	class:asylo::RingBufferTest	file:
buffer	./util/file_mapping.h	/^  absl::Span<uint8_t> buffer() const { return mapped_region_; }$/;"	f	class:asylo::FileMapping
buffer_	./identity/util/aligned_object_ptr.h	/^  std::unique_ptr<uint8_t[]> buffer_;$/;"	m	class:asylo::AlignedObjectPtr
buffer_	./platform/common/ring_buffer.h	/^  std::array<uint8_t, kCapacity> buffer_;$/;"	m	class:asylo::RingBuffer
buffer_length_vals	./platform/storage/secure/enclave_storage_secure_test.cc	/^const size_t buffer_length_vals[] = {128, 160, 512, 544};$/;"	m	namespace:asylo::__anon100	file:
buffer_length_vals	./platform/storage/secure/enclave_storage_secure_test.cc	/^const size_t buffer_length_vals[] = {128, 160, 512, 544};$/;"	m	namespace:asylo::__anon354	file:
buffer_pool_	./platform/core/untrusted_cache_malloc.h	/^  std::stack<void *> buffer_pool_;$/;"	m	class:asylo::UntrustedCacheMalloc
buffer_to_hex_string	./platform/common/debug_strings.cc	/^std::string buffer_to_hex_string(const void *buf, int nbytes) {$/;"	f	namespace:asylo
buffers	./platform/core/untrusted_cache_malloc.h	/^    UntrustedUniquePtr<void*> buffers;$/;"	m	struct:asylo::UntrustedCacheMalloc::FreeList
builder_	./grpc/util/grpc_server_launcher.h	/^  ::grpc::ServerBuilder builder_;$/;"	m	class:asylo::GrpcServerLauncher
busy_buffers_	./platform/core/untrusted_cache_malloc.h	/^  absl::flat_hash_set<void *> busy_buffers_;$/;"	m	class:asylo::UntrustedCacheMalloc
busy_sleep	./platform/posix/time.cc	/^static int busy_sleep(const struct timespec *requested) {$/;"	f	namespace:__anon314
busy_sleep	./platform/posix/time.cc	/^static int busy_sleep(const struct timespec *requested) {$/;"	f	namespace:__anon60
bytes_read_	./grpc/auth/util/multi_buffer_input_stream.h	/^  int bytes_read_;$/;"	m	class:asylo::MultiBufferInputStream
bytes_to_hash_	./grpc/auth/core/transcript.h	/^  std::string bytes_to_hash_;$/;"	m	class:asylo::Transcript
c_cc	./platform/posix/include/sys/termios.h	/^  cc_t c_cc[NCCS];$/;"	m	struct:termios
c_cflag	./platform/posix/include/sys/termios.h	/^  tcflag_t c_cflag;$/;"	m	struct:termios
c_iflag	./platform/posix/include/sys/termios.h	/^  tcflag_t c_iflag;$/;"	m	struct:termios
c_ispeed	./platform/posix/include/sys/termios.h	/^  speed_t c_ispeed;$/;"	m	struct:termios
c_lflag	./platform/posix/include/sys/termios.h	/^  tcflag_t c_lflag;$/;"	m	struct:termios
c_line	./platform/posix/include/sys/termios.h	/^  cc_t c_line;$/;"	m	struct:termios
c_oflag	./platform/posix/include/sys/termios.h	/^  tcflag_t c_oflag;$/;"	m	struct:termios
c_ospeed	./platform/posix/include/sys/termios.h	/^  speed_t c_ospeed;$/;"	m	struct:termios
cache_	./platform/storage/utils/record_store.h	/^  std::list<CacheEntry> cache_;$/;"	m	class:asylo::RecordStore
cached	./platform/arch/sgx/trusted/exceptions.cc	/^  bool cached;$/;"	m	struct:__anon282::CpuidResult	file:
cached	./platform/arch/sgx/trusted/exceptions.cc	/^  bool cached;$/;"	m	struct:__anon28::CpuidResult	file:
call_enclave	./platform/primitives/examples/hello_driver.cc	/^Status call_enclave() {$/;"	f	namespace:asylo::primitives
callback	./platform/primitives/trusted_primitives.h	/^  Callback callback;$/;"	m	struct:asylo::primitives::EntryHandler
callback	./platform/primitives/untrusted_primitives.h	/^  Callback callback;$/;"	m	struct:asylo::primitives::ExitHandler
capacity	./platform/common/ring_buffer.h	/^  constexpr size_t capacity() const { return kCapacity; }$/;"	f	class:asylo::RingBuffer
capacity_	./platform/storage/utils/record_store.h	/^  size_t capacity_;  \/\/ Size of the cache in items of type T.$/;"	m	class:asylo::RecordStore
cbegin	./crypto/util/byte_container_view.h	/^  const_iterator cbegin() const { return data_; }$/;"	f	class:asylo::ByteContainerView
cbegin	./crypto/util/bytes.h	/^  const_iterator cbegin() const { return data_; }$/;"	f	class:asylo::Bytes
cc11_count	./test/misc/threaded_test.cc	/^static volatile int cc11_count = 0;$/;"	m	namespace:asylo::__anon208	file:
cc11_count	./test/misc/threaded_test.cc	/^static volatile int cc11_count = 0;$/;"	m	namespace:asylo::__anon462	file:
cc11_increment_count	./test/misc/threaded_test.cc	/^void cc11_increment_count() {$/;"	f	namespace:asylo::__anon208
cc11_increment_count	./test/misc/threaded_test.cc	/^void cc11_increment_count() {$/;"	f	namespace:asylo::__anon462
cc11_increment_count_and_wait	./test/misc/exhaust_sgx_tcs.cc	/^void cc11_increment_count_and_wait() {$/;"	f	namespace:asylo::__anon191
cc11_increment_count_and_wait	./test/misc/exhaust_sgx_tcs.cc	/^void cc11_increment_count_and_wait() {$/;"	f	namespace:asylo::__anon445
cc11_mutex	./test/misc/exhaust_sgx_tcs.cc	/^static absl::Mutex cc11_mutex;$/;"	m	namespace:asylo::__anon191	file:
cc11_mutex	./test/misc/exhaust_sgx_tcs.cc	/^static absl::Mutex cc11_mutex;$/;"	m	namespace:asylo::__anon445	file:
cc11_mutex	./test/misc/threaded_test.cc	/^static absl::Mutex cc11_mutex;$/;"	m	namespace:asylo::__anon208	file:
cc11_mutex	./test/misc/threaded_test.cc	/^static absl::Mutex cc11_mutex;$/;"	m	namespace:asylo::__anon462	file:
cc11_wait_count	./test/misc/exhaust_sgx_tcs.cc	/^static volatile int cc11_wait_count = 0;$/;"	m	namespace:asylo::__anon191	file:
cc11_wait_count	./test/misc/exhaust_sgx_tcs.cc	/^static volatile int cc11_wait_count = 0;$/;"	m	namespace:asylo::__anon445	file:
cc_t	./platform/posix/include/sys/termios.h	/^typedef unsigned char cc_t;$/;"	t
cend	./crypto/util/byte_container_view.h	/^  const_iterator cend() const { return data_ + size_; }$/;"	f	class:asylo::ByteContainerView
cend	./crypto/util/bytes.h	/^  const_iterator cend() const { return data_ + Size; }$/;"	f	class:asylo::Bytes
channel_	./grpc/util/grpc_server_launcher_test.cc	/^  std::shared_ptr<::grpc::Channel> channel_;$/;"	m	class:asylo::__anon263::GrpcServerLauncherTest	file:
channel_	./grpc/util/grpc_server_launcher_test.cc	/^  std::shared_ptr<::grpc::Channel> channel_;$/;"	m	class:asylo::__anon517::GrpcServerLauncherTest	file:
channel_credentials	./test/grpc/channel_test.cc	/^  std::shared_ptr<::grpc::ChannelCredentials> channel_credentials;$/;"	m	struct:asylo::__anon224::CredentialsConfig	file:
channel_credentials	./test/grpc/channel_test.cc	/^  std::shared_ptr<::grpc::ChannelCredentials> channel_credentials;$/;"	m	struct:asylo::__anon478::CredentialsConfig	file:
chdir	./platform/posix/unistd.cc	/^int chdir(const char *path) {$/;"	f
check	./platform/posix/include/netinet/udp.h	/^  uint16_t check;$/;"	m	struct:udphdr
chmod	./platform/posix/stat.cc	/^int chmod(const char *pathname, mode_t mode) {$/;"	f
chown	./platform/posix/unistd.cc	/^int chown(const char *path, uid_t owner, gid_t group) {$/;"	f
ciphertext1_hex	./crypto/aes_gcm_siv_test.cc	/^const char ciphertext1_hex[] =$/;"	m	namespace:asylo::__anon26	file:
ciphertext1_hex	./crypto/aes_gcm_siv_test.cc	/^const char ciphertext1_hex[] =$/;"	m	namespace:asylo::__anon280	file:
ciphertext2_hex	./crypto/aes_gcm_siv_test.cc	/^const char ciphertext2_hex[] =$/;"	m	namespace:asylo::__anon26	file:
ciphertext2_hex	./crypto/aes_gcm_siv_test.cc	/^const char ciphertext2_hex[] =$/;"	m	namespace:asylo::__anon280	file:
ciphertext_deleter_	./platform/arch/sgx/untrusted/ocalls.cc	/^  asylo::MallocUniquePtr<void> ciphertext_deleter_;$/;"	m	class:__anon286::SnapshotDataDeleter	file:
ciphertext_deleter_	./platform/arch/sgx/untrusted/ocalls.cc	/^  asylo::MallocUniquePtr<void> ciphertext_deleter_;$/;"	m	class:__anon32::SnapshotDataDeleter	file:
ciphertext_deleter_	./platform/posix/fork_security_test_driver.cc	/^    MallocUniquePtr<void> ciphertext_deleter_;$/;"	m	class:asylo::__anon305::SnapshotDeleter::SnapshotEntryDeleter	file:
ciphertext_deleter_	./platform/posix/fork_security_test_driver.cc	/^    MallocUniquePtr<void> ciphertext_deleter_;$/;"	m	class:asylo::__anon51::SnapshotDeleter::SnapshotEntryDeleter	file:
cleanup_function_	./util/cleanup.h	/^  std::function<void()> cleanup_function_;$/;"	m	class:asylo::Cleanup
cleanup_functions_	./platform/posix/threading/thread_manager.h	/^    std::stack<std::function<void()>> cleanup_functions_;$/;"	m	class:asylo::ThreadManager::Thread
client	./examples/hello_world/hello_driver.cc	/^asylo::SgxClient *client;$/;"	v
client	./test/misc/active_enclave_signal_test_driver.cc	/^  EnclaveClient *client;$/;"	m	struct:asylo::__anon198::RunEnclaveThreadInput	file:
client	./test/misc/active_enclave_signal_test_driver.cc	/^  EnclaveClient *client;$/;"	m	struct:asylo::__anon452::RunEnclaveThreadInput	file:
client_	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  StrictMock<MockEnclaveClient> *client_;$/;"	m	class:asylo::__anon184::ApplicationWrapperDriverMainTest	file:
client_	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  StrictMock<MockEnclaveClient> *client_;$/;"	m	class:asylo::__anon438::ApplicationWrapperDriverMainTest	file:
client_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  EnclaveClient *client_;$/;"	m	class:asylo::__anon182::ApplicationWrapperEnclaveTest	file:
client_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  EnclaveClient *client_;$/;"	m	class:asylo::__anon436::ApplicationWrapperEnclaveTest	file:
client_	./platform/host_call/test/host_call_test.cc	/^  std::shared_ptr<primitives::Client> client_;$/;"	m	class:asylo::host_call::__anon290::HostCallTest	file:
client_	./platform/host_call/test/host_call_test.cc	/^  std::shared_ptr<primitives::Client> client_;$/;"	m	class:asylo::host_call::__anon36::HostCallTest	file:
client_	./platform/posix/fork_security_test_driver.cc	/^  SgxClient *client_;$/;"	m	class:asylo::__anon305::ForkSecurityTest	file:
client_	./platform/posix/fork_security_test_driver.cc	/^  SgxClient *client_;$/;"	m	class:asylo::__anon51::ForkSecurityTest	file:
client_	./platform/posix/fork_test_driver.cc	/^  EnclaveClient *client_;$/;"	m	class:asylo::__anon300::ForkTest	file:
client_	./platform/posix/fork_test_driver.cc	/^  EnclaveClient *client_;$/;"	m	class:asylo::__anon46::ForkTest	file:
client_	./platform/primitives/examples/hello_test.cc	/^  std::shared_ptr<Client> client_;$/;"	m	class:asylo::primitives::test::HelloTest	file:
client_	./test/misc/double_die.cc	/^  EnclaveClient *client_;$/;"	m	class:asylo::__anon192::DieTest	file:
client_	./test/misc/double_die.cc	/^  EnclaveClient *client_;$/;"	m	class:asylo::__anon446::DieTest	file:
client_	./test/misc/exception_app.cc	/^  EnclaveClient *client_;$/;"	m	class:asylo::__anon190::ExceptionTest	file:
client_	./test/misc/exception_app.cc	/^  EnclaveClient *client_;$/;"	m	class:asylo::__anon444::ExceptionTest	file:
client_	./test/util/enclave_test.h	/^  EnclaveClient *client_;$/;"	m	class:asylo::EnclaveTest
client_	./test/util/enclave_test_launcher.h	/^  EnclaveClient *client_;$/;"	m	class:asylo::EnclaveTestLauncher
client_	./test/util/fake_enclave_loader.h	/^  mutable std::unique_ptr<EnclaveClient> client_;$/;"	m	class:asylo::FakeEnclaveLoader
client_assertion_transcript_	./grpc/auth/core/server_ekep_handshaker.h	/^  std::string client_assertion_transcript_;$/;"	m	class:asylo::final
client_launcher_	./test/grpc/enclave_communication_test.cc	/^  EnclaveTestLauncher client_launcher_;$/;"	m	class:asylo::__anon221::EnclaveCommunicationTest	file:
client_launcher_	./test/grpc/enclave_communication_test.cc	/^  EnclaveTestLauncher client_launcher_;$/;"	m	class:asylo::__anon475::EnclaveCommunicationTest	file:
client_owned_	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  std::unique_ptr<StrictMock<MockEnclaveClient>> client_owned_;$/;"	m	class:asylo::__anon184::ApplicationWrapperDriverMainTest	file:
client_owned_	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  std::unique_ptr<StrictMock<MockEnclaveClient>> client_owned_;$/;"	m	class:asylo::__anon438::ApplicationWrapperDriverMainTest	file:
client_public_key_	./grpc/auth/core/server_ekep_handshaker.h	/^  std::vector<uint8_t> client_public_key_;$/;"	m	class:asylo::final
client_table_lock_	./platform/core/enclave_manager.h	/^  mutable absl::Mutex client_table_lock_;$/;"	m	class:asylo::EnclaveManager
clock_gettime	./platform/posix/time.cc	/^int clock_gettime(clockid_t clock_id, struct timespec *time) {$/;"	f
clock_gettime	./platform/primitives/sim/runtime_stubs.c	/^int clock_gettime() { return 0; }$/;"	f
clock_monotonic_	./platform/core/enclave_manager.h	/^  std::atomic<int64_t> clock_monotonic_;$/;"	m	class:asylo::EnclaveManager
clock_realtime_	./platform/core/enclave_manager.h	/^  std::atomic<int64_t> clock_realtime_;$/;"	m	class:asylo::EnclaveManager
close_for_read	./platform/common/ring_buffer.h	/^  void close_for_read() { closed_for_read_ = 1; }$/;"	f	class:asylo::RingBuffer
close_for_write	./platform/common/ring_buffer.h	/^  void close_for_write() { closed_for_write_ = 1; }$/;"	f	class:asylo::RingBuffer
close_function_	./platform/storage/utils/fd_closer.h	/^  const CloseFunction close_function_;$/;"	m	class:asylo::platform::storage::FdCloser
close_result_	./platform/posix/io/io_manager.h	/^      std::atomic<int *> close_result_;$/;"	m	class:asylo::io::IOManager::FileDescriptorTable::AutoCloseIOContext
close_test	./platform/storage/utils/fd_closer_test.cc	/^int close_test(int fd) {$/;"	f	namespace:asylo::platform::storage::__anon351
close_test	./platform/storage/utils/fd_closer_test.cc	/^int close_test(int fd) {$/;"	f	namespace:asylo::platform::storage::__anon97
close_was_called	./platform/storage/utils/fd_closer_test.cc	/^static bool close_was_called = false;$/;"	m	namespace:asylo::platform::storage::__anon351	file:
close_was_called	./platform/storage/utils/fd_closer_test.cc	/^static bool close_was_called = false;$/;"	m	namespace:asylo::platform::storage::__anon97	file:
closed_for_read_	./platform/common/ring_buffer.h	/^  std::atomic<uint32_t> closed_for_read_;   \/\/ Reader is done reading.$/;"	m	class:asylo::RingBuffer
closed_for_write_	./platform/common/ring_buffer.h	/^  std::atomic<uint32_t> closed_for_write_;  \/\/ Writer is done writing.$/;"	m	class:asylo::RingBuffer
closedir	./platform/posix/dirent.cc	/^int closedir(DIR *) { abort(); }$/;"	f
code	./platform/common/bridge_types.h	/^  uint8_t code;$/;"	m	struct:BridgeWStatus
code_	./test/misc/exception.h	/^  int code_;$/;"	m	class:asylo::TestException
code_	./test/util/status_matchers.h	/^  const Enum code_;$/;"	m	class:asylo::internal::StatusMatcher
code_translation_map_	./util/error_space.h	/^      code_translation_map_;$/;"	m	class:asylo::error::ErrorSpaceImplementationHelper
codes_	./util/posix_error_space_test.cc	/^  std::set<PosixError> codes_;$/;"	m	class:asylo::error::__anon235::PosixErrorSpaceTest	file:
codes_	./util/posix_error_space_test.cc	/^  std::set<PosixError> codes_;$/;"	m	class:asylo::error::__anon489::PosixErrorSpaceTest	file:
config	./examples/hello_world/hello_driver.cc	/^asylo::EnclaveConfig config;$/;"	v
config	./platform/primitives/test/sgx_test_backend.h	/^    EnclaveConfig config;$/;"	m	struct:asylo::primitives::test::SgxTestBackend::LoadEnclaveConfig
config_	./identity/sgx/sgx_local_assertion_authority_test.cc	/^  std::string config_;$/;"	m	class:asylo::__anon160::SgxLocalAssertionAuthorityTest	file:
config_	./identity/sgx/sgx_local_assertion_authority_test.cc	/^  std::string config_;$/;"	m	class:asylo::__anon414::SgxLocalAssertionAuthorityTest	file:
config_	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  std::string config_;$/;"	m	class:asylo::__anon149::SgxLocalAssertionGeneratorTest	file:
config_	./identity/sgx/sgx_local_assertion_generator_test.cc	/^  std::string config_;$/;"	m	class:asylo::__anon403::SgxLocalAssertionGeneratorTest	file:
config_	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^  std::string config_;$/;"	m	class:asylo::__anon159::SgxLocalAssertionVerifierTest	file:
config_	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^  std::string config_;$/;"	m	class:asylo::__anon413::SgxLocalAssertionVerifierTest	file:
config_	./test/util/enclave_test.h	/^  EnclaveConfig config_;$/;"	m	class:asylo::EnclaveTest
configid	./identity/sgx/fake_enclave.h	/^    UnsafeBytes<kConfigidSize> configid;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
configid	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kConfigidSize> configid;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
configid	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kConfigidSize> configid;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Targetinfo
configid_	./identity/sgx/fake_enclave.h	/^  UnsafeBytes<kConfigidSize> configid_;$/;"	m	class:asylo::sgx::FakeEnclave
configs	./grpc/auth/test/h2_enclave_security_test.cc	/^static grpc_end2end_test_config configs[] = {$/;"	m	namespace:asylo::__anon247	file:
configs	./grpc/auth/test/h2_enclave_security_test.cc	/^static grpc_end2end_test_config configs[] = {$/;"	m	namespace:asylo::__anon501	file:
configsvn	./identity/sgx/fake_enclave.h	/^    uint16_t configsvn;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
configsvn	./identity/sgx/identity_key_management_structs.h	/^  uint16_t configsvn;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
configsvn	./identity/sgx/identity_key_management_structs.h	/^  uint16_t configsvn;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
configsvn	./identity/sgx/identity_key_management_structs.h	/^  uint16_t configsvn;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Targetinfo
configsvn_	./identity/sgx/fake_enclave.h	/^  uint16_t configsvn_;$/;"	m	class:asylo::sgx::FakeEnclave
configured_	./platform/core/enclave_manager.cc	/^bool EnclaveManager::configured_ = false;$/;"	m	class:asylo::EnclaveManager	file:
connect	./platform/posix/sockets/socket.cc	/^int connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen) {$/;"	f
connection_fd_	./platform/posix/sockets/socket_client.h	/^  int connection_fd_;$/;"	m	class:asylo::SocketClient
connection_fd_	./platform/posix/sockets/socket_server.h	/^  int connection_fd_;$/;"	m	class:asylo::SocketServer
connection_timeout	./platform/core/enclave_manager.h	/^    absl::Duration connection_timeout;$/;"	m	struct:asylo::EnclaveManagerOptions::ConfigServerConnectionAttributes
construct	./util/cleansing_allocator.h	/^  void construct(T *ptr, const T &t) {$/;"	f	class:asylo::CleansingAllocator
context	./platform/primitives/trusted_primitives.h	/^  void *context;$/;"	m	struct:asylo::primitives::EntryHandler
context	./platform/primitives/untrusted_primitives.h	/^  void *context;$/;"	m	struct:asylo::primitives::ExitHandler
context_	./crypto/sha256_hash.h	/^  SHA256_CTX context_;$/;"	m	class:asylo::final
context_	./platform/posix/io/io_manager.h	/^      std::shared_ptr<IOContext> context_;$/;"	m	class:asylo::io::IOManager::FileDescriptorTable::AutoCloseIOContext
cookie	./platform/posix/include/sys/inotify.h	/^  uint32_t cookie;  \/\/ Unique cookie associating related events (for rename(2))$/;"	m	struct:inotify_event
copied_data_owner_	./platform/primitives/util/message.h	/^  std::vector<std::unique_ptr<char[]>> copied_data_owner_;$/;"	m	class:asylo::primitives::MessageWriter
copy_only	./util/statusor_test.cc	/^  CopyOnlyDataType copy_only;$/;"	m	struct:asylo::__anon231::ImplicitlyCopyConvertible	file:
copy_only	./util/statusor_test.cc	/^  CopyOnlyDataType copy_only;$/;"	m	struct:asylo::__anon485::ImplicitlyCopyConvertible	file:
count	./grpc/auth/core/assertion_description.h	/^  size_t count;$/;"	m	struct:__anon9
count	./platform/core/untrusted_cache_malloc.h	/^    int count;$/;"	m	struct:asylo::UntrustedCacheMalloc::FreeList
count	./test/misc/threaded_test.cc	/^static volatile int count = 0;$/;"	m	namespace:asylo::__anon208	file:
count	./test/misc/threaded_test.cc	/^static volatile int count = 0;$/;"	m	namespace:asylo::__anon462	file:
count_	./platform/common/ring_buffer.h	/^  std::atomic<size_t> count_;  \/\/ Number of bytes waiting in the queue.$/;"	m	class:asylo::RingBuffer
count_	./platform/posix/include/semaphore.h	/^  int count_;$/;"	m	struct:sem_t
count_	./platform/storage/utils/record_store.h	/^  size_t count_;$/;"	m	class:asylo::RecordStore
count_	./test/misc/rwlock_test.cc	/^  volatile uint count_ = 0;$/;"	m	class:asylo::__anon213::RwLockTest	file:
count_	./test/misc/rwlock_test.cc	/^  volatile uint count_ = 0;$/;"	m	class:asylo::__anon467::RwLockTest	file:
count_	./test/util/exec_tester_test.cc	/^    int count_;$/;"	m	class:asylo::experimental::__anon216::ExecTesterTest::UniformOutputChecker	file:
count_	./test/util/exec_tester_test.cc	/^    int count_;$/;"	m	class:asylo::experimental::__anon470::ExecTesterTest::UniformOutputChecker	file:
count_finished	./test/misc/enclave_entry_count_test_enclave.cc	/^static bool count_finished = false;$/;"	m	namespace:asylo	file:
count_lock	./test/misc/threaded_test.cc	/^static pthread_mutex_t count_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:asylo::__anon208	file:
count_lock	./test/misc/threaded_test.cc	/^static pthread_mutex_t count_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:asylo::__anon462	file:
counter	./test/misc/mutex_test.cc	/^volatile int counter = 0;$/;"	m	namespace:asylo::__anon189	file:
counter	./test/misc/mutex_test.cc	/^volatile int counter = 0;$/;"	m	namespace:asylo::__anon443	file:
counter_	./platform/posix/io/io_context_eventfd.h	/^  uint64_t counter_;$/;"	m	class:asylo::io::IOContextEventFd
counter_	./test/misc/condvar_test.cc	/^  volatile int counter_ = 0;$/;"	m	class:asylo::__anon194::ProducerConsumerTest	file:
counter_	./test/misc/condvar_test.cc	/^  volatile int counter_ = 0;$/;"	m	class:asylo::__anon448::ProducerConsumerTest	file:
counter_cv_	./test/misc/condvar_test.cc	/^  pthread_cond_t counter_cv_ = PTHREAD_COND_INITIALIZER;$/;"	m	class:asylo::__anon194::BroadcastTest	file:
counter_cv_	./test/misc/condvar_test.cc	/^  pthread_cond_t counter_cv_ = PTHREAD_COND_INITIALIZER;$/;"	m	class:asylo::__anon448::BroadcastTest	file:
counter_mutex_	./platform/posix/io/io_context_eventfd.h	/^  absl::Mutex counter_mutex_;$/;"	m	class:asylo::io::IOContextEventFd
cpu_set_t	./platform/posix/include/sched.h	/^typedef CpuSet cpu_set_t;$/;"	t
cpuid_results	./platform/arch/sgx/trusted/exceptions.cc	/^CpuidResult cpuid_results[kMaxSupportedCpuidLeaf + 1];$/;"	m	namespace:__anon28	file:
cpuid_results	./platform/arch/sgx/trusted/exceptions.cc	/^CpuidResult cpuid_results[kMaxSupportedCpuidLeaf + 1];$/;"	m	namespace:__anon282	file:
cpusvn	./identity/sgx/fake_enclave.h	/^    UnsafeBytes<kCpusvnSize> cpusvn;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
cpusvn	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kCpusvnSize> cpusvn;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
cpusvn	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kCpusvnSize> cpusvn;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
cpusvn	./identity/sgx/self_identity.h	/^  UnsafeBytes<kCpusvnSize> cpusvn;$/;"	m	struct:asylo::sgx::SelfIdentity
cpusvn_	./identity/sgx/fake_enclave.h	/^  UnsafeBytes<kCpusvnSize> cpusvn_;$/;"	m	class:asylo::sgx::FakeEnclave
crbegin	./crypto/util/byte_container_view.h	/^  const_reverse_iterator crbegin() const {$/;"	f	class:asylo::ByteContainerView
crbegin	./crypto/util/bytes.h	/^  const_reverse_iterator crbegin() const {$/;"	f	class:asylo::Bytes
create_security_connector	./grpc/auth/core/enclave_credentials.cc	/^grpc_enclave_channel_credentials::create_security_connector($/;"	f	class:grpc_enclave_channel_credentials
create_security_connector	./grpc/auth/core/enclave_credentials.cc	/^grpc_enclave_server_credentials::create_security_connector() {$/;"	f	class:grpc_enclave_server_credentials
credentials_	./grpc/util/enclave_server.h	/^  std::shared_ptr<::grpc::ServerCredentials> credentials_;$/;"	m	class:asylo::final
crend	./crypto/util/byte_container_view.h	/^  const_reverse_iterator crend() const {$/;"	f	class:asylo::ByteContainerView
crend	./crypto/util/bytes.h	/^  const_reverse_iterator crend() const {$/;"	f	class:asylo::Bytes
crypto	./platform/crypto/gcmlib/gcm_cryptor.cc	/^namespace crypto {$/;"	n	namespace:asylo::platform	file:
crypto	./platform/crypto/gcmlib/gcm_cryptor.h	/^namespace crypto {$/;"	n	namespace:asylo::platform
current_	./grpc/auth/util/multi_buffer_input_stream.h	/^  BufferList::const_iterator current_;$/;"	m	class:asylo::MultiBufferInputStream
current_	./identity/sgx/fake_enclave.h	/^  static FakeEnclave *current_;$/;"	m	class:asylo::sgx::FakeEnclave
current_client_	./platform/primitives/untrusted_primitives.cc	/^thread_local Client *Client::current_client_ = nullptr;$/;"	m	class:asylo::primitives::Client	file:
current_client_	./platform/primitives/untrusted_primitives.h	/^  static thread_local Client *current_client_;$/;"	m	class:asylo::primitives::Client
current_working_directory_	./platform/posix/io/io_manager.h	/^  std::string current_working_directory_;$/;"	m	class:asylo::io::IOManager
custom_allocator_	./platform/core/trusted_application.cc	/^  std::function<void *(size_t)> custom_allocator_;$/;"	m	class:asylo::__anon135::StatusSerializer	file:
custom_allocator_	./platform/core/trusted_application.cc	/^  std::function<void *(size_t)> custom_allocator_;$/;"	m	class:asylo::__anon389::StatusSerializer	file:
cv_	./platform/posix/include/semaphore.h	/^  pthread_cond_t cv_;$/;"	m	struct:sem_t
cv_	./test/misc/condvar_test.cc	/^  pthread_cond_t cv_;$/;"	m	class:asylo::__anon194::ProducerConsumerTest	file:
cv_	./test/misc/condvar_test.cc	/^  pthread_cond_t cv_;$/;"	m	class:asylo::__anon448::ProducerConsumerTest	file:
data	./crypto/util/byte_container_view.h	/^  const uint8_t *data() const { return data_; }$/;"	f	class:asylo::ByteContainerView
data	./crypto/util/bytes.h	/^  const uint8_t *data() const { return data_; }$/;"	f	class:asylo::Bytes
data	./crypto/util/bytes.h	/^  uint8_t *data() { return data_; }$/;"	f	class:asylo::Bytes
data	./grpc/auth/util/safe_string.h	/^  char *data;$/;"	m	struct:__anon6
data	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kReportdataSize> data;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Reportdata
data	./platform/crypto/gcmlib/gcm_cryptor.h	/^    uint8_t *data() { return nonce; }$/;"	f	struct:asylo::platform::crypto::gcmlib::GcmCryptor::Token
data	./platform/posix/include/sys/epoll.h	/^  epoll_data_t data;$/;"	m	struct:epoll_event
data	./platform/posix/include/sys/ioctl.h	/^  uint8_t *data;$/;"	m	struct:key_info
data	./platform/primitives/extent.h	/^  const void *data() const { return data_; }$/;"	f	class:asylo::primitives::Extent
data	./platform/primitives/extent.h	/^  void *data() { return data_; }$/;"	f	class:asylo::primitives::Extent
data	./platform/storage/secure/aead_handler.h	/^    uint8_t *data() { return file_digest.data(); }$/;"	f	struct:asylo::platform::storage::AeadHandler::DataDigest
data	./platform/storage/secure/aead_handler.h	/^    uint8_t *data() { return file_hash.data(); }$/;"	f	struct:asylo::platform::storage::AeadHandler::FileHeader
data	./util/statusor_test.cc	/^  int *data;$/;"	m	struct:asylo::__anon231::MoveOnlyDataType	file:
data	./util/statusor_test.cc	/^  int *data;$/;"	m	struct:asylo::__anon485::MoveOnlyDataType	file:
data	./util/statusor_test.cc	/^  int data;$/;"	m	struct:asylo::__anon231::CopyOnlyDataType	file:
data	./util/statusor_test.cc	/^  int data;$/;"	m	struct:asylo::__anon485::CopyOnlyDataType	file:
data_	./crypto/util/byte_container_view.h	/^  const uint8_t *data_;$/;"	m	class:asylo::ByteContainerView
data_	./crypto/util/bytes.h	/^  uint8_t data_[Size];$/;"	m	class:asylo::Bytes
data_	./grpc/auth/core/transcript_test.cc	/^  std::vector<uint8_t> data_;$/;"	m	class:asylo::grpc::auth::__anon261::final	file:
data_	./grpc/auth/core/transcript_test.cc	/^  std::vector<uint8_t> data_;$/;"	m	class:asylo::grpc::auth::__anon515::final	file:
data_	./platform/common/ring_buffer_test.cc	/^  std::vector<uint8_t> data_;$/;"	m	class:asylo::RingBufferTest	file:
data_	./platform/common/test/bridge_types_test_driver.cc	/^  std::map<std::string, size_t> data_;$/;"	m	class:asylo::__anon106::BridgeTypesTest	file:
data_	./platform/common/test/bridge_types_test_driver.cc	/^  std::map<std::string, size_t> data_;$/;"	m	class:asylo::__anon360::BridgeTypesTest	file:
data_	./platform/primitives/extent.h	/^  void *data_;$/;"	m	class:asylo::primitives::Extent
data_base	./platform/primitives/trusted_runtime.h	/^  void *data_base;$/;"	m	struct:EnclaveMemoryLayout
data_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> data_deleter_;$/;"	m	class:asylo::__anon305::SnapshotDeleter	file:
data_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> data_deleter_;$/;"	m	class:asylo::__anon51::SnapshotDeleter	file:
data_size	./platform/primitives/trusted_runtime.h	/^  size_t data_size;$/;"	m	struct:EnclaveMemoryLayout
date	./identity/sgx/identity_key_management_structs.h	/^  Date date;$/;"	m	struct:asylo::sgx::SigstructHeader
day	./identity/sgx/identity_key_management_structs.h	/^  uint8_t day;$/;"	m	struct:asylo::sgx::Date
deallocate	./util/cleansing_allocator.h	/^  void deallocate(pointer ptr, size_type n) {$/;"	f	class:asylo::CleansingAllocator
deallocate	./util/cleansing_allocator_test.cc	/^  void deallocate(typename std::allocator<T>::pointer ptr,$/;"	f	class:asylo::__anon239::TestAllocator
deallocate	./util/cleansing_allocator_test.cc	/^  void deallocate(typename std::allocator<T>::pointer ptr,$/;"	f	class:asylo::__anon493::TestAllocator
debug	./platform/primitives/test/sgx_test_backend.h	/^    bool debug;$/;"	m	struct:asylo::primitives::test::SgxTestBackend::LoadEnclaveConfig
debug_	./platform/arch/sgx/untrusted/sgx_client.h	/^  const bool debug_;$/;"	m	class:asylo::SgxEmbeddedLoader
debug_	./platform/arch/sgx/untrusted/sgx_client.h	/^  const bool debug_;$/;"	m	class:asylo::SgxLoader
decltype	./util/status_internal.h	/^      -> decltype(*i = s->Canonical());$/;"	m	struct:asylo::status_internal::status_type_traits
default_client_acl_	./identity/sgx/sgx_local_secret_sealer.h	/^  sgx::CodeIdentityExpectation default_client_acl_;$/;"	m	class:asylo::SgxLocalSecretSealer
default_error_string_	./util/error_space.h	/^  const std::string default_error_string_;$/;"	m	class:asylo::error::ErrorSpaceImplementationHelper
default_options_	./grpc/auth/core/ekep_handshaker_util_test.cc	/^  EkepHandshakerOptions default_options_;$/;"	m	class:asylo::__anon257::EkepHandshakerUtilTest	file:
default_options_	./grpc/auth/core/ekep_handshaker_util_test.cc	/^  EkepHandshakerOptions default_options_;$/;"	m	class:asylo::__anon511::EkepHandshakerUtilTest	file:
default_value_host	./platform/system_call/type_conversions/types_conversions_generator.cc	/^  int default_value_host;$/;"	m	struct:EnumProperties	file:
default_value_newlib	./platform/system_call/type_conversions/types_conversions_generator.cc	/^  int default_value_newlib;$/;"	m	struct:EnumProperties	file:
dependencies	./identity/sgx/fake_enclave.h	/^    KeyDependenciesBase dependencies;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependencies
desc1_	./grpc/auth/core/assertion_description_test.cc	/^  assertion_description desc1_;$/;"	m	class:asylo::__anon259::AssertionDescriptionTest	file:
desc1_	./grpc/auth/core/assertion_description_test.cc	/^  assertion_description desc1_;$/;"	m	class:asylo::__anon513::AssertionDescriptionTest	file:
desc2_	./grpc/auth/core/assertion_description_test.cc	/^  assertion_description desc2_;$/;"	m	class:asylo::__anon259::AssertionDescriptionTest	file:
desc2_	./grpc/auth/core/assertion_description_test.cc	/^  assertion_description desc2_;$/;"	m	class:asylo::__anon513::AssertionDescriptionTest	file:
descriptions	./grpc/auth/core/assertion_description.h	/^  assertion_description *descriptions;$/;"	m	struct:__anon9
dest	./platform/posix/include/netinet/udp.h	/^  uint16_t dest;$/;"	m	struct:udphdr
destroy	./examples/hello_world/hello_driver.cc	/^void destroy() {$/;"	f
destroy	./util/cleansing_allocator.h	/^  void destroy(T *ptr) { std::allocator_traits<A>::destroy(alloc_, ptr); }$/;"	f	class:asylo::CleansingAllocator
destroyed_	./platform/common/singleton.h	/^bool Singleton<T, F>::destroyed_ = false;$/;"	m	class:asylo::Singleton
detachable_function	./test/misc/threaded_test.cc	/^void *detachable_function(void *arg) {$/;"	f	namespace:asylo::__anon208
detachable_function	./test/misc/threaded_test.cc	/^void *detachable_function(void *arg) {$/;"	f	namespace:asylo::__anon462
detached	./platform/posix/threading/thread_manager.cc	/^bool ThreadManager::Thread::detached() const { return detached_; }$/;"	f	class:asylo::ThreadManager::Thread
detached	./platform/posix/threading/thread_manager.h	/^    bool detached = false;$/;"	m	struct:asylo::ThreadManager::ThreadOptions
detached_	./platform/posix/threading/thread_manager.h	/^    bool detached_ = false;$/;"	m	class:asylo::ThreadManager::Thread
dh_private_key_	./grpc/auth/core/client_ekep_handshaker.h	/^  CleansingVector<uint8_t> dh_private_key_;$/;"	m	class:asylo::final
dh_private_key_	./grpc/auth/core/server_ekep_handshaker.h	/^  CleansingVector<uint8_t> dh_private_key_;$/;"	m	class:asylo::final
dh_public_key_	./grpc/auth/core/client_ekep_handshaker.h	/^  std::vector<uint8_t> dh_public_key_;$/;"	m	class:asylo::final
dh_public_key_	./grpc/auth/core/server_ekep_handshaker.h	/^  std::vector<uint8_t> dh_public_key_;$/;"	m	class:asylo::final
dirty	./platform/storage/utils/record_store.h	/^    bool dirty;    \/\/ True if this entry has been modified.$/;"	m	struct:asylo::RecordStore::CacheEntry
dl_handle_	./platform/primitives/sim/untrusted_sim.h	/^  void *dl_handle_ = nullptr;$/;"	m	class:asylo::primitives::SimEnclaveClient
dlclose	./platform/posix/dlfcn.cc	/^int dlclose(void *handle) { abort(); }$/;"	f
dlerror	./platform/posix/dlfcn.cc	/^char *dlerror() { abort(); }$/;"	f
dlopen	./platform/posix/dlfcn.cc	/^void *dlopen(const char *filename, int flags) { abort(); }$/;"	f
dlsym	./platform/posix/dlfcn.cc	/^void *dlsym(void *handle, const char *symbol) { abort(); }$/;"	f
do_not_care_attributes_	./identity/sgx/fake_hardware_interface_test.cc	/^  SecsAttributeSet do_not_care_attributes_;$/;"	m	class:asylo::sgx::__anon148::FakeEnclaveTest	file:
do_not_care_attributes_	./identity/sgx/fake_hardware_interface_test.cc	/^  SecsAttributeSet do_not_care_attributes_;$/;"	m	class:asylo::sgx::__anon402::FakeEnclaveTest	file:
domain_file_path_	./daemon/identity/attestation_domain_service_impl.h	/^  const std::string domain_file_path_;$/;"	m	class:asylo::final
domain_file_path_	./daemon/identity/attestation_domain_test.cc	/^  std::string domain_file_path_;$/;"	m	class:asylo::__anon188::AttestationDomainTest	file:
domain_file_path_	./daemon/identity/attestation_domain_test.cc	/^  std::string domain_file_path_;$/;"	m	class:asylo::__anon442::AttestationDomainTest	file:
domainname	./platform/common/bridge_types.h	/^  char domainname[BRIDGE_UTSNAME_FIELD_LENGTH];$/;"	m	struct:BridgeUtsName
domainname	./platform/posix/include/sys/utsname.h	/^  char domainname[UTSNAME_FIELD_LENGTH];$/;"	m	struct:utsname
donate	./platform/core/enclave_manager.cc	/^void donate(asylo::EnclaveClient *client) {$/;"	f	namespace:asylo
dup	./platform/posix/unistd.cc	/^int dup(int oldfd) { return IOManager::GetInstance().Dup(oldfd); }$/;"	f
dup2	./platform/posix/unistd.cc	/^int dup2(int oldfd, int newfd) {$/;"	f
ecall_dispatch_trusted_call	./platform/arch/sgx/trusted/ecalls.cc	/^int ecall_dispatch_trusted_call(uint64_t selector, void *buffer) {$/;"	f
ecall_handle_signal	./platform/arch/sgx/trusted/ecalls.cc	/^int ecall_handle_signal(const char *input, bridge_size_t input_len) {$/;"	f
ecall_initiate_migration	./platform/arch/sgx/trusted/ecalls.cc	/^int ecall_initiate_migration() {$/;"	f
ecall_restore	./platform/arch/sgx/trusted/ecalls.cc	/^int ecall_restore(const char *input, bridge_size_t input_len, char **output,$/;"	f
ecall_take_snapshot	./platform/arch/sgx/trusted/ecalls.cc	/^int ecall_take_snapshot(char **output, bridge_size_t *output_len) {$/;"	f
ecall_transfer_secure_snapshot_key	./platform/arch/sgx/trusted/ecalls.cc	/^int ecall_transfer_secure_snapshot_key(const char *input,$/;"	f
elf_file_	./util/elf_reader.cc	/^  absl::Span<const uint8_t> elf_file_;$/;"	m	class:asylo::ElfReaderCreator	file:
elf_file_	./util/elf_reader.h	/^  absl::Span<const uint8_t> elf_file_;$/;"	m	class:asylo::ElfReader
elf_file_mapping	./util/elf_reader_test.cc	/^    FileMapping elf_file_mapping;$/;"	m	struct:asylo::__anon226::ElfReaderTest::ElfReaderTestMembers	file:
elf_file_mapping	./util/elf_reader_test.cc	/^    FileMapping elf_file_mapping;$/;"	m	struct:asylo::__anon480::ElfReaderTest::ElfReaderTestMembers	file:
elf_file_mapping_	./util/elf_reader_test.cc	/^  FileMapping elf_file_mapping_;$/;"	m	class:asylo::__anon226::ElfReaderTest	file:
elf_file_mapping_	./util/elf_reader_test.cc	/^  FileMapping elf_file_mapping_;$/;"	m	class:asylo::__anon480::ElfReaderTest	file:
elf_header	./util/elf_reader_test.cc	/^    Elf64_Ehdr *elf_header;$/;"	m	struct:asylo::__anon226::ElfReaderTest::ElfReaderTestMembers	file:
elf_header	./util/elf_reader_test.cc	/^    Elf64_Ehdr *elf_header;$/;"	m	struct:asylo::__anon480::ElfReaderTest::ElfReaderTestMembers	file:
elf_header_	./util/elf_reader_test.cc	/^  Elf64_Ehdr *const elf_header_;$/;"	m	class:asylo::__anon226::ElfReaderTest	file:
elf_header_	./util/elf_reader_test.cc	/^  Elf64_Ehdr *const elf_header_;$/;"	m	class:asylo::__anon480::ElfReaderTest	file:
empty	./crypto/util/byte_container_view.h	/^  bool empty() const { return size_ == 0; }$/;"	f	class:asylo::ByteContainerView
empty	./platform/common/ring_buffer.h	/^  bool empty() const { return count_ == 0; }$/;"	f	class:asylo::RingBuffer
empty	./platform/primitives/extent.h	/^  bool empty() const { return data_ == nullptr || size_ == 0; }$/;"	f	class:asylo::primitives::Extent
empty	./platform/primitives/parameter_stack.h	/^  bool empty() const { return top_ == nullptr; }$/;"	f	class:asylo::primitives::ParameterStack
empty	./platform/primitives/util/message.h	/^  bool empty() const { return extents_.empty(); }$/;"	f	class:asylo::primitives::MessageWriter
empty_path	./platform/posix/errno_test.cc	/^constexpr char empty_path[] = "";$/;"	m	namespace:asylo::__anon330	file:
empty_path	./platform/posix/errno_test.cc	/^constexpr char empty_path[] = "";$/;"	m	namespace:asylo::__anon76	file:
enc_block_ecalls	./platform/primitives/sgx/trusted_runtime.cc	/^void enc_block_ecalls() { sgx_block_ecalls(); }$/;"	f
enc_fork	./platform/arch/common/trusted/fork.cc	/^pid_t enc_fork(const char *enclave_name, const EnclaveConfig &config) {$/;"	f	namespace:asylo
enc_fork	./platform/arch/sgx/trusted/fork.cc	/^pid_t enc_fork(const char *enclave_name, const EnclaveConfig &config) {$/;"	f	namespace:asylo
enc_get_memory_layout	./platform/primitives/sgx/trusted_runtime.cc	/^void enc_get_memory_layout(struct EnclaveMemoryLayout *enclave_memory_layout) {$/;"	f
enc_hardware_random	./platform/arch/sgx/trusted/hardware_random.cc	/^extern "C" ssize_t enc_hardware_random(uint8_t *buf, size_t count) {$/;"	f	namespace:asylo
enc_hardware_random	./platform/arch/sgx_sim/trusted/hardware_random.cc	/^extern "C" ssize_t enc_hardware_random(uint8_t *buf, size_t count) {$/;"	f
enc_init	./platform/core/trusted_application.cc	/^extern "C" PrimitiveStatus enc_init() { return PrimitiveStatus::OkStatus(); }$/;"	f
enc_init	./platform/host_call/test/test_enclave.cc	/^extern "C" PrimitiveStatus enc_init() { return PrimitiveStatus::OkStatus(); }$/;"	f
enc_init	./platform/primitives/examples/hello_enclave.cc	/^extern "C" PrimitiveStatus enc_init() {$/;"	f
enc_init	./platform/primitives/test/test_enclave.cc	/^extern "C" PrimitiveStatus enc_init() { return PrimitiveStatus::OkStatus(); }$/;"	f
enc_is_outside_enclave	./platform/primitives/sgx/trusted_runtime.cc	/^bool enc_is_outside_enclave(void const *address, size_t size) {$/;"	f
enc_is_within_enclave	./platform/primitives/sgx/trusted_runtime.cc	/^bool enc_is_within_enclave(void const *address, size_t size) {$/;"	f
enc_pause	./platform/primitives/trusted_runtime.h	104;"	d
enc_pause	./platform/primitives/trusted_runtime.h	106;"	d
enc_register_signal	./platform/arch/sgx/trusted/register_signal.cc	/^extern "C" int enc_register_signal(int signum, const sigset_t mask, int flags,$/;"	f
enc_register_signal	./platform/arch/sgx_sim/trusted/register_signal.cc	/^extern "C" int enc_register_signal(int signum, const sigset_t mask, int flags,$/;"	f
enc_set_dispatch_syscall	./platform/system_call/system_call.cc	/^extern "C" void enc_set_dispatch_syscall(syscall_dispatch_callback callback) {$/;"	f
enc_socket_server_	./platform/posix/sockets/domain_socket_test_enclave.cc	/^  SocketServer enc_socket_server_;$/;"	m	class:asylo::DomainSocketTest	file:
enc_socket_server_	./platform/posix/sockets/inet6_socket_test_enclave.cc	/^  SocketServer enc_socket_server_;$/;"	m	class:asylo::Inet6SocketTest	file:
enc_thread_self	./platform/primitives/sgx/trusted_runtime.cc	/^uint64_t enc_thread_self() {$/;"	f
enc_unblock_ecalls	./platform/primitives/sgx/trusted_runtime.cc	/^void enc_unblock_ecalls() { sgx_unblock_ecalls(); }$/;"	f
enc_untrusted__exit	./platform/arch/sgx/trusted/host_calls.cc	/^void enc_untrusted__exit(int rc) { ocall_enc_untrusted__exit(rc); }$/;"	f
enc_untrusted_accept	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_accept(int sockfd, struct sockaddr *addr,$/;"	f
enc_untrusted_access	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_access(const char *path_name, int mode) {$/;"	f
enc_untrusted_acquire_shared_resource	./platform/arch/sgx/trusted/host_calls.cc	/^void *enc_untrusted_acquire_shared_resource(enum SharedNameKind kind,$/;"	f
enc_untrusted_allocate_buffers	./platform/arch/sgx/trusted/host_calls.cc	/^void **enc_untrusted_allocate_buffers(size_t count, size_t size) {$/;"	f
enc_untrusted_bind	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_bind(int sockfd, const struct sockaddr *addr,$/;"	f
enc_untrusted_chmod	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_chmod(const char *path_name, mode_t mode) {$/;"	f
enc_untrusted_chown	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_chown(const char *pathname, uid_t owner, gid_t group) {$/;"	f
enc_untrusted_clock_gettime	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_clock_gettime(clockid_t clk_id, struct timespec *tp) {$/;"	f
enc_untrusted_close	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_close(int fd) {$/;"	f
enc_untrusted_connect	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_connect(int sockfd, const struct sockaddr *addr,$/;"	f
enc_untrusted_create_thread	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_create_thread(const char *name) {$/;"	f
enc_untrusted_deallocate_free_list	./platform/arch/sgx/trusted/host_calls.cc	/^void enc_untrusted_deallocate_free_list(void **free_list, size_t count) {$/;"	f
enc_untrusted_epoll_create	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_epoll_create(int size) {$/;"	f
enc_untrusted_epoll_ctl	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_epoll_ctl(int epfd, int op, int fd,$/;"	f
enc_untrusted_epoll_wait	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_epoll_wait(int epfd, struct epoll_event *events,$/;"	f
enc_untrusted_fchmod	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_fchmod(int fd, mode_t mode) {$/;"	f
enc_untrusted_fchown	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_fchown(int fd, uid_t owner, gid_t group) {$/;"	f
enc_untrusted_fcntl	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_fcntl(int fd, int cmd, ...) {$/;"	f
enc_untrusted_fcntl	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_fcntl(int fd, int cmd, ... \/* arg *\/) {$/;"	f
enc_untrusted_flock	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_flock(int fd, int operation) {$/;"	f
enc_untrusted_flock	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_flock(int fd, int operation) {$/;"	f
enc_untrusted_fork	./platform/arch/sgx/trusted/host_calls.cc	/^pid_t enc_untrusted_fork(const char *enclave_name, const char *config,$/;"	f
enc_untrusted_freeaddrinfo	./platform/arch/sgx/trusted/host_calls.cc	/^void enc_untrusted_freeaddrinfo(struct addrinfo *res) {$/;"	f
enc_untrusted_freeifaddrs	./platform/arch/sgx/trusted/host_calls.cc	/^void enc_untrusted_freeifaddrs(struct ifaddrs *ifa) {$/;"	f
enc_untrusted_fstat	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_fstat(int fd, struct stat *stat_buffer) {$/;"	f
enc_untrusted_fsync	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_fsync(int fd) {$/;"	f
enc_untrusted_ftruncate	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_ftruncate(int fd, off_t length) {$/;"	f
enc_untrusted_getaddrinfo	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_getaddrinfo(const char *node, const char *service,$/;"	f
enc_untrusted_getegid	./platform/host_call/trusted/host_calls.cc	/^gid_t enc_untrusted_getegid() {$/;"	f
enc_untrusted_geteuid	./platform/host_call/trusted/host_calls.cc	/^uid_t enc_untrusted_geteuid() {$/;"	f
enc_untrusted_getgid	./platform/host_call/trusted/host_calls.cc	/^gid_t enc_untrusted_getgid() {$/;"	f
enc_untrusted_getifaddrs	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_getifaddrs(struct ifaddrs **ifap) {$/;"	f
enc_untrusted_getitimer	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_getitimer(int which, struct itimerval *curr_value) {$/;"	f
enc_untrusted_getpeername	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_getpeername(int sockfd, struct sockaddr *addr,$/;"	f
enc_untrusted_getpid	./platform/host_call/trusted/host_calls.cc	/^pid_t enc_untrusted_getpid() {$/;"	f
enc_untrusted_getppid	./platform/host_call/trusted/host_calls.cc	/^pid_t enc_untrusted_getppid() {$/;"	f
enc_untrusted_getpwuid	./platform/arch/sgx/trusted/host_calls.cc	/^struct passwd *enc_untrusted_getpwuid(uid_t uid) {$/;"	f
enc_untrusted_getrusage	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_getrusage(int who, struct rusage *usage) {$/;"	f
enc_untrusted_getsockname	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_getsockname(int sockfd, struct sockaddr *addr,$/;"	f
enc_untrusted_getsockopt	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_getsockopt(int sockfd, int level, int optname, void *optval,$/;"	f
enc_untrusted_gettimeofday	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_gettimeofday(struct timeval *tv, void *tz) {$/;"	f
enc_untrusted_getuid	./platform/host_call/trusted/host_calls.cc	/^uid_t enc_untrusted_getuid() {$/;"	f
enc_untrusted_hex_dump	./platform/arch/sgx/trusted/host_calls.cc	/^void enc_untrusted_hex_dump(const void *buf, int nbytes) {$/;"	f
enc_untrusted_inet_ntop	./platform/arch/sgx/trusted/host_calls.cc	/^const char *enc_untrusted_inet_ntop(int af, const void *src, char *dst,$/;"	f
enc_untrusted_inet_pton	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_inet_pton(int af, const char *src, void *dst) {$/;"	f
enc_untrusted_initiate_migration	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_initiate_migration() {$/;"	f
enc_untrusted_inotify_add_watch	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_inotify_add_watch(int fd, const char *pathname,$/;"	f
enc_untrusted_inotify_add_watch	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_inotify_add_watch(int fd, const char *pathname,$/;"	f
enc_untrusted_inotify_init1	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_inotify_init1(int non_block) {$/;"	f
enc_untrusted_inotify_init1	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_inotify_init1(int flags) {$/;"	f
enc_untrusted_inotify_read	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_inotify_read(int fd, size_t count, char **serialized_events,$/;"	f
enc_untrusted_inotify_rm_watch	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_inotify_rm_watch(int fd, int wd) {$/;"	f
enc_untrusted_inotify_rm_watch	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_inotify_rm_watch(int fd, int wd) {$/;"	f
enc_untrusted_isatty	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_isatty(int fd) {$/;"	f
enc_untrusted_kill	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_kill(pid_t pid, int sig) {$/;"	f
enc_untrusted_link	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_link(const char *oldpath, const char *newpath) {$/;"	f
enc_untrusted_lseek	./platform/host_call/trusted/host_calls.cc	/^off_t enc_untrusted_lseek(int fd, off_t offset, int whence) {$/;"	f
enc_untrusted_lstat	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_lstat(const char *pathname, struct stat *stat_buffer) {$/;"	f
enc_untrusted_malloc	./platform/arch/sgx/trusted/host_calls.cc	/^void *enc_untrusted_malloc(size_t size) {$/;"	f
enc_untrusted_mkdir	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_mkdir(const char *pathname, mode_t mode) {$/;"	f
enc_untrusted_nanosleep	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_nanosleep(const struct timespec *req, struct timespec *rem) {$/;"	f
enc_untrusted_open	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_open(const char *path_name, int flags, ...) {$/;"	f
enc_untrusted_open	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_open(const char *pathname, int flags, ...) {$/;"	f
enc_untrusted_openlog	./platform/arch/sgx/trusted/host_calls.cc	/^void enc_untrusted_openlog(const char *ident, int option, int facility) {$/;"	f
enc_untrusted_pipe2	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_pipe2(int pipefd[2], int flags) {$/;"	f
enc_untrusted_poll	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_poll(struct pollfd *fds, nfds_t nfds, int timeout) {$/;"	f
enc_untrusted_puts	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_puts(const char *str) {$/;"	f
enc_untrusted_raise	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_raise(int sig) {$/;"	f
enc_untrusted_read	./platform/host_call/trusted/host_calls.cc	/^ssize_t enc_untrusted_read(int fd, void *buf, size_t count) {$/;"	f
enc_untrusted_readlink	./platform/host_call/trusted/host_calls.cc	/^ssize_t enc_untrusted_readlink(const char *pathname, char *buf, size_t bufsiz) {$/;"	f
enc_untrusted_readv	./platform/arch/sgx/trusted/host_calls.cc	/^ssize_t enc_untrusted_readv(int fd, const struct iovec *iov, int iovcnt,$/;"	f
enc_untrusted_recvfrom	./platform/arch/sgx/trusted/host_calls.cc	/^ssize_t enc_untrusted_recvfrom(int sockfd, void *buf, size_t len, int flags,$/;"	f
enc_untrusted_recvmsg	./platform/arch/sgx/trusted/host_calls.cc	/^ssize_t enc_untrusted_recvmsg(int sockfd,$/;"	f
enc_untrusted_register_signal_handler	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_register_signal_handler($/;"	f
enc_untrusted_release_shared_resource	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_release_shared_resource(enum SharedNameKind kind,$/;"	f
enc_untrusted_rename	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_rename(const char *oldpath, const char *newpath) {$/;"	f
enc_untrusted_rmdir	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_rmdir(const char *path) {$/;"	f
enc_untrusted_sched_getaffinity	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_sched_getaffinity(pid_t pid, size_t cpusetsize,$/;"	f
enc_untrusted_sched_yield	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_sched_yield() {$/;"	f
enc_untrusted_select	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_select(int nfds, fd_set *readfds, fd_set *writefds,$/;"	f
enc_untrusted_sendmsg	./platform/arch/sgx/trusted/host_calls.cc	/^ssize_t enc_untrusted_sendmsg(int sockfd,$/;"	f
enc_untrusted_setitimer	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_setitimer(int which, const struct itimerval *new_value,$/;"	f
enc_untrusted_setsid	./platform/host_call/trusted/host_calls.cc	/^pid_t enc_untrusted_setsid() {$/;"	f
enc_untrusted_setsockopt	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_setsockopt(int sockfd, int level, int optname,$/;"	f
enc_untrusted_setsockopt	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_setsockopt(int sockfd, int level, int optname,$/;"	f
enc_untrusted_sigprocmask	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {$/;"	f
enc_untrusted_sleep	./platform/arch/sgx/trusted/host_calls.cc	/^uint32_t enc_untrusted_sleep(uint32_t seconds) {$/;"	f
enc_untrusted_socket	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_socket(int domain, int type, int protocol) {$/;"	f
enc_untrusted_socket	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_socket(int domain, int type, int protocol) {$/;"	f
enc_untrusted_stat	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_stat(const char *pathname, struct stat *stat_buffer) {$/;"	f
enc_untrusted_symlink	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_symlink(const char *target, const char *linkpath) {$/;"	f
enc_untrusted_syscall	./platform/system_call/system_call.cc	/^extern "C" int64_t enc_untrusted_syscall(int sysno, ...) {$/;"	f
enc_untrusted_sysconf	./platform/arch/sgx/trusted/host_calls.cc	/^int64_t enc_untrusted_sysconf(int name) {$/;"	f
enc_untrusted_syslog	./platform/arch/sgx/trusted/host_calls.cc	/^void enc_untrusted_syslog(int priority, const char *message) {$/;"	f
enc_untrusted_times	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_times(struct tms *buf) {$/;"	f
enc_untrusted_truncate	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_truncate(const char *path, off_t length) {$/;"	f
enc_untrusted_umask	./platform/host_call/trusted/host_calls.cc	/^mode_t enc_untrusted_umask(mode_t mask) {$/;"	f
enc_untrusted_uname	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_uname(struct utsname *utsname_val) {$/;"	f
enc_untrusted_unlink	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_unlink(const char *pathname) {$/;"	f
enc_untrusted_usleep	./platform/host_call/trusted/host_calls.cc	/^int enc_untrusted_usleep(useconds_t usec) {$/;"	f
enc_untrusted_utime	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_utime(const char *filename, const struct utimbuf *times) {$/;"	f
enc_untrusted_utimes	./platform/arch/sgx/trusted/host_calls.cc	/^int enc_untrusted_utimes(const char *filename, const struct timeval times[2]) {$/;"	f
enc_untrusted_wait3	./platform/arch/sgx/trusted/host_calls.cc	/^pid_t enc_untrusted_wait3(int *wstatus, int options, struct rusage *usage) {$/;"	f
enc_untrusted_waitpid	./platform/arch/sgx/trusted/host_calls.cc	/^pid_t enc_untrusted_waitpid(pid_t pid, int *wstatus, int options) {$/;"	f
enc_untrusted_write	./platform/host_call/trusted/host_calls.cc	/^ssize_t enc_untrusted_write(int fd, const void *buf, size_t count) {$/;"	f
enc_untrusted_writev	./platform/arch/sgx/trusted/host_calls.cc	/^ssize_t enc_untrusted_writev(int fd, char *buf, int size) {$/;"	f
enclave_	./identity/sgx/code_identity_util_test.cc	/^  FakeEnclave *enclave_;$/;"	m	class:asylo::sgx::__anon152::CodeIdentityUtilTest	file:
enclave_	./identity/sgx/code_identity_util_test.cc	/^  FakeEnclave *enclave_;$/;"	m	class:asylo::sgx::__anon406::CodeIdentityUtilTest	file:
enclave_	./identity/sgx/fake_hardware_interface_test.cc	/^  FakeEnclave enclave_;$/;"	m	class:asylo::sgx::__anon148::FakeEnclaveTest	file:
enclave_	./identity/sgx/fake_hardware_interface_test.cc	/^  FakeEnclave enclave_;$/;"	m	class:asylo::sgx::__anon402::FakeEnclaveTest	file:
enclave_	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  std::unique_ptr<sgx::FakeEnclave> enclave_;$/;"	m	class:asylo::__anon168::SgxLocalSecretSealerTest	file:
enclave_	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  std::unique_ptr<sgx::FakeEnclave> enclave_;$/;"	m	class:asylo::__anon422::SgxLocalSecretSealerTest	file:
enclave_call_	./platform/primitives/sim/untrusted_sim.h	/^  EnclaveCallPtr enclave_call_ = nullptr;$/;"	m	class:asylo::primitives::SimEnclaveClient
enclave_close	./platform/posix/io/io_syscalls.cc	/^int enclave_close(int fd) { return IOManager::GetInstance().Close(fd); }$/;"	f
enclave_close	./platform/primitives/sim/runtime_stubs.c	/^int enclave_close() { return 0; }$/;"	f
enclave_config	./platform/core/fake_trusted_global_state.cc	/^ABSL_CONST_INIT thread_local asylo::EnclaveConfig *enclave_config = nullptr;$/;"	m	namespace:asylo::__anon127	file:
enclave_config	./platform/core/fake_trusted_global_state.cc	/^ABSL_CONST_INIT thread_local asylo::EnclaveConfig *enclave_config = nullptr;$/;"	m	namespace:asylo::__anon381	file:
enclave_copy_different_mrenclave_	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  std::unique_ptr<sgx::FakeEnclave> enclave_copy_different_mrenclave_;$/;"	m	class:asylo::__anon168::SgxLocalSecretSealerTest	file:
enclave_copy_different_mrenclave_	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  std::unique_ptr<sgx::FakeEnclave> enclave_copy_different_mrenclave_;$/;"	m	class:asylo::__anon422::SgxLocalSecretSealerTest	file:
enclave_copy_different_mrsigner_	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  std::unique_ptr<sgx::FakeEnclave> enclave_copy_different_mrsigner_;$/;"	m	class:asylo::__anon168::SgxLocalSecretSealerTest	file:
enclave_copy_different_mrsigner_	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  std::unique_ptr<sgx::FakeEnclave> enclave_copy_different_mrsigner_;$/;"	m	class:asylo::__anon422::SgxLocalSecretSealerTest	file:
enclave_copy_higher_isvsvn_	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  std::unique_ptr<sgx::FakeEnclave> enclave_copy_higher_isvsvn_;$/;"	m	class:asylo::__anon168::SgxLocalSecretSealerTest	file:
enclave_copy_higher_isvsvn_	./identity/sgx/sgx_local_secret_sealer_test.cc	/^  std::unique_ptr<sgx::FakeEnclave> enclave_copy_higher_isvsvn_;$/;"	m	class:asylo::__anon422::SgxLocalSecretSealerTest	file:
enclave_err_	./platform/posix/io/pipe_test_driver.cc	/^  FILE *enclave_err_;$/;"	m	class:asylo::__anon325::PipeOutputTest	file:
enclave_err_	./platform/posix/io/pipe_test_driver.cc	/^  FILE *enclave_err_;$/;"	m	class:asylo::__anon71::PipeOutputTest	file:
enclave_execve	./platform/arch/sgx/trusted/enclave_syscalls.cc	/^int enclave_execve(char *name, char **argv, char **env) { abort(); }$/;"	f
enclave_execve	./platform/primitives/sim/runtime_stubs.c	/^int enclave_execve() { return 0; }$/;"	f
enclave_exit	./platform/posix/unistd.cc	/^void enclave_exit(int rc) {$/;"	f
enclave_exit	./platform/primitives/sim/runtime_stubs.c	/^int enclave_exit() { return 0; }$/;"	f
enclave_fcntl	./platform/posix/io/io_syscalls.cc	/^int enclave_fcntl(int fd, int cmd, int64_t arg) {$/;"	f
enclave_fcntl	./platform/primitives/sim/runtime_stubs.c	/^int enclave_fcntl() { return 0; }$/;"	f
enclave_finalized_	./platform/posix/fork_security_test_driver.cc	/^  bool enclave_finalized_;$/;"	m	class:asylo::__anon305::ForkSecurityTest	file:
enclave_finalized_	./platform/posix/fork_security_test_driver.cc	/^  bool enclave_finalized_;$/;"	m	class:asylo::__anon51::ForkSecurityTest	file:
enclave_fork	./platform/posix/unistd.cc	/^pid_t enclave_fork() { return ForkEnclave(); }$/;"	f
enclave_fork	./platform/primitives/sim/runtime_stubs.c	/^int enclave_fork() { return 0; }$/;"	f
enclave_fstat	./platform/posix/unistd.cc	/^int enclave_fstat(int fd, struct stat *st) {$/;"	f
enclave_fstat	./platform/primitives/sim/runtime_stubs.c	/^int enclave_fstat() { return 0; }$/;"	f
enclave_getpid	./platform/posix/unistd.cc	/^int enclave_getpid() {$/;"	f
enclave_getpid	./platform/primitives/sim/runtime_stubs.c	/^int enclave_getpid() { return 0; }$/;"	f
enclave_gettimeofday	./platform/posix/time.cc	/^int enclave_gettimeofday(struct timeval *__restrict time, void *timezone) {$/;"	f
enclave_gettimeofday	./platform/primitives/sim/runtime_stubs.c	/^int enclave_gettimeofday() { return 0; }$/;"	f
enclave_handshaker_destroy	./grpc/auth/core/enclave_transport_security.cc	/^void enclave_handshaker_destroy(tsi_handshaker *self) {$/;"	f	namespace:asylo
enclave_handshaker_next	./grpc/auth/core/enclave_transport_security.cc	/^tsi_result enclave_handshaker_next($/;"	f	namespace:asylo
enclave_handshaker_result_create	./grpc/auth/core/enclave_transport_security.cc	/^tsi_result enclave_handshaker_result_create($/;"	f	namespace:asylo
enclave_handshaker_result_create_frame_protector	./grpc/auth/core/enclave_transport_security.cc	/^tsi_result enclave_handshaker_result_create_frame_protector($/;"	f	namespace:asylo
enclave_handshaker_result_destroy	./grpc/auth/core/enclave_transport_security.cc	/^void enclave_handshaker_result_destroy(tsi_handshaker_result *self) {$/;"	f	namespace:asylo
enclave_handshaker_result_extract_peer	./grpc/auth/core/enclave_transport_security.cc	/^tsi_result enclave_handshaker_result_extract_peer($/;"	f	namespace:asylo
enclave_handshaker_result_get_unused_bytes	./grpc/auth/core/enclave_transport_security.cc	/^tsi_result enclave_handshaker_result_get_unused_bytes($/;"	f	namespace:asylo
enclave_identity_	./grpc/auth/peer_identity_util_test.cc	/^  EnclaveIdentity enclave_identity_;$/;"	m	class:asylo::__anon250::PeerIdentityUtilTest	file:
enclave_identity_	./grpc/auth/peer_identity_util_test.cc	/^  EnclaveIdentity enclave_identity_;$/;"	m	class:asylo::__anon504::PeerIdentityUtilTest	file:
enclave_identity_expectation_	./grpc/auth/peer_identity_util_test.cc	/^  EnclaveIdentityExpectation enclave_identity_expectation_;$/;"	m	class:asylo::__anon250::PeerIdentityUtilTest	file:
enclave_identity_expectation_	./grpc/auth/peer_identity_util_test.cc	/^  EnclaveIdentityExpectation enclave_identity_expectation_;$/;"	m	class:asylo::__anon504::PeerIdentityUtilTest	file:
enclave_in_	./platform/posix/io/pipe_test_driver.cc	/^  FILE *enclave_in_;$/;"	m	class:asylo::__anon325::PipeOutputTest	file:
enclave_in_	./platform/posix/io/pipe_test_driver.cc	/^  FILE *enclave_in_;$/;"	m	class:asylo::__anon71::PipeOutputTest	file:
enclave_input	./test/misc/active_enclave_signal_test_driver.cc	/^  EnclaveInput enclave_input;$/;"	m	struct:asylo::__anon198::RunEnclaveThreadInput	file:
enclave_input	./test/misc/active_enclave_signal_test_driver.cc	/^  EnclaveInput enclave_input;$/;"	m	struct:asylo::__anon452::RunEnclaveThreadInput	file:
enclave_isatty	./platform/posix/unistd.cc	/^int enclave_isatty(int fd) { return IOManager::GetInstance().Isatty(fd); }$/;"	f
enclave_kill	./platform/arch/sgx/trusted/enclave_syscalls.cc	/^int enclave_kill(int pid, int sig) { abort(); }$/;"	f
enclave_kill	./platform/primitives/sim/runtime_stubs.c	/^int enclave_kill() { return 0; }$/;"	f
enclave_link	./platform/posix/io/io_syscalls.cc	/^int enclave_link(char *existing, char *new_link) {$/;"	f
enclave_link	./platform/primitives/sim/runtime_stubs.c	/^int enclave_link() { return 0; }$/;"	f
enclave_lseek	./platform/posix/io/io_syscalls.cc	/^int enclave_lseek(int fd, int ptr, int dir) {$/;"	f
enclave_lseek	./platform/primitives/sim/runtime_stubs.c	/^int enclave_lseek() { return 0; }$/;"	f
enclave_mkdir	./platform/posix/io/io_syscalls.cc	/^int enclave_mkdir(const char *pathname, mode_t mode) {$/;"	f
enclave_mkdir	./platform/primitives/sim/runtime_stubs.c	/^int enclave_mkdir() { return 0; }$/;"	f
enclave_name	./platform/core/fake_trusted_global_state.cc	/^ABSL_CONST_INIT thread_local std::string *enclave_name = nullptr;$/;"	m	namespace:asylo::__anon127	file:
enclave_name	./platform/core/fake_trusted_global_state.cc	/^ABSL_CONST_INIT thread_local std::string *enclave_name = nullptr;$/;"	m	namespace:asylo::__anon381	file:
enclave_open	./platform/posix/io/io_syscalls.cc	/^int enclave_open(char *path_name, int flags, int mode) {$/;"	f
enclave_open	./platform/primitives/sim/runtime_stubs.c	/^int enclave_open() { return 0; }$/;"	f
enclave_out_	./platform/posix/io/pipe_test_driver.cc	/^  FILE *enclave_out_;$/;"	m	class:asylo::__anon325::PipeOutputTest	file:
enclave_out_	./platform/posix/io/pipe_test_driver.cc	/^  FILE *enclave_out_;$/;"	m	class:asylo::__anon71::PipeOutputTest	file:
enclave_path	./platform/primitives/test/sgx_test_backend.h	/^    absl::string_view enclave_path;$/;"	m	struct:asylo::primitives::test::SgxTestBackend::LoadEnclaveConfig
enclave_path	./test/util/enclave_test.h	/^DECLARE_string(enclave_path);$/;"	v
enclave_path_	./platform/arch/sgx/untrusted/sgx_client.h	/^  const std::string enclave_path_;$/;"	m	class:asylo::SgxLoader
enclave_read	./platform/posix/io/io_syscalls.cc	/^int enclave_read(int fd, char *buf, int count) {$/;"	f
enclave_read	./platform/primitives/sim/runtime_stubs.c	/^int enclave_read() { return 0; }$/;"	f
enclave_sbrk	./platform/primitives/sgx/trusted_runtime.cc	/^void *enclave_sbrk(intptr_t increment) {$/;"	f
enclave_sbrk	./platform/primitives/sim/trusted_sim.cc	/^extern "C" void *enclave_sbrk(intptr_t increment) {$/;"	f	namespace:asylo::primitives
enclave_security_connector_check_peer	./grpc/auth/core/enclave_security_connector.cc	/^void enclave_security_connector_check_peer($/;"	f	namespace:__anon255
enclave_security_connector_check_peer	./grpc/auth/core/enclave_security_connector.cc	/^void enclave_security_connector_check_peer($/;"	f	namespace:__anon509
enclave_size	./platform/primitives/test/sgx_test_backend.h	/^    size_t enclave_size;$/;"	m	struct:asylo::primitives::test::SgxTestBackend::LoadEnclaveConfig
enclave_stat	./platform/posix/io/io_syscalls.cc	/^int enclave_stat(const char *file, struct stat *st) {$/;"	f
enclave_stat	./platform/primitives/sim/runtime_stubs.c	/^int enclave_stat() { return 0; }$/;"	f
enclave_state	./platform/primitives/util/trusted_runtime_helper.cc	/^} enclave_state;$/;"	m	namespace:asylo::primitives::__anon340	typeref:struct:asylo::primitives::__anon340::__anon341	file:
enclave_state	./platform/primitives/util/trusted_runtime_helper.cc	/^} enclave_state;$/;"	m	namespace:asylo::primitives::__anon86	typeref:struct:asylo::primitives::__anon86::__anon87	file:
enclave_stdout_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  Pipe enclave_stdout_;$/;"	m	class:asylo::__anon182::ApplicationWrapperEnclaveTest	file:
enclave_stdout_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  Pipe enclave_stdout_;$/;"	m	class:asylo::__anon436::ApplicationWrapperEnclaveTest	file:
enclave_thread	./test/misc/active_enclave_signal_test_driver.cc	/^  pthread_t enclave_thread;$/;"	m	struct:asylo::__anon198::SendSignalThreadInput	file:
enclave_thread	./test/misc/active_enclave_signal_test_driver.cc	/^  pthread_t enclave_thread;$/;"	m	struct:asylo::__anon452::SendSignalThreadInput	file:
enclave_times	./platform/posix/time.cc	/^int enclave_times(struct tms *buf) { return enc_untrusted_times(buf); }$/;"	f
enclave_times	./platform/primitives/sim/runtime_stubs.c	/^int enclave_times() { return 0; }$/;"	f
enclave_unlink	./platform/posix/unistd.cc	/^int enclave_unlink(const char *pathname) {$/;"	f
enclave_unlink	./platform/primitives/sim/runtime_stubs.c	/^int enclave_unlink() { return 0; }$/;"	f
enclave_url_	./test/util/enclave_test.h	/^  std::string enclave_url_;$/;"	m	class:asylo::EnclaveTest
enclave_wait	./platform/posix/wait.cc	/^int enclave_wait(int *wstatus) { return enc_untrusted_wait(wstatus); }$/;"	f
enclave_wait	./platform/primitives/sim/runtime_stubs.c	/^int enclave_wait() { return 0; }$/;"	f
enclave_write	./platform/posix/io/io_syscalls.cc	/^int enclave_write(int fd, char *buf, int count) {$/;"	f
enclave_write	./platform/primitives/sim/trusted_runtime.cc	/^extern "C" int enclave_write(int fd, const void *buf, size_t count) {$/;"	f
enclavehash	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<SHA256_DIGEST_LENGTH> enclavehash;$/;"	m	struct:asylo::sgx::SigstructBody
end	./crypto/util/byte_container_view.h	/^  const_iterator end() const { return data_ + size_; }$/;"	f	class:asylo::ByteContainerView
end	./crypto/util/bytes.h	/^  const_iterator end() const { return cend(); }$/;"	f	class:asylo::Bytes
end	./crypto/util/bytes.h	/^  iterator end() { return data_ + Size; }$/;"	f	class:asylo::Bytes
enforce_call_order_	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  InSequence enforce_call_order_;$/;"	m	class:asylo::__anon184::ApplicationWrapperDriverMainTest	file:
enforce_call_order_	./bazel/application_wrapper/application_wrapper_driver_main_test.cc	/^  InSequence enforce_call_order_;$/;"	m	class:asylo::__anon438::ApplicationWrapperDriverMainTest	file:
entry_table	./platform/primitives/util/trusted_runtime_helper.cc	/^  EntryHandler entry_table[kEntryPointMax];$/;"	m	struct:asylo::primitives::__anon340::__anon341	file:
entry_table	./platform/primitives/util/trusted_runtime_helper.cc	/^  EntryHandler entry_table[kEntryPointMax];$/;"	m	struct:asylo::primitives::__anon86::__anon87	file:
entry_table_lock	./platform/primitives/util/trusted_runtime_helper.cc	/^  asylo_spinlock_t entry_table_lock = ASYLO_SPIN_LOCK_INITIALIZER;$/;"	m	struct:asylo::primitives::__anon340::__anon341	file:
entry_table_lock	./platform/primitives/util/trusted_runtime_helper.cc	/^  asylo_spinlock_t entry_table_lock = ASYLO_SPIN_LOCK_INITIALIZER;$/;"	m	struct:asylo::primitives::__anon86::__anon87	file:
env	./test/misc/double_die.cc	/^jmp_buf env;$/;"	m	namespace:asylo::__anon192	file:
env	./test/misc/double_die.cc	/^jmp_buf env;$/;"	m	namespace:asylo::__anon446	file:
environment_variables_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  std::vector<std::pair<std::string, std::string>> environment_variables_;$/;"	m	class:asylo::__anon182::ApplicationWrapperEnclaveTest	file:
environment_variables_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  std::vector<std::pair<std::string, std::string>> environment_variables_;$/;"	m	class:asylo::__anon436::ApplicationWrapperEnclaveTest	file:
epoll_create	./platform/posix/epoll.cc	/^int epoll_create(int size) {$/;"	f
epoll_create1	./platform/posix/epoll.cc	/^int epoll_create1(int \/* flags *\/) { return epoll_create(1); }$/;"	f
epoll_ctl	./platform/posix/epoll.cc	/^int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event) {$/;"	f
epoll_data	./platform/posix/include/sys/epoll.h	/^typedef union epoll_data {$/;"	u
epoll_data_t	./platform/posix/include/sys/epoll.h	/^} epoll_data_t;$/;"	t	typeref:union:epoll_data
epoll_event	./platform/posix/include/sys/epoll.h	/^struct epoll_event {$/;"	s
epoll_wait	./platform/posix/epoll.cc	/^int epoll_wait(int epfd, struct epoll_event *events, int maxevents,$/;"	f
error	./grpc/auth/core/ekep_error_space.cc	/^namespace error {$/;"	n	namespace:asylo	file:
error	./grpc/auth/core/ekep_error_space.h	/^namespace error {$/;"	n	namespace:asylo
error	./platform/primitives/sgx/sgx_error_space.cc	/^namespace error {$/;"	n	namespace:asylo	file:
error	./platform/primitives/sgx/sgx_error_space.h	/^namespace error {$/;"	n	namespace:asylo
error	./util/error_codes.h	/^namespace error {$/;"	n	namespace:asylo
error	./util/error_space.cc	/^namespace error {$/;"	n	namespace:asylo	file:
error	./util/error_space.h	/^namespace error {$/;"	n	namespace:asylo
error	./util/error_space_test.cc	/^namespace error {$/;"	n	namespace:asylo	file:
error	./util/posix_error_space.cc	/^namespace error {$/;"	n	namespace:asylo	file:
error	./util/posix_error_space.h	/^namespace error {$/;"	n	namespace:asylo
error	./util/posix_error_space_test.cc	/^namespace error {$/;"	n	namespace:asylo	file:
error	./util/status_error_space.cc	/^namespace error {$/;"	n	namespace:asylo	file:
error	./util/status_error_space.h	/^namespace error {$/;"	n	namespace:asylo
error_code	./platform/primitives/primitive_status.h	/^  int error_code() const { return error_code_; }$/;"	f	class:asylo::primitives::PrimitiveStatus
error_code	./util/status.cc	/^int Status::error_code() const { return error_code_; }$/;"	f	class:asylo::Status
error_code	./util/status_internal.h	/^  int error_code;$/;"	m	struct:asylo::status_internal::ErrorCodeHolder
error_code_	./platform/primitives/primitive_status.h	/^  int32_t error_code_;         \/\/ An error::GoogleError condition code.$/;"	m	class:asylo::primitives::PrimitiveStatus
error_code_	./util/status.h	/^  int error_code_;$/;"	m	class:asylo::Status
error_enum_traits	./util/error_space.h	/^struct error_enum_traits {$/;"	s	namespace:asylo::error
error_internal	./util/error_space.h	/^namespace error_internal {$/;"	n	namespace:asylo::error
error_message	./platform/primitives/primitive_status.h	/^  const char *error_message() const { return message_; }$/;"	f	class:asylo::primitives::PrimitiveStatus
error_message	./util/status.cc	/^absl::string_view Status::error_message() const { return message_; }$/;"	f	class:asylo::Status
error_message_	./platform/primitives/util/status_conversions_test.cc	/^  const char *error_message_ = "some error message";$/;"	m	class:asylo::primitives::__anon339::StatusConversionsTest	file:
error_message_	./platform/primitives/util/status_conversions_test.cc	/^  const char *error_message_ = "some error message";$/;"	m	class:asylo::primitives::__anon85::StatusConversionsTest	file:
error_space	./util/status.cc	/^const error::ErrorSpace *Status::error_space() const { return error_space_; }$/;"	f	class:asylo::Status
error_space_	./test/util/status_matchers.h	/^  const error::ErrorSpace *const error_space_;$/;"	m	class:asylo::internal::StatusMatcher::error
error_space_	./util/status.h	/^  const error::ErrorSpace *error_space_;$/;"	m	class:asylo::Status
event_fd_	./platform/posix/io/eventfd_test.cc	/^  int event_fd_;$/;"	m	class:asylo::__anon327::EventFdTest	file:
event_fd_	./platform/posix/io/eventfd_test.cc	/^  int event_fd_;$/;"	m	class:asylo::__anon73::EventFdTest	file:
event_queue_	./platform/posix/io/io_context_inotify.h	/^  std::queue<struct inotify_event *> event_queue_;$/;"	m	class:asylo::io::IOContextInotify
eventfd	./platform/posix/eventfd.cc	/^int eventfd(unsigned int initval, int flags) {$/;"	f
events	./platform/common/bridge_types.h	/^  int16_t events;$/;"	m	struct:bridge_pollfd
events	./platform/posix/include/poll.h	/^  short events;$/;"	m	struct:pollfd
events	./platform/posix/include/sys/epoll.h	/^  uint32_t events;$/;"	m	struct:epoll_event
examples	./examples/grpc_server/grpc_server_enclave.cc	/^namespace examples {$/;"	n	file:
examples	./examples/grpc_server/grpc_server_test.cc	/^namespace examples {$/;"	n	file:
examples	./examples/grpc_server/translator_server_impl.cc	/^namespace examples {$/;"	n	file:
examples	./examples/grpc_server/translator_server_impl.h	/^namespace examples {$/;"	n
exit_call_provider	./platform/primitives/untrusted_primitives.h	/^  ExitCallProvider *exit_call_provider() { return exit_call_provider_.get(); }$/;"	f	class:asylo::primitives::Client
exit_call_provider_	./platform/primitives/untrusted_primitives.h	/^  const std::unique_ptr<ExitCallProvider> exit_call_provider_;$/;"	m	class:asylo::primitives::Client
exit_table_	./platform/primitives/util/dispatch_table.h	/^  MutexGuarded<absl::flat_hash_map<uint64_t, ExitHandler>> exit_table_;$/;"	m	class:asylo::primitives::DispatchTable
expected_buffer_	./platform/posix/pipe_test.cc	/^  absl::Span<const uint8_t> expected_buffer_;$/;"	m	class:asylo::__anon301::MemEqMatcher	file:
expected_buffer_	./platform/posix/pipe_test.cc	/^  absl::Span<const uint8_t> expected_buffer_;$/;"	m	class:asylo::__anon47::MemEqMatcher	file:
expected_file_contents_	./util/file_mapping_test.cc	/^  std::string expected_file_contents_;$/;"	m	class:asylo::__anon243::FileMappingTest	file:
expected_file_contents_	./util/file_mapping_test.cc	/^  std::string expected_file_contents_;$/;"	m	class:asylo::__anon497::FileMappingTest	file:
expected_message_type_	./grpc/auth/core/client_ekep_handshaker.h	/^  HandshakeMessageType expected_message_type_;$/;"	m	class:asylo::final
expected_message_type_	./grpc/auth/core/server_ekep_handshaker.h	/^  HandshakeMessageType expected_message_type_;$/;"	m	class:asylo::final
expected_nonce_size	./crypto/aead_key_test.cc	/^  size_t expected_nonce_size;$/;"	m	struct:asylo::__anon12::AeadKeyParam	file:
expected_nonce_size	./crypto/aead_key_test.cc	/^  size_t expected_nonce_size;$/;"	m	struct:asylo::__anon266::AeadKeyParam	file:
expected_peer_assertions_	./grpc/auth/core/client_ekep_handshaker.h	/^  std::vector<AssertionDescription> expected_peer_assertions_;$/;"	m	class:asylo::final
expected_peer_assertions_	./grpc/auth/core/server_ekep_handshaker.h	/^  std::vector<AssertionDescription> expected_peer_assertions_;$/;"	m	class:asylo::final
expected_scheme	./crypto/aead_key_test.cc	/^  AeadScheme expected_scheme;$/;"	m	struct:asylo::__anon12::AeadKeyParam	file:
expected_scheme	./crypto/aead_key_test.cc	/^  AeadScheme expected_scheme;$/;"	m	struct:asylo::__anon266::AeadKeyParam	file:
experimental	./crypto/aead_cryptor.cc	/^namespace experimental {$/;"	n	namespace:asylo	file:
experimental	./crypto/aead_cryptor.h	/^namespace experimental {$/;"	n	namespace:asylo
experimental	./crypto/aead_cryptor_test.cc	/^namespace experimental {$/;"	n	namespace:asylo	file:
experimental	./test/util/exec_tester.cc	/^namespace experimental {$/;"	n	namespace:asylo	file:
experimental	./test/util/exec_tester.h	/^namespace experimental {$/;"	n	namespace:asylo
experimental	./test/util/exec_tester_test.cc	/^namespace experimental {$/;"	n	namespace:asylo	file:
exponent	./identity/sgx/identity_key_management_structs.h	/^  uint32_t exponent;$/;"	m	struct:asylo::sgx::Rsa3072PublicKey
extent	./platform/primitives/parameter_stack.h	/^    Extent extent;$/;"	m	struct:asylo::primitives::ParameterStack::Item
extent_	./platform/system_call/message.h	/^  primitives::Extent extent_;$/;"	m	class:asylo::system_call::MessageReader
extents_	./platform/primitives/util/message.h	/^  std::vector<Extent> extents_;$/;"	m	class:asylo::primitives::MessageWriter
extents_	./platform/primitives/util/message.h	/^  std::vector<std::pair<std::unique_ptr<char[]>, size_t>> extents_;$/;"	m	class:asylo::primitives::MessageReader
f_	./test/util/finite_domain_fuzz.h	/^  const std::function<Range(Domain)> f_;$/;"	m	class:asylo::FiniteDomainMatcher
factory	./crypto/aead_cryptor_test.cc	/^      factory;$/;"	m	struct:asylo::experimental::__anon11::AeadCryptorParam	file:
factory	./crypto/aead_cryptor_test.cc	/^      factory;$/;"	m	struct:asylo::experimental::__anon265::AeadCryptorParam	file:
factory	./crypto/aead_key_test.cc	/^  std::function<StatusOr<std::unique_ptr<AeadKey>>(ByteContainerView)> factory;$/;"	m	struct:asylo::__anon12::AeadKeyParam	file:
factory	./crypto/aead_key_test.cc	/^  std::function<StatusOr<std::unique_ptr<AeadKey>>(ByteContainerView)> factory;$/;"	m	struct:asylo::__anon266::AeadKeyParam	file:
factory	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^      factory;$/;"	m	struct:asylo::__anon19::VerifyingKeyParam	file:
factory	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^      factory;$/;"	m	struct:asylo::__anon273::VerifyingKeyParam	file:
false_type	./util/error_space.h	/^  static auto TestErrorSpaceBinding(...) -> std::false_type;$/;"	m	class:asylo::error::error_enum_traits::std
fchmod	./platform/posix/stat.cc	/^int fchmod(int fd, mode_t mode) {$/;"	f
fchown	./platform/posix/unistd.cc	/^int fchown(int fd, uid_t owner, gid_t group) {$/;"	f
fd	./platform/common/bridge_types.h	/^  int32_t fd;$/;"	m	struct:bridge_pollfd
fd	./platform/posix/include/poll.h	/^  int fd;$/;"	m	struct:pollfd
fd	./platform/posix/include/sys/epoll.h	/^  int fd;$/;"	m	union:epoll_data
fd1_	./platform/posix/io/inotify_test.cc	/^  int fd1_;$/;"	m	class:asylo::__anon321::InotifyTest	file:
fd1_	./platform/posix/io/inotify_test.cc	/^  int fd1_;$/;"	m	class:asylo::__anon67::InotifyTest	file:
fd2_	./platform/posix/io/inotify_test.cc	/^  int fd2_;$/;"	m	class:asylo::__anon321::InotifyTest	file:
fd2_	./platform/posix/io/inotify_test.cc	/^  int fd2_;$/;"	m	class:asylo::__anon67::InotifyTest	file:
fd3_	./platform/posix/io/inotify_test.cc	/^  int fd3_;$/;"	m	class:asylo::__anon321::InotifyTest	file:
fd3_	./platform/posix/io/inotify_test.cc	/^  int fd3_;$/;"	m	class:asylo::__anon67::InotifyTest	file:
fd_	./platform/storage/utils/fd_closer.h	/^  int fd_;$/;"	m	class:asylo::platform::storage::FdCloser
fd_	./platform/storage/utils/untrusted_file.h	/^  int fd_;$/;"	m	class:asylo::UntrustedFile
fd_closer_	./platform/posix/sockets/socket_client.h	/^  platform::storage::FdCloser fd_closer_;$/;"	m	class:asylo::SocketClient
fd_copy_	./test/util/output_collector.h	/^  int fd_copy_;$/;"	m	class:asylo::OutputCollector
fd_pairs_	./platform/posix/io/epoll_test.cc	/^  int fd_pairs_[kNumPipes][2];$/;"	m	class:asylo::__anon318::EpollTest	file:
fd_pairs_	./platform/posix/io/epoll_test.cc	/^  int fd_pairs_[kNumPipes][2];$/;"	m	class:asylo::__anon64::EpollTest	file:
fd_pairs_	./platform/posix/select_test.cc	/^  int fd_pairs_[2];$/;"	m	class:asylo::__anon304::SelectTest	file:
fd_pairs_	./platform/posix/select_test.cc	/^  int fd_pairs_[2];$/;"	m	class:asylo::__anon50::SelectTest	file:
fd_table_	./platform/posix/io/io_manager.h	/^    std::array<std::shared_ptr<AutoCloseIOContext>, kMaxOpenFiles> fd_table_;$/;"	m	class:asylo::io::IOManager::FileDescriptorTable
fd_table_	./platform/posix/io/io_manager.h	/^  FileDescriptorTable fd_table_;$/;"	m	class:asylo::io::IOManager
fd_table_lock_	./platform/posix/io/io_manager.h	/^  absl::Mutex fd_table_lock_;$/;"	m	class:asylo::io::IOManager
fd_to_check_	./test/util/exec_tester.h	/^  int fd_to_check_;$/;"	m	class:asylo::experimental::ExecTester
fd_to_key	./platform/posix/io/io_context_epoll.h	/^  absl::flat_hash_map<int, uint64_t> fd_to_key;$/;"	m	class:asylo::io::IOContextEpoll
fdatasync	./platform/posix/unistd.cc	/^int fdatasync(int fd) { return IOManager::GetInstance().FDataSync(fd); }$/;"	f
file1_	./platform/posix/io/inotify_test.cc	/^  std::string file1_;$/;"	m	class:asylo::__anon321::InotifyTest	file:
file1_	./platform/posix/io/inotify_test.cc	/^  std::string file1_;$/;"	m	class:asylo::__anon67::InotifyTest	file:
file2_	./platform/posix/io/inotify_test.cc	/^  std::string file2_;$/;"	m	class:asylo::__anon321::InotifyTest	file:
file2_	./platform/posix/io/inotify_test.cc	/^  std::string file2_;$/;"	m	class:asylo::__anon67::InotifyTest	file:
file3_	./platform/posix/io/inotify_test.cc	/^  std::string file3_;$/;"	m	class:asylo::__anon321::InotifyTest	file:
file3_	./platform/posix/io/inotify_test.cc	/^  std::string file3_;$/;"	m	class:asylo::__anon67::InotifyTest	file:
file_descriptor_set	./platform/common/bridge_types.h	/^  uint8_t file_descriptor_set[BRIDGE_FD_SETSIZE];$/;"	m	struct:BridgeFDSet
file_digest	./platform/storage/secure/aead_handler.h	/^    FileDigest file_digest;$/;"	m	struct:asylo::platform::storage::AeadHandler::DataDigest
file_hash	./platform/storage/secure/aead_handler.h	/^    FileHash file_hash;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileHeader
file_name_	./util/file_mapping.h	/^  std::string file_name_;$/;"	m	class:asylo::FileMapping
file_path	./platform/posix/errno_test.cc	/^constexpr char file_path[] = "\/errno_test";$/;"	m	namespace:asylo::__anon330	file:
file_path	./platform/posix/errno_test.cc	/^constexpr char file_path[] = "\/errno_test";$/;"	m	namespace:asylo::__anon76	file:
file_size	./platform/storage/secure/aead_handler.h	/^    size_t file_size;$/;"	m	struct:asylo::platform::storage::AeadHandler::DataDigest
file_size	./platform/storage/secure/aead_handler.h	/^    size_t file_size;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileHeader
fill	./crypto/util/bytes.h	/^  void fill(uint8_t value) { replace(0, value, Size); }$/;"	f	class:asylo::Bytes
fill_iov	./platform/arch/sgx/trusted/host_calls.cc	/^void fill_iov(const char *buf, int size, const struct iovec *iov, int iovcnt) {$/;"	f
final	./bazel/application_wrapper/application_wrapper_enclave.cc	/^class ApplicationWrapperEnclave final : public TrustedApplication {$/;"	c	namespace:asylo	file:
final	./crypto/sha256_hash.h	/^class Sha256Hash final : public HashInterface {$/;"	c	namespace:asylo
final	./crypto/util/bytes.h	/^class SafeBytes final : public Bytes<Size, SafePolicy, SafeBytes<Size>> {$/;"	c	namespace:asylo
final	./crypto/util/bytes.h	/^class UnsafeBytes final : public Bytes<Size, UnsafePolicy, UnsafeBytes<Size>> {$/;"	c	namespace:asylo
final	./daemon/identity/attestation_domain_service_impl.h	/^class AttestationDomainServiceImpl final$/;"	c	namespace:asylo
final	./examples/grpc_server/grpc_server_enclave.cc	/^class GrpcServerEnclave final : public asylo::TrustedApplication {$/;"	c	namespace:examples::grpc_server	file:
final	./examples/grpc_server/translator_server_impl.h	/^class TranslatorServerImpl final : public Translator::Service {$/;"	c	namespace:examples::grpc_server
final	./grpc/auth/core/client_ekep_handshaker.h	/^class ClientEkepHandshaker final : public EkepHandshaker {$/;"	c	namespace:asylo
final	./grpc/auth/core/enclave_credentials.h	/^class grpc_enclave_channel_credentials final : public grpc_channel_credentials {$/;"	c
final	./grpc/auth/core/enclave_credentials.h	/^class grpc_enclave_server_credentials final : public grpc_server_credentials {$/;"	c
final	./grpc/auth/core/enclave_security_connector.cc	/^class grpc_enclave_channel_security_connector final$/;"	c	namespace:__anon255	file:
final	./grpc/auth/core/enclave_security_connector.cc	/^class grpc_enclave_channel_security_connector final$/;"	c	namespace:__anon509	file:
final	./grpc/auth/core/enclave_security_connector.cc	/^class grpc_enclave_server_security_connector final$/;"	c	namespace:__anon255	file:
final	./grpc/auth/core/enclave_security_connector.cc	/^class grpc_enclave_server_security_connector final$/;"	c	namespace:__anon509	file:
final	./grpc/auth/core/server_ekep_handshaker.h	/^class ServerEkepHandshaker final : public EkepHandshaker {$/;"	c	namespace:asylo
final	./grpc/auth/core/transcript_test.cc	/^class FakeHash final : public HashInterface {$/;"	c	namespace:asylo::grpc::auth::__anon261	file:
final	./grpc/auth/core/transcript_test.cc	/^class FakeHash final : public HashInterface {$/;"	c	namespace:asylo::grpc::auth::__anon515	file:
final	./grpc/util/enclave_server.h	/^class EnclaveServer final : public TrustedApplication {$/;"	c	namespace:asylo
final	./identity/delegating_identity_expectation_matcher.h	/^class DelegatingIdentityExpectationMatcher final$/;"	c	namespace:asylo
final	./identity/identity_expectation_matcher_test.cc	/^class TestMatcher final : public NamedIdentityExpectationMatcher {$/;"	c	namespace:asylo::__anon170	file:
final	./identity/identity_expectation_matcher_test.cc	/^class TestMatcher final : public NamedIdentityExpectationMatcher {$/;"	c	namespace:asylo::__anon424	file:
final	./identity/null_identity/null_assertion_generator.h	/^class NullAssertionGenerator final : public EnclaveAssertionGenerator {$/;"	c	namespace:asylo
final	./identity/null_identity/null_assertion_verifier.h	/^class NullAssertionVerifier final : public EnclaveAssertionVerifier {$/;"	c	namespace:asylo
final	./identity/null_identity/null_identity_expectation_matcher.h	/^class NullIdentityExpectationMatcher final$/;"	c	namespace:asylo
final	./identity/sgx/sgx_code_identity_expectation_matcher.h	/^class SgxCodeIdentityExpectationMatcher final$/;"	c	namespace:asylo
final	./identity/sgx/sgx_local_assertion_generator.h	/^class SgxLocalAssertionGenerator final : public EnclaveAssertionGenerator {$/;"	c	namespace:asylo
final	./identity/sgx/sgx_local_assertion_verifier.h	/^class SgxLocalAssertionVerifier final : public EnclaveAssertionVerifier {$/;"	c	namespace:asylo
final	./platform/storage/secure/ctmmt_authenticated_dictionary.h	/^  bool UpdateLeaf(size_t leaf, const std::string &data) final;$/;"	m	class:asylo::platform::storage::CTMMTAuthenticatedDictionary
finalizer_function	./test/misc/threaded_finalize.cc	/^void *finalizer_function(void *arg) { return arg; }$/;"	f	namespace:asylo
find_parameter_flags	./platform/system_call/metadata.cc	/^size_t find_parameter_flags(int sysno, int index) {$/;"	f	namespace:asylo::system_call::__anon116
find_parameter_flags	./platform/system_call/metadata.cc	/^size_t find_parameter_flags(int sysno, int index) {$/;"	f	namespace:asylo::system_call::__anon370
find_parameter_index	./platform/system_call/metadata.cc	/^size_t find_parameter_index(int sysno, int index) {$/;"	f	namespace:asylo::system_call::__anon116
find_parameter_index	./platform/system_call/metadata.cc	/^size_t find_parameter_index(int sysno, int index) {$/;"	f	namespace:asylo::system_call::__anon370
flag	./examples/hello_world/hello_driver.cc	/^int flag = 0;$/;"	v
flags	./identity/sgx/secs_attributes.h	/^  uint64_t flags;$/;"	m	struct:asylo::sgx::SecsAttributeBit::SecsAttributeSet
flags	./platform/common/bridge_types.h	/^  int flags;$/;"	m	struct:BridgeSignalHandler
flags	./platform/primitives/util/trusted_runtime_helper.cc	/^  uint64_t flags = 0;$/;"	m	struct:asylo::primitives::__anon340::__anon341	file:
flags	./platform/primitives/util/trusted_runtime_helper.cc	/^  uint64_t flags = 0;$/;"	m	struct:asylo::primitives::__anon86::__anon87	file:
flags	./platform/system_call/generate_tables.cc	/^  std::string flags;$/;"	m	struct:ParameterDescription	file:
flags	./platform/system_call/message.h	/^  \/* byte:  8 ..  11 *\/ uint32_t flags;                  \/\/ Flags bitmap.$/;"	m	struct:asylo::system_call::MessageHeader
flags	./platform/system_call/metadata.cc	/^  const uint16_t flags;$/;"	m	struct:asylo::system_call::__anon116::ParameterTableEntry	file:
flags	./platform/system_call/metadata.cc	/^  const uint16_t flags;$/;"	m	struct:asylo::system_call::__anon370::ParameterTableEntry	file:
flags_write_lock	./platform/primitives/util/trusted_runtime_helper.cc	/^  asylo_spinlock_t flags_write_lock = ASYLO_SPIN_LOCK_INITIALIZER;$/;"	m	struct:asylo::primitives::__anon340::__anon341	file:
flags_write_lock	./platform/primitives/util/trusted_runtime_helper.cc	/^  asylo_spinlock_t flags_write_lock = ASYLO_SPIN_LOCK_INITIALIZER;$/;"	m	struct:asylo::primitives::__anon86::__anon87	file:
flock	./platform/posix/file.cc	/^int flock(int fd, int operation) {$/;"	f
fnmatch	./platform/posix/fnmatch.cc	/^int fnmatch(const char *pattern, const char *string, int flags) { abort(); }$/;"	f
foo	./crypto/util/trivial_object_util_test.cc	/^  UnsafeBytes<24> foo;$/;"	m	struct:asylo::__anon22::TrivialStructure	file:
foo	./crypto/util/trivial_object_util_test.cc	/^  UnsafeBytes<24> foo;$/;"	m	struct:asylo::__anon276::TrivialStructure	file:
forked_thread_memory_layout	./platform/arch/sgx/trusted/fork.cc	/^static struct ThreadMemoryLayout forked_thread_memory_layout = {$/;"	m	namespace:asylo::__anon284	typeref:struct:asylo::__anon284::ThreadMemoryLayout	file:
forked_thread_memory_layout	./platform/arch/sgx/trusted/fork.cc	/^static struct ThreadMemoryLayout forked_thread_memory_layout = {$/;"	m	namespace:asylo::__anon30	typeref:struct:asylo::__anon30::ThreadMemoryLayout	file:
free_list_	./platform/core/untrusted_cache_malloc.h	/^  std::unique_ptr<FreeList> free_list_;$/;"	m	class:asylo::UntrustedCacheMalloc
free_list_node	./platform/posix/pthread.cc	/^void free_list_node(__pthread_list_node_t *node) { delete node; }$/;"	f	namespace:__anon296
free_list_node	./platform/posix/pthread.cc	/^void free_list_node(__pthread_list_node_t *node) { delete node; }$/;"	f	namespace:__anon42
freeaddrinfo	./platform/posix/sockets/netdb.cc	/^void freeaddrinfo(struct addrinfo *res) {$/;"	f
freeifaddrs	./platform/posix/ifaddrs.cc	/^void freeifaddrs(struct ifaddrs *ifa) { enc_untrusted_freeifaddrs(ifa); }$/;"	f
front	./crypto/util/byte_container_view.h	/^  const uint8_t &front() const { return data_[0]; }$/;"	f	class:asylo::ByteContainerView
fsync	./platform/posix/unistd.cc	/^int fsync(int fd) { return IOManager::GetInstance().FSync(fd); }$/;"	f
ftruncate	./platform/posix/unistd.cc	/^int ftruncate(int fd, off_t length) {$/;"	f
full	./platform/common/ring_buffer.h	/^  bool full() const { return count_ == kCapacity; }$/;"	f	class:asylo::RingBuffer
g_argc	./examples/hello_world/hello_driver.cc	/^int g_argc;$/;"	v
g_argv	./examples/hello_world/hello_driver.cc	/^char **g_argv;$/;"	v
g_peak_heap_used	./platform/primitives/sgx/trusted_runtime.cc	/^size_t g_peak_heap_used __attribute__((visibility("default"))) = 0;$/;"	v
gai_strerror	./platform/posix/sockets/netdb.cc	/^const char *gai_strerror(int ecode) { abort(); }$/;"	f
gcmlib	./platform/crypto/gcmlib/gcm_cryptor.cc	/^namespace gcmlib {$/;"	n	namespace:asylo::platform::crypto	file:
gcmlib	./platform/crypto/gcmlib/gcm_cryptor.h	/^namespace gcmlib {$/;"	n	namespace:asylo::platform::crypto
generator_	./identity/null_identity/null_assertion_authority_test.cc	/^  const EnclaveAssertionGenerator *generator_;$/;"	m	class:asylo::__anon174::NullAssertionAuthorityTest	file:
generator_	./identity/null_identity/null_assertion_authority_test.cc	/^  const EnclaveAssertionGenerator *generator_;$/;"	m	class:asylo::__anon428::NullAssertionAuthorityTest	file:
generator_enclave_	./identity/sgx/sgx_local_assertion_authority_test.cc	/^  sgx::FakeEnclave generator_enclave_;$/;"	m	class:asylo::__anon160::SgxLocalAssertionAuthorityTest	file:
generator_enclave_	./identity/sgx/sgx_local_assertion_authority_test.cc	/^  sgx::FakeEnclave generator_enclave_;$/;"	m	class:asylo::__anon414::SgxLocalAssertionAuthorityTest	file:
get	./identity/util/aligned_object_ptr.h	/^  T *get() { return obj_ptr_; }$/;"	f	class:asylo::AlignedObjectPtr
get	./identity/util/aligned_object_ptr.h	/^  const T *get() const { return obj_ptr_; }$/;"	f	class:asylo::AlignedObjectPtr
get	./platform/storage/utils/fd_closer.cc	/^int FdCloser::get() const { return fd_; }$/;"	f	class:asylo::platform::storage::FdCloser
get_a	./identity/util/aligned_object_ptr_test.cc	/^  uint64_t get_a() { return a_; }$/;"	f	class:asylo::__anon172::TestClass
get_a	./identity/util/aligned_object_ptr_test.cc	/^  uint64_t get_a() { return a_; }$/;"	f	class:asylo::__anon426::TestClass
get_active_enclave_entries	./platform/primitives/sgx/trusted_runtime.cc	/^int get_active_enclave_entries() { return sgx_get_active_enclave_entries(); }$/;"	f
get_application_lock	./platform/core/trusted_application.cc	/^static absl::Mutex get_application_lock;$/;"	m	namespace:asylo	file:
get_attributes	./identity/sgx/fake_enclave.h	/^  const SecsAttributeSet &get_attributes() const { return attributes_; }$/;"	f	class:asylo::sgx::FakeEnclave
get_b	./identity/util/aligned_object_ptr_test.cc	/^  uint32_t get_b() { return b_; }$/;"	f	class:asylo::__anon172::TestClass
get_b	./identity/util/aligned_object_ptr_test.cc	/^  uint32_t get_b() { return b_; }$/;"	f	class:asylo::__anon426::TestClass
get_config_server_address	./platform/core/enclave_manager.cc	/^StatusOr<std::string> EnclaveManagerOptions::get_config_server_address() const {$/;"	f	class:asylo::EnclaveManagerOptions
get_config_server_connection_timeout	./platform/core/enclave_manager.cc	/^EnclaveManagerOptions::get_config_server_connection_timeout() const {$/;"	f	class:asylo::EnclaveManagerOptions
get_configid	./identity/sgx/fake_enclave.h	/^  const UnsafeBytes<kConfigidSize> &get_configid() const { return configid_; }$/;"	f	class:asylo::sgx::FakeEnclave
get_configsvn	./identity/sgx/fake_enclave.h	/^  uint16_t get_configsvn() const { return configsvn_; }$/;"	f	class:asylo::sgx::FakeEnclave
get_cpusvn	./identity/sgx/fake_enclave.h	/^  const UnsafeBytes<kCpusvnSize> &get_cpusvn() const { return cpusvn_; }$/;"	f	class:asylo::sgx::FakeEnclave
get_error_space	./util/error_space.h	/^  static ErrorSpace const *get_error_space() {$/;"	f	struct:asylo::error::error_enum_traits
get_error_space	./util/error_space.h	/^  static ErrorSpace const *get_error_space(Tag tag, TruthType truth_type) {$/;"	f	struct:asylo::error::error_enum_traits
get_error_space	./util/error_space.h	/^  static ErrorSpace const *get_error_space(Tag tag, std::true_type t) {$/;"	f	struct:asylo::error::error_enum_traits
get_host_config	./platform/core/enclave_manager.cc	/^StatusOr<HostConfig> EnclaveManagerOptions::get_host_config() const {$/;"	f	class:asylo::EnclaveManagerOptions
get_id	./util/std_thread.h	/^  Id get_id() const { return ConvertToId(thread_.get_id()); }$/;"	f	class:asylo::Thread
get_isvextprodid	./identity/sgx/fake_enclave.h	/^  const UnsafeBytes<kIsvextprodidSize> &get_isvextprodid() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_isvfamilyid	./identity/sgx/fake_enclave.h	/^  const UnsafeBytes<kIsvfamilyidSize> &get_isvfamilyid() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_isvprodid	./identity/sgx/fake_enclave.h	/^  uint16_t get_isvprodid() const { return isvprodid_; }$/;"	f	class:asylo::sgx::FakeEnclave
get_isvsvn	./identity/sgx/fake_enclave.h	/^  uint16_t get_isvsvn() const { return isvsvn_; }$/;"	f	class:asylo::sgx::FakeEnclave
get_log_basename	./util/logging.cc	/^const std::string get_log_basename() {$/;"	f	namespace:asylo::__anon236
get_log_basename	./util/logging.cc	/^const std::string get_log_basename() {$/;"	f	namespace:asylo::__anon490
get_log_directory	./util/logging.cc	/^const std::string get_log_directory() {$/;"	f	namespace:asylo
get_maximum_fd_hard_limit	./platform/posix/io/io_manager.cc	/^int IOManager::FileDescriptorTable::get_maximum_fd_hard_limit() {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
get_maximum_fd_soft_limit	./platform/posix/io/io_manager.cc	/^int IOManager::FileDescriptorTable::get_maximum_fd_soft_limit() {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable
get_miscselect	./identity/sgx/fake_enclave.h	/^  uint32_t get_miscselect() const { return miscselect_; }$/;"	f	class:asylo::sgx::FakeEnclave
get_mrenclave	./identity/sgx/fake_enclave.h	/^  const UnsafeBytes<SHA256_DIGEST_LENGTH> &get_mrenclave() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_mrsigner	./identity/sgx/fake_enclave.h	/^  const UnsafeBytes<SHA256_DIGEST_LENGTH> &get_mrsigner() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_msg	./platform/core/bridge_msghdr_wrapper.cc	/^bridge_msghdr *asylo::BridgeMsghdrWrapper::get_msg()$/;"	f	class:asylo::BridgeMsghdrWrapper
get_name	./platform/core/enclave_client.h	/^  virtual const std::string &get_name() const { return name_; }$/;"	f	class:asylo::EnclaveClient
get_ownerepoch	./identity/sgx/fake_enclave.h	/^  const SafeBytes<kOwnerEpochSize> &get_ownerepoch() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_report_keyid	./identity/sgx/fake_enclave.h	/^  const UnsafeBytes<kReportKeyidSize> &get_report_keyid() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_required_attributes	./identity/sgx/fake_enclave.h	/^  const SecsAttributeSet &get_required_attributes() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_root_key	./identity/sgx/fake_enclave.h	/^  const SafeBytes<SHA256_DIGEST_LENGTH> &get_root_key() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_seal_fuses	./identity/sgx/fake_enclave.h	/^  const SafeBytes<AES_BLOCK_SIZE> &get_seal_fuses() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_valid_attributes	./identity/sgx/fake_enclave.h	/^  const SecsAttributeSet &get_valid_attributes() const {$/;"	f	class:asylo::sgx::FakeEnclave
get_vlog_level	./util/logging.cc	/^int get_vlog_level() { return vlog_level; }$/;"	f	namespace:asylo
getaddrinfo	./platform/posix/sockets/netdb.cc	/^int getaddrinfo(const char *node, const char *service,$/;"	f
getcwd	./platform/posix/unistd.cc	/^char *getcwd(char *buf, size_t bufsize) {$/;"	f
getegid	./platform/posix/unistd.cc	/^gid_t getegid() { return enc_untrusted_getegid(); }$/;"	f
geteuid	./platform/posix/unistd.cc	/^uid_t geteuid() { return enc_untrusted_geteuid(); }$/;"	f
geteuid	./platform/primitives/sim/runtime_stubs.c	/^int geteuid() { return 0; }$/;"	f
getgid	./platform/posix/unistd.cc	/^gid_t getgid() { return enc_untrusted_getgid(); }$/;"	f
getgrgid_r	./platform/posix/grp.cc	/^int getgrgid_r(gid_t gid, struct group *grp, char *buf, size_t buflen,$/;"	f
getgrgid_r	./platform/primitives/sim/runtime_stubs.c	/^int getgrgid_r() { return 0; }$/;"	f
getgrnam_r	./platform/posix/grp.cc	/^int getgrnam_r(const char *name, struct group *grp, char *buf, size_t buflen,$/;"	f
getgrnam_r	./platform/primitives/sim/runtime_stubs.c	/^int getgrnam_r() { return 0; }$/;"	f
gethostname	./platform/posix/unistd.cc	/^int gethostname(char *name, size_t len) {$/;"	f
getifaddrs	./platform/posix/ifaddrs.cc	/^int getifaddrs(struct ifaddrs **ifap) { return enc_untrusted_getifaddrs(ifap); }$/;"	f
getitimer	./platform/posix/time.cc	/^int getitimer(int which, struct itimerval *curr_value) {$/;"	f
getpagesize	./platform/posix/unistd.cc	/^int getpagesize() { return kPageSize; }$/;"	f
getpeername	./platform/posix/sockets/socket.cc	/^int getpeername(int sockfd, struct sockaddr *addr, socklen_t *addrlen) {$/;"	f
getppid	./platform/posix/unistd.cc	/^pid_t getppid() { return enc_untrusted_getppid(); }$/;"	f
getpwnam_r	./platform/posix/pwd.cc	/^int getpwnam_r(const char *name, struct passwd *pwd, char *buf, size_t buflen,$/;"	f
getpwnam_r	./platform/primitives/sim/runtime_stubs.c	/^int getpwnam_r() { return 0; }$/;"	f
getpwuid	./platform/posix/pwd.cc	/^struct passwd *getpwuid(uid_t uid) {$/;"	f
getpwuid_r	./platform/posix/pwd.cc	/^int getpwuid_r(uid_t uid, struct passwd *pwd, char *buf, size_t buflen,$/;"	f
getpwuid_r	./platform/primitives/sim/runtime_stubs.c	/^int getpwuid_r() { return 0; }$/;"	f
getrlimit	./platform/posix/resource.cc	/^int getrlimit(int resource, struct rlimit *rlim) {$/;"	f
getrusage	./platform/posix/resource.cc	/^int getrusage(int who, struct rusage *usage) {$/;"	f
getservbyport	./platform/posix/sockets/socket.cc	/^struct servent *getservbyport(int port, const char *proto) {$/;"	f
getsockname	./platform/posix/sockets/socket.cc	/^int getsockname(int sockfd, struct sockaddr *addr, socklen_t *addrlen) {$/;"	f
getsockopt	./platform/posix/sockets/socket.cc	/^int getsockopt(int sockfd, int level, int optname, void *optval,$/;"	f
getuid	./platform/posix/unistd.cc	/^uid_t getuid() { return enc_untrusted_getuid(); }$/;"	f
global_arg	./test/misc/threaded_test.cc	/^static int global_arg = 1;$/;"	m	namespace:asylo::__anon208	file:
global_arg	./test/misc/threaded_test.cc	/^static int global_arg = 1;$/;"	m	namespace:asylo::__anon462	file:
global_enclave_config	./platform/core/trusted_global_state.cc	/^static asylo::EnclaveConfig *global_enclave_config = nullptr;$/;"	m	namespace:asylo	file:
global_enclave_name	./platform/core/trusted_global_state.cc	/^static std::string *global_enclave_name = nullptr;$/;"	m	namespace:asylo	file:
global_password	./platform/arch/sgx/trusted/host_calls.cc	/^struct passwd global_password;$/;"	m	namespace:asylo::__anon283	typeref:struct:asylo::__anon283::passwd	file:
global_password	./platform/arch/sgx/trusted/host_calls.cc	/^struct passwd global_password;$/;"	m	namespace:asylo::__anon29	typeref:struct:asylo::__anon29::passwd	file:
global_syscall_callback	./platform/system_call/system_call.cc	/^syscall_dispatch_callback global_syscall_callback = nullptr;$/;"	m	namespace:__anon121	file:
global_syscall_callback	./platform/system_call/system_call.cc	/^syscall_dispatch_callback global_syscall_callback = nullptr;$/;"	m	namespace:__anon375	file:
global_trusted_application	./platform/core/trusted_application.cc	/^static TrustedApplication *global_trusted_application = nullptr;$/;"	m	namespace:asylo	file:
good_identity_description_	./grpc/auth/enclave_auth_context_test.cc	/^  EnclaveIdentityDescription good_identity_description_;$/;"	m	class:asylo::__anon248::EnclaveAuthContextTest	file:
good_identity_description_	./grpc/auth/enclave_auth_context_test.cc	/^  EnclaveIdentityDescription good_identity_description_;$/;"	m	class:asylo::__anon502::EnclaveAuthContextTest	file:
google_error_space_	./platform/primitives/util/status_conversions_test.cc	/^  error::ErrorSpace const *google_error_space_ =$/;"	m	class:asylo::primitives::__anon339::StatusConversionsTest::error	file:
google_error_space_	./platform/primitives/util/status_conversions_test.cc	/^  error::ErrorSpace const *google_error_space_ =$/;"	m	class:asylo::primitives::__anon85::StatusConversionsTest::error	file:
greg_t	./platform/posix/include/sys/ucontext.h	/^typedef int64_t greg_t;$/;"	t
gregs	./platform/posix/include/sys/ucontext.h	/^  gregset_t gregs;$/;"	m	struct:__anon3
gregset_t	./platform/posix/include/sys/ucontext.h	/^typedef greg_t gregset_t[NGREG];$/;"	t
grpc	./grpc/auth/core/transcript_test.cc	/^namespace grpc {$/;"	n	namespace:asylo	file:
grpc_client_enclave_	./test/grpc/enclave_communication_test.cc	/^  EnclaveClient *grpc_client_enclave_;$/;"	m	class:asylo::__anon221::EnclaveCommunicationTest	file:
grpc_client_enclave_	./test/grpc/enclave_communication_test.cc	/^  EnclaveClient *grpc_client_enclave_;$/;"	m	class:asylo::__anon475::EnclaveCommunicationTest	file:
grpc_enclave_auth_context_from_tsi_peer	./grpc/auth/core/enclave_security_connector.cc	/^grpc_security_status grpc_enclave_auth_context_from_tsi_peer($/;"	f	namespace:__anon255
grpc_enclave_auth_context_from_tsi_peer	./grpc/auth/core/enclave_security_connector.cc	/^grpc_security_status grpc_enclave_auth_context_from_tsi_peer($/;"	f	namespace:__anon509
grpc_enclave_channel_credentials	./grpc/auth/core/enclave_credentials.cc	/^grpc_enclave_channel_credentials::grpc_enclave_channel_credentials($/;"	f	class:grpc_enclave_channel_credentials
grpc_enclave_channel_credentials_create	./grpc/auth/core/enclave_credentials.cc	/^grpc_enclave_channel_credentials_create($/;"	f
grpc_enclave_channel_security_connector	./grpc/auth/core/enclave_security_connector.cc	/^  grpc_enclave_channel_security_connector($/;"	f	class:__anon255::final
grpc_enclave_channel_security_connector	./grpc/auth/core/enclave_security_connector.cc	/^  grpc_enclave_channel_security_connector($/;"	f	class:__anon509::final
grpc_enclave_channel_security_connector_create	./grpc/auth/core/enclave_security_connector.cc	/^grpc_enclave_channel_security_connector_create($/;"	f
grpc_enclave_credentials_options	./grpc/auth/core/enclave_credentials_options.h	/^} grpc_enclave_credentials_options;$/;"	t	typeref:struct:__anon7
grpc_enclave_credentials_options_destroy	./grpc/auth/core/enclave_credentials_options.cc	/^void grpc_enclave_credentials_options_destroy($/;"	f
grpc_enclave_credentials_options_init	./grpc/auth/core/enclave_credentials_options.cc	/^void grpc_enclave_credentials_options_init($/;"	f
grpc_enclave_server_credentials	./grpc/auth/core/enclave_credentials.cc	/^grpc_enclave_server_credentials::grpc_enclave_server_credentials($/;"	f	class:grpc_enclave_server_credentials
grpc_enclave_server_credentials_create	./grpc/auth/core/enclave_credentials.cc	/^grpc_enclave_server_credentials_create($/;"	f
grpc_enclave_server_security_connector	./grpc/auth/core/enclave_security_connector.cc	/^  explicit grpc_enclave_server_security_connector($/;"	f	class:__anon255::final
grpc_enclave_server_security_connector	./grpc/auth/core/enclave_security_connector.cc	/^  explicit grpc_enclave_server_security_connector($/;"	f	class:__anon509::final
grpc_enclave_server_security_connector_create	./grpc/auth/core/enclave_security_connector.cc	/^grpc_enclave_server_security_connector_create($/;"	f
grpc_server	./examples/grpc_server/grpc_server_enclave.cc	/^namespace grpc_server {$/;"	n	namespace:examples	file:
grpc_server	./examples/grpc_server/grpc_server_test.cc	/^namespace grpc_server {$/;"	n	namespace:examples	file:
grpc_server	./examples/grpc_server/translator_server_impl.cc	/^namespace grpc_server {$/;"	n	namespace:examples	file:
grpc_server	./examples/grpc_server/translator_server_impl.h	/^namespace grpc_server {$/;"	n	namespace:examples
h_acedface_	./identity/sgx/code_identity_util_test.cc	/^  Sha256HashProto h_acedface_;$/;"	m	class:asylo::sgx::__anon152::CodeIdentityUtilTest	file:
h_acedface_	./identity/sgx/code_identity_util_test.cc	/^  Sha256HashProto h_acedface_;$/;"	m	class:asylo::sgx::__anon406::CodeIdentityUtilTest	file:
h_addr	./platform/posix/include/netdb.h	71;"	d
h_addr_list	./platform/posix/include/netdb.h	/^  char **h_addr_list;          \/\/ List of addresses from name server.$/;"	m	struct:hostent
h_addrtype	./platform/posix/include/netdb.h	/^  int h_addrtype;              \/\/ Host address type.$/;"	m	struct:hostent
h_aliases	./platform/posix/include/netdb.h	/^  char **h_aliases;            \/\/ Alias list.$/;"	m	struct:hostent
h_deadbeef_	./identity/sgx/code_identity_util_test.cc	/^  Sha256HashProto h_deadbeef_;$/;"	m	class:asylo::sgx::__anon152::CodeIdentityUtilTest	file:
h_deadbeef_	./identity/sgx/code_identity_util_test.cc	/^  Sha256HashProto h_deadbeef_;$/;"	m	class:asylo::sgx::__anon406::CodeIdentityUtilTest	file:
h_length	./platform/posix/include/netdb.h	/^  int h_length;                \/\/ Length of address.$/;"	m	struct:hostent
h_name	./platform/posix/include/netdb.h	/^  char *h_name;                \/\/ Official name of host.$/;"	m	struct:hostent
handle_cpuid_exception	./platform/arch/sgx/trusted/exceptions.cc	/^int handle_cpuid_exception(sgx_exception_info_t *info) {$/;"	f	namespace:__anon28
handle_cpuid_exception	./platform/arch/sgx/trusted/exceptions.cc	/^int handle_cpuid_exception(sgx_exception_info_t *info) {$/;"	f	namespace:__anon282
handle_rdtsc_exception	./platform/arch/sgx/trusted/exceptions.cc	/^int handle_rdtsc_exception(sgx_exception_info_t *info) {$/;"	f	namespace:__anon28
handle_rdtsc_exception	./platform/arch/sgx/trusted/exceptions.cc	/^int handle_rdtsc_exception(sgx_exception_info_t *info) {$/;"	f	namespace:__anon282
handle_signal	./platform/arch/sgx/untrusted/sgx_client.cc	/^static Status handle_signal(sgx_enclave_id_t eid, const char *input,$/;"	f	namespace:asylo
handle_signal_inside_enclave	./platform/arch/sgx/untrusted/ocalls.cc	/^static void (*handle_signal_inside_enclave)(int, bridge_siginfo_t *,$/;"	m	namespace:__anon286	file:
handle_signal_inside_enclave	./platform/arch/sgx/untrusted/ocalls.cc	/^static void (*handle_signal_inside_enclave)(int, bridge_siginfo_t *,$/;"	m	namespace:__anon32	file:
handshaker	./grpc/auth/core/enclave_transport_security.cc	/^  std::unique_ptr<EkepHandshaker> handshaker;$/;"	m	struct:asylo::tsi_enclave_handshaker	file:
handshaker_result_vtable	./grpc/auth/core/enclave_transport_security.cc	/^const tsi_handshaker_result_vtable handshaker_result_vtable = {$/;"	m	namespace:asylo	file:
handshaker_state_	./grpc/auth/core/client_ekep_handshaker.h	/^  EkepHandshaker::HandshakeState handshaker_state_;$/;"	m	class:asylo::final
handshaker_state_	./grpc/auth/core/server_ekep_handshaker.h	/^  EkepHandshaker::HandshakeState handshaker_state_;$/;"	m	class:asylo::final
handshaker_vtable	./grpc/auth/core/enclave_transport_security.cc	/^const tsi_handshaker_vtable handshaker_vtable = {$/;"	m	namespace:asylo	file:
hard_limit_	./test/util/exec_tester_test.cc	/^    bool hard_limit_;$/;"	m	class:asylo::experimental::__anon216::ExecTesterTest::UniformOutputChecker	file:
hard_limit_	./test/util/exec_tester_test.cc	/^    bool hard_limit_;$/;"	m	class:asylo::experimental::__anon470::ExecTesterTest::UniformOutputChecker	file:
has_run_	./bazel/application_wrapper/application_wrapper_enclave.cc	/^  std::atomic_bool has_run_;$/;"	m	class:asylo::final	file:
has_value_	./util/statusor.h	/^  bool has_value_;$/;"	m	class:asylo::StatusOr
hasher_	./grpc/auth/core/transcript.h	/^  std::unique_ptr<HashInterface> hasher_;$/;"	m	class:asylo::Transcript
header	./identity/sgx/identity_key_management_structs.h	/^  SigstructHeader header;$/;"	m	struct:asylo::sgx::Sigstruct
header	./identity/sgx/identity_key_management_structs.h	/^  SigstructHeader header;$/;"	m	struct:asylo::sgx::SigstructSigningData
header	./platform/system_call/message.h	/^  const MessageHeader *header() const {$/;"	f	class:asylo::system_call::MessageReader
header1	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kSigstructHeaderSize> header1;$/;"	m	struct:asylo::sgx::SigstructHeader
header2	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kSigstructHeaderSize> header2;$/;"	m	struct:asylo::sgx::SigstructHeader
header_length_	./platform/storage/utils/offset_translator.h	/^  const size_t header_length_;$/;"	m	class:asylo::platform::storage::OffsetTranslator
header_length_	./platform/storage/utils/offset_translator_test.cc	/^  size_t header_length_;$/;"	m	class:asylo::__anon350::OffsetTranslatorTest	file:
header_length_	./platform/storage/utils/offset_translator_test.cc	/^  size_t header_length_;$/;"	m	class:asylo::__anon96::OffsetTranslatorTest	file:
header_length_vals	./platform/storage/utils/offset_translator_test.cc	/^const off_t header_length_vals[] = {10, 40, 120};$/;"	m	namespace:asylo::__anon350	file:
header_length_vals	./platform/storage/utils/offset_translator_test.cc	/^const off_t header_length_vals[] = {10, 40, 120};$/;"	m	namespace:asylo::__anon96	file:
heap	./platform/primitives/sim/trusted_sim.cc	/^  uint8_t heap[kSimulatorHeapSize] __attribute__((aligned(8)));$/;"	m	struct:asylo::primitives::__anon345::__anon346	file:
heap	./platform/primitives/sim/trusted_sim.cc	/^  uint8_t heap[kSimulatorHeapSize] __attribute__((aligned(8)));$/;"	m	struct:asylo::primitives::__anon91::__anon92	file:
heap_base	./platform/primitives/sgx/trusted_runtime.cc	/^void *heap_base = nullptr;$/;"	m	namespace:__anon337	file:
heap_base	./platform/primitives/sgx/trusted_runtime.cc	/^void *heap_base = nullptr;$/;"	m	namespace:__anon83	file:
heap_base	./platform/primitives/trusted_runtime.h	/^  void *heap_base;$/;"	m	struct:EnclaveMemoryLayout
heap_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> heap_deleter_;$/;"	m	class:asylo::__anon305::SnapshotDeleter	file:
heap_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> heap_deleter_;$/;"	m	class:asylo::__anon51::SnapshotDeleter	file:
heap_init	./platform/primitives/sgx/trusted_runtime.cc	/^int heap_init(void *_heap_base, size_t _heap_max_size, size_t _heap_min_size,$/;"	f
heap_lock	./platform/primitives/sim/malloc_lock.cc	/^asylo_spinlock_t heap_lock = ASYLO_SPIN_LOCK_INITIALIZER;$/;"	m	namespace:asylo::primitives	file:
heap_max_size	./platform/primitives/sgx/trusted_runtime.cc	/^size_t heap_max_size = 0;$/;"	m	namespace:__anon337	file:
heap_max_size	./platform/primitives/sgx/trusted_runtime.cc	/^size_t heap_max_size = 0;$/;"	m	namespace:__anon83	file:
heap_size	./platform/primitives/sgx/trusted_runtime.cc	/^size_t heap_size = 0;$/;"	m	namespace:__anon337	file:
heap_size	./platform/primitives/sgx/trusted_runtime.cc	/^size_t heap_size = 0;$/;"	m	namespace:__anon83	file:
heap_size	./platform/primitives/trusted_runtime.h	/^  size_t heap_size;$/;"	m	struct:EnclaveMemoryLayout
heap_switch	./platform/posix/memory/memory.cc	/^void heap_switch(void *base, size_t size) {$/;"	f
hello	./examples/hello_world/hello_driver.cc	/^int hello(int argc, char *argv[]) {$/;"	f
hello_handler	./platform/primitives/examples/hello_driver.cc	/^Status hello_handler(std::shared_ptr<Client> client, void *context,$/;"	f	namespace:asylo::primitives
holds_host_config	./platform/core/enclave_manager.cc	/^bool EnclaveManagerOptions::holds_host_config() const {$/;"	f	class:asylo::EnclaveManagerOptions
host_	./grpc/util/enclave_server.h	/^  std::string host_;$/;"	m	class:asylo::final
host_call	./platform/host_call/exit_handler_constants.h	/^namespace host_call {$/;"	n	namespace:asylo
host_call	./platform/host_call/test/enclave_test_selectors.h	/^namespace host_call {$/;"	n	namespace:asylo
host_call	./platform/host_call/test/host_call_test.cc	/^namespace host_call {$/;"	n	namespace:asylo	file:
host_call	./platform/host_call/test/test_enclave.cc	/^namespace host_call {$/;"	n	namespace:asylo	file:
host_call	./platform/host_call/trusted/host_call_dispatcher.cc	/^namespace host_call {$/;"	n	namespace:asylo	file:
host_call	./platform/host_call/trusted/host_call_dispatcher.h	/^namespace host_call {$/;"	n	namespace:asylo
host_call	./platform/host_call/untrusted/host_call_handlers.cc	/^namespace host_call {$/;"	n	namespace:asylo	file:
host_call	./platform/host_call/untrusted/host_call_handlers.h	/^namespace host_call {$/;"	n	namespace:asylo
host_call	./platform/host_call/untrusted/host_call_handlers_initializer.cc	/^namespace host_call {$/;"	n	namespace:asylo	file:
host_call	./platform/host_call/untrusted/host_call_handlers_initializer.h	/^namespace host_call {$/;"	n	namespace:asylo
host_call	./platform/host_call/untrusted/host_call_handlers_initializer_test.cc	/^namespace host_call {$/;"	n	namespace:asylo	file:
host_call	./platform/host_call/untrusted/host_call_handlers_test.cc	/^namespace host_call {$/;"	n	namespace:asylo	file:
host_config_	./platform/core/enclave_manager.h	/^  HostConfig host_config_;$/;"	m	class:asylo::EnclaveManager
host_config_info_	./platform/core/enclave_manager.h	/^  absl::variant<ConfigServerConnectionAttributes, HostConfig> host_config_info_;$/;"	m	class:asylo::EnclaveManagerOptions
host_fd_	./platform/posix/io/io_context_epoll.h	/^  int host_fd_;$/;"	m	class:asylo::io::IOContextEpoll
host_fd_	./platform/posix/io/io_context_inotify.h	/^  int host_fd_;$/;"	m	class:asylo::io::IOContextInotify
host_fd_	./platform/posix/io/native_paths.h	/^  int host_fd_;$/;"	m	class:asylo::io::IOContextNative
host_fd_	./platform/posix/io/secure_paths.h	/^  int host_fd_;$/;"	m	class:asylo::io::IOContextSecure
hostent	./platform/posix/include/netdb.h	/^struct hostent {$/;"	s
htobe16	./platform/posix/endian.cc	/^uint16_t htobe16(uint16_t host_16bits) { return bswap_16(host_16bits); }$/;"	f
htobe16	./platform/posix/endian.cc	/^uint16_t htobe16(uint16_t host_16bits) { return host_16bits; }$/;"	f
htobe32	./platform/posix/endian.cc	/^uint32_t htobe32(uint32_t host_32bits) { return bswap_32(host_32bits); }$/;"	f
htobe32	./platform/posix/endian.cc	/^uint32_t htobe32(uint32_t host_32bits) { return host_32bits; }$/;"	f
htobe64	./platform/posix/endian.cc	/^uint64_t htobe64(uint64_t host_64bits) { return bswap_64(host_64bits); }$/;"	f
htobe64	./platform/posix/endian.cc	/^uint64_t htobe64(uint64_t host_64bits) { return host_64bits; }$/;"	f
htole16	./platform/posix/endian.cc	/^uint16_t htole16(uint16_t host_16bits) { return bswap_16(host_16bits); }$/;"	f
htole16	./platform/posix/endian.cc	/^uint16_t htole16(uint16_t host_16bits) { return host_16bits; }$/;"	f
htole32	./platform/posix/endian.cc	/^uint32_t htole32(uint32_t host_32bits) { return bswap_32(host_32bits); }$/;"	f
htole32	./platform/posix/endian.cc	/^uint32_t htole32(uint32_t host_32bits) { return host_32bits; }$/;"	f
htole64	./platform/posix/endian.cc	/^uint64_t htole64(uint64_t host_64bits) { return bswap_64(host_64bits); }$/;"	f
htole64	./platform/posix/endian.cc	/^uint64_t htole64(uint64_t host_64bits) { return host_64bits; }$/;"	f
htonl	./platform/posix/sockets/inet.cc	/^uint32_t htonl(uint32_t hostlong) {$/;"	f
htons	./platform/posix/sockets/inet.cc	/^uint16_t htons(uint16_t hostshort) {$/;"	f
i	./util/status_internal.h	/^      -> decltype(StatusU(ErrorCodeHolder(0), ""), *i = s->error_code(),$/;"	m	struct:asylo::status_internal::status_type_traits
id_	./platform/primitives/sgx/untrusted_sgx.h	/^  sgx_enclave_id_t id_;             \/\/ SGX SDK enclave identifier.$/;"	m	class:asylo::primitives::SgxEnclaveClient
identities_	./grpc/auth/enclave_auth_context.h	/^  const EnclaveIdentities identities_;$/;"	m	class:asylo::EnclaveAuthContext
identities_	./grpc/auth/enclave_auth_context_test.cc	/^  EnclaveIdentities identities_;$/;"	m	class:asylo::__anon248::EnclaveAuthContextTest	file:
identities_	./grpc/auth/enclave_auth_context_test.cc	/^  EnclaveIdentities identities_;$/;"	m	class:asylo::__anon502::EnclaveAuthContextTest	file:
identity	./identity/sgx/self_identity.h	/^  CodeIdentity identity;$/;"	m	struct:asylo::sgx::SelfIdentity
identity_type	./grpc/auth/core/assertion_description.h	/^  int32_t identity_type;$/;"	m	struct:__anon8
identity_type_	./identity/null_identity/null_assertion_generator.h	/^  static constexpr EnclaveIdentityType identity_type_ = NULL_IDENTITY;$/;"	m	class:asylo::final
identity_type_	./identity/null_identity/null_assertion_verifier.h	/^  static constexpr EnclaveIdentityType identity_type_ = NULL_IDENTITY;$/;"	m	class:asylo::final
identity_type_	./identity/sgx/sgx_local_assertion_generator.h	/^  static constexpr EnclaveIdentityType identity_type_ = CODE_IDENTITY;$/;"	m	class:asylo::final
identity_type_	./identity/sgx/sgx_local_assertion_verifier.h	/^  static constexpr EnclaveIdentityType identity_type_ = CODE_IDENTITY;$/;"	m	class:asylo::final
identity_types_	./grpc/auth/core/assertion_description_test.cc	/^  std::vector<EnclaveIdentityType> identity_types_;$/;"	m	class:asylo::__anon259::AssertionDescriptionTest	file:
identity_types_	./grpc/auth/core/assertion_description_test.cc	/^  std::vector<EnclaveIdentityType> identity_types_;$/;"	m	class:asylo::__anon513::AssertionDescriptionTest	file:
ifa_addr	./platform/posix/include/ifaddrs.h	/^  struct sockaddr *ifa_addr;    \/* Address of interface *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_broadaddr	./platform/posix/include/ifaddrs.h	38;"	d
ifa_data	./platform/posix/include/ifaddrs.h	/^  void *ifa_data; \/* Address-specific data *\/$/;"	m	struct:ifaddrs
ifa_dstaddr	./platform/posix/include/ifaddrs.h	39;"	d
ifa_flags	./platform/posix/include/ifaddrs.h	/^  unsigned int ifa_flags;       \/* Flags from SIOCGIFFLAGS *\/$/;"	m	struct:ifaddrs
ifa_ifu	./platform/posix/include/ifaddrs.h	/^  } ifa_ifu;$/;"	m	struct:ifaddrs	typeref:union:ifaddrs::__anon2
ifa_name	./platform/posix/include/ifaddrs.h	/^  char *ifa_name;               \/* Name of interface *\/$/;"	m	struct:ifaddrs
ifa_netmask	./platform/posix/include/ifaddrs.h	/^  struct sockaddr *ifa_netmask; \/* Netmask of interface *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_next	./platform/posix/include/ifaddrs.h	/^  struct ifaddrs *ifa_next;     \/* Next item in list *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::ifaddrs
ifaddrs	./platform/posix/include/ifaddrs.h	/^struct ifaddrs {$/;"	s
ifu_broadaddr	./platform/posix/include/ifaddrs.h	/^    struct sockaddr *ifu_broadaddr; \/* Broadcast address of interface *\/$/;"	m	union:ifaddrs::__anon2	typeref:struct:ifaddrs::__anon2::sockaddr
ifu_dstaddr	./platform/posix/include/ifaddrs.h	/^    struct sockaddr *ifu_dstaddr;   \/* Point-to-point destination address *\/$/;"	m	union:ifaddrs::__anon2	typeref:struct:ifaddrs::__anon2::sockaddr
impl	./grpc/auth/core/enclave_transport_security.cc	/^  std::unique_ptr<TsiEnclaveHandshakerResult> impl;$/;"	m	struct:asylo::tsi_enclave_handshaker_result	file:
imr_address	./platform/posix/include/netinet/in.h	/^  struct in_addr imr_address;   \/* local IP address of interface *\/$/;"	m	struct:ip_mreqn	typeref:struct:ip_mreqn::in_addr
imr_ifindex	./platform/posix/include/netinet/in.h	/^  int imr_ifindex;              \/* Interface index *\/$/;"	m	struct:ip_mreqn
imr_interface	./platform/posix/include/netinet/in.h	/^  struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	./platform/posix/include/netinet/in.h	/^  struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	./platform/posix/include/netinet/in.h	/^  struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreqn	typeref:struct:ip_mreqn::in_addr
in6_addr	./platform/posix/include/netinet/in.h	/^struct in6_addr {$/;"	s
in6_pktinfo	./platform/posix/include/netinet/in.h	/^struct in6_pktinfo {$/;"	s
in6addr_any	./platform/posix/sockets/in.cc	/^const struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;$/;"	v	typeref:struct:in6_addr
in6addr_loopback	./platform/posix/sockets/in.cc	/^const struct in6_addr in6addr_loopback = IN6ADDR_LOOPBACK_INIT;$/;"	v	typeref:struct:in6_addr
in_addr	./platform/posix/include/netinet/in.h	/^struct in_addr {$/;"	s
in_addr_t	./platform/posix/include/netinet/in.h	/^typedef uint32_t in_addr_t;$/;"	t
in_pktinfo	./platform/posix/include/netinet/in.h	/^struct in_pktinfo {$/;"	s
in_port_t	./platform/posix/include/netinet/in.h	/^typedef uint16_t in_port_t;$/;"	t
in_string	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::in_string() const {$/;"	f	class:asylo::system_call::ParameterDescriptor
increment_count	./test/misc/threaded_test.cc	/^void *increment_count(void *arg) {$/;"	f	namespace:asylo::__anon208
increment_count	./test/misc/threaded_test.cc	/^void *increment_count(void *arg) {$/;"	f	namespace:asylo::__anon462
index	./platform/system_call/generate_tables.cc	/^  int index;$/;"	m	struct:ParameterDescription	file:
index	./platform/system_call/metadata.h	/^  int index() const { return index_; }$/;"	f	class:asylo::system_call::ParameterDescriptor
index_	./platform/storage/utils/record_store.h	/^  absl::flat_hash_map<off_t, ConstNodeRef> index_;  \/\/ Index by record offset.$/;"	m	class:asylo::RecordStore
index_	./platform/system_call/metadata.h	/^  const int index_;$/;"	m	class:asylo::system_call::ParameterDescriptor
inet6_addr	./platform/common/bridge_types.h	/^  uint8_t inet6_addr[16];$/;"	m	struct:bridge_in6_addr
inet_addr	./platform/common/bridge_types.h	/^  uint32_t inet_addr;$/;"	m	struct:bridge_in_addr
inet_addr	./platform/posix/sockets/socket.cc	/^in_addr_t inet_addr(const char *cp) {$/;"	f
inet_aton	./platform/posix/sockets/socket.cc	/^int inet_aton(const char *cp, struct in_addr *inp) {$/;"	f
inet_ntop	./platform/posix/sockets/inet.cc	/^const char *inet_ntop(int af, const void *src, char *dst, socklen_t size) {$/;"	f
inet_pton	./platform/posix/sockets/inet.cc	/^int inet_pton(int af, const char *src, void *dst) {$/;"	f
infd_	./platform/posix/io/inotify_test.cc	/^  int infd_;$/;"	m	class:asylo::__anon321::InotifyTest	file:
infd_	./platform/posix/io/inotify_test.cc	/^  int infd_;$/;"	m	class:asylo::__anon67::InotifyTest	file:
info	./platform/common/bridge_types.h	/^  uint8_t info;$/;"	m	struct:BridgeWStatus
init_trampoline_once	./platform/primitives/sim/untrusted_sim.cc	/^absl::once_flag init_trampoline_once;$/;"	m	namespace:asylo::primitives::__anon347	file:
init_trampoline_once	./platform/primitives/sim/untrusted_sim.cc	/^absl::once_flag init_trampoline_once;$/;"	m	namespace:asylo::primitives::__anon93	file:
initialization_lock	./platform/primitives/util/trusted_runtime_helper.cc	/^  asylo_spinlock_t initialization_lock = ASYLO_SPIN_LOCK_INITIALIZER;$/;"	m	struct:asylo::primitives::__anon340::__anon341	file:
initialization_lock	./platform/primitives/util/trusted_runtime_helper.cc	/^  asylo_spinlock_t initialization_lock = ASYLO_SPIN_LOCK_INITIALIZER;$/;"	m	struct:asylo::primitives::__anon86::__anon87	file:
initialize_cpuid_results	./platform/arch/sgx/trusted/exceptions.cc	/^void initialize_cpuid_results() {$/;"	f	namespace:__anon28
initialize_cpuid_results	./platform/arch/sgx/trusted/exceptions.cc	/^void initialize_cpuid_results() {$/;"	f	namespace:__anon282
initialized	./platform/primitives/test/test_enclave.cc	/^bool initialized = false;$/;"	m	namespace:asylo::primitives::__anon335	file:
initialized	./platform/primitives/test/test_enclave.cc	/^bool initialized = false;$/;"	m	namespace:asylo::primitives::__anon81	file:
initialized_mu_	./identity/null_identity/null_assertion_generator.h	/^  mutable absl::Mutex initialized_mu_;$/;"	m	class:asylo::final
initialized_mu_	./identity/null_identity/null_assertion_verifier.h	/^  mutable absl::Mutex initialized_mu_;$/;"	m	class:asylo::final
initialized_mu_	./identity/sgx/sgx_local_assertion_generator.h	/^  mutable absl::Mutex initialized_mu_;$/;"	m	class:asylo::final
initialized_mu_	./identity/sgx/sgx_local_assertion_verifier.h	/^  mutable absl::Mutex initialized_mu_;$/;"	m	class:asylo::final
inotify_add_watch	./platform/posix/inotify.cc	/^int inotify_add_watch(int fd, const char *pathname, uint32_t mask) {$/;"	f
inotify_event	./platform/posix/include/sys/inotify.h	/^struct inotify_event {$/;"	s
inotify_init	./platform/posix/inotify.cc	/^int inotify_init() { return inotify_init1(0); }$/;"	f
inotify_init1	./platform/posix/inotify.cc	/^int inotify_init1(int flags) {$/;"	f
inotify_rm_watch	./platform/posix/inotify.cc	/^int inotify_rm_watch(int fd, int wd) {$/;"	f
input_stream_	./grpc/auth/core/ekep_handshaker.h	/^  MultiBufferInputStream input_stream_;$/;"	m	class:asylo::EkepHandshaker
inserter_	./util/error_space.h	/^  static InserterType inserter_;$/;"	m	class:asylo::error::ErrorSpaceImplementationHelper
instance_	./platform/common/singleton.h	/^T *Singleton<T, F>::instance_ = nullptr;$/;"	m	class:asylo::Singleton
instance_	./platform/core/enclave_manager.cc	/^EnclaveManager *EnclaveManager::instance_ = nullptr;$/;"	m	class:asylo::EnclaveManager	file:
instance_version_	./platform/common/ring_buffer.h	/^  const uint64_t instance_version_;         \/\/ Layout of the struct.$/;"	m	class:asylo::RingBuffer
internal	./crypto/util/byte_container_util_internal.h	/^namespace internal {$/;"	n	namespace:asylo
internal	./crypto/util/byte_container_view_internal.h	/^namespace internal {$/;"	n	namespace:asylo
internal	./identity/init_internal.h	/^namespace internal {$/;"	n	namespace:asylo
internal	./identity/sgx/code_identity_util.cc	/^namespace internal {$/;"	n	namespace:asylo::sgx	file:
internal	./identity/sgx/code_identity_util.h	/^namespace internal {$/;"	n	namespace:asylo::sgx
internal	./identity/sgx/local_secret_sealer_helpers.cc	/^namespace internal {$/;"	n	namespace:asylo::sgx	file:
internal	./identity/sgx/local_secret_sealer_helpers.h	/^namespace internal {$/;"	n	namespace:asylo::sgx
internal	./platform/common/static_map_internal.h	/^namespace internal {$/;"	n	namespace:asylo
internal	./test/util/output_collector.h	/^namespace internal {$/;"	n	namespace:asylo
internal	./test/util/proto_matchers.h	/^namespace internal {$/;"	n	namespace:asylo
internal	./test/util/status_matchers.h	/^namespace internal {$/;"	n	namespace:asylo
invalid_argument_status	./platform/system_call/message.cc	/^primitives::PrimitiveStatus MessageReader::invalid_argument_status($/;"	f	class:asylo::system_call::MessageReader
io	./platform/posix/io/io_context_epoll.cc	/^namespace io {$/;"	n	namespace:asylo	file:
io	./platform/posix/io/io_context_epoll.h	/^namespace io {$/;"	n	namespace:asylo
io	./platform/posix/io/io_context_eventfd.cc	/^namespace io {$/;"	n	namespace:asylo	file:
io	./platform/posix/io/io_context_eventfd.h	/^namespace io {$/;"	n	namespace:asylo
io	./platform/posix/io/io_context_inotify.cc	/^namespace io {$/;"	n	namespace:asylo	file:
io	./platform/posix/io/io_context_inotify.h	/^namespace io {$/;"	n	namespace:asylo
io	./platform/posix/io/io_manager.cc	/^namespace io {$/;"	n	namespace:asylo	file:
io	./platform/posix/io/io_manager.h	/^namespace io {$/;"	n	namespace:asylo
io	./platform/posix/io/native_paths.cc	/^namespace io {$/;"	n	namespace:asylo	file:
io	./platform/posix/io/native_paths.h	/^namespace io {$/;"	n	namespace:asylo
io	./platform/posix/io/path_normalization_test.cc	/^namespace io {$/;"	n	namespace:asylo	file:
io	./platform/posix/io/secure_paths.cc	/^namespace io {$/;"	n	namespace:asylo	file:
io	./platform/posix/io/secure_paths.h	/^namespace io {$/;"	n	namespace:asylo
io	./platform/posix/io/util.cc	/^namespace io {$/;"	n	namespace:asylo	file:
io	./platform/posix/io/util.h	/^namespace io {$/;"	n	namespace:asylo
io_	./platform/storage/utils/record_store.h	/^  RandomAccessStorage *io_;  \/\/ Record backing store.$/;"	m	class:asylo::RecordStore
ioctl	./platform/posix/ioctl.cc	/^int ioctl(int fd, int request, ...) {$/;"	f
iov_base	./platform/common/bridge_types.h	/^  void *iov_base;$/;"	m	struct:bridge_iovec
iov_base	./platform/posix/include/sys/uio.h	/^  void *iov_base;$/;"	m	struct:iovec
iov_len	./platform/common/bridge_types.h	/^  uint64_t iov_len;$/;"	m	struct:bridge_iovec
iov_len	./platform/posix/include/sys/uio.h	/^  size_t iov_len;$/;"	m	struct:iovec
iovec	./platform/posix/include/sys/uio.h	/^struct iovec {$/;"	s
ip6_mtuinfo	./platform/posix/include/netinet/in.h	/^struct ip6_mtuinfo {$/;"	s
ip6m_addr	./platform/posix/include/netinet/in.h	/^  struct sockaddr_in6 ip6m_addr; \/* dst address including zone ID *\/$/;"	m	struct:ip6_mtuinfo	typeref:struct:ip6_mtuinfo::sockaddr_in6
ip6m_mtu	./platform/posix/include/netinet/in.h	/^  uint32_t ip6m_mtu;             \/* path MTU in host byte order *\/$/;"	m	struct:ip6_mtuinfo
ip_mreq	./platform/posix/include/netinet/in.h	/^struct ip_mreq {$/;"	s
ip_mreqn	./platform/posix/include/netinet/in.h	/^struct ip_mreqn {$/;"	s
ipi6_addr	./platform/posix/include/netinet/in.h	/^  struct in6_addr ipi6_addr; \/* src\/dst IPv6 address *\/$/;"	m	struct:in6_pktinfo	typeref:struct:in6_pktinfo::in6_addr
ipi6_ifindex	./platform/posix/include/netinet/in.h	/^  unsigned int ipi6_ifindex; \/* send\/recv interface index *\/$/;"	m	struct:in6_pktinfo
ipi_addr	./platform/posix/include/netinet/in.h	/^  struct in_addr ipi_addr;$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr
ipi_ifindex	./platform/posix/include/netinet/in.h	/^  int ipi_ifindex;$/;"	m	struct:in_pktinfo
ipi_spec_dst	./platform/posix/include/netinet/in.h	/^  struct in_addr ipi_spec_dst;$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr
is_active_	./test/util/output_collector.h	/^  bool is_active_;$/;"	m	class:asylo::OutputCollector
is_bounded	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_bounded() const { return test_flag(kBounded); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_client	./grpc/auth/core/enclave_transport_security.cc	/^  bool is_client;$/;"	m	struct:asylo::tsi_enclave_handshaker	file:
is_client_	./grpc/auth/core/enclave_transport_security.cc	/^  bool is_client_;$/;"	m	class:asylo::TsiEnclaveHandshakerResult	file:
is_closed_for_read	./platform/common/ring_buffer.h	/^  bool is_closed_for_read() const { return closed_for_read_ != 0; }$/;"	f	class:asylo::RingBuffer
is_closed_for_write	./platform/common/ring_buffer.h	/^  bool is_closed_for_write() const { return closed_for_write_ != 0; }$/;"	f	class:asylo::RingBuffer
is_const	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_const() const { return test_flag(kConst); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_deserialized	./platform/storage/secure/aead_handler.h	/^    bool is_deserialized;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileControl
is_destroyed	./platform/core/untrusted_cache_malloc.cc	/^bool UntrustedCacheMalloc::is_destroyed = false;$/;"	m	class:asylo::UntrustedCacheMalloc	file:
is_destroyed	./platform/core/untrusted_cache_malloc.h	/^  static bool is_destroyed;$/;"	m	class:asylo::UntrustedCacheMalloc
is_fixed	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_fixed() const { return test_flag(kFixed); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_implicitly_constructible	./util/statusor.h	/^  struct is_implicitly_constructible$/;"	s	class:asylo::StatusOr
is_in	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_in() const { return test_flag(kIn); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_new	./platform/storage/secure/aead_handler.h	/^    bool is_new;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileControl
is_out	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_out() const { return test_flag(kOut); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_pointer	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_pointer() const { return test_flag(kPointer); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_recursive_	./platform/core/untrusted_mutex.h	/^  bool is_recursive_;$/;"	m	class:asylo::UntrustedMutex
is_request	./platform/system_call/message.h	/^  bool is_request() const { return header()->flags & kSystemCallRequest; }$/;"	f	class:asylo::system_call::MessageReader
is_request	./platform/system_call/message.h	/^  bool is_request() const { return is_request_; }$/;"	f	class:asylo::system_call::MessageWriter
is_request_	./platform/system_call/message.h	/^  bool is_request_;$/;"	m	class:asylo::system_call::MessageWriter
is_response	./platform/system_call/message.h	/^  bool is_response() const { return !is_request_; }$/;"	f	class:asylo::system_call::MessageWriter
is_response	./platform/system_call/message.h	/^  bool is_response() const { return header()->flags & kSystemCallResponse; }$/;"	f	class:asylo::system_call::MessageReader
is_ro_byte_container_type	./crypto/util/byte_container_view_internal.h	/^struct is_ro_byte_container_type {$/;"	s	namespace:asylo::internal
is_scalar	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_scalar() const { return test_flag(kScalar); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_signed	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_signed() const { return test_flag(kSigned); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_status	./util/status_internal.h	/^  static constexpr bool is_status = minimal_api_type::value;$/;"	m	struct:asylo::status_internal::status_type_traits
is_string	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_string() const { return test_flag(kString); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_transient_error	./platform/storage/secure/aead_handler.cc	/^bool is_transient_error(int err) { return (err == EAGAIN) || (err == EINTR); }$/;"	f	namespace:asylo::platform::storage::__anon353
is_transient_error	./platform/storage/secure/aead_handler.cc	/^bool is_transient_error(int err) { return (err == EAGAIN) || (err == EINTR); }$/;"	f	namespace:asylo::platform::storage::__anon99
is_unsigned	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_unsigned() const { return test_flag(kUnsigned); }$/;"	f	class:asylo::system_call::ParameterDescriptor
is_urandom_	./platform/posix/io/random_devices.h	/^  bool is_urandom_;$/;"	m	class:asylo::RandomIOContext
is_valid	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_valid() const {$/;"	f	class:asylo::system_call::ParameterDescriptor
is_valid	./platform/system_call/metadata.cc	/^bool SystemCallDescriptor::is_valid() const {$/;"	f	class:asylo::system_call::SystemCallDescriptor
is_void_ptr	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::is_void_ptr() const { return test_flag(kVoidPtr); }$/;"	f	class:asylo::system_call::ParameterDescriptor
isvextprodid	./identity/sgx/fake_enclave.h	/^    UnsafeBytes<kIsvextprodidSize> isvextprodid;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
isvextprodid	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kIsvextprodidSize> isvextprodid;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
isvextprodid	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kIsvextprodidSize> isvextprodid;$/;"	m	struct:asylo::sgx::SigstructBody
isvextprodid_	./identity/sgx/fake_enclave.h	/^  UnsafeBytes<kIsvextprodidSize> isvextprodid_;$/;"	m	class:asylo::sgx::FakeEnclave
isvfamilyid	./identity/sgx/fake_enclave.h	/^    UnsafeBytes<kIsvfamilyidSize> isvfamilyid;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
isvfamilyid	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kIsvfamilyidSize> isvfamilyid;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
isvfamilyid	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kIsvfamilyidSize> isvfamilyid;$/;"	m	struct:asylo::sgx::SigstructBody
isvfamilyid_	./identity/sgx/fake_enclave.h	/^  UnsafeBytes<kIsvfamilyidSize> isvfamilyid_;$/;"	m	class:asylo::sgx::FakeEnclave
isvprodid	./identity/sgx/fake_enclave.h	/^    uint16_t isvprodid;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
isvprodid	./identity/sgx/identity_key_management_structs.h	/^  uint16_t isvprodid;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
isvprodid	./identity/sgx/identity_key_management_structs.h	/^  uint16_t isvprodid;$/;"	m	struct:asylo::sgx::SigstructBody
isvprodid	./identity/sgx/self_identity.h	/^  uint16_t isvprodid;$/;"	m	struct:asylo::sgx::SelfIdentity
isvprodid_	./identity/sgx/fake_enclave.h	/^  uint16_t isvprodid_;$/;"	m	class:asylo::sgx::FakeEnclave
isvsvn	./identity/sgx/fake_enclave.h	/^    uint16_t isvsvn;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
isvsvn	./identity/sgx/identity_key_management_structs.h	/^  uint16_t isvsvn;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
isvsvn	./identity/sgx/identity_key_management_structs.h	/^  uint16_t isvsvn;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
isvsvn	./identity/sgx/identity_key_management_structs.h	/^  uint16_t isvsvn;$/;"	m	struct:asylo::sgx::SigstructBody
isvsvn	./identity/sgx/self_identity.h	/^  uint16_t isvsvn;$/;"	m	struct:asylo::sgx::SelfIdentity
isvsvn_	./identity/sgx/fake_enclave.h	/^  uint16_t isvsvn_;$/;"	m	class:asylo::sgx::FakeEnclave
it_interval	./platform/common/bridge_types.h	/^  struct bridge_timeval it_interval;$/;"	m	struct:BridgeITimerVal	typeref:struct:BridgeITimerVal::bridge_timeval
it_value	./platform/common/bridge_types.h	/^  struct bridge_timeval it_value;$/;"	m	struct:BridgeITimerVal	typeref:struct:BridgeITimerVal::bridge_timeval
item_	./platform/primitives/parameter_stack.h	/^    Item *item_;$/;"	m	class:asylo::primitives::ParameterStack::ItemDeleter
j	./examples/hello_world/hello_enclave.cc	/^int j;$/;"	v
kAbortEnclaveSelector	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kAbortEnclaveSelector = primitives::kSelectorUser;$/;"	m	namespace:asylo::host_call
kAbortEnclaveSelector	./platform/primitives/examples/hello_enclave.h	/^static constexpr uint64_t kAbortEnclaveSelector = kSelectorUser + 1;$/;"	m	namespace:asylo::primitives
kAbortEnclaveSelector	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kAbortEnclaveSelector = kSelectorUser + 1;$/;"	m	namespace:asylo::primitives
kAbsentSectionName	./util/elf_reader_test.cc	/^constexpr char kAbsentSectionName[] = "\\r%";$/;"	m	namespace:asylo::__anon226	file:
kAbsentSectionName	./util/elf_reader_test.cc	/^constexpr char kAbsentSectionName[] = "\\r%";$/;"	m	namespace:asylo::__anon480	file:
kAdditionalAuthenticatedDataPurposeSize	./identity/additional_authenticated_data_generator.h	/^constexpr int kAdditionalAuthenticatedDataPurposeSize = 16;$/;"	m	namespace:asylo
kAdditionalAuthenticatedDataSize	./identity/additional_authenticated_data_generator.cc	/^constexpr int kAdditionalAuthenticatedDataSize = 64;$/;"	m	namespace:asylo::__anon177	file:
kAdditionalAuthenticatedDataSize	./identity/additional_authenticated_data_generator.cc	/^constexpr int kAdditionalAuthenticatedDataSize = 64;$/;"	m	namespace:asylo::__anon431	file:
kAdditionalAuthenticatedDataUuidSize	./identity/additional_authenticated_data_generator.h	/^constexpr int kAdditionalAuthenticatedDataUuidSize = 16;$/;"	m	namespace:asylo
kAdditionalDataSize	./crypto/aes_gcm_siv_test.cc	/^constexpr size_t kAdditionalDataSize = 15;$/;"	m	namespace:asylo::__anon26	file:
kAdditionalDataSize	./crypto/aes_gcm_siv_test.cc	/^constexpr size_t kAdditionalDataSize = 15;$/;"	m	namespace:asylo::__anon280	file:
kAddress	./grpc/auth/test/h2_enclave_security_test.cc	/^constexpr char kAddress[] = "[::1]";$/;"	m	namespace:asylo::__anon247	file:
kAddress	./grpc/auth/test/h2_enclave_security_test.cc	/^constexpr char kAddress[] = "[::1]";$/;"	m	namespace:asylo::__anon501	file:
kAddress	./test/grpc/channel_test.cc	/^constexpr char kAddress[] = "[::1]";$/;"	m	namespace:asylo::__anon224	file:
kAddress	./test/grpc/channel_test.cc	/^constexpr char kAddress[] = "[::1]";$/;"	m	namespace:asylo::__anon478	file:
kAddress	./test/grpc/enclave_insecure_server_test.cc	/^constexpr const char kAddress[] = "[::1]";$/;"	m	namespace:asylo::test::__anon223	file:
kAddress	./test/grpc/enclave_insecure_server_test.cc	/^constexpr const char kAddress[] = "[::1]";$/;"	m	namespace:asylo::test::__anon477	file:
kAddress	./test/grpc/enclave_secure_server_test.cc	/^constexpr const char kAddress[] = "[::1]";$/;"	m	namespace:asylo::test::__anon225	file:
kAddress	./test/grpc/enclave_secure_server_test.cc	/^constexpr const char kAddress[] = "[::1]";$/;"	m	namespace:asylo::test::__anon479	file:
kAddressName	./platform/core/shared_name_kind.h	/^  kAddressName,$/;"	e	enum:SharedNameKind
kAes128KeySize	./crypto/aead_key.cc	/^constexpr size_t kAes128KeySize = 16;$/;"	m	namespace:asylo::__anon15	file:
kAes128KeySize	./crypto/aead_key.cc	/^constexpr size_t kAes128KeySize = 16;$/;"	m	namespace:asylo::__anon269	file:
kAes256KeySize	./crypto/aead_key.cc	/^constexpr size_t kAes256KeySize = 32;$/;"	m	namespace:asylo::__anon15	file:
kAes256KeySize	./crypto/aead_key.cc	/^constexpr size_t kAes256KeySize = 32;$/;"	m	namespace:asylo::__anon269	file:
kAesGcmAadHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmAadHex128[] = "feedfacedeadbeeffeedfacedeadbeefabaddad2";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmAadHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmAadHex128[] = "feedfacedeadbeeffeedfacedeadbeefabaddad2";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmAadHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmAadHex128[] = "feedfacedeadbeeffeedfacedeadbeefabaddad2";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmAadHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmAadHex128[] = "feedfacedeadbeeffeedfacedeadbeefabaddad2";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmBadKeyString	./crypto/aead_key_test.cc	/^constexpr char kAesGcmBadKeyString[] = "deadbeef1337";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmBadKeyString	./crypto/aead_key_test.cc	/^constexpr char kAesGcmBadKeyString[] = "deadbeef1337";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmBadNonceString	./crypto/aead_key_test.cc	/^constexpr char kAesGcmBadNonceString[] = "123456";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmBadNonceString	./crypto/aead_key_test.cc	/^constexpr char kAesGcmBadNonceString[] = "123456";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmCiphertextHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmCiphertextHex128[] =$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmCiphertextHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmCiphertextHex128[] =$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmCiphertextHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmCiphertextHex128[] =$/;"	m	namespace:asylo::__anon12	file:
kAesGcmCiphertextHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmCiphertextHex128[] =$/;"	m	namespace:asylo::__anon266	file:
kAesGcmCiphertextHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmCiphertextHex256[] = "cea7403d4d606b6e074ec5d3baf39d18";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmCiphertextHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmCiphertextHex256[] = "cea7403d4d606b6e074ec5d3baf39d18";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmCiphertextHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmCiphertextHex256[] = "cea7403d4d606b6e074ec5d3baf39d18";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmCiphertextHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmCiphertextHex256[] = "cea7403d4d606b6e074ec5d3baf39d18";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmKeyHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmKeyHex128[] = "feffe9928665731c6d6a8f9467308308";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmKeyHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmKeyHex128[] = "feffe9928665731c6d6a8f9467308308";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmKeyHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmKeyHex128[] = "feffe9928665731c6d6a8f9467308308";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmKeyHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmKeyHex128[] = "feffe9928665731c6d6a8f9467308308";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmKeyHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmKeyHex256[] =$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmKeyHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmKeyHex256[] =$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmKeyHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmKeyHex256[] =$/;"	m	namespace:asylo::__anon12	file:
kAesGcmKeyHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmKeyHex256[] =$/;"	m	namespace:asylo::__anon266	file:
kAesGcmMaxMessageSize	./crypto/aead_cryptor.cc	/^constexpr size_t kAesGcmMaxMessageSize = static_cast<size_t>(1) << 25;$/;"	m	namespace:asylo::experimental::__anon25	file:
kAesGcmMaxMessageSize	./crypto/aead_cryptor.cc	/^constexpr size_t kAesGcmMaxMessageSize = static_cast<size_t>(1) << 25;$/;"	m	namespace:asylo::experimental::__anon279	file:
kAesGcmMaxSealedMessages	./crypto/aead_cryptor.cc	/^constexpr uint64_t kAesGcmMaxSealedMessages = UINT64_C(1) << 27;$/;"	m	namespace:asylo::experimental::__anon25	file:
kAesGcmMaxSealedMessages	./crypto/aead_cryptor.cc	/^constexpr uint64_t kAesGcmMaxSealedMessages = UINT64_C(1) << 27;$/;"	m	namespace:asylo::experimental::__anon279	file:
kAesGcmNonceHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmNonceHex128[] = "cafebabefacedbaddecaf888";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmNonceHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmNonceHex128[] = "cafebabefacedbaddecaf888";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmNonceHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmNonceHex128[] = "cafebabefacedbaddecaf888";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmNonceHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmNonceHex128[] = "cafebabefacedbaddecaf888";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmNonceHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmNonceHex256[] = "000000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmNonceHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmNonceHex256[] = "000000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmNonceHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmNonceHex256[] = "000000000000000000000000";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmNonceHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmNonceHex256[] = "000000000000000000000000";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmNonceSize	./crypto/aead_key_test.cc	/^constexpr size_t kAesGcmNonceSize = 12;$/;"	m	namespace:asylo::__anon12	file:
kAesGcmNonceSize	./crypto/aead_key_test.cc	/^constexpr size_t kAesGcmNonceSize = 12;$/;"	m	namespace:asylo::__anon266	file:
kAesGcmNonceSize	./crypto/random_nonce_generator.cc	/^constexpr size_t kAesGcmNonceSize = 12;$/;"	m	namespace:asylo::__anon14	file:
kAesGcmNonceSize	./crypto/random_nonce_generator.cc	/^constexpr size_t kAesGcmNonceSize = 12;$/;"	m	namespace:asylo::__anon268	file:
kAesGcmPlaintextHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmPlaintextHex128[] =$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmPlaintextHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmPlaintextHex128[] =$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmPlaintextHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmPlaintextHex128[] =$/;"	m	namespace:asylo::__anon12	file:
kAesGcmPlaintextHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmPlaintextHex128[] =$/;"	m	namespace:asylo::__anon266	file:
kAesGcmPlaintextHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmPlaintextHex256[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmPlaintextHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmPlaintextHex256[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmPlaintextHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmPlaintextHex256[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmPlaintextHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmPlaintextHex256[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivAadHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivAadHex256[] = "01";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivAadHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivAadHex256[] = "01";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivAadHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivAadHex256[] = "01";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivAadHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivAadHex256[] = "01";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivCiphertextHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivCiphertextHex128[] =$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivCiphertextHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivCiphertextHex128[] =$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivCiphertextHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivCiphertextHex128[] =$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivCiphertextHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivCiphertextHex128[] =$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivCiphertextHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivCiphertextHex256[] = "c91545823cc24f17dbb0e9e807d5ec17";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivCiphertextHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivCiphertextHex256[] = "c91545823cc24f17dbb0e9e807d5ec17";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivCiphertextHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivCiphertextHex256[] = "c91545823cc24f17dbb0e9e807d5ec17";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivCiphertextHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivCiphertextHex256[] = "c91545823cc24f17dbb0e9e807d5ec17";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivKeyHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivKeyHex128[] = "01000000000000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivKeyHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivKeyHex128[] = "01000000000000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivKeyHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivKeyHex128[] = "01000000000000000000000000000000";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivKeyHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivKeyHex128[] = "01000000000000000000000000000000";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivKeyHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivKeyHex256[] =$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivKeyHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivKeyHex256[] =$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivKeyHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivKeyHex256[] =$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivKeyHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivKeyHex256[] =$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivMaxMessageSize	./crypto/aead_cryptor.cc	/^constexpr size_t kAesGcmSivMaxMessageSize = static_cast<size_t>(1) << 25;$/;"	m	namespace:asylo::experimental::__anon25	file:
kAesGcmSivMaxMessageSize	./crypto/aead_cryptor.cc	/^constexpr size_t kAesGcmSivMaxMessageSize = static_cast<size_t>(1) << 25;$/;"	m	namespace:asylo::experimental::__anon279	file:
kAesGcmSivMaxSealedMessages	./crypto/aead_cryptor.cc	/^constexpr uint64_t kAesGcmSivMaxSealedMessages = UINT64_C(1) << 48;$/;"	m	namespace:asylo::experimental::__anon25	file:
kAesGcmSivMaxSealedMessages	./crypto/aead_cryptor.cc	/^constexpr uint64_t kAesGcmSivMaxSealedMessages = UINT64_C(1) << 48;$/;"	m	namespace:asylo::experimental::__anon279	file:
kAesGcmSivNonceHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivNonceHex128[] = "030000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivNonceHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivNonceHex128[] = "030000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivNonceHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivNonceHex128[] = "030000000000000000000000";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivNonceHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivNonceHex128[] = "030000000000000000000000";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivNonceHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivNonceHex256[] = "030000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivNonceHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivNonceHex256[] = "030000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivNonceHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivNonceHex256[] = "030000000000000000000000";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivNonceHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivNonceHex256[] = "030000000000000000000000";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivNonceSize	./crypto/aes_gcm_siv.h	/^constexpr size_t kAesGcmSivNonceSize = 12;$/;"	m	namespace:asylo
kAesGcmSivPlaintextHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivPlaintextHex128[] =$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivPlaintextHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivPlaintextHex128[] =$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivPlaintextHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivPlaintextHex128[] =$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivPlaintextHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivPlaintextHex128[] =$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivPlaintextHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivPlaintextHex256[] = "02000000000000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivPlaintextHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivPlaintextHex256[] = "02000000000000000000000000000000";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivPlaintextHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivPlaintextHex256[] = "02000000000000000000000000000000";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivPlaintextHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivPlaintextHex256[] = "02000000000000000000000000000000";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivTagHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivTagHex128[] = "1a8e45dcd4578c667cd86847bf6155ff";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivTagHex128	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivTagHex128[] = "1a8e45dcd4578c667cd86847bf6155ff";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivTagHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivTagHex128[] = "1a8e45dcd4578c667cd86847bf6155ff";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivTagHex128	./crypto/aead_key_test.cc	/^const char kAesGcmSivTagHex128[] = "1a8e45dcd4578c667cd86847bf6155ff";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmSivTagHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivTagHex256[] = "b292d28ff61189e8e49f3875ef91aff7";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmSivTagHex256	./crypto/aead_cryptor_test.cc	/^const char kAesGcmSivTagHex256[] = "b292d28ff61189e8e49f3875ef91aff7";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmSivTagHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivTagHex256[] = "b292d28ff61189e8e49f3875ef91aff7";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmSivTagHex256	./crypto/aead_key_test.cc	/^const char kAesGcmSivTagHex256[] = "b292d28ff61189e8e49f3875ef91aff7";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmTagHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmTagHex128[] = "5bc94fbc3221a5db94fae95ae7121a47";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmTagHex128	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmTagHex128[] = "5bc94fbc3221a5db94fae95ae7121a47";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmTagHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmTagHex128[] = "5bc94fbc3221a5db94fae95ae7121a47";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmTagHex128	./crypto/aead_key_test.cc	/^constexpr char kAesGcmTagHex128[] = "5bc94fbc3221a5db94fae95ae7121a47";$/;"	m	namespace:asylo::__anon266	file:
kAesGcmTagHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmTagHex256[] = "d0d1c8a799996bf0265b98b5d48ab919";$/;"	m	namespace:asylo::experimental::__anon11	file:
kAesGcmTagHex256	./crypto/aead_cryptor_test.cc	/^constexpr char kAesGcmTagHex256[] = "d0d1c8a799996bf0265b98b5d48ab919";$/;"	m	namespace:asylo::experimental::__anon265	file:
kAesGcmTagHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmTagHex256[] = "d0d1c8a799996bf0265b98b5d48ab919";$/;"	m	namespace:asylo::__anon12	file:
kAesGcmTagHex256	./crypto/aead_key_test.cc	/^constexpr char kAesGcmTagHex256[] = "d0d1c8a799996bf0265b98b5d48ab919";$/;"	m	namespace:asylo::__anon266	file:
kAesKey128	./examples/quickstart/demo_enclave.cc	/^constexpr uint8_t kAesKey128[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05,$/;"	m	namespace:asylo::__anon245	file:
kAesKey128	./examples/quickstart/demo_enclave.cc	/^constexpr uint8_t kAesKey128[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05,$/;"	m	namespace:asylo::__anon499	file:
kAesKey128	./examples/quickstart/solution/demo_enclave.cc	/^constexpr uint8_t kAesKey128[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05,$/;"	m	namespace:asylo::__anon246	file:
kAesKey128	./examples/quickstart/solution/demo_enclave.cc	/^constexpr uint8_t kAesKey128[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05,$/;"	m	namespace:asylo::__anon500	file:
kAlignSizes	./identity/util/aligned_object_ptr_test.cc	/^constexpr uint64_t kAlignSizes[] = {$/;"	m	namespace:asylo::__anon172	file:
kAlignSizes	./identity/util/aligned_object_ptr_test.cc	/^constexpr uint64_t kAlignSizes[] = {$/;"	m	namespace:asylo::__anon426	file:
kAll0	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAll0[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon188	file:
kAll0	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAll0[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon442	file:
kAllF	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAllF[] = "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF";$/;"	m	namespace:asylo::__anon188	file:
kAllF	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAllF[] = "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF";$/;"	m	namespace:asylo::__anon442	file:
kAllSecsAttributes	./identity/sgx/secs_attributes.cc	/^constexpr SecsAttributeBit kAllSecsAttributes[] = {$/;"	m	namespace:asylo::sgx::__anon156	file:
kAllSecsAttributes	./identity/sgx/secs_attributes.cc	/^constexpr SecsAttributeBit kAllSecsAttributes[] = {$/;"	m	namespace:asylo::sgx::__anon410	file:
kAllSecsMiscselectBits	./identity/sgx/secs_miscselect.cc	/^constexpr SecsMiscselectBit kAllSecsMiscselectBits[] = {$/;"	m	namespace:asylo::sgx::__anon153	file:
kAllSecsMiscselectBits	./identity/sgx/secs_miscselect.cc	/^constexpr SecsMiscselectBit kAllSecsMiscselectBits[] = {$/;"	m	namespace:asylo::sgx::__anon407	file:
kAllocationSize	./test/misc/malloc_stress_test.cc	/^constexpr size_t kAllocationSize = 10000;$/;"	m	namespace:asylo::__anon196	file:
kAllocationSize	./test/misc/malloc_stress_test.cc	/^constexpr size_t kAllocationSize = 10000;$/;"	m	namespace:asylo::__anon450	file:
kAllocations	./test/misc/malloc_stress_test.cc	/^constexpr size_t kAllocations = 100;$/;"	m	namespace:asylo::__anon196	file:
kAllocations	./test/misc/malloc_stress_test.cc	/^constexpr size_t kAllocations = 100;$/;"	m	namespace:asylo::__anon450	file:
kAttestationDomain	./daemon/identity/attestation_domain_client_test.cc	/^constexpr char kAttestationDomain[] = "A 16-byte string";$/;"	m	namespace:asylo::__anon185	file:
kAttestationDomain	./daemon/identity/attestation_domain_client_test.cc	/^constexpr char kAttestationDomain[] = "A 16-byte string";$/;"	m	namespace:asylo::__anon439	file:
kAttestationDomain	./examples/hello_world/enclave_config.cc	/^constexpr char kAttestationDomain[] = "A 16-byte string";$/;"	v
kAttestationDomain	./examples/redis/redis_enclave_config.cc	/^constexpr char kAttestationDomain[] = "A 16-byte string";$/;"	v
kAttestationDomain	./test/util/enclave_assertion_authority_configs.cc	/^const char kAttestationDomain[] = "A 16-byte string";$/;"	m	namespace:asylo	file:
kAttestationDomainBadChars	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAttestationDomainBadChars[] =$/;"	m	namespace:asylo::__anon188	file:
kAttestationDomainBadChars	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAttestationDomainBadChars[] =$/;"	m	namespace:asylo::__anon442	file:
kAttestationDomainFileName	./daemon/identity/attestation_domain_service_impl_test.cc	/^constexpr char kAttestationDomainFileName[] =$/;"	m	namespace:asylo::__anon187	file:
kAttestationDomainFileName	./daemon/identity/attestation_domain_service_impl_test.cc	/^constexpr char kAttestationDomainFileName[] =$/;"	m	namespace:asylo::__anon441	file:
kAttestationDomainFileName	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAttestationDomainFileName[] =$/;"	m	namespace:asylo::__anon188	file:
kAttestationDomainFileName	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAttestationDomainFileName[] =$/;"	m	namespace:asylo::__anon442	file:
kAttestationDomainHexSize	./daemon/identity/attestation_domain.cc	/^constexpr size_t kAttestationDomainHexSize = 2 * kAttestationDomainSize;$/;"	m	namespace:asylo::__anon186	file:
kAttestationDomainHexSize	./daemon/identity/attestation_domain.cc	/^constexpr size_t kAttestationDomainHexSize = 2 * kAttestationDomainSize;$/;"	m	namespace:asylo::__anon440	file:
kAttestationDomainNameSize	./daemon/identity/attestation_domain.h	/^constexpr size_t kAttestationDomainNameSize = 16;$/;"	m	namespace:asylo
kAttestationDomainSize	./daemon/identity/attestation_domain.cc	/^constexpr size_t kAttestationDomainSize = 16;$/;"	m	namespace:asylo::__anon186	file:
kAttestationDomainSize	./daemon/identity/attestation_domain.cc	/^constexpr size_t kAttestationDomainSize = 16;$/;"	m	namespace:asylo::__anon440	file:
kAttestationDomainTooLong	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAttestationDomainTooLong[] =$/;"	m	namespace:asylo::__anon188	file:
kAttestationDomainTooLong	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAttestationDomainTooLong[] =$/;"	m	namespace:asylo::__anon442	file:
kAttestationDomainTooShort	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAttestationDomainTooShort[] = "FFFF";$/;"	m	namespace:asylo::__anon188	file:
kAttestationDomainTooShort	./daemon/identity/attestation_domain_test.cc	/^constexpr char kAttestationDomainTooShort[] = "FFFF";$/;"	m	namespace:asylo::__anon442	file:
kAuthority1	./identity/assertion_description_util_test.cc	/^constexpr char kAuthority1[] = "Foo Authority";$/;"	m	namespace:asylo::__anon178	file:
kAuthority1	./identity/assertion_description_util_test.cc	/^constexpr char kAuthority1[] = "Foo Authority";$/;"	m	namespace:asylo::__anon432	file:
kAuthority2	./identity/assertion_description_util_test.cc	/^constexpr char kAuthority2[] = "Bar Authority";$/;"	m	namespace:asylo::__anon178	file:
kAuthority2	./identity/assertion_description_util_test.cc	/^constexpr char kAuthority2[] = "Bar Authority";$/;"	m	namespace:asylo::__anon432	file:
kAuthorityType1	./grpc/auth/core/assertion_description_test.cc	/^const char kAuthorityType1[] = "Any";$/;"	m	namespace:asylo::__anon259	file:
kAuthorityType1	./grpc/auth/core/assertion_description_test.cc	/^const char kAuthorityType1[] = "Any";$/;"	m	namespace:asylo::__anon513	file:
kAuthorityType1	./grpc/auth/enclave_auth_context_test.cc	/^constexpr char kAuthorityType1[] = "Good Authority";$/;"	m	namespace:asylo::__anon248	file:
kAuthorityType1	./grpc/auth/enclave_auth_context_test.cc	/^constexpr char kAuthorityType1[] = "Good Authority";$/;"	m	namespace:asylo::__anon502	file:
kAuthorityType2	./grpc/auth/core/assertion_description_test.cc	/^const char kAuthorityType2[] = "SGX Local";$/;"	m	namespace:asylo::__anon259	file:
kAuthorityType2	./grpc/auth/core/assertion_description_test.cc	/^const char kAuthorityType2[] = "SGX Local";$/;"	m	namespace:asylo::__anon513	file:
kAuthorityType2	./grpc/auth/enclave_auth_context_test.cc	/^constexpr char kAuthorityType2[] = "Bad Authority";$/;"	m	namespace:asylo::__anon248	file:
kAuthorityType2	./grpc/auth/enclave_auth_context_test.cc	/^constexpr char kAuthorityType2[] = "Bad Authority";$/;"	m	namespace:asylo::__anon502	file:
kAuthorityType3	./grpc/auth/core/assertion_description_test.cc	/^const char kAuthorityType3[] = "SGX Remote";$/;"	m	namespace:asylo::__anon259	file:
kAuthorityType3	./grpc/auth/core/assertion_description_test.cc	/^const char kAuthorityType3[] = "SGX Remote";$/;"	m	namespace:asylo::__anon513	file:
kAveragePerThreadSelector	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kAveragePerThreadSelector = kSelectorUser + 6;$/;"	m	namespace:asylo::primitives
kBadAdditionalInfo	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kBadAdditionalInfo[] = "Invalid additional info";$/;"	m	namespace:asylo::__anon149	file:
kBadAdditionalInfo	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kBadAdditionalInfo[] = "Invalid additional info";$/;"	m	namespace:asylo::__anon403	file:
kBadAdditionalInfo	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadAdditionalInfo[] = "Invalid additional info";$/;"	m	namespace:asylo::__anon159	file:
kBadAdditionalInfo	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadAdditionalInfo[] = "Invalid additional info";$/;"	m	namespace:asylo::__anon413	file:
kBadAdditionalInfo	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kBadAdditionalInfo[] = "BAD";$/;"	m	namespace:asylo::__anon168	file:
kBadAdditionalInfo	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kBadAdditionalInfo[] = "BAD";$/;"	m	namespace:asylo::__anon422	file:
kBadAuthority	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kBadAuthority[] = "Foobar Assertion Authority";$/;"	m	namespace:asylo::__anon149	file:
kBadAuthority	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kBadAuthority[] = "Foobar Assertion Authority";$/;"	m	namespace:asylo::__anon403	file:
kBadAuthority	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadAuthority[] = "Foobar Assertion Authority";$/;"	m	namespace:asylo::__anon159	file:
kBadAuthority	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadAuthority[] = "Foobar Assertion Authority";$/;"	m	namespace:asylo::__anon413	file:
kBadAuthorityType	./grpc/auth/core/ekep_handshaker_util_test.cc	/^const char kBadAuthorityType[] = "unknown authority";$/;"	m	namespace:asylo::__anon257	file:
kBadAuthorityType	./grpc/auth/core/ekep_handshaker_util_test.cc	/^const char kBadAuthorityType[] = "unknown authority";$/;"	m	namespace:asylo::__anon511	file:
kBadCipherSuite	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr sgx::CipherSuite kBadCipherSuite = sgx::UNKNOWN_CIPHER_SUITE;$/;"	m	namespace:asylo::__anon168	file:
kBadCipherSuite	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr sgx::CipherSuite kBadCipherSuite = sgx::UNKNOWN_CIPHER_SUITE;$/;"	m	namespace:asylo::__anon422	file:
kBadConfig	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kBadConfig[] = "Not a real config";$/;"	m	namespace:asylo::__anon149	file:
kBadConfig	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kBadConfig[] = "Not a real config";$/;"	m	namespace:asylo::__anon403	file:
kBadConfig	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadConfig[] = "Not a real config";$/;"	m	namespace:asylo::__anon159	file:
kBadConfig	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadConfig[] = "Not a real config";$/;"	m	namespace:asylo::__anon413	file:
kBadCpusvn	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kBadCpusvn[] = "BAD";$/;"	m	namespace:asylo::__anon168	file:
kBadCpusvn	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kBadCpusvn[] = "BAD";$/;"	m	namespace:asylo::__anon422	file:
kBadErrorSpace	./util/status_test.cc	/^constexpr char kBadErrorSpace[] = "Foo bar error space";$/;"	m	namespace:asylo::__anon242	file:
kBadErrorSpace	./util/status_test.cc	/^constexpr char kBadErrorSpace[] = "Foo bar error space";$/;"	m	namespace:asylo::__anon496	file:
kBadGroup	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^const int kBadGroup = NID_secp224r1;$/;"	m	namespace:asylo::__anon19	file:
kBadGroup	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^const int kBadGroup = NID_secp224r1;$/;"	m	namespace:asylo::__anon273	file:
kBadKey	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr uint8_t kBadKey[] = "bad key";$/;"	m	namespace:asylo::__anon19	file:
kBadKey	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr uint8_t kBadKey[] = "bad key";$/;"	m	namespace:asylo::__anon273	file:
kBadKey	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr uint8_t kBadKey[] = "bad key";$/;"	m	namespace:asylo::__anon10	file:
kBadKey	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr uint8_t kBadKey[] = "bad key";$/;"	m	namespace:asylo::__anon264	file:
kBadLocalAssertion	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadLocalAssertion[] = "Invalid local assertion";$/;"	m	namespace:asylo::__anon159	file:
kBadLocalAssertion	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadLocalAssertion[] = "Invalid local assertion";$/;"	m	namespace:asylo::__anon413	file:
kBadNonceSize	./crypto/random_nonce_generator_test.cc	/^constexpr size_t kBadNonceSize = 11;$/;"	m	namespace:asylo::__anon18	file:
kBadNonceSize	./crypto/random_nonce_generator_test.cc	/^constexpr size_t kBadNonceSize = 11;$/;"	m	namespace:asylo::__anon272	file:
kBadPublicKeyPem	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kBadPublicKeyPem[] =$/;"	m	namespace:asylo::__anon10	file:
kBadPublicKeyPem	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kBadPublicKeyPem[] =$/;"	m	namespace:asylo::__anon264	file:
kBadReport	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadReport[] = "Invalid report";$/;"	m	namespace:asylo::__anon159	file:
kBadReport	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kBadReport[] = "Invalid report";$/;"	m	namespace:asylo::__anon413	file:
kBadRootName	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kBadRootName[] = "BAD";$/;"	m	namespace:asylo::__anon168	file:
kBadRootName	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kBadRootName[] = "BAD";$/;"	m	namespace:asylo::__anon422	file:
kBlockLength	./platform/crypto/gcmlib/gcm_cryptor.h	/^  const size_t kBlockLength;$/;"	m	class:asylo::platform::crypto::gcmlib::GcmCryptor
kBlockLength	./platform/posix/io/read_write_test.cc	/^constexpr size_t kBlockLength = 128;$/;"	m	namespace:asylo::__anon322	file:
kBlockLength	./platform/posix/io/read_write_test.cc	/^constexpr size_t kBlockLength = 128;$/;"	m	namespace:asylo::__anon68	file:
kBufSize	./platform/common/singleton_test.cc	/^constexpr size_t kBufSize = 1024;$/;"	m	namespace:asylo::__anon112	file:
kBufSize	./platform/common/singleton_test.cc	/^constexpr size_t kBufSize = 1024;$/;"	m	namespace:asylo::__anon366	file:
kBufferSize	./platform/posix/io/epoll_test.cc	/^constexpr size_t kBufferSize = 1024;$/;"	m	namespace:asylo::__anon318	file:
kBufferSize	./platform/posix/io/epoll_test.cc	/^constexpr size_t kBufferSize = 1024;$/;"	m	namespace:asylo::__anon64	file:
kBufferSize	./test/misc/mutex_test.cc	/^const int kBufferSize = 4096;$/;"	m	namespace:asylo::__anon189	file:
kBufferSize	./test/misc/mutex_test.cc	/^const int kBufferSize = 4096;$/;"	m	namespace:asylo::__anon443	file:
kByteBits	./identity/sgx/secs_attributes.cc	/^constexpr size_t kByteBits = 8;$/;"	m	namespace:asylo::sgx::__anon156	file:
kByteBits	./identity/sgx/secs_attributes.cc	/^constexpr size_t kByteBits = 8;$/;"	m	namespace:asylo::sgx::__anon410	file:
kCacheLineSize	./platform/core/atomic.h	/^constexpr size_t kCacheLineSize = 64;$/;"	m	namespace:asylo
kCacheLineSize	./platform/core/trusted_spin_lock.h	/^static_assert(sizeof(TrustedSpinLock) == kCacheLineSize,$/;"	m	namespace:asylo
kCallingProcessBinaryFile	./platform/primitives/sgx/untrusted_sgx.cc	/^constexpr absl::string_view kCallingProcessBinaryFile = "\/proc\/self\/exe";$/;"	m	namespace:asylo::primitives::__anon338	file:
kCallingProcessBinaryFile	./platform/primitives/sgx/untrusted_sgx.cc	/^constexpr absl::string_view kCallingProcessBinaryFile = "\/proc\/self\/exe";$/;"	m	namespace:asylo::primitives::__anon84	file:
kCanonicalErrorSpaceName	./util/error_space.h	/^static constexpr char kCanonicalErrorSpaceName[] =$/;"	m	namespace:asylo::error
kCertificate	./identity/sgx/remote_assertion_util_test.cc	/^constexpr char kCertificate[] = "Certificate";$/;"	m	namespace:asylo::sgx::__anon155	file:
kCertificate	./identity/sgx/remote_assertion_util_test.cc	/^constexpr char kCertificate[] = "Certificate";$/;"	m	namespace:asylo::sgx::__anon409	file:
kCipherBlockLength	./platform/storage/secure/aead_handler.h	/^constexpr size_t kCipherBlockLength = kBlockLength + kTagLength;$/;"	m	namespace:asylo::platform::storage
kClientAdditionalAuthenticatedData	./grpc/auth/test/h2_enclave_security_test.cc	/^constexpr char kClientAdditionalAuthenticatedData[] = "EKEP client";$/;"	m	namespace:asylo::__anon247	file:
kClientAdditionalAuthenticatedData	./grpc/auth/test/h2_enclave_security_test.cc	/^constexpr char kClientAdditionalAuthenticatedData[] = "EKEP client";$/;"	m	namespace:asylo::__anon501	file:
kClientAuthenticatedText	./grpc/auth/core/ekep_crypto.cc	/^constexpr char kClientAuthenticatedText[] = "EKEP Handshake v1: Client Finish";$/;"	m	namespace:asylo::__anon262	file:
kClientAuthenticatedText	./grpc/auth/core/ekep_crypto.cc	/^constexpr char kClientAuthenticatedText[] = "EKEP Handshake v1: Client Finish";$/;"	m	namespace:asylo::__anon516	file:
kClientMsgSuccessStr1	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kClientMsgSuccessStr1[] = "First Client SendMsg is successful.";$/;"	m	namespace:asylo::__anon307	file:
kClientMsgSuccessStr1	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kClientMsgSuccessStr1[] = "First Client SendMsg is successful.";$/;"	m	namespace:asylo::__anon53	file:
kClientMsgSuccessStr2	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kClientMsgSuccessStr2[] = "Second Client SendMsg is successful.";$/;"	m	namespace:asylo::__anon307	file:
kClientMsgSuccessStr2	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kClientMsgSuccessStr2[] = "Second Client SendMsg is successful.";$/;"	m	namespace:asylo::__anon53	file:
kClientName	./test/misc/fail_finalize_enclave_test.cc	/^constexpr char kClientName[] = "client";$/;"	m	namespace:asylo::__anon200	file:
kClientName	./test/misc/fail_finalize_enclave_test.cc	/^constexpr char kClientName[] = "client";$/;"	m	namespace:asylo::__anon454	file:
kClientWriteSuccessStr	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kClientWriteSuccessStr[] = "Client Write is successful.";$/;"	m	namespace:asylo::__anon307	file:
kClientWriteSuccessStr	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kClientWriteSuccessStr[] = "Client Write is successful.";$/;"	m	namespace:asylo::__anon53	file:
kCmacDerivationConstant	./platform/crypto/gcmlib/gcm_cryptor.cc	/^constexpr uint8_t kCmacDerivationConstant[kKeyIdLength] = {$/;"	m	namespace:asylo::platform::crypto::gcmlib::__anon288	file:
kCmacDerivationConstant	./platform/crypto/gcmlib/gcm_cryptor.cc	/^constexpr uint8_t kCmacDerivationConstant[kKeyIdLength] = {$/;"	m	namespace:asylo::platform::crypto::gcmlib::__anon34	file:
kCmacKey	./platform/crypto/gcmlib/gcm_cryptor.h	/^  const GcmCryptorKey kCmacKey;$/;"	m	class:asylo::platform::crypto::gcmlib::GcmCryptor
kCollectStderr	./test/util/output_collector.h	/^constexpr internal::FromStderrTag kCollectStderr;$/;"	m	namespace:asylo
kConfigidSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kConfigidSize = 64;$/;"	m	namespace:asylo::sgx
kConstVal1	./identity/sgx/attributes_util_test.cc	/^constexpr uint64_t kConstVal1 = 0x12345678;$/;"	m	namespace:asylo::sgx::__anon146	file:
kConstVal1	./identity/sgx/attributes_util_test.cc	/^constexpr uint64_t kConstVal1 = 0x12345678;$/;"	m	namespace:asylo::sgx::__anon400	file:
kConstVal2	./identity/sgx/attributes_util_test.cc	/^constexpr uint64_t kConstVal2 = 0x87654321;$/;"	m	namespace:asylo::sgx::__anon146	file:
kConstVal2	./identity/sgx/attributes_util_test.cc	/^constexpr uint64_t kConstVal2 = 0x87654321;$/;"	m	namespace:asylo::sgx::__anon400	file:
kCopyMultipleParamsSelector	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kCopyMultipleParamsSelector = kSelectorUser + 7;$/;"	m	namespace:asylo::primitives
kCounterBufSize	./platform/posix/io/io_context_eventfd.cc	/^constexpr ssize_t kCounterBufSize = sizeof(uint64_t);$/;"	v
kCounterStart	./platform/posix/io/eventfd_test.cc	/^constexpr int kCounterStart = 6;$/;"	m	namespace:asylo::__anon327	file:
kCounterStart	./platform/posix/io/eventfd_test.cc	/^constexpr int kCounterStart = 6;$/;"	m	namespace:asylo::__anon73	file:
kCounterStartMultiThread	./platform/posix/io/eventfd_test.cc	/^constexpr int kCounterStartMultiThread = kNumWorkers \/ 2;$/;"	m	namespace:asylo::__anon327	file:
kCounterStartMultiThread	./platform/posix/io/eventfd_test.cc	/^constexpr int kCounterStartMultiThread = kNumWorkers \/ 2;$/;"	m	namespace:asylo::__anon73	file:
kCountsPerThread	./test/misc/condvar_test.cc	/^  static constexpr int kCountsPerThread = 5000;$/;"	m	class:asylo::__anon194::ProducerConsumerTest	file:
kCountsPerThread	./test/misc/condvar_test.cc	/^  static constexpr int kCountsPerThread = 5000;$/;"	m	class:asylo::__anon448::ProducerConsumerTest	file:
kCountsPerThread	./test/misc/rwlock_test.cc	/^static constexpr int kCountsPerThread = 500;$/;"	m	namespace:asylo::__anon213	file:
kCountsPerThread	./test/misc/rwlock_test.cc	/^static constexpr int kCountsPerThread = 500;$/;"	m	namespace:asylo::__anon467	file:
kCountsPerThread	./test/misc/sem_test.cc	/^  static constexpr int kCountsPerThread = 5000;$/;"	m	class:asylo::__anon205::ProducerConsumerTest	file:
kCountsPerThread	./test/misc/sem_test.cc	/^  static constexpr int kCountsPerThread = 5000;$/;"	m	class:asylo::__anon459::ProducerConsumerTest	file:
kCpuidOpcode	./platform/arch/sgx/trusted/exceptions.cc	/^constexpr uint16_t kCpuidOpcode = 0xA20F;$/;"	m	namespace:__anon28	file:
kCpuidOpcode	./platform/arch/sgx/trusted/exceptions.cc	/^constexpr uint16_t kCpuidOpcode = 0xA20F;$/;"	m	namespace:__anon282	file:
kCpusvnSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kCpusvnSize = 16;$/;"	m	namespace:asylo::sgx
kCustomHostName	./platform/posix/syscalls_test_driver.cc	/^const char *kCustomHostName = "CustomHostName";$/;"	m	namespace:asylo::__anon302	file:
kCustomHostName	./platform/posix/syscalls_test_driver.cc	/^const char *kCustomHostName = "CustomHostName";$/;"	m	namespace:asylo::__anon48	file:
kCustomWorkingDirectory	./platform/posix/syscalls_test_driver.cc	/^const char *kCustomWorkingDirectory = "\/tmp\/testworkingdir";$/;"	m	namespace:asylo::__anon302	file:
kCustomWorkingDirectory	./platform/posix/syscalls_test_driver.cc	/^const char *kCustomWorkingDirectory = "\/tmp\/testworkingdir";$/;"	m	namespace:asylo::__anon48	file:
kData1	./crypto/util/byte_container_view_test.cc	/^constexpr char kData1[] =$/;"	m	namespace:asylo::__anon23	file:
kData1	./crypto/util/byte_container_view_test.cc	/^constexpr char kData1[] =$/;"	m	namespace:asylo::__anon277	file:
kData1	./grpc/auth/core/transcript_test.cc	/^constexpr char kData1[] = "A very uninteresting string.";$/;"	m	namespace:asylo::grpc::auth::__anon261	file:
kData1	./grpc/auth/core/transcript_test.cc	/^constexpr char kData1[] = "A very uninteresting string.";$/;"	m	namespace:asylo::grpc::auth::__anon515	file:
kData2	./crypto/util/byte_container_view_test.cc	/^constexpr char kData2[] = "Mary had a big pig, and it had no fleece";$/;"	m	namespace:asylo::__anon23	file:
kData2	./crypto/util/byte_container_view_test.cc	/^constexpr char kData2[] = "Mary had a big pig, and it had no fleece";$/;"	m	namespace:asylo::__anon277	file:
kData2	./grpc/auth/core/transcript_test.cc	/^constexpr char kData2[] = "Enclave Key Exchange Protocol";$/;"	m	namespace:asylo::grpc::auth::__anon261	file:
kData2	./grpc/auth/core/transcript_test.cc	/^constexpr char kData2[] = "Enclave Key Exchange Protocol";$/;"	m	namespace:asylo::grpc::auth::__anon515	file:
kDataHashHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kDataHashHex[] =$/;"	m	namespace:asylo::__anon141	file:
kDataHashHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kDataHashHex[] =$/;"	m	namespace:asylo::__anon395	file:
kDataHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kDataHex[] = "436f66666565206973206c6966652e0a";$/;"	m	namespace:asylo::__anon141	file:
kDataHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kDataHex[] = "436f66666565206973206c6966652e0a";$/;"	m	namespace:asylo::__anon395	file:
kDataSize	./platform/common/ring_buffer_test.cc	/^constexpr const size_t kDataSize = 4 * 1024 * 1024;$/;"	m	namespace:asylo	file:
kDeadlineMicros	./grpc/util/grpc_server_launcher_test.cc	/^const int64_t kDeadlineMicros = absl::Seconds(10) \/ absl::Microseconds(1);$/;"	m	namespace:asylo::__anon263	file:
kDeadlineMicros	./grpc/util/grpc_server_launcher_test.cc	/^const int64_t kDeadlineMicros = absl::Seconds(10) \/ absl::Microseconds(1);$/;"	m	namespace:asylo::__anon517	file:
kDeadlineMicros	./test/grpc/channel_test.cc	/^const int64_t kDeadlineMicros = absl::Seconds(10) \/ absl::Microseconds(1);$/;"	m	namespace:asylo::__anon224	file:
kDeadlineMicros	./test/grpc/channel_test.cc	/^const int64_t kDeadlineMicros = absl::Seconds(10) \/ absl::Microseconds(1);$/;"	m	namespace:asylo::__anon478	file:
kDeadlineMicros	./test/grpc/client_enclave.cc	/^const int64_t kDeadlineMicros = absl::Seconds(10) \/ absl::Microseconds(1);$/;"	m	namespace:asylo::__anon222	file:
kDeadlineMicros	./test/grpc/client_enclave.cc	/^const int64_t kDeadlineMicros = absl::Seconds(10) \/ absl::Microseconds(1);$/;"	m	namespace:asylo::__anon476	file:
kDefaultDirectory	./util/logging.cc	/^constexpr char kDefaultDirectory[] = "\/tmp\/";$/;"	m	namespace:asylo	file:
kDefaultDoNotCareSecsAttributes	./identity/sgx/secs_attributes.cc	/^constexpr SecsAttributeBit kDefaultDoNotCareSecsAttributes[] = {$/;"	m	namespace:asylo::sgx::__anon156	file:
kDefaultDoNotCareSecsAttributes	./identity/sgx/secs_attributes.cc	/^constexpr SecsAttributeBit kDefaultDoNotCareSecsAttributes[] = {$/;"	m	namespace:asylo::sgx::__anon410	file:
kEkepAuthenticatorSecretSize	./grpc/auth/core/ekep_crypto.h	/^constexpr size_t kEkepAuthenticatorSecretSize = 64;$/;"	m	namespace:asylo
kEkepChallengeSize	./grpc/auth/core/ekep_handshaker.h	/^const uint32_t kEkepChallengeSize = 32;$/;"	m	namespace:asylo
kEkepContext	./identity/null_identity/null_assertion_authority_test.cc	/^const char kEkepContext[] = "EKEP handshake transcript and public key";$/;"	m	namespace:asylo::__anon174	file:
kEkepContext	./identity/null_identity/null_assertion_authority_test.cc	/^const char kEkepContext[] = "EKEP handshake transcript and public key";$/;"	m	namespace:asylo::__anon428	file:
kEkepFrameHeaderSize	./grpc/auth/core/ekep_handshaker.h	/^const uint32_t kEkepFrameHeaderSize = 8;$/;"	m	namespace:asylo
kEkepHkdfSalt	./grpc/auth/core/ekep_crypto.cc	/^constexpr char kEkepHkdfSalt[] = "EKEP Handshake v1";$/;"	m	namespace:asylo::__anon262	file:
kEkepHkdfSalt	./grpc/auth/core/ekep_crypto.cc	/^constexpr char kEkepHkdfSalt[] = "EKEP Handshake v1";$/;"	m	namespace:asylo::__anon516	file:
kEkepHkdfSaltRecordProtocol	./grpc/auth/core/ekep_crypto.cc	/^constexpr char kEkepHkdfSaltRecordProtocol[] = "EKEP Record Protocol v1";$/;"	m	namespace:asylo::__anon262	file:
kEkepHkdfSaltRecordProtocol	./grpc/auth/core/ekep_crypto.cc	/^constexpr char kEkepHkdfSaltRecordProtocol[] = "EKEP Record Protocol v1";$/;"	m	namespace:asylo::__anon516	file:
kEkepMasterSecretSize	./grpc/auth/core/ekep_crypto.h	/^constexpr size_t kEkepMasterSecretSize = 64;$/;"	m	namespace:asylo
kEkepPurposeHex	./identity/additional_authenticated_data_generator.cc	/^const char kEkepPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon177	file:
kEkepPurposeHex	./identity/additional_authenticated_data_generator.cc	/^const char kEkepPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon431	file:
kEkepPurposeHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kEkepPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon141	file:
kEkepPurposeHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kEkepPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon395	file:
kEkepSecretSize	./grpc/auth/core/ekep_crypto.cc	/^constexpr size_t kEkepSecretSize =$/;"	m	namespace:asylo::__anon262	file:
kEkepSecretSize	./grpc/auth/core/ekep_crypto.cc	/^constexpr size_t kEkepSecretSize =$/;"	m	namespace:asylo::__anon516	file:
kEkepUuidHex	./identity/additional_authenticated_data_generator.cc	/^const char kEkepUuidHex[] = "4153594c4f20454b4550000000000000";$/;"	m	namespace:asylo::__anon177	file:
kEkepUuidHex	./identity/additional_authenticated_data_generator.cc	/^const char kEkepUuidHex[] = "4153594c4f20454b4550000000000000";$/;"	m	namespace:asylo::__anon431	file:
kEkepUuidHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kEkepUuidHex[] = "4153594c4f20454b4550000000000000";$/;"	m	namespace:asylo::__anon141	file:
kEkepUuidHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kEkepUuidHex[] = "4153594c4f20454b4550000000000000";$/;"	m	namespace:asylo::__anon395	file:
kEnableAddrReuse	./platform/posix/sockets/socket_server.cc	/^constexpr int kEnableAddrReuse = 1;$/;"	m	namespace:asylo::__anon306	file:
kEnableAddrReuse	./platform/posix/sockets/socket_server.cc	/^constexpr int kEnableAddrReuse = 1;$/;"	m	namespace:asylo::__anon52	file:
kEnclaveName	./bazel/application_wrapper/application_wrapper_driver.cc	/^constexpr char kEnclaveName[] = "application_enclave";$/;"	m	namespace:asylo::__anon181	file:
kEnclaveName	./bazel/application_wrapper/application_wrapper_driver.cc	/^constexpr char kEnclaveName[] = "application_enclave";$/;"	m	namespace:asylo::__anon435	file:
kEnclaveName	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^constexpr char kEnclaveName[] = "enclave";$/;"	m	namespace:asylo::__anon182	file:
kEnclaveName	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^constexpr char kEnclaveName[] = "enclave";$/;"	m	namespace:asylo::__anon436	file:
kEnclaveName	./bazel/test_shim_loader.cc	/^constexpr char kEnclaveName[] = "\/test_shim_enclave";$/;"	m	namespace:__anon179	file:
kEnclaveName	./bazel/test_shim_loader.cc	/^constexpr char kEnclaveName[] = "\/test_shim_enclave";$/;"	m	namespace:__anon433	file:
kEnclaveName	./test/misc/embedded_enclave_test_driver.cc	/^constexpr char kEnclaveName[] = "enclave";$/;"	m	namespace:asylo::__anon195	file:
kEnclaveName	./test/misc/embedded_enclave_test_driver.cc	/^constexpr char kEnclaveName[] = "enclave";$/;"	m	namespace:asylo::__anon449	file:
kEnclaveName	./test/misc/fail_finalize_enclave_test.cc	/^constexpr char kEnclaveName[] = "enclave";$/;"	m	namespace:asylo::__anon200	file:
kEnclaveName	./test/misc/fail_finalize_enclave_test.cc	/^constexpr char kEnclaveName[] = "enclave";$/;"	m	namespace:asylo::__anon454	file:
kEnclavePeerPropertyCount	./grpc/auth/core/enclave_transport_security.cc	/^constexpr int kEnclavePeerPropertyCount = 3;$/;"	m	namespace:asylo::__anon254	file:
kEnclavePeerPropertyCount	./grpc/auth/core/enclave_transport_security.cc	/^constexpr int kEnclavePeerPropertyCount = 3;$/;"	m	namespace:asylo::__anon508	file:
kEntryPointMax	./platform/primitives/util/trusted_runtime_helper.cc	/^static constexpr size_t kEntryPointMax = 4096;$/;"	m	namespace:asylo::primitives::__anon340	file:
kEntryPointMax	./platform/primitives/util/trusted_runtime_helper.cc	/^static constexpr size_t kEntryPointMax = 4096;$/;"	m	namespace:asylo::primitives::__anon86	file:
kEpilogue	./platform/system_call/generate_sysno.cc	/^constexpr char kEpilogue[] = R"($/;"	v
kEqual	./identity/sgx/tcb.h	/^  kEqual,$/;"	m	class:asylo::sgx::PartialOrder
kErrorMessage	./util/statusor_test.cc	/^constexpr char kErrorMessage[] = "Invalid argument";$/;"	m	namespace:asylo::__anon231	file:
kErrorMessage	./util/statusor_test.cc	/^constexpr char kErrorMessage[] = "Invalid argument";$/;"	m	namespace:asylo::__anon485	file:
kErrorMessage1	./util/status_test.cc	/^constexpr char kErrorMessage1[] = "Bad foo argument";$/;"	m	namespace:asylo::__anon242	file:
kErrorMessage1	./util/status_test.cc	/^constexpr char kErrorMessage1[] = "Bad foo argument";$/;"	m	namespace:asylo::__anon496	file:
kErrorMessage2	./util/status_test.cc	/^constexpr char kErrorMessage2[] = "Internal foobar error";$/;"	m	namespace:asylo::__anon242	file:
kErrorMessage2	./util/status_test.cc	/^constexpr char kErrorMessage2[] = "Internal foobar error";$/;"	m	namespace:asylo::__anon496	file:
kErrorString	./test/misc/error_propagation_enclave.cc	/^constexpr char kErrorString[] = "Secret error message";$/;"	m	namespace:asylo	file:
kErrorString	./test/misc/error_propagation_test.cc	/^constexpr char kErrorString[] = "Secret error message";$/;"	m	namespace:asylo::__anon207	file:
kErrorString	./test/misc/error_propagation_test.cc	/^constexpr char kErrorString[] = "Secret error message";$/;"	m	namespace:asylo::__anon461	file:
kEventBufSize	./platform/posix/io/inotify_test.cc	/^constexpr size_t kEventBufSize = 4096;$/;"	m	namespace:asylo::__anon321	file:
kEventBufSize	./platform/posix/io/inotify_test.cc	/^constexpr size_t kEventBufSize = 4096;$/;"	m	namespace:asylo::__anon67	file:
kExpectedReportdata	./identity/sgx/pce_util_test.cc	/^constexpr char kExpectedReportdata[] =$/;"	m	namespace:asylo::sgx::__anon151	file:
kExpectedReportdata	./identity/sgx/pce_util_test.cc	/^constexpr char kExpectedReportdata[] =$/;"	m	namespace:asylo::sgx::__anon405	file:
kExpectedResult	./test/misc/mutex_test.cc	/^const int kExpectedResult = kNumThreads * kNumLoops;$/;"	m	namespace:asylo::__anon189	file:
kExpectedResult	./test/misc/mutex_test.cc	/^const int kExpectedResult = kNumThreads * kNumLoops;$/;"	m	namespace:asylo::__anon443	file:
kExpectedTotalCounts	./test/misc/condvar_test.cc	/^  static constexpr int kExpectedTotalCounts =$/;"	m	class:asylo::__anon194::ProducerConsumerTest	file:
kExpectedTotalCounts	./test/misc/condvar_test.cc	/^  static constexpr int kExpectedTotalCounts =$/;"	m	class:asylo::__anon448::ProducerConsumerTest	file:
kExponentBigEndianHex	./identity/sgx/pce_util_test.cc	/^constexpr char kExponentBigEndianHex[] = "00010001";$/;"	m	namespace:asylo::sgx::__anon151	file:
kExponentBigEndianHex	./identity/sgx/pce_util_test.cc	/^constexpr char kExponentBigEndianHex[] = "00010001";$/;"	m	namespace:asylo::sgx::__anon405	file:
kExternalHelloHandler	./platform/primitives/examples/hello_enclave.h	/^static constexpr uint64_t kExternalHelloHandler = kSelectorUser + 1;$/;"	m	namespace:asylo::primitives
kFileHashLength	./platform/storage/secure/aead_handler.h	/^constexpr int64_t kFileHashLength = 16;$/;"	m	namespace:asylo::platform::storage
kFileHeaderLength	./platform/storage/secure/enclave_storage_secure_test.cc	/^  const int64_t kFileHeaderLength = kFileHashLength + sizeof(size_t);$/;"	m	class:asylo::__anon100::EnclaveStorageSecureTest	file:
kFileHeaderLength	./platform/storage/secure/enclave_storage_secure_test.cc	/^  const int64_t kFileHeaderLength = kFileHashLength + sizeof(size_t);$/;"	m	class:asylo::__anon354::EnclaveStorageSecureTest	file:
kFinalized	./platform/core/trusted_application.h	/^    kFinalized,$/;"	m	class:asylo::TrustedApplication::State
kFinalizing	./platform/core/trusted_application.h	/^    kFinalizing,$/;"	m	class:asylo::TrustedApplication::State
kFirstRepresentableSecond	./platform/common/time_util.cc	/^constexpr int64_t kFirstRepresentableSecond = INT64_MIN \/ kNanosecondsPerSecond;$/;"	m	namespace:asylo::__anon108	file:
kFirstRepresentableSecond	./platform/common/time_util.cc	/^constexpr int64_t kFirstRepresentableSecond = INT64_MIN \/ kNanosecondsPerSecond;$/;"	m	namespace:asylo::__anon362	file:
kFirstSelector	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kFirstSelector = primitives::kSelectorUser + 1;$/;"	m	namespace:asylo::host_call
kFmspcSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kFmspcSize = 6;$/;"	m	namespace:asylo::sgx
kFrameSizeLimit	./grpc/auth/core/ekep_handshaker.h	/^  static constexpr size_t kFrameSizeLimit = 1 << 30;  \/\/ 1 GB$/;"	m	class:asylo::EkepHandshaker
kFreeListCapacity	./platform/core/untrusted_cache_malloc.h	/^  static constexpr size_t kFreeListCapacity = 1024;$/;"	m	class:asylo::UntrustedCacheMalloc
kGcmDerivationConstant	./platform/crypto/gcmlib/gcm_cryptor.cc	/^constexpr uint8_t kGcmDerivationConstant[kKeyIdLength] = {$/;"	m	namespace:asylo::platform::crypto::gcmlib::__anon288	file:
kGcmDerivationConstant	./platform/crypto/gcmlib/gcm_cryptor.cc	/^constexpr uint8_t kGcmDerivationConstant[kKeyIdLength] = {$/;"	m	namespace:asylo::platform::crypto::gcmlib::__anon34	file:
kGcmKey	./platform/crypto/gcmlib/gcm_cryptor.h	/^  const GcmCryptorKey kGcmKey;$/;"	m	class:asylo::platform::crypto::gcmlib::GcmCryptor
kGetPceInfoPurposeHex	./identity/additional_authenticated_data_generator.cc	/^const char kGetPceInfoPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon177	file:
kGetPceInfoPurposeHex	./identity/additional_authenticated_data_generator.cc	/^const char kGetPceInfoPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon431	file:
kGetPceInfoPurposeHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kGetPceInfoPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon141	file:
kGetPceInfoPurposeHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kGetPceInfoPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon395	file:
kGetPceInfoUuidHex	./identity/additional_authenticated_data_generator.cc	/^const char kGetPceInfoUuidHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon177	file:
kGetPceInfoUuidHex	./identity/additional_authenticated_data_generator.cc	/^const char kGetPceInfoUuidHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon431	file:
kGetPceInfoUuidHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kGetPceInfoUuidHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon141	file:
kGetPceInfoUuidHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kGetPceInfoUuidHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon395	file:
kGreater	./identity/sgx/tcb.h	/^  kGreater,$/;"	m	class:asylo::sgx::PartialOrder
kHardcodedPkcs15PaddingHex	./identity/sgx/fake_enclave.cc	/^constexpr char kHardcodedPkcs15PaddingHex[] =$/;"	m	namespace:asylo::sgx::__anon169	file:
kHardcodedPkcs15PaddingHex	./identity/sgx/fake_enclave.cc	/^constexpr char kHardcodedPkcs15PaddingHex[] =$/;"	m	namespace:asylo::sgx::__anon423	file:
kHardwareKeySize	./identity/sgx/hardware_interface.h	/^constexpr size_t kHardwareKeySize = AES_BLOCK_SIZE;$/;"	m	namespace:asylo::sgx
kHashBin1	./identity/util/sha256_hash_util_test.cc	/^constexpr char kHashBin1[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,$/;"	m	namespace:asylo::__anon171	file:
kHashBin1	./identity/util/sha256_hash_util_test.cc	/^constexpr char kHashBin1[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,$/;"	m	namespace:asylo::__anon425	file:
kHashBin2	./identity/util/sha256_hash_util_test.cc	/^constexpr char kHashBin2[] = {0x0a, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,$/;"	m	namespace:asylo::__anon171	file:
kHashBin2	./identity/util/sha256_hash_util_test.cc	/^constexpr char kHashBin2[] = {0x0a, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,$/;"	m	namespace:asylo::__anon425	file:
kHashHex1	./identity/util/sha256_hash_util_test.cc	/^constexpr char kHashHex1[] =$/;"	m	namespace:asylo::__anon171	file:
kHashHex1	./identity/util/sha256_hash_util_test.cc	/^constexpr char kHashHex1[] =$/;"	m	namespace:asylo::__anon425	file:
kHashHexShort	./identity/util/sha256_hash_util_test.cc	/^constexpr char kHashHexShort[] =$/;"	m	namespace:asylo::__anon171	file:
kHashHexShort	./identity/util/sha256_hash_util_test.cc	/^constexpr char kHashHexShort[] =$/;"	m	namespace:asylo::__anon425	file:
kHeld	./platform/core/untrusted_mutex.cc	/^constexpr int32_t kHeld = 1;  \/\/ The futex is locked and zero threads are$/;"	m	namespace:asylo::__anon137	file:
kHeld	./platform/core/untrusted_mutex.cc	/^constexpr int32_t kHeld = 1;  \/\/ The futex is locked and zero threads are$/;"	m	namespace:asylo::__anon391	file:
kHello	./platform/primitives/examples/hello_driver.cc	/^static constexpr char kHello[] = "Hello";$/;"	m	namespace:asylo::primitives	file:
kHelloEnclaveSelector	./platform/primitives/examples/hello_enclave.h	/^static constexpr uint64_t kHelloEnclaveSelector = kSelectorUser + 2;$/;"	m	namespace:asylo::primitives
kIdentitiesTestPoolSize	./grpc/auth/core/assertion_description_test.cc	/^const int kIdentitiesTestPoolSize = 3;$/;"	m	namespace:asylo::__anon259	file:
kIdentitiesTestPoolSize	./grpc/auth/core/assertion_description_test.cc	/^const int kIdentitiesTestPoolSize = 3;$/;"	m	namespace:asylo::__anon513	file:
kIdentity	./grpc/auth/enclave_auth_context_test.cc	/^constexpr char kIdentity[] = "Identity";$/;"	m	namespace:asylo::__anon248	file:
kIdentity	./grpc/auth/enclave_auth_context_test.cc	/^constexpr char kIdentity[] = "Identity";$/;"	m	namespace:asylo::__anon502	file:
kIn	./platform/system_call/generate_tables.cc	/^enum ConventionFlag { kIn = 1, kOut = 2 };$/;"	e	enum:ConventionFlag	file:
kIn6AddrNumBytes	./platform/common/bridge_proto_serializer.h	/^constexpr int kIn6AddrNumBytes = 16;$/;"	m	namespace:asylo
kIncomparable	./identity/sgx/tcb.h	/^  kIncomparable,$/;"	m	class:asylo::sgx::PartialOrder
kInput	./test/grpc/channel_test.cc	/^constexpr char kInput[] = "foobar";$/;"	m	namespace:asylo::__anon224	file:
kInput	./test/grpc/channel_test.cc	/^constexpr char kInput[] = "foobar";$/;"	m	namespace:asylo::__anon478	file:
kInputStreamBlockSize	./grpc/auth/core/transcript_test.cc	/^const int kInputStreamBlockSize = 4;$/;"	m	namespace:asylo::grpc::auth::__anon261	file:
kInputStreamBlockSize	./grpc/auth/core/transcript_test.cc	/^const int kInputStreamBlockSize = 4;$/;"	m	namespace:asylo::grpc::auth::__anon515	file:
kInsideEnclave	./util/logging.cc	/^constexpr bool kInsideEnclave = true;$/;"	m	namespace:asylo	file:
kIntElement	./util/statusor_test.cc	/^const int kIntElement = 42;$/;"	m	namespace:asylo::__anon231	file:
kIntElement	./util/statusor_test.cc	/^const int kIntElement = 42;$/;"	m	namespace:asylo::__anon485	file:
kIntelSgxRootCaCertificate	./identity/sgx/intel_certs/intel_sgx_root_ca_cert.cc	/^const char *const kIntelSgxRootCaCertificate =$/;"	m	namespace:asylo	file:
kInternalInitializing	./platform/core/trusted_application.h	/^    kInternalInitializing,$/;"	m	class:asylo::TrustedApplication::State
kInvalidAssertion	./identity/null_identity/null_assertion_authority_test.cc	/^const char kInvalidAssertion[] = "assertion";$/;"	m	namespace:asylo::__anon174	file:
kInvalidAssertion	./identity/null_identity/null_assertion_authority_test.cc	/^const char kInvalidAssertion[] = "assertion";$/;"	m	namespace:asylo::__anon428	file:
kInvalidAssertionOfferAdditionalInfo	./identity/null_identity/null_assertion_authority_test.cc	/^const char kInvalidAssertionOfferAdditionalInfo[] = "offer info";$/;"	m	namespace:asylo::__anon174	file:
kInvalidAssertionOfferAdditionalInfo	./identity/null_identity/null_assertion_authority_test.cc	/^const char kInvalidAssertionOfferAdditionalInfo[] = "offer info";$/;"	m	namespace:asylo::__anon428	file:
kInvalidAssertionRequestAdditionalInfo	./identity/null_identity/null_assertion_authority_test.cc	/^const char kInvalidAssertionRequestAdditionalInfo[] = "request info";$/;"	m	namespace:asylo::__anon174	file:
kInvalidAssertionRequestAdditionalInfo	./identity/null_identity/null_assertion_authority_test.cc	/^const char kInvalidAssertionRequestAdditionalInfo[] = "request info";$/;"	m	namespace:asylo::__anon428	file:
kInvalidAuthorityType	./identity/null_identity/null_assertion_authority_test.cc	/^const char kInvalidAuthorityType[] = "SGX Local";$/;"	m	namespace:asylo::__anon174	file:
kInvalidAuthorityType	./identity/null_identity/null_assertion_authority_test.cc	/^const char kInvalidAuthorityType[] = "SGX Local";$/;"	m	namespace:asylo::__anon428	file:
kInvalidAuthorityType	./identity/sgx/code_identity_test_util.cc	/^constexpr char kInvalidAuthorityType[] = "INVALID_AUTHORITY";$/;"	m	namespace:asylo::sgx::__anon142	file:
kInvalidAuthorityType	./identity/sgx/code_identity_test_util.cc	/^constexpr char kInvalidAuthorityType[] = "INVALID_AUTHORITY";$/;"	m	namespace:asylo::sgx::__anon396	file:
kInvalidOffset	./platform/storage/utils/offset_translator.h	/^  static constexpr off_t kInvalidOffset = -1;$/;"	m	class:asylo::platform::storage::OffsetTranslator
kInvalidOffset	./platform/storage/utils/offset_translator_test.cc	/^constexpr off_t kInvalidOffset = OffsetTranslator::kInvalidOffset;$/;"	m	namespace:asylo::__anon350	file:
kInvalidOffset	./platform/storage/utils/offset_translator_test.cc	/^constexpr off_t kInvalidOffset = OffsetTranslator::kInvalidOffset;$/;"	m	namespace:asylo::__anon96	file:
kInvalidSignatureHex	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kInvalidSignatureHex[] =$/;"	m	namespace:asylo::__anon19	file:
kInvalidSignatureHex	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kInvalidSignatureHex[] =$/;"	m	namespace:asylo::__anon273	file:
kInvalidString	./identity/sgx/code_identity_test_util.cc	/^constexpr char kInvalidString[] = "Invalid String";$/;"	m	namespace:asylo::sgx::__anon142	file:
kInvalidString	./identity/sgx/code_identity_test_util.cc	/^constexpr char kInvalidString[] = "Invalid String";$/;"	m	namespace:asylo::sgx::__anon396	file:
kInvalidString	./identity/sgx/code_identity_util_test.cc	/^constexpr char kInvalidString[] = "Invalid String";$/;"	m	namespace:asylo::sgx::__anon152	file:
kInvalidString	./identity/sgx/code_identity_util_test.cc	/^constexpr char kInvalidString[] = "Invalid String";$/;"	m	namespace:asylo::sgx::__anon406	file:
kInvalidThread	./platform/primitives/trusted_runtime.h	/^constexpr uint64_t kInvalidThread = 0;$/;"	v
kIsAttyHandler	./platform/host_call/exit_handler_constants.h	/^static constexpr uint64_t kIsAttyHandler = primitives::kSelectorHostCall + 1;$/;"	m	namespace:asylo::host_call
kIsvextprodidSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kIsvextprodidSize = 16;$/;"	m	namespace:asylo::sgx
kIsvfamilyidSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kIsvfamilyidSize = 16;$/;"	m	namespace:asylo::sgx
kIterationCount	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^constexpr int kIterationCount = 6000;$/;"	m	namespace:asylo::system_call::__anon123	file:
kIterationCount	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^constexpr int kIterationCount = 6000;$/;"	m	namespace:asylo::system_call::__anon377	file:
kIterations	./util/thread_test.cc	/^  static constexpr size_t kIterations = 64;$/;"	m	class:asylo::__anon233::ThreadTest	file:
kIterations	./util/thread_test.cc	/^  static constexpr size_t kIterations = 64;$/;"	m	class:asylo::__anon487::ThreadTest	file:
kKeyIdCycle	./platform/crypto/gcmlib/gcm_cryptor.h	/^  static constexpr size_t kKeyIdCycle = 256;$/;"	m	class:asylo::platform::crypto::gcmlib::GcmCryptor
kKeyIdCycle	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^constexpr size_t kKeyIdCycle = 256;$/;"	m	namespace:asylo::__anon287	file:
kKeyIdCycle	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^constexpr size_t kKeyIdCycle = 256;$/;"	m	namespace:asylo::__anon33	file:
kKeyIdLength	./platform/crypto/gcmlib/gcm_cryptor.h	/^constexpr size_t kKeyIdLength = 32;$/;"	m	namespace:asylo::platform::crypto::gcmlib
kKeyIdLength	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^constexpr size_t kKeyIdLength = 32;$/;"	m	namespace:asylo::__anon287	file:
kKeyIdLength	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^constexpr size_t kKeyIdLength = 32;$/;"	m	namespace:asylo::__anon33	file:
kKeyLength	./platform/crypto/gcmlib/gcm_cryptor.h	/^constexpr size_t kKeyLength = 32;$/;"	m	namespace:asylo::platform::crypto::gcmlib
kKeyLength	./platform/posix/io/read_write_test.cc	/^constexpr size_t kKeyLength = 32;$/;"	m	namespace:asylo::__anon322	file:
kKeyLength	./platform/posix/io/read_write_test.cc	/^constexpr size_t kKeyLength = 32;$/;"	m	namespace:asylo::__anon68	file:
kKeypolicyAllBits	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyAllBits =$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeypolicyConfigidBitMask	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyConfigidBitMask = 0x8;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeypolicyIsvextprodidBitMask	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyIsvextprodidBitMask = 0x20;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeypolicyIsvfamilyidBitMask	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyIsvfamilyidBitMask = 0x10;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeypolicyKssBits	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyKssBits =$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeypolicyMrenclaveBitMask	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyMrenclaveBitMask = 0x1;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeypolicyMrsignerBitMask	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyMrsignerBitMask = 0x2;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeypolicyNoisvprodidBitMask	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyNoisvprodidBitMask = 0x4;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeypolicyReservedBits	./identity/sgx/identity_key_management_structs.h	/^constexpr uint16_t kKeypolicyReservedBits = ~kKeypolicyAllBits;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kKeyrequestKeyidSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kKeyrequestKeyidSize = 32;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kLargeSize	./crypto/util/bytes_test.cc	/^constexpr size_t kLargeSize = 13;$/;"	m	namespace:asylo::__anon24	file:
kLargeSize	./crypto/util/bytes_test.cc	/^constexpr size_t kLargeSize = 13;$/;"	m	namespace:asylo::__anon278	file:
kLargeValue	./crypto/util/bytes_test.cc	/^constexpr uint8_t kLargeValue[kLargeSize] = {'a', 'b', 'c', 'd', 'e', 'f', 'g',$/;"	m	namespace:asylo::__anon24	file:
kLargeValue	./crypto/util/bytes_test.cc	/^constexpr uint8_t kLargeValue[kLargeSize] = {'a', 'b', 'c', 'd', 'e', 'f', 'g',$/;"	m	namespace:asylo::__anon278	file:
kLastRepresentableSecond	./platform/common/time_util.cc	/^constexpr int64_t kLastRepresentableSecond = INT64_MAX \/ kNanosecondsPerSecond;$/;"	m	namespace:asylo::__anon108	file:
kLastRepresentableSecond	./platform/common/time_util.cc	/^constexpr int64_t kLastRepresentableSecond = INT64_MAX \/ kNanosecondsPerSecond;$/;"	m	namespace:asylo::__anon362	file:
kLess	./identity/sgx/tcb.h	/^  kLess,$/;"	m	class:asylo::sgx::PartialOrder
kLocalAttestationDomain1	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kLocalAttestationDomain1[] = "A 16-byte string";$/;"	m	namespace:asylo::__anon149	file:
kLocalAttestationDomain1	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kLocalAttestationDomain1[] = "A 16-byte string";$/;"	m	namespace:asylo::__anon403	file:
kLocalAttestationDomain1	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kLocalAttestationDomain1[] = "A 16-byte string";$/;"	m	namespace:asylo::__anon159	file:
kLocalAttestationDomain1	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kLocalAttestationDomain1[] = "A 16-byte string";$/;"	m	namespace:asylo::__anon413	file:
kLocalAttestationDomain2	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kLocalAttestationDomain2[] = "A superb string!";$/;"	m	namespace:asylo::__anon149	file:
kLocalAttestationDomain2	./identity/sgx/sgx_local_assertion_generator_test.cc	/^constexpr char kLocalAttestationDomain2[] = "A superb string!";$/;"	m	namespace:asylo::__anon403	file:
kLocalAttestationDomain2	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kLocalAttestationDomain2[] = "A superb string!";$/;"	m	namespace:asylo::__anon159	file:
kLocalAttestationDomain2	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^constexpr char kLocalAttestationDomain2[] = "A superb string!";$/;"	m	namespace:asylo::__anon413	file:
kLocalIpv6AddrStr	./platform/posix/sockets/socket_test_transmit.h	/^constexpr char kLocalIpv6AddrStr[] = "::1";$/;"	m	namespace:asylo
kLocalhostAddress	./grpc/util/grpc_server_launcher_test.cc	/^constexpr char kLocalhostAddress[] = "[::1]";$/;"	m	namespace:asylo::__anon263	file:
kLocalhostAddress	./grpc/util/grpc_server_launcher_test.cc	/^constexpr char kLocalhostAddress[] = "[::1]";$/;"	m	namespace:asylo::__anon517	file:
kLockedValue	./platform/common/spin_lock.h	/^  static constexpr uint64_t kLockedValue = 0x1;$/;"	m	class:SpinLock
kLogOrigin	./platform/posix/sockets/socket_client.cc	/^constexpr const char kLogOrigin[] = "WITHIN ENCLAVE: ";$/;"	m	namespace:asylo::__anon312	file:
kLogOrigin	./platform/posix/sockets/socket_client.cc	/^constexpr const char kLogOrigin[] = "WITHIN ENCLAVE: ";$/;"	m	namespace:asylo::__anon58	file:
kLogOrigin	./platform/posix/sockets/socket_server.cc	/^constexpr const char kLogOrigin[] = "WITHIN ENCLAVE: ";$/;"	m	namespace:asylo::__anon306	file:
kLogOrigin	./platform/posix/sockets/socket_server.cc	/^constexpr const char kLogOrigin[] = "WITHIN ENCLAVE: ";$/;"	m	namespace:asylo::__anon52	file:
kLogWarningRegex	./identity/sgx/tcb_info_from_json_test.cc	/^constexpr char kLogWarningRegex[] = "  WARNING  ";$/;"	m	namespace:asylo::sgx::__anon150	file:
kLogWarningRegex	./identity/sgx/tcb_info_from_json_test.cc	/^constexpr char kLogWarningRegex[] = "  WARNING  ";$/;"	m	namespace:asylo::sgx::__anon404	file:
kLongAll5	./identity/sgx/code_identity_util_test.cc	/^constexpr uint32_t kLongAll5 = 0x55555555;$/;"	m	namespace:asylo::sgx::__anon152	file:
kLongAll5	./identity/sgx/code_identity_util_test.cc	/^constexpr uint32_t kLongAll5 = 0x55555555;$/;"	m	namespace:asylo::sgx::__anon406	file:
kLongAllF	./identity/sgx/code_identity_util_test.cc	/^constexpr uint32_t kLongAllF = 0xFFFFFFFF;$/;"	m	namespace:asylo::sgx::__anon152	file:
kLongAllF	./identity/sgx/code_identity_util_test.cc	/^constexpr uint32_t kLongAllF = 0xFFFFFFFF;$/;"	m	namespace:asylo::sgx::__anon406	file:
kLongEnoughForThreadSwitch	./util/mutex_guarded_test.cc	/^constexpr absl::Duration kLongEnoughForThreadSwitch = absl::Milliseconds(500);$/;"	m	namespace:asylo::__anon234	file:
kLongEnoughForThreadSwitch	./util/mutex_guarded_test.cc	/^constexpr absl::Duration kLongEnoughForThreadSwitch = absl::Milliseconds(500);$/;"	m	namespace:asylo::__anon488	file:
kLongLongAll5	./identity/sgx/code_identity_util_test.cc	/^constexpr uint64_t kLongLongAll5 = 0x5555555555555555ULL;$/;"	m	namespace:asylo::sgx::__anon152	file:
kLongLongAll5	./identity/sgx/code_identity_util_test.cc	/^constexpr uint64_t kLongLongAll5 = 0x5555555555555555ULL;$/;"	m	namespace:asylo::sgx::__anon406	file:
kLongLongAllA	./identity/sgx/code_identity_util_test.cc	/^constexpr uint64_t kLongLongAllA = 0xAAAAAAAAAAAAAAAAULL;$/;"	m	namespace:asylo::sgx::__anon152	file:
kLongLongAllA	./identity/sgx/code_identity_util_test.cc	/^constexpr uint64_t kLongLongAllA = 0xAAAAAAAAAAAAAAAAULL;$/;"	m	namespace:asylo::sgx::__anon406	file:
kLongLongAllF	./identity/sgx/code_identity_util_test.cc	/^constexpr uint64_t kLongLongAllF = 0xFFFFFFFFFFFFFFFFULL;$/;"	m	namespace:asylo::sgx::__anon152	file:
kLongLongAllF	./identity/sgx/code_identity_util_test.cc	/^constexpr uint64_t kLongLongAllF = 0xFFFFFFFFFFFFFFFFULL;$/;"	m	namespace:asylo::sgx::__anon406	file:
kLongLongAllF	./identity/sgx/secs_attributes_test.cc	/^constexpr uint64_t kLongLongAllF = 0xFFFFFFFFFFFFFFFFULL;$/;"	m	namespace:asylo::sgx::__anon164	file:
kLongLongAllF	./identity/sgx/secs_attributes_test.cc	/^constexpr uint64_t kLongLongAllF = 0xFFFFFFFFFFFFFFFFULL;$/;"	m	namespace:asylo::sgx::__anon418	file:
kLoopCount	./platform/common/singleton_test.cc	/^constexpr size_t kLoopCount = 1024 * 128;$/;"	m	namespace:asylo::__anon112	file:
kLoopCount	./platform/common/singleton_test.cc	/^constexpr size_t kLoopCount = 1024 * 128;$/;"	m	namespace:asylo::__anon366	file:
kManyThreads	./platform/common/spin_lock_test.cc	/^constexpr int kManyThreads = 128;$/;"	m	namespace:__anon104	file:
kManyThreads	./platform/common/spin_lock_test.cc	/^constexpr int kManyThreads = 128;$/;"	m	namespace:__anon358	file:
kManyThreads	./platform/core/test/lock_test.cc	/^constexpr int kManyThreads = 12;$/;"	m	namespace:asylo::__anon130	file:
kManyThreads	./platform/core/test/lock_test.cc	/^constexpr int kManyThreads = 12;$/;"	m	namespace:asylo::__anon384	file:
kManyThreads	./platform/primitives/x86/spin_lock_test.cc	/^constexpr int kManyThreads = 128;$/;"	m	namespace:asylo::__anon333	file:
kManyThreads	./platform/primitives/x86/spin_lock_test.cc	/^constexpr int kManyThreads = 128;$/;"	m	namespace:asylo::__anon79	file:
kMaxAttestationDomainReadAttempts	./daemon/identity/attestation_domain.cc	/^constexpr int kMaxAttestationDomainReadAttempts = 5;$/;"	m	namespace:asylo::__anon186	file:
kMaxAttestationDomainReadAttempts	./daemon/identity/attestation_domain.cc	/^constexpr int kMaxAttestationDomainReadAttempts = 5;$/;"	m	namespace:asylo::__anon440	file:
kMaxCannonnameLen	./platform/common/bridge_proto_serializer.cc	/^constexpr int kMaxCannonnameLen = 4096;$/;"	m	namespace:asylo::__anon109	file:
kMaxCannonnameLen	./platform/common/bridge_proto_serializer.cc	/^constexpr int kMaxCannonnameLen = 4096;$/;"	m	namespace:asylo::__anon363	file:
kMaxCounter	./platform/posix/io/eventfd_test.cc	/^constexpr uint64_t kMaxCounter = 0xfffffffffffffffe;$/;"	m	namespace:asylo::__anon327	file:
kMaxCounter	./platform/posix/io/eventfd_test.cc	/^constexpr uint64_t kMaxCounter = 0xfffffffffffffffe;$/;"	m	namespace:asylo::__anon73	file:
kMaxCounter	./platform/posix/io/io_context_eventfd.cc	/^constexpr uint64_t kMaxCounter = 0xfffffffffffffffe;$/;"	v
kMaxEnclaveCreateAttempts	./platform/primitives/sgx/untrusted_sgx.cc	/^constexpr int kMaxEnclaveCreateAttempts = 5;$/;"	m	namespace:asylo::primitives::__anon338	file:
kMaxEnclaveCreateAttempts	./platform/primitives/sgx/untrusted_sgx.cc	/^constexpr int kMaxEnclaveCreateAttempts = 5;$/;"	m	namespace:asylo::primitives::__anon84	file:
kMaxErrorCode	./util/posix_error_space_test.cc	/^constexpr int kMaxErrorCode = 1000;$/;"	m	namespace:asylo::error::__anon235	file:
kMaxErrorCode	./util/posix_error_space_test.cc	/^constexpr int kMaxErrorCode = 1000;$/;"	m	namespace:asylo::error::__anon489	file:
kMaxMessageSize	./examples/quickstart/demo_enclave.cc	/^constexpr size_t kMaxMessageSize = 1 << 16;$/;"	m	namespace:asylo::__anon245	file:
kMaxMessageSize	./examples/quickstart/demo_enclave.cc	/^constexpr size_t kMaxMessageSize = 1 << 16;$/;"	m	namespace:asylo::__anon499	file:
kMaxMessageSize	./examples/quickstart/solution/demo_enclave.cc	/^constexpr size_t kMaxMessageSize = 1 << 16;$/;"	m	namespace:asylo::__anon246	file:
kMaxMessageSize	./examples/quickstart/solution/demo_enclave.cc	/^constexpr size_t kMaxMessageSize = 1 << 16;$/;"	m	namespace:asylo::__anon500	file:
kMaxOddBeforeOverflow	./test/util/test_binary.cc	/^constexpr uint64_t kMaxOddBeforeOverflow =$/;"	m	namespace:__anon220	file:
kMaxOddBeforeOverflow	./test/util/test_binary.cc	/^constexpr uint64_t kMaxOddBeforeOverflow =$/;"	m	namespace:__anon474	file:
kMaxOpenFiles	./platform/posix/io/io_manager.h	/^  static const constexpr int kMaxOpenFiles = 1024;$/;"	m	class:asylo::io::IOManager
kMaxQueueLength	./test/misc/condvar_test.cc	/^  static constexpr int kMaxQueueLength = 50;$/;"	m	class:asylo::__anon194::ProducerConsumerTest	file:
kMaxQueueLength	./test/misc/condvar_test.cc	/^  static constexpr int kMaxQueueLength = 50;$/;"	m	class:asylo::__anon448::ProducerConsumerTest	file:
kMaxSignalsInMask	./platform/posix/signal/signal_manager.cc	/^constexpr int kMaxSignalsInMask = sizeof(sigset_t) * 8;$/;"	m	namespace:asylo::__anon294	file:
kMaxSignalsInMask	./platform/posix/signal/signal_manager.cc	/^constexpr int kMaxSignalsInMask = sizeof(sigset_t) * 8;$/;"	m	namespace:asylo::__anon40	file:
kMaxSocketNameLen	./platform/posix/sockets/domain_socket_test_driver.cc	/^constexpr int kMaxSocketNameLen = 108;$/;"	m	namespace:asylo::__anon310	file:
kMaxSocketNameLen	./platform/posix/sockets/domain_socket_test_driver.cc	/^constexpr int kMaxSocketNameLen = 108;$/;"	m	namespace:asylo::__anon56	file:
kMaxSupportedCpuidLeaf	./platform/arch/sgx/trusted/exceptions.cc	/^constexpr int kMaxSupportedCpuidLeaf = 7;$/;"	m	namespace:__anon28	file:
kMaxSupportedCpuidLeaf	./platform/arch/sgx/trusted/exceptions.cc	/^constexpr int kMaxSupportedCpuidLeaf = 7;$/;"	m	namespace:__anon282	file:
kMemBlockName	./platform/core/shared_name_kind.h	/^  kMemBlockName,$/;"	e	enum:SharedNameKind
kMessage	./platform/posix/select_test.cc	/^constexpr const char *kMessage = "Pipe message";$/;"	m	namespace:asylo::__anon304	file:
kMessage	./platform/posix/select_test.cc	/^constexpr const char *kMessage = "Pipe message";$/;"	m	namespace:asylo::__anon50	file:
kMessageMagic	./platform/system_call/message.h	/^constexpr uint64_t kMessageMagic = 0x1006c6163737973;$/;"	m	namespace:asylo::system_call
kMessageMax	./platform/primitives/primitive_status.h	/^  static constexpr size_t kMessageMax = 1024;$/;"	m	class:asylo::primitives::PrimitiveStatus
kMessageSize	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^const int kMessageSize = 1000;$/;"	m	namespace:asylo::__anon19	file:
kMessageSize	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^const int kMessageSize = 1000;$/;"	m	namespace:asylo::__anon273	file:
kMessageSizeLimit	./crypto/aes_gcm_siv_test.cc	/^constexpr size_t kMessageSizeLimit = 1 << 16;$/;"	m	namespace:asylo::__anon26	file:
kMessageSizeLimit	./crypto/aes_gcm_siv_test.cc	/^constexpr size_t kMessageSizeLimit = 1 << 16;$/;"	m	namespace:asylo::__anon280	file:
kMessengerClientName	./grpc/util/grpc_server_launcher_test.cc	/^constexpr char kMessengerClientName[] = "GrpcServerLauncherTest";$/;"	m	namespace:asylo::__anon263	file:
kMessengerClientName	./grpc/util/grpc_server_launcher_test.cc	/^constexpr char kMessengerClientName[] = "GrpcServerLauncherTest";$/;"	m	namespace:asylo::__anon517	file:
kMicrosecondsPerSecond	./platform/common/time_util.cc	/^constexpr int64_t kMicrosecondsPerSecond = INT64_C(1000000);$/;"	m	namespace:asylo::__anon108	file:
kMicrosecondsPerSecond	./platform/common/time_util.cc	/^constexpr int64_t kMicrosecondsPerSecond = INT64_C(1000000);$/;"	m	namespace:asylo::__anon362	file:
kMinErrorCode	./util/posix_error_space_test.cc	/^constexpr int kMinErrorCode = 1;$/;"	m	namespace:asylo::error::__anon235	file:
kMinErrorCode	./util/posix_error_space_test.cc	/^constexpr int kMinErrorCode = 1;$/;"	m	namespace:asylo::error::__anon489	file:
kMiscselectAllBits	./identity/sgx/secs_miscselect.h	/^constexpr uint32_t kMiscselectAllBits = kMiscselectExinfoMask;$/;"	m	namespace:asylo::sgx
kMiscselectExinfoMask	./identity/sgx/secs_miscselect.h	/^constexpr uint32_t kMiscselectExinfoMask =$/;"	m	namespace:asylo::sgx
kMiscselectReservedBits	./identity/sgx/secs_miscselect.h	/^constexpr uint32_t kMiscselectReservedBits = ~kMiscselectAllBits;$/;"	m	namespace:asylo::sgx
kModulusBigEndianHex	./identity/sgx/pce_util_test.cc	/^constexpr char kModulusBigEndianHex[] =$/;"	m	namespace:asylo::sgx::__anon151	file:
kModulusBigEndianHex	./identity/sgx/pce_util_test.cc	/^constexpr char kModulusBigEndianHex[] =$/;"	m	namespace:asylo::sgx::__anon405	file:
kMovedByAssignmentErrorMsg	./util/status.cc	/^constexpr char kMovedByAssignmentErrorMsg[] = "";$/;"	m	namespace:asylo	file:
kMovedByConstructorErrorMsg	./util/status.cc	/^constexpr char kMovedByConstructorErrorMsg[] = "";$/;"	m	namespace:asylo	file:
kMustBeSetAttributes	./identity/sgx/secs_attributes.cc	/^constexpr SecsAttributeBit kMustBeSetAttributes[] = {$/;"	m	namespace:asylo::sgx::__anon156	file:
kMustBeSetAttributes	./identity/sgx/secs_attributes.cc	/^constexpr SecsAttributeBit kMustBeSetAttributes[] = {$/;"	m	namespace:asylo::sgx::__anon410	file:
kName	./test/grpc/enclave_communication_test.cc	/^constexpr char kName[] = "Mellanie Rescorai";$/;"	m	namespace:asylo::__anon221	file:
kName	./test/grpc/enclave_communication_test.cc	/^constexpr char kName[] = "Mellanie Rescorai";$/;"	m	namespace:asylo::__anon475	file:
kName	./test/grpc/enclave_insecure_server_test.cc	/^constexpr char kName[] = "test";$/;"	m	namespace:asylo::test::__anon223	file:
kName	./test/grpc/enclave_insecure_server_test.cc	/^constexpr char kName[] = "test";$/;"	m	namespace:asylo::test::__anon477	file:
kName	./test/grpc/enclave_secure_server_test.cc	/^constexpr char kName[] = "test";$/;"	m	namespace:asylo::test::__anon225	file:
kName	./test/grpc/enclave_secure_server_test.cc	/^constexpr char kName[] = "test";$/;"	m	namespace:asylo::test::__anon479	file:
kNanosecondsPerMicrosecond	./platform/common/time_util.cc	/^constexpr int64_t kNanosecondsPerMicrosecond = INT64_C(1000);$/;"	m	namespace:asylo::__anon108	file:
kNanosecondsPerMicrosecond	./platform/common/time_util.cc	/^constexpr int64_t kNanosecondsPerMicrosecond = INT64_C(1000);$/;"	m	namespace:asylo::__anon362	file:
kNanosecondsPerMicrosecond	./platform/common/time_util_test.cc	/^const int64_t kNanosecondsPerMicrosecond = 1000;$/;"	m	namespace:asylo::__anon111	file:
kNanosecondsPerMicrosecond	./platform/common/time_util_test.cc	/^const int64_t kNanosecondsPerMicrosecond = 1000;$/;"	m	namespace:asylo::__anon365	file:
kNanosecondsPerSecond	./platform/common/time_util.cc	/^constexpr int64_t kNanosecondsPerSecond = INT64_C(1000000000);$/;"	m	namespace:asylo::__anon108	file:
kNanosecondsPerSecond	./platform/common/time_util.cc	/^constexpr int64_t kNanosecondsPerSecond = INT64_C(1000000000);$/;"	m	namespace:asylo::__anon362	file:
kNonSyscallFirstSelector	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kNonSyscallFirstSelector = primitives::kSelectorUser + 1024;$/;"	m	namespace:asylo::host_call
kNonceLength	./platform/crypto/gcmlib/gcm_cryptor.h	/^  static constexpr size_t kNonceLength = 12;$/;"	m	class:asylo::platform::crypto::gcmlib::GcmCryptor
kNonceLength	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^constexpr size_t kNonceLength = 12;$/;"	m	namespace:asylo::__anon287	file:
kNonceLength	./platform/crypto/gcmlib/gcm_cryptor_test.cc	/^constexpr size_t kNonceLength = 12;$/;"	m	namespace:asylo::__anon33	file:
kNoncePartSize	./crypto/random_nonce_generator_test.cc	/^constexpr size_t kNoncePartSize = 4;$/;"	m	namespace:asylo::__anon18	file:
kNoncePartSize	./crypto/random_nonce_generator_test.cc	/^constexpr size_t kNoncePartSize = 4;$/;"	m	namespace:asylo::__anon272	file:
kNotRegisteredSelector	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kNotRegisteredSelector = kSelectorUser + 100;$/;"	m	namespace:asylo::primitives
kNullAssertion	./identity/null_identity/null_identity_constants.cc	/^const char *const kNullAssertion = "EKEP Null Assertion";$/;"	m	namespace:asylo	file:
kNullAssertionAuthority	./identity/null_identity/null_identity_constants.cc	/^const char *const kNullAssertionAuthority = "Any";$/;"	m	namespace:asylo	file:
kNullAssertionOfferAdditionalInfo	./identity/null_identity/null_identity_constants.cc	/^const char *const kNullAssertionOfferAdditionalInfo =$/;"	m	namespace:asylo	file:
kNullAssertionRequestAdditionalInfo	./identity/null_identity/null_identity_constants.cc	/^const char *const kNullAssertionRequestAdditionalInfo =$/;"	m	namespace:asylo	file:
kNullAuthorizationAuthority	./identity/null_identity/null_identity_constants.cc	/^const char *const kNullAuthorizationAuthority = kNullAssertionAuthority;$/;"	m	namespace:asylo	file:
kNullIdentity	./identity/null_identity/null_identity_constants.cc	/^const char *const kNullIdentity = "Null Identity";$/;"	m	namespace:asylo	file:
kNumFlagsBits	./identity/sgx/secs_attributes.cc	/^constexpr size_t kNumFlagsBits =$/;"	m	namespace:asylo::sgx::__anon156	file:
kNumFlagsBits	./identity/sgx/secs_attributes.cc	/^constexpr size_t kNumFlagsBits =$/;"	m	namespace:asylo::sgx::__anon410	file:
kNumIterations	./platform/primitives/parameter_stack_test.cc	/^constexpr size_t kNumIterations = 64;$/;"	m	namespace:asylo::primitives::__anon331	file:
kNumIterations	./platform/primitives/parameter_stack_test.cc	/^constexpr size_t kNumIterations = 64;$/;"	m	namespace:asylo::primitives::__anon77	file:
kNumIterations	./util/cleansing_allocator_test.cc	/^const size_t kNumIterations = 1000;$/;"	m	namespace:asylo::__anon239	file:
kNumIterations	./util/cleansing_allocator_test.cc	/^const size_t kNumIterations = 1000;$/;"	m	namespace:asylo::__anon493	file:
kNumLoops	./test/misc/mutex_test.cc	/^const int kNumLoops = 50000;$/;"	m	namespace:asylo::__anon189	file:
kNumLoops	./test/misc/mutex_test.cc	/^const int kNumLoops = 50000;$/;"	m	namespace:asylo::__anon443	file:
kNumMsgs	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr int kNumMsgs = 2;$/;"	m	namespace:asylo::__anon307	file:
kNumMsgs	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr int kNumMsgs = 2;$/;"	m	namespace:asylo::__anon53	file:
kNumParams	./platform/primitives/parameter_stack_test.cc	/^constexpr size_t kNumParams = 256;$/;"	m	namespace:asylo::primitives::__anon331	file:
kNumParams	./platform/primitives/parameter_stack_test.cc	/^constexpr size_t kNumParams = 256;$/;"	m	namespace:asylo::primitives::__anon77	file:
kNumParams	./platform/primitives/util/message_test.cc	/^constexpr size_t kNumParams = 10;$/;"	m	namespace:asylo::primitives::__anon342	file:
kNumParams	./platform/primitives/util/message_test.cc	/^constexpr size_t kNumParams = 10;$/;"	m	namespace:asylo::primitives::__anon88	file:
kNumPipes	./platform/posix/io/epoll_test.cc	/^constexpr size_t kNumPipes = 8;$/;"	m	namespace:asylo::__anon318	file:
kNumPipes	./platform/posix/io/epoll_test.cc	/^constexpr size_t kNumPipes = 8;$/;"	m	namespace:asylo::__anon64	file:
kNumProducerThreads	./test/misc/condvar_test.cc	/^  static constexpr int kNumProducerThreads = 8;$/;"	m	class:asylo::__anon194::ProducerConsumerTest	file:
kNumProducerThreads	./test/misc/condvar_test.cc	/^  static constexpr int kNumProducerThreads = 8;$/;"	m	class:asylo::__anon448::ProducerConsumerTest	file:
kNumSecsAttributeBits	./identity/sgx/secs_attributes.cc	/^constexpr size_t kNumSecsAttributeBits = kNumFlagsBits + kNumXfrmBits;$/;"	m	namespace:asylo::sgx::__anon156	file:
kNumSecsAttributeBits	./identity/sgx/secs_attributes.cc	/^constexpr size_t kNumSecsAttributeBits = kNumFlagsBits + kNumXfrmBits;$/;"	m	namespace:asylo::sgx::__anon410	file:
kNumThreads	./platform/common/singleton_test.cc	/^constexpr size_t kNumThreads = 8;$/;"	m	namespace:asylo::__anon112	file:
kNumThreads	./platform/common/singleton_test.cc	/^constexpr size_t kNumThreads = 8;$/;"	m	namespace:asylo::__anon366	file:
kNumThreads	./platform/posix/io/read_write_multithread_test.cc	/^constexpr int kNumThreads = 9;$/;"	m	namespace:asylo::__anon329	file:
kNumThreads	./platform/posix/io/read_write_multithread_test.cc	/^constexpr int kNumThreads = 9;$/;"	m	namespace:asylo::__anon75	file:
kNumThreads	./test/misc/condvar_test.cc	/^  static constexpr int kNumThreads = 8;$/;"	m	class:asylo::__anon194::BroadcastTest	file:
kNumThreads	./test/misc/condvar_test.cc	/^  static constexpr int kNumThreads = 8;$/;"	m	class:asylo::__anon448::BroadcastTest	file:
kNumThreads	./test/misc/malloc_stress_test.cc	/^constexpr size_t kNumThreads = 5;$/;"	m	namespace:asylo::__anon196	file:
kNumThreads	./test/misc/malloc_stress_test.cc	/^constexpr size_t kNumThreads = 5;$/;"	m	namespace:asylo::__anon450	file:
kNumThreads	./test/misc/mutex_test.cc	/^const int kNumThreads = 8;$/;"	m	namespace:asylo::__anon189	file:
kNumThreads	./test/misc/mutex_test.cc	/^const int kNumThreads = 8;$/;"	m	namespace:asylo::__anon443	file:
kNumThreads	./test/misc/rwlock_test.cc	/^static constexpr int kNumThreads = 5;$/;"	m	namespace:asylo::__anon213	file:
kNumThreads	./test/misc/rwlock_test.cc	/^static constexpr int kNumThreads = 5;$/;"	m	namespace:asylo::__anon467	file:
kNumThreads	./test/misc/sem_test.cc	/^  static constexpr int kNumThreads = 4;$/;"	m	class:asylo::__anon205::ProducerConsumerTest	file:
kNumThreads	./test/misc/sem_test.cc	/^  static constexpr int kNumThreads = 4;$/;"	m	class:asylo::__anon459::ProducerConsumerTest	file:
kNumThreads	./util/mutex_guarded_test.cc	/^constexpr int kNumThreads = 100;$/;"	m	namespace:asylo::__anon234	file:
kNumThreads	./util/mutex_guarded_test.cc	/^constexpr int kNumThreads = 100;$/;"	m	namespace:asylo::__anon488	file:
kNumWorkers	./platform/posix/io/eventfd_test.cc	/^constexpr int kNumWorkers = 6;$/;"	m	namespace:asylo::__anon327	file:
kNumWorkers	./platform/posix/io/eventfd_test.cc	/^constexpr int kNumWorkers = 6;$/;"	m	namespace:asylo::__anon73	file:
kNumXfrmBits	./identity/sgx/secs_attributes.cc	/^constexpr size_t kNumXfrmBits =$/;"	m	namespace:asylo::sgx::__anon156	file:
kNumXfrmBits	./identity/sgx/secs_attributes.cc	/^constexpr size_t kNumXfrmBits =$/;"	m	namespace:asylo::sgx::__anon410	file:
kNumberOfGeneratedNonces	./crypto/random_nonce_generator_test.cc	/^constexpr size_t kNumberOfGeneratedNonces = 21;$/;"	m	namespace:asylo::__anon18	file:
kNumberOfGeneratedNonces	./crypto/random_nonce_generator_test.cc	/^constexpr size_t kNumberOfGeneratedNonces = 21;$/;"	m	namespace:asylo::__anon272	file:
kOut	./platform/system_call/generate_tables.cc	/^enum ConventionFlag { kIn = 1, kOut = 2 };$/;"	e	enum:ConventionFlag	file:
kOwnerEpochSize	./identity/sgx/fake_enclave.h	/^constexpr size_t kOwnerEpochSize = 16;$/;"	m	namespace:asylo::sgx
kPageSize	./platform/posix/mman.cc	/^constexpr size_t kPageSize = 4096;$/;"	v
kPageSize	./platform/primitives/sim/runtime_syscalls.c	/^static const size_t kPageSize = 4096;$/;"	v	file:
kParameterMax	./platform/system_call/metadata.h	/^constexpr int kParameterMax = 6;$/;"	m	namespace:asylo::system_call
kPceIdMaxValue	./identity/sgx/platform_provisioning.cc	/^const uint32_t kPceIdMaxValue = std::numeric_limits<uint16_t>::max();$/;"	m	namespace:asylo::sgx	file:
kPceSignReportPurposeHex	./identity/additional_authenticated_data_generator.cc	/^const char kPceSignReportPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon177	file:
kPceSignReportPurposeHex	./identity/additional_authenticated_data_generator.cc	/^const char kPceSignReportPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon431	file:
kPceSignReportPurposeHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kPceSignReportPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon141	file:
kPceSignReportPurposeHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kPceSignReportPurposeHex[] = "00000000000000000000000000000000";$/;"	m	namespace:asylo::__anon395	file:
kPceSignReportUuidHex	./identity/additional_authenticated_data_generator.cc	/^const char kPceSignReportUuidHex[] = "4153594c4f205349474e5245504f5254";$/;"	m	namespace:asylo::__anon177	file:
kPceSignReportUuidHex	./identity/additional_authenticated_data_generator.cc	/^const char kPceSignReportUuidHex[] = "4153594c4f205349474e5245504f5254";$/;"	m	namespace:asylo::__anon431	file:
kPceSignReportUuidHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kPceSignReportUuidHex[] = "4153594c4f205349474e5245504f5254";$/;"	m	namespace:asylo::__anon141	file:
kPceSignReportUuidHex	./identity/additional_authenticated_data_generator_test.cc	/^const char kPceSignReportUuidHex[] = "4153594c4f205349474e5245504f5254";$/;"	m	namespace:asylo::__anon395	file:
kPceSvnMaxValue	./identity/sgx/platform_provisioning.cc	/^const uint32_t kPceSvnMaxValue = std::numeric_limits<uint16_t>::max();$/;"	m	namespace:asylo::sgx	file:
kPkcs15PaddingSize	./identity/sgx/fake_enclave.h	/^constexpr size_t kPkcs15PaddingSize = 352;$/;"	m	namespace:asylo::sgx
kPlaintext	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kPlaintext[] = "secret message";$/;"	m	namespace:asylo::__anon10	file:
kPlaintext	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kPlaintext[] = "secret message";$/;"	m	namespace:asylo::__anon264	file:
kPlaintextSize	./crypto/aes_gcm_siv_test.cc	/^constexpr size_t kPlaintextSize = 23;$/;"	m	namespace:asylo::__anon26	file:
kPlaintextSize	./crypto/aes_gcm_siv_test.cc	/^constexpr size_t kPlaintextSize = 23;$/;"	m	namespace:asylo::__anon280	file:
kPoolEntrySize	./platform/core/untrusted_cache_malloc.h	/^  static constexpr size_t kPoolEntrySize = 4096;$/;"	m	class:asylo::UntrustedCacheMalloc
kPoolIncrement	./platform/core/untrusted_cache_malloc.h	/^  static constexpr size_t kPoolIncrement = 1024;$/;"	m	class:asylo::UntrustedCacheMalloc
kPortMessageRegex	./examples/grpc_server/grpc_server_test.cc	/^constexpr char kPortMessageRegex[] = "Server started on port [0-9]+";$/;"	v
kPpidSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kPpidSize = 16;$/;"	m	namespace:asylo::sgx
kPreShutdownWait	./grpc/util/grpc_server_launcher_test.cc	/^constexpr absl::Duration kPreShutdownWait = absl::Milliseconds(100);$/;"	m	namespace:asylo::__anon263	file:
kPreShutdownWait	./grpc/util/grpc_server_launcher_test.cc	/^constexpr absl::Duration kPreShutdownWait = absl::Milliseconds(100);$/;"	m	namespace:asylo::__anon517	file:
kPrintableSecsAttributeBitNames	./identity/sgx/secs_attributes.cc	/^std::pair<SecsAttributeBit, const char *> kPrintableSecsAttributeBitNames[] = {$/;"	m	namespace:asylo::sgx::__anon156	file:
kPrintableSecsAttributeBitNames	./identity/sgx/secs_attributes.cc	/^std::pair<SecsAttributeBit, const char *> kPrintableSecsAttributeBitNames[] = {$/;"	m	namespace:asylo::sgx::__anon410	file:
kPrologue	./platform/system_call/generate_sysno.cc	/^constexpr char kPrologue[] = R"($/;"	v
kQueued	./platform/core/untrusted_mutex.cc	/^constexpr int32_t kQueued = 2;  \/\/ The futex is locked and there may be threads$/;"	m	namespace:asylo::__anon137	file:
kQueued	./platform/core/untrusted_mutex.cc	/^constexpr int32_t kQueued = 2;  \/\/ The futex is locked and there may be threads$/;"	m	namespace:asylo::__anon391	file:
kRandomPath	./platform/posix/io/random_devices.h	/^  static constexpr const char *const kRandomPath = "\/dev\/random";$/;"	m	class:asylo::RandomPathHandler
kRdtscOpcode	./platform/arch/sgx/trusted/exceptions.cc	/^constexpr uint16_t kRdtscOpcode = 0x310F;$/;"	m	namespace:__anon28	file:
kRdtscOpcode	./platform/arch/sgx/trusted/exceptions.cc	/^constexpr uint16_t kRdtscOpcode = 0x310F;$/;"	m	namespace:__anon282	file:
kRead	./platform/posix/io/epoll_test.cc	/^constexpr int kRead = 0;$/;"	m	namespace:asylo::__anon318	file:
kRead	./platform/posix/io/epoll_test.cc	/^constexpr int kRead = 0;$/;"	m	namespace:asylo::__anon64	file:
kRead	./platform/posix/select_test.cc	/^constexpr int kRead = 0;$/;"	m	namespace:asylo::__anon304	file:
kRead	./platform/posix/select_test.cc	/^constexpr int kRead = 0;$/;"	m	namespace:asylo::__anon50	file:
kRemoteAssertionVersion	./identity/sgx/remote_assertion_util.cc	/^constexpr char kRemoteAssertionVersion[] = "Asylo SGX Remote Assertion v1";$/;"	m	namespace:asylo::sgx::__anon144	file:
kRemoteAssertionVersion	./identity/sgx/remote_assertion_util.cc	/^constexpr char kRemoteAssertionVersion[] = "Asylo SGX Remote Assertion v1";$/;"	m	namespace:asylo::sgx::__anon398	file:
kReplaceText	./util/file_mapping_test.cc	/^constexpr char kReplaceText[] = "Merol";$/;"	m	namespace:asylo::__anon243	file:
kReplaceText	./util/file_mapping_test.cc	/^constexpr char kReplaceText[] = "Merol";$/;"	m	namespace:asylo::__anon497	file:
kReportKeyidSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kReportKeyidSize = 32;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kReportdataSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kReportdataSize = 64;$/;"	m	class:asylo::sgx::KeyrequestKeyname
kReportdataSize	./identity/sgx/identity_key_management_structs.h	/^static_assert(sizeof(Reportdata) == kReportdataSize,$/;"	m	class:asylo::sgx::KeyrequestKeyname
kRequiredSealingAttributesMask	./identity/sgx/fake_enclave.h	/^constexpr SecsAttributeSet kRequiredSealingAttributesMask = {0x3, 0x0};$/;"	m	namespace:asylo::sgx
kResult1	./crypto/sha256_hash_test.cc	/^constexpr char kResult1[] =$/;"	m	namespace:asylo::__anon16	file:
kResult1	./crypto/sha256_hash_test.cc	/^constexpr char kResult1[] =$/;"	m	namespace:asylo::__anon270	file:
kResult2	./crypto/sha256_hash_test.cc	/^constexpr char kResult2[] =$/;"	m	namespace:asylo::__anon16	file:
kResult2	./crypto/sha256_hash_test.cc	/^constexpr char kResult2[] =$/;"	m	namespace:asylo::__anon270	file:
kRsa1024PrivateKeyDer	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kRsa1024PrivateKeyDer[] =$/;"	m	namespace:asylo::__anon10	file:
kRsa1024PrivateKeyDer	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kRsa1024PrivateKeyDer[] =$/;"	m	namespace:asylo::__anon264	file:
kRsa1024PublicKeyPem	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kRsa1024PublicKeyPem[] =$/;"	m	namespace:asylo::__anon10	file:
kRsa1024PublicKeyPem	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kRsa1024PublicKeyPem[] =$/;"	m	namespace:asylo::__anon264	file:
kRsa2048PublicKeyPem	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kRsa2048PublicKeyPem[] =$/;"	m	namespace:asylo::__anon10	file:
kRsa2048PublicKeyPem	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kRsa2048PublicKeyPem[] =$/;"	m	namespace:asylo::__anon264	file:
kRsa3072ModulusSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kRsa3072ModulusSize = 384;$/;"	m	namespace:asylo::sgx
kRsa3072PublicKeyPem	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kRsa3072PublicKeyPem[] =$/;"	m	namespace:asylo::__anon10	file:
kRsa3072PublicKeyPem	./crypto/rsa_oaep_encryption_key_test.cc	/^constexpr char kRsa3072PublicKeyPem[] =$/;"	m	namespace:asylo::__anon264	file:
kRsa3072SerializedExponentSize	./identity/sgx/pce_util.cc	/^const size_t kRsa3072SerializedExponentSize = 4;$/;"	m	namespace:asylo::sgx	file:
kRunning	./platform/core/trusted_application.h	/^    kRunning,$/;"	m	class:asylo::TrustedApplication::State
kSealAes128GcmKeySize	./grpc/auth/core/ekep_crypto.h	/^constexpr size_t kSealAes128GcmKeySize = 16;$/;"	m	namespace:asylo
kSecretMessage	./identity/sgx/pce_util_test.cc	/^constexpr char kSecretMessage[] = "secret message";$/;"	m	namespace:asylo::sgx::__anon151	file:
kSecretMessage	./identity/sgx/pce_util_test.cc	/^constexpr char kSecretMessage[] = "secret message";$/;"	m	namespace:asylo::sgx::__anon405	file:
kSectionName	./bazel/application_wrapper/application_wrapper_driver.cc	/^constexpr char kSectionName[] = "enclave";$/;"	m	namespace:asylo::__anon181	file:
kSectionName	./bazel/application_wrapper/application_wrapper_driver.cc	/^constexpr char kSectionName[] = "enclave";$/;"	m	namespace:asylo::__anon435	file:
kSecureBlockLength	./platform/storage/secure/aead_handler.h	/^constexpr size_t kSecureBlockLength = kCipherBlockLength + kTokenLength;$/;"	m	namespace:asylo::platform::storage
kSecureTestText	./platform/posix/io/read_write_test.cc	/^const char *kSecureTestText =$/;"	m	namespace:asylo::__anon322	file:
kSecureTestText	./platform/posix/io/read_write_test.cc	/^const char *kSecureTestText =$/;"	m	namespace:asylo::__anon68	file:
kSelectorAsyloDonateThread	./platform/primitives/primitives.h	/^static constexpr uint64_t kSelectorAsyloDonateThread = 3;$/;"	m	namespace:asylo::primitives
kSelectorAsyloFini	./platform/primitives/primitives.h	/^static constexpr uint64_t kSelectorAsyloFini = 4;$/;"	m	namespace:asylo::primitives
kSelectorAsyloInit	./platform/primitives/primitives.h	/^static constexpr uint64_t kSelectorAsyloInit = 1;$/;"	m	namespace:asylo::primitives
kSelectorAsyloInvalid	./platform/primitives/primitives.h	/^static constexpr uint64_t kSelectorAsyloInvalid = 0;$/;"	m	namespace:asylo::primitives
kSelectorAsyloRun	./platform/primitives/primitives.h	/^static constexpr uint64_t kSelectorAsyloRun = 2;$/;"	m	namespace:asylo::primitives
kSelectorHostCall	./platform/primitives/primitives.h	/^static constexpr uint64_t kSelectorHostCall = 112;$/;"	m	namespace:asylo::primitives
kSelectorUser	./platform/primitives/primitives.h	/^static constexpr uint64_t kSelectorUser = 128;$/;"	m	namespace:asylo::primitives
kServerAdditionalAuthenticatedData	./grpc/auth/test/h2_enclave_security_test.cc	/^constexpr char kServerAdditionalAuthenticatedData[] = "EKEP server";$/;"	m	namespace:asylo::__anon247	file:
kServerAdditionalAuthenticatedData	./grpc/auth/test/h2_enclave_security_test.cc	/^constexpr char kServerAdditionalAuthenticatedData[] = "EKEP server";$/;"	m	namespace:asylo::__anon501	file:
kServerAddress	./examples/grpc_server/grpc_server_driver.cc	/^constexpr char kServerAddress[] = "[::1]";$/;"	v
kServerAuthenticatedText	./grpc/auth/core/ekep_crypto.cc	/^constexpr char kServerAuthenticatedText[] = "EKEP Handshake v1: Server Finish";$/;"	m	namespace:asylo::__anon262	file:
kServerAuthenticatedText	./grpc/auth/core/ekep_crypto.cc	/^constexpr char kServerAuthenticatedText[] = "EKEP Handshake v1: Server Finish";$/;"	m	namespace:asylo::__anon516	file:
kServerMsgSuccessStr1	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kServerMsgSuccessStr1[] = "First Server RecvMsg is successful.";$/;"	m	namespace:asylo::__anon307	file:
kServerMsgSuccessStr1	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kServerMsgSuccessStr1[] = "First Server RecvMsg is successful.";$/;"	m	namespace:asylo::__anon53	file:
kServerMsgSuccessStr2	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kServerMsgSuccessStr2[] = "Second Server RecvMsg is successful.";$/;"	m	namespace:asylo::__anon307	file:
kServerMsgSuccessStr2	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kServerMsgSuccessStr2[] = "Second Server RecvMsg is successful.";$/;"	m	namespace:asylo::__anon53	file:
kServerWriteSuccessStr	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kServerWriteSuccessStr[] = "Server Write is successful.";$/;"	m	namespace:asylo::__anon307	file:
kServerWriteSuccessStr	./platform/posix/sockets/socket_test_transmit.cc	/^constexpr char kServerWriteSuccessStr[] = "Server Write is successful.";$/;"	m	namespace:asylo::__anon53	file:
kSgxAuthorizationAuthority	./identity/sgx/code_identity_constants.cc	/^const char *const kSgxAuthorizationAuthority = "SGX";$/;"	m	namespace:asylo::sgx	file:
kSgxLocalAssertionAuthority	./identity/sgx/code_identity_constants.cc	/^const char *const kSgxLocalAssertionAuthority = "SGX Local";$/;"	m	namespace:asylo::sgx	file:
kSgxLocalSecretSealerRootName	./identity/sgx/local_secret_sealer_helpers.cc	/^const char *const kSgxLocalSecretSealerRootName = "SGX";$/;"	m	namespace:asylo::sgx::internal	file:
kSgxMacSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kSgxMacSize = AES_BLOCK_SIZE;$/;"	m	namespace:asylo::sgx
kSgxRemoteAssertionAuthority	./identity/sgx/code_identity_constants.cc	/^const char *const kSgxRemoteAssertionAuthority = "SGX Remote";$/;"	m	namespace:asylo::sgx	file:
kSha256Size	./identity/util/sha256_hash_util.h	/^constexpr uint32_t kSha256Size = 32;$/;"	m	namespace:asylo
kSigstructHeaderSize	./identity/sgx/identity_key_management_structs.h	/^constexpr int kSigstructHeaderSize = 16;$/;"	m	namespace:asylo::sgx
kSimulatorHeapSize	./platform/primitives/sim/trusted_sim.cc	/^constexpr size_t kSimulatorHeapSize = 128 * 1024 * 1024;$/;"	m	namespace:asylo::primitives::__anon345	file:
kSimulatorHeapSize	./platform/primitives/sim/trusted_sim.cc	/^constexpr size_t kSimulatorHeapSize = 128 * 1024 * 1024;$/;"	m	namespace:asylo::primitives::__anon91	file:
kSinZeroPadSize	./platform/posix/syscalls_test_driver.cc	/^const int kSinZeroPadSize = 8;$/;"	m	namespace:asylo::__anon302	file:
kSinZeroPadSize	./platform/posix/syscalls_test_driver.cc	/^const int kSinZeroPadSize = 8;$/;"	m	namespace:asylo::__anon48	file:
kSize	./crypto/util/bytes_test.cc	/^constexpr size_t kSize = 11;  \/\/ Size of 11 is chosen as it is not an integer$/;"	m	namespace:asylo::__anon24	file:
kSize	./crypto/util/bytes_test.cc	/^constexpr size_t kSize = 11;  \/\/ Size of 11 is chosen as it is not an integer$/;"	m	namespace:asylo::__anon278	file:
kSize1	./crypto/util/byte_container_view_test.cc	/^constexpr size_t kSize1 = sizeof(kData1) - 1;$/;"	m	namespace:asylo::__anon23	file:
kSize1	./crypto/util/byte_container_view_test.cc	/^constexpr size_t kSize1 = sizeof(kData1) - 1;$/;"	m	namespace:asylo::__anon277	file:
kSleepDur	./platform/posix/io/eventfd_test.cc	/^constexpr int kSleepDur = 256;$/;"	m	namespace:asylo::__anon327	file:
kSleepDur	./platform/posix/io/eventfd_test.cc	/^constexpr int kSleepDur = 256;$/;"	m	namespace:asylo::__anon73	file:
kSleepDur	./platform/posix/io/inotify_test.cc	/^constexpr size_t kSleepDur = 100;$/;"	m	namespace:asylo::__anon321	file:
kSleepDur	./platform/posix/io/inotify_test.cc	/^constexpr size_t kSleepDur = 100;$/;"	m	namespace:asylo::__anon67	file:
kSmallPipeSize	./platform/posix/pipe_test.cc	/^constexpr int kSmallPipeSize = 4096;$/;"	m	namespace:asylo::__anon301	file:
kSmallPipeSize	./platform/posix/pipe_test.cc	/^constexpr int kSmallPipeSize = 4096;$/;"	m	namespace:asylo::__anon47	file:
kSnapshotKeyAssociatedDataBuf	./platform/arch/sgx/trusted/fork.cc	/^const char kSnapshotKeyAssociatedDataBuf[] = "AES256-GCM-SIV snapshot key";$/;"	m	namespace:asylo::__anon284	file:
kSnapshotKeyAssociatedDataBuf	./platform/arch/sgx/trusted/fork.cc	/^const char kSnapshotKeyAssociatedDataBuf[] = "AES256-GCM-SIV snapshot key";$/;"	m	namespace:asylo::__anon30	file:
kSnapshotKeySize	./platform/arch/sgx/trusted/fork.cc	/^constexpr size_t kSnapshotKeySize = 32;$/;"	m	namespace:asylo::__anon284	file:
kSnapshotKeySize	./platform/arch/sgx/trusted/fork.cc	/^constexpr size_t kSnapshotKeySize = 32;$/;"	m	namespace:asylo::__anon30	file:
kSocketName	./platform/core/shared_name_kind.h	/^  kSocketName,$/;"	e	enum:SharedNameKind
kStatusMoveAssignmentMsg	./util/statusor.h	/^constexpr char kStatusMoveAssignmentMsg[] = "";$/;"	m	namespace:asylo
kStatusMoveConstructorMsg	./util/statusor.h	/^constexpr char kStatusMoveConstructorMsg[] = "";$/;"	m	namespace:asylo
kStatusProtoErrorSpaceMsg	./util/status.cc	/^constexpr char kStatusProtoErrorSpaceMsg[] = "";$/;"	m	namespace:asylo	file:
kStatusProtoOkMismatchMsg	./util/status.cc	/^constexpr char kStatusProtoOkMismatchMsg[] = "";$/;"	m	namespace:asylo	file:
kStr1	./crypto/util/byte_container_util_test.cc	/^constexpr char kStr1[] = "foo";$/;"	m	namespace:asylo::__anon21	file:
kStr1	./crypto/util/byte_container_util_test.cc	/^constexpr char kStr1[] = "foo";$/;"	m	namespace:asylo::__anon275	file:
kStr2	./crypto/util/byte_container_util_test.cc	/^constexpr char kStr2[] = "bar";$/;"	m	namespace:asylo::__anon21	file:
kStr2	./crypto/util/byte_container_util_test.cc	/^constexpr char kStr2[] = "bar";$/;"	m	namespace:asylo::__anon275	file:
kStr3	./crypto/util/byte_container_util_test.cc	/^constexpr char kStr3[] = "baz";$/;"	m	namespace:asylo::__anon21	file:
kStr3	./crypto/util/byte_container_util_test.cc	/^constexpr char kStr3[] = "baz";$/;"	m	namespace:asylo::__anon275	file:
kStr4	./crypto/util/byte_container_util_test.cc	/^constexpr char kStr4[] = "foobar";$/;"	m	namespace:asylo::__anon21	file:
kStr4	./crypto/util/byte_container_util_test.cc	/^constexpr char kStr4[] = "foobar";$/;"	m	namespace:asylo::__anon275	file:
kStressMallocs	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kStressMallocs = kSelectorUser + 8;$/;"	m	namespace:asylo::primitives
kString1	./grpc/auth/util/safe_string_test.cc	/^const char kString1[] = "foobar";$/;"	m	namespace:asylo::__anon253	file:
kString1	./grpc/auth/util/safe_string_test.cc	/^const char kString1[] = "foobar";$/;"	m	namespace:asylo::__anon507	file:
kString1Size	./grpc/auth/util/safe_string_test.cc	/^const size_t kString1Size = 6;$/;"	m	namespace:asylo::__anon253	file:
kString1Size	./grpc/auth/util/safe_string_test.cc	/^const size_t kString1Size = 6;$/;"	m	namespace:asylo::__anon507	file:
kString2	./grpc/auth/util/safe_string_test.cc	/^const char kString2[] = "hello world";$/;"	m	namespace:asylo::__anon253	file:
kString2	./grpc/auth/util/safe_string_test.cc	/^const char kString2[] = "hello world";$/;"	m	namespace:asylo::__anon507	file:
kString2Size	./grpc/auth/util/safe_string_test.cc	/^const size_t kString2Size = 11;$/;"	m	namespace:asylo::__anon253	file:
kString2Size	./grpc/auth/util/safe_string_test.cc	/^const size_t kString2Size = 11;$/;"	m	namespace:asylo::__anon507	file:
kStringElement	./util/statusor_test.cc	/^constexpr char kStringElement[] =$/;"	m	namespace:asylo::__anon231	file:
kStringElement	./util/statusor_test.cc	/^constexpr char kStringElement[] =$/;"	m	namespace:asylo::__anon485	file:
kSuffix	./crypto/sha256_hash_test.cc	/^constexpr char kSuffix[] =$/;"	m	namespace:asylo::__anon16	file:
kSuffix	./crypto/sha256_hash_test.cc	/^constexpr char kSuffix[] =$/;"	m	namespace:asylo::__anon270	file:
kSupportedCpuidLeaves	./platform/arch/sgx/trusted/exceptions.cc	/^constexpr int kSupportedCpuidLeaves[] = {0, 1, 4, 7};$/;"	m	namespace:__anon28	file:
kSupportedCpuidLeaves	./platform/arch/sgx/trusted/exceptions.cc	/^constexpr int kSupportedCpuidLeaves[] = {0, 1, 4, 7};$/;"	m	namespace:__anon282	file:
kSupportedSignatureSchemes	./identity/sgx/pce_util_test.cc	/^constexpr SignatureScheme kSupportedSignatureSchemes[] = {ECDSA_P256_SHA256};$/;"	m	namespace:asylo::sgx::__anon151	file:
kSupportedSignatureSchemes	./identity/sgx/pce_util_test.cc	/^constexpr SignatureScheme kSupportedSignatureSchemes[] = {ECDSA_P256_SHA256};$/;"	m	namespace:asylo::sgx::__anon405	file:
kSystemCallHandler	./platform/host_call/exit_handler_constants.h	/^static constexpr uint64_t kSystemCallHandler = primitives::kSelectorHostCall;$/;"	m	namespace:asylo::host_call
kTagLength	./platform/crypto/gcmlib/gcm_cryptor.h	/^constexpr size_t kTagLength = 16;$/;"	m	namespace:asylo::platform::crypto::gcmlib
kTamperData	./platform/storage/secure/enclave_storage_secure_test.cc	/^constexpr char kTamperData[] = "Exceedingly rare string";$/;"	m	namespace:asylo::__anon100	file:
kTamperData	./platform/storage/secure/enclave_storage_secure_test.cc	/^constexpr char kTamperData[] = "Exceedingly rare string";$/;"	m	namespace:asylo::__anon354	file:
kTcbComponentsSize	./identity/sgx/tcb.cc	/^const int kTcbComponentsSize = 16;$/;"	m	namespace:asylo::sgx	file:
kTestAad	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kTestAad[] = "Mary had a little lamb";$/;"	m	namespace:asylo::__anon168	file:
kTestAad	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kTestAad[] = "Mary had a little lamb";$/;"	m	namespace:asylo::__anon422	file:
kTestAccess	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestAccess =$/;"	m	namespace:asylo::host_call
kTestArgs	./bazel/application_wrapper/argv_test.cc	/^constexpr char kTestArgs[][9] = {"the",  "quick", "brown", "fox", "jumps",$/;"	m	namespace:asylo::__anon183	file:
kTestArgs	./bazel/application_wrapper/argv_test.cc	/^constexpr char kTestArgs[][9] = {"the",  "quick", "brown", "fox", "jumps",$/;"	m	namespace:asylo::__anon437	file:
kTestAuthenticatorSecret	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestAuthenticatorSecret[] =$/;"	m	namespace:asylo::__anon258	file:
kTestAuthenticatorSecret	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestAuthenticatorSecret[] =$/;"	m	namespace:asylo::__anon512	file:
kTestChmod	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestChmod = kFirstSelector + asylo::system_call::kSYS_chmod;$/;"	m	namespace:asylo::host_call
kTestChown	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestChown = kFirstSelector + asylo::system_call::kSYS_chown;$/;"	m	namespace:asylo::host_call
kTestClientHandshakeAuthenticator	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestClientHandshakeAuthenticator[] =$/;"	m	namespace:asylo::__anon258	file:
kTestClientHandshakeAuthenticator	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestClientHandshakeAuthenticator[] =$/;"	m	namespace:asylo::__anon512	file:
kTestClose	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestClose = kFirstSelector + asylo::system_call::kSYS_close;$/;"	m	namespace:asylo::host_call
kTestFChown	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestFChown =$/;"	m	namespace:asylo::host_call
kTestFTruncate	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestFTruncate =$/;"	m	namespace:asylo::host_call
kTestFchmod	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestFchmod =$/;"	m	namespace:asylo::host_call
kTestFcntl	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestFcntl = kFirstSelector + asylo::system_call::kSYS_fcntl;$/;"	m	namespace:asylo::host_call
kTestFlock	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestFlock =$/;"	m	namespace:asylo::host_call
kTestFsync	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestFsync = kFirstSelector + asylo::system_call::kSYS_fsync;$/;"	m	namespace:asylo::host_call
kTestGetEgid	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestGetEgid =$/;"	m	namespace:asylo::host_call
kTestGetEuid	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestGetEuid =$/;"	m	namespace:asylo::host_call
kTestGetGid	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestGetGid =$/;"	m	namespace:asylo::host_call
kTestGetPid	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestGetPid =$/;"	m	namespace:asylo::host_call
kTestGetPpid	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestGetPpid =$/;"	m	namespace:asylo::host_call
kTestGetUid	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestGetUid =$/;"	m	namespace:asylo::host_call
kTestInotifyAddWatch	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestInotifyAddWatch =$/;"	m	namespace:asylo::host_call
kTestInotifyInit1	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestInotifyInit1 =$/;"	m	namespace:asylo::host_call
kTestInotifyRmWatch	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestInotifyRmWatch =$/;"	m	namespace:asylo::host_call
kTestIsAtty	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestIsAtty = kNonSyscallFirstSelector;$/;"	m	namespace:asylo::host_call
kTestKill	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestKill = kFirstSelector + asylo::system_call::kSYS_kill;$/;"	m	namespace:asylo::host_call
kTestLink	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestLink = kFirstSelector + asylo::system_call::kSYS_link;$/;"	m	namespace:asylo::host_call
kTestLseek	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestLseek = kFirstSelector + asylo::system_call::kSYS_lseek;$/;"	m	namespace:asylo::host_call
kTestMasterSecret	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestMasterSecret[] =$/;"	m	namespace:asylo::__anon258	file:
kTestMasterSecret	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestMasterSecret[] =$/;"	m	namespace:asylo::__anon512	file:
kTestMessageHex	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestMessageHex[] = "436f66666565206973206c6966652e0a";$/;"	m	namespace:asylo::__anon19	file:
kTestMessageHex	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestMessageHex[] = "436f66666565206973206c6966652e0a";$/;"	m	namespace:asylo::__anon273	file:
kTestMkdir	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestMkdir = kFirstSelector + asylo::system_call::kSYS_mkdir;$/;"	m	namespace:asylo::host_call
kTestOpen	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestOpen = kFirstSelector + asylo::system_call::kSYS_open;$/;"	m	namespace:asylo::host_call
kTestPrivKey	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestPrivKey[] =$/;"	m	namespace:asylo::__anon258	file:
kTestPrivKey	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestPrivKey[] =$/;"	m	namespace:asylo::__anon512	file:
kTestPubKey	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestPubKey[] =$/;"	m	namespace:asylo::__anon258	file:
kTestPubKey	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestPubKey[] =$/;"	m	namespace:asylo::__anon512	file:
kTestRead	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestRead = kFirstSelector + asylo::system_call::kSYS_read;$/;"	m	namespace:asylo::host_call
kTestReadLink	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestReadLink =$/;"	m	namespace:asylo::host_call
kTestRecordProtocolKey	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestRecordProtocolKey[] = "c7e0f5436c0fe4efdb6327469651b9fe";$/;"	m	namespace:asylo::__anon258	file:
kTestRecordProtocolKey	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestRecordProtocolKey[] = "c7e0f5436c0fe4efdb6327469651b9fe";$/;"	m	namespace:asylo::__anon512	file:
kTestRename	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestRename =$/;"	m	namespace:asylo::host_call
kTestRmdir	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestRmdir = kFirstSelector + asylo::system_call::kSYS_rmdir;$/;"	m	namespace:asylo::host_call
kTestSchedYield	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestSchedYield =$/;"	m	namespace:asylo::host_call
kTestSecret	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kTestSecret[] = "Its fleece was white as snow";$/;"	m	namespace:asylo::__anon168	file:
kTestSecret	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kTestSecret[] = "Its fleece was white as snow";$/;"	m	namespace:asylo::__anon422	file:
kTestSecretSize	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr size_t kTestSecretSize = sizeof(kTestSecret) - 1;$/;"	m	namespace:asylo::__anon168	file:
kTestSecretSize	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr size_t kTestSecretSize = sizeof(kTestSecret) - 1;$/;"	m	namespace:asylo::__anon422	file:
kTestServerHandshakeAuthenticator	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestServerHandshakeAuthenticator[] =$/;"	m	namespace:asylo::__anon258	file:
kTestServerHandshakeAuthenticator	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestServerHandshakeAuthenticator[] =$/;"	m	namespace:asylo::__anon512	file:
kTestSetSid	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestSetSid =$/;"	m	namespace:asylo::host_call
kTestSetSockOpt	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestSetSockOpt =$/;"	m	namespace:asylo::host_call
kTestSignatureHex	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestSignatureHex[] =$/;"	m	namespace:asylo::__anon19	file:
kTestSignatureHex	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestSignatureHex[] =$/;"	m	namespace:asylo::__anon273	file:
kTestSigningKeyDer	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestSigningKeyDer[] =$/;"	m	namespace:asylo::__anon19	file:
kTestSigningKeyDer	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestSigningKeyDer[] =$/;"	m	namespace:asylo::__anon273	file:
kTestSigningKeyPem	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestSigningKeyPem[] =$/;"	m	namespace:asylo::__anon19	file:
kTestSigningKeyPem	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestSigningKeyPem[] =$/;"	m	namespace:asylo::__anon273	file:
kTestSocket	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestSocket =$/;"	m	namespace:asylo::host_call
kTestString	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kTestString[] = "test";$/;"	m	namespace:asylo::__anon168	file:
kTestString	./identity/sgx/sgx_local_secret_sealer_test.cc	/^constexpr char kTestString[] = "test";$/;"	m	namespace:asylo::__anon422	file:
kTestString	./platform/posix/io/epoll_test.cc	/^constexpr const char *kTestString = "Will this go through the pipe?";$/;"	m	namespace:asylo::__anon318	file:
kTestString	./platform/posix/io/epoll_test.cc	/^constexpr const char *kTestString = "Will this go through the pipe?";$/;"	m	namespace:asylo::__anon64	file:
kTestSymlink	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestSymlink =$/;"	m	namespace:asylo::host_call
kTestTranscriptHash	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestTranscriptHash[] =$/;"	m	namespace:asylo::__anon258	file:
kTestTranscriptHash	./grpc/auth/core/ekep_crypto_test.cc	/^constexpr char kTestTranscriptHash[] =$/;"	m	namespace:asylo::__anon512	file:
kTestTruncate	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestTruncate =$/;"	m	namespace:asylo::host_call
kTestUSleep	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestUSleep = kNonSyscallFirstSelector + 1;$/;"	m	namespace:asylo::host_call
kTestUmask	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestUmask =$/;"	m	namespace:asylo::host_call
kTestUnlink	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestUnlink =$/;"	m	namespace:asylo::host_call
kTestValues	./platform/posix/endian_test.cc	/^  static constexpr uint16_t kTestValues[] = {0, 1, 0x0123};$/;"	m	struct:asylo::__anon298::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^  static constexpr uint16_t kTestValues[] = {0, 1, 0x0123};$/;"	m	struct:asylo::__anon44::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^  static constexpr uint32_t kTestValues[] = {0, 1, 0x0123, 0x01234567};$/;"	m	struct:asylo::__anon298::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^  static constexpr uint32_t kTestValues[] = {0, 1, 0x0123, 0x01234567};$/;"	m	struct:asylo::__anon44::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^  static constexpr uint64_t kTestValues[] = {0, 1, 0x0123, 0x01234567,$/;"	m	struct:asylo::__anon298::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^  static constexpr uint64_t kTestValues[] = {0, 1, 0x0123, 0x01234567,$/;"	m	struct:asylo::__anon44::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^constexpr uint16_t TestData<uint16_t>::kTestValues[];$/;"	m	class:asylo::__anon298::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^constexpr uint16_t TestData<uint16_t>::kTestValues[];$/;"	m	class:asylo::__anon44::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^constexpr uint32_t TestData<uint32_t>::kTestValues[];$/;"	m	class:asylo::__anon298::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^constexpr uint32_t TestData<uint32_t>::kTestValues[];$/;"	m	class:asylo::__anon44::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^constexpr uint64_t TestData<uint64_t>::kTestValues[];$/;"	m	class:asylo::__anon298::TestData	file:
kTestValues	./platform/posix/endian_test.cc	/^constexpr uint64_t TestData<uint64_t>::kTestValues[];$/;"	m	class:asylo::__anon44::TestData	file:
kTestVector1	./crypto/sha256_hash_test.cc	/^constexpr char kTestVector1[] = "abc";$/;"	m	namespace:asylo::__anon16	file:
kTestVector1	./crypto/sha256_hash_test.cc	/^constexpr char kTestVector1[] = "abc";$/;"	m	namespace:asylo::__anon270	file:
kTestVector2	./crypto/sha256_hash_test.cc	/^constexpr char kTestVector2[] =$/;"	m	namespace:asylo::__anon16	file:
kTestVector2	./crypto/sha256_hash_test.cc	/^constexpr char kTestVector2[] =$/;"	m	namespace:asylo::__anon270	file:
kTestVerifyingKeyDer	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestVerifyingKeyDer[] =$/;"	m	namespace:asylo::__anon19	file:
kTestVerifyingKeyDer	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestVerifyingKeyDer[] =$/;"	m	namespace:asylo::__anon273	file:
kTestVerifyingKeyPem	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestVerifyingKeyPem[] =$/;"	m	namespace:asylo::__anon19	file:
kTestVerifyingKeyPem	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^constexpr char kTestVerifyingKeyPem[] =$/;"	m	namespace:asylo::__anon273	file:
kTestWrite	./platform/host_call/test/enclave_test_selectors.h	/^constexpr uint64_t kTestWrite = kFirstSelector + asylo::system_call::kSYS_write;$/;"	m	namespace:asylo::host_call
kThreads	./util/thread_test.cc	/^  static constexpr size_t kThreads = 4;$/;"	m	class:asylo::__anon233::ThreadTest	file:
kThreads	./util/thread_test.cc	/^  static constexpr size_t kThreads = 4;$/;"	m	class:asylo::__anon487::ThreadTest	file:
kTimeout	./test/misc/active_enclave_signal_test_enclave.cc	/^constexpr int kTimeout = 10;$/;"	m	namespace:asylo	file:
kTimeout	./test/misc/enclave_entry_count_test_enclave.cc	/^constexpr int kTimeout = 5;$/;"	m	namespace:asylo	file:
kTimerName	./platform/core/shared_name_kind.h	/^  kTimerName,$/;"	e	enum:SharedNameKind
kTimesTwoSelector	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kTimesTwoSelector = kSelectorUser + 2;$/;"	m	namespace:asylo::primitives
kTokenLength	./platform/crypto/gcmlib/gcm_cryptor.h	/^constexpr size_t kTokenLength = 44;$/;"	m	namespace:asylo::platform::crypto::gcmlib
kTrampolineMagicNumber	./platform/primitives/sim/shared_sim.h	/^constexpr uint64_t kTrampolineMagicNumber = 0x53696d54724d6167;  \/\/ "SimTrMag"$/;"	m	namespace:asylo::primitives
kTrampolineVersion	./platform/primitives/sim/shared_sim.h	/^constexpr uint64_t kTrampolineVersion = 0;$/;"	m	namespace:asylo::primitives
kTranslatedEncryptionSchemes	./identity/sgx/pce_util_test.cc	/^constexpr uint8_t kTranslatedEncryptionSchemes[] = {PCE_ALG_RSA_OAEP_3072};$/;"	m	namespace:asylo::sgx::__anon151	file:
kTranslatedEncryptionSchemes	./identity/sgx/pce_util_test.cc	/^constexpr uint8_t kTranslatedEncryptionSchemes[] = {PCE_ALG_RSA_OAEP_3072};$/;"	m	namespace:asylo::sgx::__anon405	file:
kTranslatedSignatureSchemes	./identity/sgx/pce_util_test.cc	/^constexpr uint8_t kTranslatedSignatureSchemes[] = {PCE_NIST_P256_ECDSA_SHA256};$/;"	m	namespace:asylo::sgx::__anon151	file:
kTranslatedSignatureSchemes	./identity/sgx/pce_util_test.cc	/^constexpr uint8_t kTranslatedSignatureSchemes[] = {PCE_NIST_P256_ECDSA_SHA256};$/;"	m	namespace:asylo::sgx::__anon405	file:
kTrustedFibonacci	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kTrustedFibonacci = kSelectorUser + 3;$/;"	m	namespace:asylo::primitives
kTrustedMallocTest	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kTrustedMallocTest = kSelectorUser + 4;$/;"	m	namespace:asylo::primitives
kURandomPath	./platform/posix/io/random_devices.h	/^  static constexpr const char *const kURandomPath = "\/dev\/urandom";$/;"	m	class:asylo::RandomPathHandler
kUSleepHandler	./platform/host_call/exit_handler_constants.h	/^static constexpr uint64_t kUSleepHandler = primitives::kSelectorHostCall + 2;$/;"	m	namespace:asylo::host_call
kUninitialized	./platform/core/trusted_application.h	/^    kUninitialized,$/;"	m	class:asylo::TrustedApplication::State
kUnlocked	./platform/core/untrusted_mutex.cc	/^constexpr int32_t kUnlocked = 0;  \/\/ The mutex is unlocked.$/;"	m	namespace:asylo::__anon137	file:
kUnlocked	./platform/core/untrusted_mutex.cc	/^constexpr int32_t kUnlocked = 0;  \/\/ The mutex is unlocked.$/;"	m	namespace:asylo::__anon391	file:
kUnlockedValue	./platform/common/spin_lock.h	/^  static constexpr uint64_t kUnlockedValue = 0x0;$/;"	m	class:SpinLock
kUnspecifiedName	./platform/core/shared_name_kind.h	/^  kUnspecifiedName = 0,$/;"	e	enum:SharedNameKind
kUntrustedFibonacci	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kUntrustedFibonacci = kSelectorUser + 2;$/;"	m	namespace:asylo::primitives
kUntrustedInit	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kUntrustedInit = kSelectorUser + 1;$/;"	m	namespace:asylo::primitives
kUntrustedLocalAllocTest	./platform/primitives/test/test_selectors.h	/^constexpr uint64_t kUntrustedLocalAllocTest = kSelectorUser + 5;$/;"	m	namespace:asylo::primitives
kUntrustedTestText	./platform/posix/io/read_write_test.cc	/^const char *kUntrustedTestText = "Lorem ipsum dolor sit amet...\\n";$/;"	m	namespace:asylo::__anon322	file:
kUntrustedTestText	./platform/posix/io/read_write_test.cc	/^const char *kUntrustedTestText = "Lorem ipsum dolor sit amet...\\n";$/;"	m	namespace:asylo::__anon68	file:
kUserData	./identity/sgx/remote_assertion_util_test.cc	/^constexpr char kUserData[] = "User Data";$/;"	m	namespace:asylo::sgx::__anon155	file:
kUserData	./identity/sgx/remote_assertion_util_test.cc	/^constexpr char kUserData[] = "User Data";$/;"	m	namespace:asylo::sgx::__anon409	file:
kUserData	./identity/sgx/sgx_local_assertion_authority_test.cc	/^constexpr char kUserData[] = "User data";$/;"	m	namespace:asylo::__anon160	file:
kUserData	./identity/sgx/sgx_local_assertion_authority_test.cc	/^constexpr char kUserData[] = "User data";$/;"	m	namespace:asylo::__anon414	file:
kUserData	./identity/sgx/sgx_local_assertion_generator_test.cc	/^const char kUserData[] = "User data";$/;"	m	namespace:asylo::__anon149	file:
kUserData	./identity/sgx/sgx_local_assertion_generator_test.cc	/^const char kUserData[] = "User data";$/;"	m	namespace:asylo::__anon403	file:
kUserData	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^const char kUserData[] = "User data";$/;"	m	namespace:asylo::__anon159	file:
kUserData	./identity/sgx/sgx_local_assertion_verifier_test.cc	/^const char kUserData[] = "User data";$/;"	m	namespace:asylo::__anon413	file:
kUserInitializing	./platform/core/trusted_application.h	/^    kUserInitializing,$/;"	m	class:asylo::TrustedApplication::State
kValue1	./crypto/util/bytes_test.cc	/^constexpr uint8_t kValue1[kSize] = {'a', 'b', 'c', 'd', 'e', 'f',$/;"	m	namespace:asylo::__anon24	file:
kValue1	./crypto/util/bytes_test.cc	/^constexpr uint8_t kValue1[kSize] = {'a', 'b', 'c', 'd', 'e', 'f',$/;"	m	namespace:asylo::__anon278	file:
kValue2	./crypto/util/bytes_test.cc	/^constexpr uint8_t kValue2[kSize] = {'a', 'b', 'c', 'd', 'e', 'f',$/;"	m	namespace:asylo::__anon24	file:
kValue2	./crypto/util/bytes_test.cc	/^constexpr uint8_t kValue2[kSize] = {'a', 'b', 'c', 'd', 'e', 'f',$/;"	m	namespace:asylo::__anon278	file:
kValue3	./crypto/util/bytes_test.cc	/^constexpr uint8_t kValue3[kSize] = {'a', 'a', 'a', 'a', 'a', 'a',$/;"	m	namespace:asylo::__anon24	file:
kValue3	./crypto/util/bytes_test.cc	/^constexpr uint8_t kValue3[kSize] = {'a', 'a', 'a', 'a', 'a', 'a',$/;"	m	namespace:asylo::__anon278	file:
kValueMoveAssignmentMsg	./util/statusor.h	/^constexpr char kValueMoveAssignmentMsg[] = "";$/;"	m	namespace:asylo
kValueMoveConstructorMsg	./util/statusor.h	/^constexpr char kValueMoveConstructorMsg[] = "";$/;"	m	namespace:asylo
kValueOrDieMovedMsg	./util/statusor.h	/^constexpr char kValueOrDieMovedMsg[] = "";$/;"	m	namespace:asylo
kWrite	./platform/posix/io/epoll_test.cc	/^constexpr int kWrite = 1;$/;"	m	namespace:asylo::__anon318	file:
kWrite	./platform/posix/io/epoll_test.cc	/^constexpr int kWrite = 1;$/;"	m	namespace:asylo::__anon64	file:
kWrite	./platform/posix/select_test.cc	/^constexpr int kWrite = 1;$/;"	m	namespace:asylo::__anon304	file:
kWrite	./platform/posix/select_test.cc	/^constexpr int kWrite = 1;$/;"	m	namespace:asylo::__anon50	file:
kZero	./identity/sgx/attributes_util_test.cc	/^constexpr uint64_t kZero = 0x0;$/;"	m	namespace:asylo::sgx::__anon146	file:
kZero	./identity/sgx/attributes_util_test.cc	/^constexpr uint64_t kZero = 0x0;$/;"	m	namespace:asylo::sgx::__anon400	file:
key	./crypto/aead_test_vector.h	/^  CleansingVector<uint8_t> key;$/;"	m	struct:asylo::AeadTestVector
key1_hex	./crypto/aes_gcm_siv_test.cc	/^const char key1_hex[] = "01000000000000000000000000000000";$/;"	m	namespace:asylo::__anon26	file:
key1_hex	./crypto/aes_gcm_siv_test.cc	/^const char key1_hex[] = "01000000000000000000000000000000";$/;"	m	namespace:asylo::__anon280	file:
key2_hex	./crypto/aes_gcm_siv_test.cc	/^const char key2_hex[] =$/;"	m	namespace:asylo::__anon26	file:
key2_hex	./crypto/aes_gcm_siv_test.cc	/^const char key2_hex[] =$/;"	m	namespace:asylo::__anon280	file:
key_	./crypto/aead_cryptor.h	/^  const std::unique_ptr<AeadKey> key_;$/;"	m	class:asylo::experimental::AeadCryptor
key_	./crypto/aead_key.h	/^  const CleansingVector<uint8_t> key_;$/;"	m	class:asylo::AeadKey
key_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  CleansingVector<uint8_t> key_;$/;"	m	class:asylo::__anon100::EnclaveStorageSecureTest	file:
key_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  CleansingVector<uint8_t> key_;$/;"	m	class:asylo::__anon354::EnclaveStorageSecureTest	file:
key_data	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^  std::string key_data;$/;"	m	struct:asylo::__anon19::VerifyingKeyParam	file:
key_data	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^  std::string key_data;$/;"	m	struct:asylo::__anon273::VerifyingKeyParam	file:
key_id	./platform/crypto/gcmlib/gcm_cryptor.h	/^    uint8_t key_id[kKeyIdLength];$/;"	m	struct:asylo::platform::crypto::gcmlib::GcmCryptor::Token
key_id_counter_	./platform/crypto/gcmlib/gcm_cryptor.h	/^  uint64_t key_id_counter_;$/;"	m	class:asylo::platform::crypto::gcmlib::GcmCryptor
key_info	./platform/posix/include/sys/ioctl.h	/^struct key_info {$/;"	s
key_to_data	./platform/posix/io/io_context_epoll.h	/^  absl::flat_hash_map<uint64_t, uint64_t> key_to_data;$/;"	m	class:asylo::io::IOContextEpoll
keyid	./identity/sgx/fake_enclave.h	/^    UnsafeBytes<kKeyrequestKeyidSize> keyid;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
keyid	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kKeyrequestKeyidSize> keyid;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
keyid	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kReportKeyidSize> keyid;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
keyname	./identity/sgx/fake_enclave.h	/^    KeyrequestKeyname keyname;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
keyname	./identity/sgx/identity_key_management_structs.h	/^  KeyrequestKeyname keyname;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
keypolicy	./identity/sgx/fake_enclave.h	/^    uint16_t keypolicy;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
keypolicy	./identity/sgx/identity_key_management_structs.h	/^  uint16_t keypolicy;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
kind	./platform/core/shared_name.h	/^  SharedNameKind kind() const { return kind_; }$/;"	f	class:asylo::SharedName
kind_	./platform/core/shared_name.h	/^  SharedNameKind kind_;$/;"	m	class:asylo::SharedName
label_	./platform/posix/io/virtual_test.cc	/^    std::string label_;$/;"	m	class:asylo::__anon326::VirtualHandlerTest::TestContext	file:
label_	./platform/posix/io/virtual_test.cc	/^    std::string label_;$/;"	m	class:asylo::__anon326::VirtualHandlerTest::TestHandler	file:
label_	./platform/posix/io/virtual_test.cc	/^    std::string label_;$/;"	m	class:asylo::__anon72::VirtualHandlerTest::TestContext	file:
label_	./platform/posix/io/virtual_test.cc	/^    std::string label_;$/;"	m	class:asylo::__anon72::VirtualHandlerTest::TestHandler	file:
large_data_	./platform/posix/pipe_test.cc	/^  std::vector<uint8_t> large_data_;$/;"	m	class:asylo::__anon301::PipeTest	file:
large_data_	./platform/posix/pipe_test.cc	/^  std::vector<uint8_t> large_data_;$/;"	m	class:asylo::__anon47::PipeTest	file:
last_returned_size_	./grpc/auth/util/multi_buffer_input_stream.h	/^  int last_returned_size_;$/;"	m	class:asylo::MultiBufferInputStream
launcher_	./grpc/util/grpc_server_launcher_test.cc	/^  GrpcServerLauncher launcher_;$/;"	m	class:asylo::__anon263::GrpcServerLauncherTest	file:
launcher_	./grpc/util/grpc_server_launcher_test.cc	/^  GrpcServerLauncher launcher_;$/;"	m	class:asylo::__anon517::GrpcServerLauncherTest	file:
le16toh	./platform/posix/endian.cc	/^uint16_t le16toh(uint16_t little_endian_16bits) { return little_endian_16bits; }$/;"	f
le16toh	./platform/posix/endian.cc	/^uint16_t le16toh(uint16_t little_endian_16bits) {$/;"	f
le32toh	./platform/posix/endian.cc	/^uint32_t le32toh(uint32_t little_endian_32bits) { return little_endian_32bits; }$/;"	f
le32toh	./platform/posix/endian.cc	/^uint32_t le32toh(uint32_t little_endian_32bits) {$/;"	f
le64toh	./platform/posix/endian.cc	/^uint64_t le64toh(uint64_t little_endian_64bits) { return little_endian_64bits; }$/;"	f
le64toh	./platform/posix/endian.cc	/^uint64_t le64toh(uint64_t little_endian_64bits) {$/;"	f
len	./platform/common/bridge_types.h	/^  uint32_t len;$/;"	m	struct:bridge_sockaddr_un
len	./platform/posix/include/netinet/udp.h	/^  uint16_t len;$/;"	m	struct:udphdr
len	./platform/posix/include/sys/inotify.h	/^  uint32_t len;     \/\/ Size of name field$/;"	m	struct:inotify_event
length	./examples/hello_world/hello_driver.cc	/^size_t length = 0;$/;"	v
length	./platform/posix/include/sys/ioctl.h	/^  uint32_t length;$/;"	m	struct:key_info
line_	./test/util/exec_tester_test.cc	/^    std::string line_;$/;"	m	class:asylo::experimental::__anon216::ExecTesterTest::UniformOutputChecker	file:
line_	./test/util/exec_tester_test.cc	/^    std::string line_;$/;"	m	class:asylo::experimental::__anon470::ExecTesterTest::UniformOutputChecker	file:
linux	./third_party/intel/posix/sgx_defs.h	40;"	d
list_	./platform/posix/pthread_impl.h	/^  __pthread_list_t *const list_;$/;"	m	class:asylo::pthread_impl::QueueOperations
list_	./test/misc/pthread_test.cc	/^  QueueOperations list_;$/;"	m	class:asylo::pthread_impl::__anon201::QueueOperationsTest	file:
list_	./test/misc/pthread_test.cc	/^  QueueOperations list_;$/;"	m	class:asylo::pthread_impl::__anon455::QueueOperationsTest	file:
listen	./platform/posix/sockets/socket.cc	/^int listen(int sockfd, int backlog) {$/;"	f
load_enclave	./examples/hello_world/hello_driver.cc	/^int load_enclave(int argc, char *argv[], void *base, size_t length) {$/;"	f
loader_	./test/loader/loader_test.cc	/^  FakeLoader<TestClient> loader_;$/;"	m	class:asylo::__anon215::LoaderTest	file:
loader_	./test/loader/loader_test.cc	/^  FakeLoader<TestClient> loader_;$/;"	m	class:asylo::__anon469::LoaderTest	file:
loader_	./test/misc/double_die.cc	/^  std::unique_ptr<SgxLoader> loader_;$/;"	m	class:asylo::__anon192::DieTest	file:
loader_	./test/misc/double_die.cc	/^  std::unique_ptr<SgxLoader> loader_;$/;"	m	class:asylo::__anon446::DieTest	file:
loader_	./test/util/enclave_test_launcher.h	/^  std::unique_ptr<SgxLoader> loader_;$/;"	m	class:asylo::EnclaveTestLauncher
loader_config	./platform/primitives/test/sgx_test_backend.cc	/^void *loader_config = nullptr;$/;"	m	namespace:asylo::primitives::test	file:
local_address	./grpc/auth/test/h2_enclave_security_test.cc	/^  char *local_address;$/;"	m	struct:asylo::__anon247::EnclaveFullStackFixtureData	file:
local_address	./grpc/auth/test/h2_enclave_security_test.cc	/^  char *local_address;$/;"	m	struct:asylo::__anon501::EnclaveFullStackFixtureData	file:
local_errno	./platform/posix/errno.cc	/^thread_local int local_errno = 0;$/;"	m	namespace:__anon293	file:
local_errno	./platform/posix/errno.cc	/^thread_local int local_errno = 0;$/;"	m	namespace:__anon39	file:
localhost_ipv4_bytes	./platform/posix/sockets/inet_pton_test.cc	/^const uint8_t localhost_ipv4_bytes[4] = {127, 0, 0, 1};$/;"	m	namespace:__anon308	file:
localhost_ipv4_bytes	./platform/posix/sockets/inet_pton_test.cc	/^const uint8_t localhost_ipv4_bytes[4] = {127, 0, 0, 1};$/;"	m	namespace:__anon54	file:
localhost_ipv6_bytes	./platform/posix/sockets/inet_pton_test.cc	/^const uint8_t localhost_ipv6_bytes[16] = {0, 0, 0, 0, 0, 0, 0, 0,$/;"	m	namespace:__anon308	file:
localhost_ipv6_bytes	./platform/posix/sockets/inet_pton_test.cc	/^const uint8_t localhost_ipv6_bytes[16] = {0, 0, 0, 0, 0, 0, 0, 0,$/;"	m	namespace:__anon54	file:
lock_	./platform/common/spin_lock.h	/^  SpinLock *lock_;$/;"	m	class:ScopedSpinLock
lock_	./platform/core/test/lock_test.cc	/^  LockType lock_;$/;"	m	class:asylo::__anon130::LockTest	file:
lock_	./platform/core/test/lock_test.cc	/^  LockType lock_;$/;"	m	class:asylo::__anon384::LockTest	file:
lock_	./platform/core/untrusted_cache_malloc.h	/^  SpinLock lock_;$/;"	m	class:asylo::UntrustedCacheMalloc
lock_	./platform/posix/pthread.cc	/^  pthread_spinlock_t *const lock_;$/;"	m	class:__anon296::LockableGuard	file:
lock_	./platform/posix/pthread.cc	/^  pthread_spinlock_t *const lock_;$/;"	m	class:__anon42::LockableGuard	file:
lock_	./platform/posix/threading/thread_manager.h	/^    pthread_mutex_t lock_ = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:asylo::ThreadManager::Thread
lock_	./platform/primitives/util/primitive_locks.h	/^  asylo_spinlock_t *lock_;$/;"	m	class:asylo::primitives::SpinLockGuard
lock_word_	./platform/common/spin_lock.h	/^  std::atomic<uint64_t> lock_word_;$/;"	m	class:SpinLock
log_basename	./util/logging.cc	/^std::string *log_basename = nullptr;$/;"	m	namespace:asylo::__anon236	file:
log_basename	./util/logging.cc	/^std::string *log_basename = nullptr;$/;"	m	namespace:asylo::__anon490	file:
log_file_directory	./util/logging.cc	/^std::string *log_file_directory = nullptr;$/;"	m	namespace:asylo::__anon236	file:
log_file_directory	./util/logging.cc	/^std::string *log_file_directory = nullptr;$/;"	m	namespace:asylo::__anon490	file:
log_panic	./util/logging.cc	/^thread_local bool log_panic = false;$/;"	m	namespace:asylo::__anon236	file:
log_panic	./util/logging.cc	/^thread_local bool log_panic = false;$/;"	m	namespace:asylo::__anon490	file:
logical_size	./platform/storage/secure/aead_handler.h	/^    size_t logical_size;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileControl
lstat	./platform/posix/stat.cc	/^int lstat(const char *pathname, struct stat *stat_buffer) {$/;"	f
m_control	./third_party/intel/posix/sgx_thread.h	/^    uint32_t            m_control;$/;"	m	struct:_sgx_thread_mutex_t
m_dummy	./third_party/intel/posix/sgx_thread.h	/^    unsigned char       m_dummy;  \/* for C syntax check *\/$/;"	m	struct:_sgx_thread_cond_attr_t
m_dummy	./third_party/intel/posix/sgx_thread.h	/^    unsigned char       m_dummy;  \/* for C syntax check *\/$/;"	m	struct:_sgx_thread_mutex_attr_t
m_first	./third_party/intel/posix/sgx_thread.h	/^    sgx_thread_t        m_first;  \/* first element *\/$/;"	m	struct:_sgx_thread_queue_t
m_last	./third_party/intel/posix/sgx_thread.h	/^    sgx_thread_t        m_last;   \/* last element *\/$/;"	m	struct:_sgx_thread_queue_t
m_lock	./third_party/intel/posix/sgx_thread.h	/^    volatile uint32_t   m_lock;   \/* use sgx_spinlock_t *\/$/;"	m	struct:_sgx_thread_cond_t
m_lock	./third_party/intel/posix/sgx_thread.h	/^    volatile uint32_t   m_lock;   \/* use sgx_spinlock_t *\/$/;"	m	struct:_sgx_thread_mutex_t
m_owner	./third_party/intel/posix/sgx_thread.h	/^    sgx_thread_t        m_owner;$/;"	m	struct:_sgx_thread_mutex_t
m_queue	./third_party/intel/posix/sgx_thread.h	/^    sgx_thread_queue_t  m_queue;$/;"	m	struct:_sgx_thread_cond_t
m_queue	./third_party/intel/posix/sgx_thread.h	/^    sgx_thread_queue_t  m_queue;$/;"	m	struct:_sgx_thread_mutex_t
m_refcount	./third_party/intel/posix/sgx_thread.h	/^    size_t              m_refcount;$/;"	m	struct:_sgx_thread_mutex_t
mac	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kSgxMacSize> mac;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
machine	./platform/common/bridge_types.h	/^  char machine[BRIDGE_UTSNAME_FIELD_LENGTH];$/;"	m	struct:BridgeUtsName
machine	./platform/posix/include/sys/utsname.h	/^  char machine[UTSNAME_FIELD_LENGTH];$/;"	m	struct:utsname
magic	./platform/system_call/message.h	/^  \/* byte:  0 ..   7 *\/ uint64_t magic;                  \/\/ Magic number.$/;"	m	struct:asylo::system_call::MessageHeader
magic_number	./platform/primitives/sim/shared_sim.h	/^  uint64_t magic_number;$/;"	m	struct:asylo::primitives::SimTrampoline
main	./bazel/application_wrapper/application_wrapper_driver.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./bazel/application_wrapper/test_application.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./bazel/test_shim_loader.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./examples/grpc_server/grpc_server_driver.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./examples/hello_world/hello_driver.cc	/^int main(int argc, char*argv[]){$/;"	f
main	./examples/quickstart/demo_driver.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./examples/quickstart/solution/demo_driver.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./grpc/auth/test/h2_enclave_security_test.cc	/^int main(int argc, char **argv) {$/;"	f
main	./platform/host_call/test/host_call_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./platform/primitives/examples/hello_driver.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./platform/primitives/test/primitives_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./platform/system_call/generate_sysno.cc	/^int main(int argc, char **argv) {$/;"	f
main	./platform/system_call/generate_tables.cc	/^int main(int argc, char **argv) {$/;"	f
main	./platform/system_call/type_conversions/types_conversions_generator.cc	/^int main(int argc, char **argv) {$/;"	f
main	./test/misc/double_die.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./test/misc/exception_app.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./test/util/exit_app.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	./test/util/test_binary.cc	/^int main() {$/;"	f
main	./test/util/test_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
major	./platform/system/include/sys/sysmacros.h	/^inline unsigned int major(dev_t dev) {$/;"	f
makedev	./platform/system/include/sys/sysmacros.h	/^inline dev_t makedev(unsigned int major, unsigned int minor) {$/;"	f
manager	./examples/hello_world/hello_driver.cc	/^asylo::EnclaveManager *manager;$/;"	v
manager_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  static EnclaveManager *manager_;$/;"	m	class:asylo::__anon182::ApplicationWrapperEnclaveTest	file:
manager_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^  static EnclaveManager *manager_;$/;"	m	class:asylo::__anon436::ApplicationWrapperEnclaveTest	file:
manager_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^EnclaveManager *ApplicationWrapperEnclaveTest::manager_ = nullptr;$/;"	m	class:asylo::__anon182::ApplicationWrapperEnclaveTest	file:
manager_	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^EnclaveManager *ApplicationWrapperEnclaveTest::manager_ = nullptr;$/;"	m	class:asylo::__anon436::ApplicationWrapperEnclaveTest	file:
manager_	./platform/posix/fork_security_test_driver.cc	/^  static EnclaveManager *manager_;$/;"	m	class:asylo::__anon305::ForkSecurityTest	file:
manager_	./platform/posix/fork_security_test_driver.cc	/^  static EnclaveManager *manager_;$/;"	m	class:asylo::__anon51::ForkSecurityTest	file:
manager_	./platform/posix/fork_security_test_driver.cc	/^EnclaveManager *ForkSecurityTest::manager_ = nullptr;$/;"	m	class:asylo::__anon305::ForkSecurityTest	file:
manager_	./platform/posix/fork_security_test_driver.cc	/^EnclaveManager *ForkSecurityTest::manager_ = nullptr;$/;"	m	class:asylo::__anon51::ForkSecurityTest	file:
manager_	./platform/posix/fork_test_driver.cc	/^  EnclaveManager *manager_;$/;"	m	class:asylo::__anon300::ForkTest	file:
manager_	./platform/posix/fork_test_driver.cc	/^  EnclaveManager *manager_;$/;"	m	class:asylo::__anon46::ForkTest	file:
manager_	./test/loader/loader_test.cc	/^  EnclaveManager *manager_;$/;"	m	class:asylo::__anon215::LoaderTest	file:
manager_	./test/loader/loader_test.cc	/^  EnclaveManager *manager_;$/;"	m	class:asylo::__anon469::LoaderTest	file:
manager_	./test/misc/double_die.cc	/^  EnclaveManager *manager_;$/;"	m	class:asylo::__anon192::DieTest	file:
manager_	./test/misc/double_die.cc	/^  EnclaveManager *manager_;$/;"	m	class:asylo::__anon446::DieTest	file:
manager_	./test/util/enclave_test_launcher.h	/^  EnclaveManager *manager_;$/;"	m	class:asylo::EnclaveTestLauncher
map_	./platform/common/static_map.h	/^absl::flat_hash_map<std::string, T *> *StaticMap<MapName, T, N>::map_ = nullptr;$/;"	m	class:asylo::StaticMap
mapped_region_	./util/file_mapping.h	/^  absl::Span<uint8_t> mapped_region_;$/;"	m	class:asylo::FileMapping
mask	./platform/common/bridge_types.h	/^  bridge_sigset_t mask;$/;"	m	struct:BridgeSignalHandler
mask	./platform/posix/include/sys/inotify.h	/^  uint32_t mask;    \/\/ Mask describing event$/;"	m	struct:inotify_event
master_key	./platform/storage/secure/aead_handler.h	/^    std::unique_ptr<GcmCryptorKey> master_key;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileControl
master_secret_	./grpc/auth/core/client_ekep_handshaker.h	/^  CleansingVector<uint8_t> master_secret_;$/;"	m	class:asylo::final
master_secret_	./grpc/auth/core/server_ekep_handshaker.h	/^  CleansingVector<uint8_t> master_secret_;$/;"	m	class:asylo::final
max_frame_size	./grpc/auth/core/ekep_handshaker_util.h	/^  size_t max_frame_size = 1 << 20;$/;"	m	struct:asylo::EkepHandshakerOptions
max_frame_size_	./grpc/auth/core/ekep_handshaker.h	/^  const int max_frame_size_;$/;"	m	class:asylo::EkepHandshaker
max_message_size_	./crypto/aead_cryptor.h	/^  const size_t max_message_size_;$/;"	m	class:asylo::experimental::AeadCryptor
max_seal_overhead_	./crypto/aead_key.h	/^  const size_t max_seal_overhead_;$/;"	m	class:asylo::AeadKey
max_sealed_messages_	./crypto/aead_cryptor.h	/^  const uint64_t max_sealed_messages_;$/;"	m	class:asylo::experimental::AeadCryptor
max_size	./util/cleansing_allocator.h	/^  std::size_t max_size() const {$/;"	f	class:asylo::CleansingAllocator
maximum_fd_hard_limit	./platform/posix/io/io_manager.h	/^    int maximum_fd_hard_limit;$/;"	m	class:asylo::io::IOManager::FileDescriptorTable
maximum_fd_soft_limit	./platform/posix/io/io_manager.h	/^    int maximum_fd_soft_limit;$/;"	m	class:asylo::io::IOManager::FileDescriptorTable
mcontext_t	./platform/posix/include/sys/ucontext.h	/^} mcontext_t;$/;"	t	typeref:struct:__anon3
measurement	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<SHA256_DIGEST_LENGTH> measurement;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Targetinfo
medium_data_	./platform/posix/pipe_test.cc	/^  std::vector<uint8_t> medium_data_;$/;"	m	class:asylo::__anon301::PipeTest	file:
medium_data_	./platform/posix/pipe_test.cc	/^  std::vector<uint8_t> medium_data_;$/;"	m	class:asylo::__anon47::PipeTest	file:
message_	./platform/primitives/primitive_status.h	/^  char message_[kMessageMax];  \/\/ An associated error string.$/;"	m	class:asylo::primitives::PrimitiveStatus
message_	./test/misc/exception.h	/^  std::string message_;$/;"	m	class:asylo::TestException
message_	./test/util/proto_matchers.h	/^  const MessageT &message_;$/;"	m	class:asylo::internal::ProtoMatcher
message_	./test/util/status_matchers.h	/^  const absl::optional<std::string> message_;$/;"	m	class:asylo::internal::StatusMatcher
message_	./util/status.h	/^  std::string message_;$/;"	m	class:asylo::Status
message_comparator_	./test/util/proto_matchers.h	/^  std::function<bool(const MessageT &, const MessageT &)> message_comparator_;$/;"	m	class:asylo::internal::ProtoMatcher
message_size_limit_	./crypto/aes_gcm_siv.h	/^  const size_t message_size_limit_;$/;"	m	class:asylo::AesGcmSivCryptor
meta_length_vals	./platform/storage/utils/offset_translator_test.cc	/^const off_t meta_length_vals[] = {10, 40, 120};$/;"	m	namespace:asylo::__anon350	file:
meta_length_vals	./platform/storage/utils/offset_translator_test.cc	/^const off_t meta_length_vals[] = {10, 40, 120};$/;"	m	namespace:asylo::__anon96	file:
minimum_	./test/util/exec_tester_test.cc	/^    int minimum_;$/;"	m	class:asylo::experimental::__anon216::ExecTesterTest::UniformOutputChecker	file:
minimum_	./test/util/exec_tester_test.cc	/^    int minimum_;$/;"	m	class:asylo::experimental::__anon470::ExecTesterTest::UniformOutputChecker	file:
minor	./platform/system/include/sys/sysmacros.h	/^inline unsigned int minor(dev_t dev) {$/;"	f
miscmask	./identity/sgx/fake_enclave.h	/^    uint32_t miscmask;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
miscmask	./identity/sgx/identity_key_management_structs.h	/^  uint32_t miscmask;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
miscmask	./identity/sgx/identity_key_management_structs.h	/^  uint32_t miscmask;$/;"	m	struct:asylo::sgx::SigstructBody
miscselect	./identity/sgx/fake_enclave.h	/^    uint32_t miscselect;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
miscselect	./identity/sgx/identity_key_management_structs.h	/^  uint32_t miscselect;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
miscselect	./identity/sgx/identity_key_management_structs.h	/^  uint32_t miscselect;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Targetinfo
miscselect	./identity/sgx/identity_key_management_structs.h	/^  uint32_t miscselect;$/;"	m	struct:asylo::sgx::SigstructBody
miscselect	./identity/sgx/self_identity.h	/^  uint32_t miscselect;$/;"	m	struct:asylo::sgx::SelfIdentity
miscselect_	./identity/sgx/fake_enclave.h	/^  uint32_t miscselect_;$/;"	m	class:asylo::sgx::FakeEnclave
mkdir	./platform/posix/stat.cc	/^int mkdir(const char *pathname, mode_t mode) {$/;"	f
mlock	./platform/posix/mman.cc	/^int mlock(const void *addr, size_t len) {$/;"	f
mlock2	./platform/posix/mman.cc	/^int mlock2(const void *addr, size_t len, int flags) {$/;"	f
mlockall	./platform/posix/mman.cc	/^int mlockall(int flags) {$/;"	f
mmap	./platform/posix/mman.cc	/^void *mmap(void *addr, size_t length, int prot, int flags, int fd,$/;"	f
mmap	./platform/primitives/sim/runtime_syscalls.c	/^void *mmap(void *addr, size_t length, int prot, int flags, int fd,$/;"	f
mock_enclave_auth_context_	./grpc/auth/peer_identity_util_test.cc	/^  StrictMock<MockEnclaveAuthContext> mock_enclave_auth_context_;$/;"	m	class:asylo::__anon250::PeerIdentityUtilTest	file:
mock_enclave_auth_context_	./grpc/auth/peer_identity_util_test.cc	/^  StrictMock<MockEnclaveAuthContext> mock_enclave_auth_context_;$/;"	m	class:asylo::__anon504::PeerIdentityUtilTest	file:
mock_identity_expectation_matcher_	./grpc/auth/peer_identity_util_test.cc	/^  MockIdentityExpectationMatcher mock_identity_expectation_matcher_;$/;"	m	class:asylo::__anon250::PeerIdentityUtilTest	file:
mock_identity_expectation_matcher_	./grpc/auth/peer_identity_util_test.cc	/^  MockIdentityExpectationMatcher mock_identity_expectation_matcher_;$/;"	m	class:asylo::__anon504::PeerIdentityUtilTest	file:
modtime	./platform/common/bridge_types.h	/^  int64_t modtime;$/;"	m	struct:bridge_utimbuf
modtime	./platform/posix/include/utime.h	/^  time_t modtime;$/;"	m	struct:utimbuf
modulus	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kRsa3072ModulusSize> modulus;$/;"	m	struct:asylo::sgx::Rsa3072PublicKey
month	./identity/sgx/identity_key_management_structs.h	/^  uint8_t month;$/;"	m	struct:asylo::sgx::Date
move_only	./util/statusor_test.cc	/^  MoveOnlyDataType move_only;$/;"	m	struct:asylo::__anon231::ImplicitlyMoveConvertible	file:
move_only	./util/statusor_test.cc	/^  MoveOnlyDataType move_only;$/;"	m	struct:asylo::__anon485::ImplicitlyMoveConvertible	file:
mrenclave	./identity/sgx/fake_enclave.h	/^    UnsafeBytes<SHA256_DIGEST_LENGTH> mrenclave;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
mrenclave	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<SHA256_DIGEST_LENGTH> mrenclave;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
mrenclave	./identity/sgx/self_identity.h	/^  UnsafeBytes<SHA256_DIGEST_LENGTH> mrenclave;$/;"	m	struct:asylo::sgx::SelfIdentity
mrenclave_	./identity/sgx/fake_enclave.h	/^  UnsafeBytes<SHA256_DIGEST_LENGTH> mrenclave_;$/;"	m	class:asylo::sgx::FakeEnclave
mrsigner	./identity/sgx/fake_enclave.h	/^    UnsafeBytes<SHA256_DIGEST_LENGTH> mrsigner;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
mrsigner	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<SHA256_DIGEST_LENGTH> mrsigner;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
mrsigner	./identity/sgx/self_identity.h	/^  UnsafeBytes<SHA256_DIGEST_LENGTH> mrsigner;$/;"	m	struct:asylo::sgx::SelfIdentity
mrsigner_	./identity/sgx/fake_enclave.h	/^  UnsafeBytes<SHA256_DIGEST_LENGTH> mrsigner_;$/;"	m	class:asylo::sgx::FakeEnclave
ms_buffer	./platform/primitives/sgx/untrusted_sgx.cc	/^  void* ms_buffer;$/;"	m	struct:asylo::primitives::__anon338::ms_ecall_dispatch_trusted_call_t	file:
ms_buffer	./platform/primitives/sgx/untrusted_sgx.cc	/^  void* ms_buffer;$/;"	m	struct:asylo::primitives::__anon84::ms_ecall_dispatch_trusted_call_t	file:
ms_ecall_dispatch_trusted_call_t	./platform/primitives/sgx/untrusted_sgx.cc	/^struct ms_ecall_dispatch_trusted_call_t {$/;"	s	namespace:asylo::primitives::__anon338	file:
ms_ecall_dispatch_trusted_call_t	./platform/primitives/sgx/untrusted_sgx.cc	/^struct ms_ecall_dispatch_trusted_call_t {$/;"	s	namespace:asylo::primitives::__anon84	file:
ms_retval	./platform/primitives/sgx/untrusted_sgx.cc	/^  int ms_retval;$/;"	m	struct:asylo::primitives::__anon338::ms_ecall_dispatch_trusted_call_t	file:
ms_retval	./platform/primitives/sgx/untrusted_sgx.cc	/^  int ms_retval;$/;"	m	struct:asylo::primitives::__anon84::ms_ecall_dispatch_trusted_call_t	file:
ms_selector	./platform/primitives/sgx/untrusted_sgx.cc	/^  uint64_t ms_selector;$/;"	m	struct:asylo::primitives::__anon338::ms_ecall_dispatch_trusted_call_t	file:
ms_selector	./platform/primitives/sgx/untrusted_sgx.cc	/^  uint64_t ms_selector;$/;"	m	struct:asylo::primitives::__anon84::ms_ecall_dispatch_trusted_call_t	file:
msg_control	./platform/common/bridge_types.h	/^  void *msg_control;$/;"	m	struct:bridge_msghdr
msg_control	./platform/posix/include/sys/socket.h	/^  void *msg_control;$/;"	m	struct:msghdr
msg_control_ptr_	./platform/core/bridge_msghdr_wrapper.h	/^  UntrustedUniquePtr<void> msg_control_ptr_;$/;"	m	class:asylo::BridgeMsghdrWrapper
msg_controllen	./platform/common/bridge_types.h	/^  uint64_t msg_controllen;$/;"	m	struct:bridge_msghdr
msg_controllen	./platform/posix/include/sys/socket.h	/^  socklen_t msg_controllen;$/;"	m	struct:msghdr
msg_flags	./platform/common/bridge_types.h	/^  int32_t msg_flags;$/;"	m	struct:bridge_msghdr
msg_flags	./platform/posix/include/sys/socket.h	/^  int msg_flags;$/;"	m	struct:msghdr
msg_in_	./platform/core/bridge_msghdr_wrapper.h	/^  const msghdr *msg_in_;$/;"	m	class:asylo::BridgeMsghdrWrapper
msg_iov	./platform/common/bridge_types.h	/^  struct bridge_iovec *msg_iov;$/;"	m	struct:bridge_msghdr	typeref:struct:bridge_msghdr::bridge_iovec
msg_iov	./platform/posix/include/sys/socket.h	/^  struct iovec *msg_iov;$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec
msg_iov_base_ptrs_	./platform/core/bridge_msghdr_wrapper.h	/^  std::vector<UntrustedUniquePtr<void>> msg_iov_base_ptrs_;$/;"	m	class:asylo::BridgeMsghdrWrapper
msg_iov_ptr_	./platform/core/bridge_msghdr_wrapper.h	/^  UntrustedUniquePtr<void> msg_iov_ptr_;$/;"	m	class:asylo::BridgeMsghdrWrapper
msg_iovlen	./platform/common/bridge_types.h	/^  uint64_t msg_iovlen;$/;"	m	struct:bridge_msghdr
msg_iovlen	./platform/posix/include/sys/socket.h	/^  size_t msg_iovlen;$/;"	m	struct:msghdr
msg_name	./platform/common/bridge_types.h	/^  void *msg_name;$/;"	m	struct:bridge_msghdr
msg_name	./platform/posix/include/sys/socket.h	/^  void *msg_name;$/;"	m	struct:msghdr
msg_name_ptr_	./platform/core/bridge_msghdr_wrapper.h	/^  UntrustedUniquePtr<void> msg_name_ptr_;$/;"	m	class:asylo::BridgeMsghdrWrapper
msg_namelen	./platform/common/bridge_types.h	/^  uint64_t msg_namelen;$/;"	m	struct:bridge_msghdr
msg_namelen	./platform/posix/include/sys/socket.h	/^  socklen_t msg_namelen;$/;"	m	struct:msghdr
msg_out_	./platform/core/bridge_msghdr_wrapper.h	/^  UntrustedUniquePtr<bridge_msghdr> msg_out_;$/;"	m	class:asylo::BridgeMsghdrWrapper
msghdr	./platform/posix/include/sys/socket.h	/^struct msghdr {$/;"	s
mtree_	./platform/storage/secure/ctmmt_authenticated_dictionary.h	/^  std::unique_ptr<MutableMerkleTree> mtree_;$/;"	m	class:asylo::platform::storage::CTMMTAuthenticatedDictionary
mu	./platform/storage/secure/aead_handler.h	/^    absl::Mutex mu;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileControl
mu	./test/misc/enclave_entry_count_test_enclave.cc	/^absl::Mutex mu;$/;"	m	namespace:asylo	file:
mu	./test/misc/mutex_test.cc	/^absl::Mutex mu;$/;"	m	namespace:asylo::__anon189	file:
mu	./test/misc/mutex_test.cc	/^absl::Mutex mu;$/;"	m	namespace:asylo::__anon443	file:
mu2	./test/misc/mutex_test.cc	/^absl::Mutex mu2;$/;"	m	namespace:asylo::__anon189	file:
mu2	./test/misc/mutex_test.cc	/^absl::Mutex mu2;$/;"	m	namespace:asylo::__anon443	file:
mu3	./test/misc/mutex_test.cc	/^absl::Mutex mu3;$/;"	m	namespace:asylo::__anon189	file:
mu3	./test/misc/mutex_test.cc	/^absl::Mutex mu3;$/;"	m	namespace:asylo::__anon443	file:
mu_	./grpc/util/grpc_server_launcher.h	/^  mutable absl::Mutex mu_;$/;"	m	class:asylo::GrpcServerLauncher
mu_	./platform/common/singleton.h	/^  static absl::Mutex mu_;$/;"	m	class:asylo::Singleton
mu_	./platform/common/singleton.h	/^absl::Mutex Singleton<T, F>::mu_;$/;"	m	class:asylo::Singleton
mu_	./platform/common/static_map.h	/^  static absl::Mutex mu_;$/;"	m	class:asylo::StaticMap
mu_	./platform/common/static_map.h	/^absl::Mutex StaticMap<MapName, T, N>::mu_;$/;"	m	class:asylo::StaticMap
mu_	./platform/core/enclave_manager.h	/^  static absl::Mutex mu_;$/;"	m	class:asylo::EnclaveManager
mu_	./platform/core/shared_resource_manager.h	/^  absl::Mutex mu_;$/;"	m	class:asylo::SharedResourceManager
mu_	./platform/crypto/gcmlib/gcm_cryptor.h	/^  absl::Mutex mu_;$/;"	m	class:asylo::platform::crypto::gcmlib::GcmCryptor
mu_	./platform/crypto/gcmlib/gcm_cryptor.h	/^  absl::Mutex mu_;$/;"	m	class:asylo::platform::crypto::gcmlib::GcmCryptorRegistry
mu_	./platform/posix/include/semaphore.h	/^  pthread_mutex_t mu_;$/;"	m	struct:sem_t
mu_	./platform/storage/secure/aead_handler.h	/^  absl::Mutex mu_;$/;"	m	class:asylo::platform::storage::AeadHandler
mu_	./test/misc/condvar_test.cc	/^  pthread_mutex_t mu_ = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:asylo::__anon194::BroadcastTest	file:
mu_	./test/misc/condvar_test.cc	/^  pthread_mutex_t mu_ = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:asylo::__anon448::BroadcastTest	file:
mu_	./test/misc/condvar_test.cc	/^  pthread_mutex_t mu_;$/;"	m	class:asylo::__anon194::ProducerConsumerTest	file:
mu_	./test/misc/condvar_test.cc	/^  pthread_mutex_t mu_;$/;"	m	class:asylo::__anon448::ProducerConsumerTest	file:
mu_	./util/mutex_guarded.h	/^  absl::Mutex *mu_;$/;"	m	class:asylo::LockView
mu_	./util/mutex_guarded.h	/^  absl::Mutex *mu_;$/;"	m	class:asylo::ReaderLockView
mu_	./util/mutex_guarded.h	/^  mutable absl::Mutex mu_;$/;"	m	class:asylo::MutexGuarded
multi_valued	./platform/system_call/type_conversions/types_conversions_generator.cc	/^  bool multi_valued;$/;"	m	struct:EnumProperties	file:
munlock	./platform/posix/mman.cc	/^int munlock(const void *addr, size_t len) {$/;"	f
munlockall	./platform/posix/mman.cc	/^int munlockall(void) {$/;"	f
munmap	./platform/posix/mman.cc	/^int munmap(void *addr, size_t length) {$/;"	f
munmap	./platform/primitives/sim/runtime_syscalls.c	/^int munmap(void *addr, size_t length) {$/;"	f
mutable_accepted_peer_assertions	./grpc/auth/core/enclave_credentials.h	/^  assertion_description_array* mutable_accepted_peer_assertions() {$/;"	f	class:final
mutable_additional_authenticated_data	./grpc/auth/core/enclave_credentials.h	/^  safe_string* mutable_additional_authenticated_data() {$/;"	f	class:final
mutable_client	./test/util/enclave_test_launcher.h	/^  EnclaveClient *mutable_client() { return client_; }$/;"	f	class:asylo::EnclaveTestLauncher
mutable_self_assertions	./grpc/auth/core/enclave_credentials.h	/^  assertion_description_array* mutable_self_assertions() {$/;"	f	class:final
mutex_	./platform/core/trusted_application.h	/^  State enclave_state_ GUARDED_BY(mutex_) = State::kUninitialized;$/;"	m	class:asylo::TrustedApplication
mutex_	./platform/core/trusted_application.h	/^  absl::Mutex mutex_;$/;"	m	class:asylo::TrustedApplication
mutex_	./platform/posix/pthread_impl.h	/^  pthread_mutex_t *const mutex_;$/;"	m	class:asylo::pthread_impl::PthreadMutexLock
name	./platform/core/shared_name.h	/^  const std::string &name() const { return name_; }$/;"	f	class:asylo::SharedName
name	./platform/posix/include/sys/inotify.h	/^  char name[];      \/\/ Optional null-terminated name$/;"	m	struct:inotify_event
name	./platform/system_call/generate_tables.cc	/^  std::string name;$/;"	m	struct:ParameterDescription	file:
name	./platform/system_call/generate_tables.cc	/^  std::string name;$/;"	m	struct:SystemCallDescription	file:
name	./platform/system_call/metadata.cc	/^  const char *name;$/;"	m	struct:asylo::system_call::__anon116::ParameterTableEntry	file:
name	./platform/system_call/metadata.cc	/^  const char *name;$/;"	m	struct:asylo::system_call::__anon116::SystemCallTableEntry	file:
name	./platform/system_call/metadata.cc	/^  const char *name;$/;"	m	struct:asylo::system_call::__anon370::ParameterTableEntry	file:
name	./platform/system_call/metadata.cc	/^  const char *name;$/;"	m	struct:asylo::system_call::__anon370::SystemCallTableEntry	file:
name	./platform/system_call/metadata.cc	/^absl::string_view ParameterDescriptor::name() const {$/;"	f	class:asylo::system_call::ParameterDescriptor
name	./platform/system_call/metadata.cc	/^absl::string_view SystemCallDescriptor::name() const {$/;"	f	class:asylo::system_call::SystemCallDescriptor
name_	./grpc/util/grpc_server_launcher.h	/^  std::string name_;$/;"	m	class:asylo::GrpcServerLauncher
name_	./platform/core/enclave_client.h	/^  std::string name_;$/;"	m	class:asylo::EnclaveClient
name_	./platform/core/shared_name.h	/^  std::string name_;$/;"	m	class:asylo::SharedName
name_	./platform/primitives/untrusted_primitives.h	/^  absl::string_view name_;$/;"	m	class:asylo::primitives::Client
name_table_header	./util/elf_reader_test.cc	/^    Elf64_Shdr *name_table_header;$/;"	m	struct:asylo::__anon226::ElfReaderTest::ElfReaderTestMembers	file:
name_table_header	./util/elf_reader_test.cc	/^    Elf64_Shdr *name_table_header;$/;"	m	struct:asylo::__anon480::ElfReaderTest::ElfReaderTestMembers	file:
name_table_header_	./util/elf_reader_test.cc	/^  Elf64_Shdr *const name_table_header_;$/;"	m	class:asylo::__anon226::ElfReaderTest	file:
name_table_header_	./util/elf_reader_test.cc	/^  Elf64_Shdr *const name_table_header_;$/;"	m	class:asylo::__anon480::ElfReaderTest	file:
name_table_name	./util/elf_reader_test.cc	/^    absl::string_view name_table_name;$/;"	m	struct:asylo::__anon226::ElfReaderTest::ElfReaderTestMembers	file:
name_table_name	./util/elf_reader_test.cc	/^    absl::string_view name_table_name;$/;"	m	struct:asylo::__anon480::ElfReaderTest::ElfReaderTestMembers	file:
name_table_name_	./util/elf_reader_test.cc	/^  const absl::string_view name_table_name_;$/;"	m	class:asylo::__anon226::ElfReaderTest	file:
name_table_name_	./util/elf_reader_test.cc	/^  const absl::string_view name_table_name_;$/;"	m	class:asylo::__anon480::ElfReaderTest	file:
namer_	./platform/common/static_map.h	/^  static N namer_;$/;"	m	class:asylo::StaticMap
namer_	./platform/common/static_map.h	/^N StaticMap<MapName, T, N>::namer_;$/;"	m	class:asylo::StaticMap
names	./examples/hello_world/hello_driver.cc	/^std::vector<std::string> names;$/;"	v
nanosleep	./platform/posix/time.cc	/^int nanosleep(const struct timespec *requested, struct timespec *remainder) {$/;"	f
nanosleep	./platform/primitives/sim/runtime_stubs.c	/^int nanosleep() { return 0; }$/;"	f
new_sa	./examples/hello_world/hello_driver.cc	/^struct sigaction new_sa;$/;"	v	typeref:struct:sigaction
next	./platform/primitives/parameter_stack.h	/^    Item *next;$/;"	m	struct:asylo::primitives::ParameterStack::Item
next	./platform/primitives/util/message.h	/^  Extent next() {$/;"	f	class:asylo::primitives::MessageReader
nfds_t	./platform/posix/include/poll.h	/^typedef unsigned nfds_t;$/;"	t
nodename	./platform/common/bridge_types.h	/^  char nodename[BRIDGE_UTSNAME_FIELD_LENGTH];$/;"	m	struct:BridgeUtsName
nodename	./platform/posix/include/sys/utsname.h	/^  char nodename[UTSNAME_FIELD_LENGTH];$/;"	m	struct:utsname
noexcept	./platform/primitives/util/message.h	/^  MessageReader(MessageReader &&other) noexcept = default;$/;"	m	class:asylo::primitives::MessageReader
noexcept	./platform/primitives/util/message.h	/^  MessageWriter(MessageWriter &&other) noexcept = default;$/;"	m	class:asylo::primitives::MessageWriter
noexcept	./util/std_thread.h	/^  Thread(Thread &&other) noexcept = default;$/;"	m	class:asylo::Thread
non_null_expectation_	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  EnclaveIdentityExpectation non_null_expectation_;$/;"	m	class:asylo::__anon173::NullIdentityExpectationMatcherTest	file:
non_null_expectation_	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  EnclaveIdentityExpectation non_null_expectation_;$/;"	m	class:asylo::__anon427::NullIdentityExpectationMatcherTest	file:
non_null_identity_	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  EnclaveIdentity non_null_identity_;$/;"	m	class:asylo::__anon173::NullIdentityExpectationMatcherTest	file:
non_null_identity_	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  EnclaveIdentity non_null_identity_;$/;"	m	class:asylo::__anon427::NullIdentityExpectationMatcherTest	file:
non_recursive_	./platform/core/test/lock_test.cc	/^  LockType non_recursive_;$/;"	m	class:asylo::__anon130::LockTest	file:
non_recursive_	./platform/core/test/lock_test.cc	/^  LockType non_recursive_;$/;"	m	class:asylo::__anon384::LockTest	file:
nonblock_	./platform/posix/io/io_context_eventfd.h	/^  bool nonblock_;$/;"	m	class:asylo::io::IOContextEventFd
nonce	./crypto/aead_test_vector.h	/^  std::string nonce;$/;"	m	struct:asylo::AeadTestVector
nonce	./platform/crypto/gcmlib/gcm_cryptor.h	/^    uint8_t nonce[kNonceLength];$/;"	m	struct:asylo::platform::crypto::gcmlib::GcmCryptor::Token
nonce1_hex	./crypto/aes_gcm_siv_test.cc	/^const char nonce1_hex[] = "030000000000000000000000";$/;"	m	namespace:asylo::__anon26	file:
nonce1_hex	./crypto/aes_gcm_siv_test.cc	/^const char nonce1_hex[] = "030000000000000000000000";$/;"	m	namespace:asylo::__anon280	file:
nonce2_hex	./crypto/aes_gcm_siv_test.cc	/^const char nonce2_hex[] = "030000000000000000000000";$/;"	m	namespace:asylo::__anon26	file:
nonce2_hex	./crypto/aes_gcm_siv_test.cc	/^const char nonce2_hex[] = "030000000000000000000000";$/;"	m	namespace:asylo::__anon280	file:
nonce_	./crypto/aes_gcm_siv_test.cc	/^  AesGcmSivNonce nonce_;$/;"	m	class:asylo::__anon26::FixedNonceGenerator	file:
nonce_	./crypto/aes_gcm_siv_test.cc	/^  AesGcmSivNonce nonce_;$/;"	m	class:asylo::__anon280::FixedNonceGenerator	file:
nonce_deleter_	./platform/arch/sgx/untrusted/ocalls.cc	/^  asylo::MallocUniquePtr<void> nonce_deleter_;$/;"	m	class:__anon286::SnapshotDataDeleter	file:
nonce_deleter_	./platform/arch/sgx/untrusted/ocalls.cc	/^  asylo::MallocUniquePtr<void> nonce_deleter_;$/;"	m	class:__anon32::SnapshotDataDeleter	file:
nonce_deleter_	./platform/posix/fork_security_test_driver.cc	/^    MallocUniquePtr<void> nonce_deleter_;$/;"	m	class:asylo::__anon305::SnapshotDeleter::SnapshotEntryDeleter	file:
nonce_deleter_	./platform/posix/fork_security_test_driver.cc	/^    MallocUniquePtr<void> nonce_deleter_;$/;"	m	class:asylo::__anon51::SnapshotDeleter::SnapshotEntryDeleter	file:
nonce_generator_	./crypto/aead_cryptor.h	/^  const std::unique_ptr<NonceGeneratorInterface> nonce_generator_;$/;"	m	class:asylo::experimental::AeadCryptor
nonce_generator_	./crypto/aes_gcm_siv.h	/^  std::unique_ptr<NonceGenerator<kAesGcmSivNonceSize>> nonce_generator_;$/;"	m	class:asylo::AesGcmSivCryptor
nonce_size	./crypto/nonce_generator.h	/^  static constexpr size_t nonce_size() { return Size; }$/;"	f	class:asylo::NonceGenerator
nonce_size_	./crypto/aead_key.h	/^  const size_t nonce_size_;$/;"	m	class:asylo::AeadKey
nonce_size_	./crypto/random_nonce_generator.h	/^  const size_t nonce_size_;$/;"	m	class:asylo::RandomNonceGenerator
nr_ocall	./platform/primitives/sgx/untrusted_sgx.cc	/^    size_t nr_ocall;$/;"	m	struct:ocall_table_t	file:
ns_c_2	./platform/posix/include/arpa/nameser.h	/^  ns_c_2 = 2,       \/* unallocated\/unsupported. *\/$/;"	e	enum:__ns_class
ns_c_any	./platform/posix/include/arpa/nameser.h	/^  ns_c_any = 255,  \/* Wildcard match. *\/$/;"	e	enum:__ns_class
ns_c_chaos	./platform/posix/include/arpa/nameser.h	/^  ns_c_chaos = 3,   \/* MIT Chaos-net. *\/$/;"	e	enum:__ns_class
ns_c_hs	./platform/posix/include/arpa/nameser.h	/^  ns_c_hs = 4,      \/* MIT Hesiod. *\/$/;"	e	enum:__ns_class
ns_c_in	./platform/posix/include/arpa/nameser.h	/^  ns_c_in = 1,      \/* Internet. *\/$/;"	e	enum:__ns_class
ns_c_in	./platform/system/include/arpa/nameser.h	/^  ns_c_in = 1,       \/\/ Internet.$/;"	e	enum:__ns_class
ns_c_invalid	./platform/posix/include/arpa/nameser.h	/^  ns_c_invalid = 0, \/* Cookie. *\/$/;"	e	enum:__ns_class
ns_c_invalid	./platform/system/include/arpa/nameser.h	/^  ns_c_invalid = 0,  \/\/ Cookie.$/;"	e	enum:__ns_class
ns_c_max	./platform/posix/include/arpa/nameser.h	/^  ns_c_max = 65536$/;"	e	enum:__ns_class
ns_c_none	./platform/posix/include/arpa/nameser.h	/^  ns_c_none = 254, \/* for prereq. sections in update requests *\/$/;"	e	enum:__ns_class
ns_class	./platform/posix/include/arpa/nameser.h	/^} ns_class;$/;"	t	typeref:enum:__ns_class
ns_class	./platform/system/include/arpa/nameser.h	/^} ns_class;$/;"	t	typeref:enum:__ns_class
ns_o_iquery	./platform/posix/include/arpa/nameser.h	/^  ns_o_iquery = 1, \/* Inverse query (deprecated\/unsupported). *\/$/;"	e	enum:__ns_opcode
ns_o_max	./platform/posix/include/arpa/nameser.h	/^  ns_o_max = 6$/;"	e	enum:__ns_opcode
ns_o_notify	./platform/posix/include/arpa/nameser.h	/^  ns_o_notify = 4, \/* Zone change notification. *\/$/;"	e	enum:__ns_opcode
ns_o_query	./platform/posix/include/arpa/nameser.h	/^  ns_o_query = 0,  \/* Standard query. *\/$/;"	e	enum:__ns_opcode
ns_o_query	./platform/system/include/arpa/nameser.h	/^  ns_o_query = 0,  \/\/ Standard query.$/;"	e	enum:__ns_opcode
ns_o_status	./platform/posix/include/arpa/nameser.h	/^  ns_o_status = 2, \/* Name server status query (unsupported). *\/$/;"	e	enum:__ns_opcode
ns_o_update	./platform/posix/include/arpa/nameser.h	/^  ns_o_update = 5, \/* Zone update message. *\/$/;"	e	enum:__ns_opcode
ns_opcode	./platform/posix/include/arpa/nameser.h	/^} ns_opcode;$/;"	t	typeref:enum:__ns_opcode
ns_opcode	./platform/system/include/arpa/nameser.h	/^} ns_opcode;$/;"	t	typeref:enum:__ns_opcode
ns_r_badkey	./platform/posix/include/arpa/nameser.h	/^  ns_r_badkey = 17,$/;"	e	enum:__ns_rcode
ns_r_badsig	./platform/posix/include/arpa/nameser.h	/^  ns_r_badsig = 16,$/;"	e	enum:__ns_rcode
ns_r_badtime	./platform/posix/include/arpa/nameser.h	/^  ns_r_badtime = 18$/;"	e	enum:__ns_rcode
ns_r_badvers	./platform/posix/include/arpa/nameser.h	/^  ns_r_badvers = 16,$/;"	e	enum:__ns_rcode
ns_r_formerr	./platform/posix/include/arpa/nameser.h	/^  ns_r_formerr = 1,  \/* Format error. *\/$/;"	e	enum:__ns_rcode
ns_r_formerr	./platform/system/include/arpa/nameser.h	/^  ns_r_formerr = 1,   \/\/ Format error.$/;"	e	enum:__ns_rcode
ns_r_max	./platform/posix/include/arpa/nameser.h	/^  ns_r_max = 11,$/;"	e	enum:__ns_rcode
ns_r_noerror	./platform/posix/include/arpa/nameser.h	/^  ns_r_noerror = 0,  \/* No error occurred. *\/$/;"	e	enum:__ns_rcode
ns_r_noerror	./platform/system/include/arpa/nameser.h	/^  ns_r_noerror = 0,   \/\/ No error occurred.$/;"	e	enum:__ns_rcode
ns_r_notauth	./platform/posix/include/arpa/nameser.h	/^  ns_r_notauth = 9,  \/* Not authoritative for zone *\/$/;"	e	enum:__ns_rcode
ns_r_notimpl	./platform/posix/include/arpa/nameser.h	/^  ns_r_notimpl = 4,  \/* Unimplemented. *\/$/;"	e	enum:__ns_rcode
ns_r_notimpl	./platform/system/include/arpa/nameser.h	/^  ns_r_notimpl = 4,   \/\/ Unimplemented.$/;"	e	enum:__ns_rcode
ns_r_notzone	./platform/posix/include/arpa/nameser.h	/^  ns_r_notzone = 10, \/* Zone of record different from zone section *\/$/;"	e	enum:__ns_rcode
ns_r_nxdomain	./platform/posix/include/arpa/nameser.h	/^  ns_r_nxdomain = 3, \/* Name error. *\/$/;"	e	enum:__ns_rcode
ns_r_nxdomain	./platform/system/include/arpa/nameser.h	/^  ns_r_nxdomain = 3,  \/\/ Name error.$/;"	e	enum:__ns_rcode
ns_r_nxrrset	./platform/posix/include/arpa/nameser.h	/^  ns_r_nxrrset = 8,  \/* RRset does not exist *\/$/;"	e	enum:__ns_rcode
ns_r_refused	./platform/posix/include/arpa/nameser.h	/^  ns_r_refused = 5,  \/* Operation refused. *\/$/;"	e	enum:__ns_rcode
ns_r_refused	./platform/system/include/arpa/nameser.h	/^  ns_r_refused = 5,   \/\/ Operation refused.$/;"	e	enum:__ns_rcode
ns_r_servfail	./platform/posix/include/arpa/nameser.h	/^  ns_r_servfail = 2, \/* Server failure. *\/$/;"	e	enum:__ns_rcode
ns_r_servfail	./platform/system/include/arpa/nameser.h	/^  ns_r_servfail = 2,  \/\/ Server failure.$/;"	e	enum:__ns_rcode
ns_r_yxdomain	./platform/posix/include/arpa/nameser.h	/^  ns_r_yxdomain = 6, \/* Name exists *\/$/;"	e	enum:__ns_rcode
ns_r_yxrrset	./platform/posix/include/arpa/nameser.h	/^  ns_r_yxrrset = 7,  \/* RRset exists *\/$/;"	e	enum:__ns_rcode
ns_rcode	./platform/posix/include/arpa/nameser.h	/^} ns_rcode;$/;"	t	typeref:enum:__ns_rcode
ns_rcode	./platform/system/include/arpa/nameser.h	/^} ns_rcode;$/;"	t	typeref:enum:__ns_rcode
ns_t_a	./platform/posix/include/arpa/nameser.h	/^  ns_t_a = 1,         \/* Host address. *\/$/;"	e	enum:__ns_type
ns_t_a	./platform/system/include/arpa/nameser.h	/^  ns_t_a = 1,        \/\/ Host address.$/;"	e	enum:__ns_type
ns_t_a6	./platform/posix/include/arpa/nameser.h	/^  ns_t_a6 = 38,       \/* IPv6 address (deprecated, use ns_t_aaaa) *\/$/;"	e	enum:__ns_type
ns_t_aaaa	./platform/posix/include/arpa/nameser.h	/^  ns_t_aaaa = 28,     \/* Ip6 Address. *\/$/;"	e	enum:__ns_type
ns_t_aaaa	./platform/system/include/arpa/nameser.h	/^  ns_t_aaaa = 28,  \/\/ Ip6 Address.$/;"	e	enum:__ns_type
ns_t_afsdb	./platform/posix/include/arpa/nameser.h	/^  ns_t_afsdb = 18,    \/* AFS cell database. *\/$/;"	e	enum:__ns_type
ns_t_any	./platform/posix/include/arpa/nameser.h	/^  ns_t_any = 255,     \/* Wildcard match. *\/$/;"	e	enum:__ns_type
ns_t_apl	./platform/posix/include/arpa/nameser.h	/^  ns_t_apl = 42,      \/* Address prefix list (RFC3123) *\/$/;"	e	enum:__ns_type
ns_t_atma	./platform/posix/include/arpa/nameser.h	/^  ns_t_atma = 34,     \/* ATM Address *\/$/;"	e	enum:__ns_type
ns_t_axfr	./platform/posix/include/arpa/nameser.h	/^  ns_t_axfr = 252,    \/* Transfer zone of authority. *\/$/;"	e	enum:__ns_type
ns_t_cert	./platform/posix/include/arpa/nameser.h	/^  ns_t_cert = 37,     \/* Certification record *\/$/;"	e	enum:__ns_type
ns_t_cname	./platform/posix/include/arpa/nameser.h	/^  ns_t_cname = 5,     \/* Canonical name. *\/$/;"	e	enum:__ns_type
ns_t_cname	./platform/system/include/arpa/nameser.h	/^  ns_t_cname = 5,    \/\/ Canonical name.$/;"	e	enum:__ns_type
ns_t_dname	./platform/posix/include/arpa/nameser.h	/^  ns_t_dname = 39,    \/* Non-terminal DNAME (for IPv6) *\/$/;"	e	enum:__ns_type
ns_t_eid	./platform/posix/include/arpa/nameser.h	/^  ns_t_eid = 31,      \/* Endpoint identifier. *\/$/;"	e	enum:__ns_type
ns_t_gpos	./platform/posix/include/arpa/nameser.h	/^  ns_t_gpos = 27,     \/* Geographical position (withdrawn). *\/$/;"	e	enum:__ns_type
ns_t_hinfo	./platform/posix/include/arpa/nameser.h	/^  ns_t_hinfo = 13,    \/* Host information. *\/$/;"	e	enum:__ns_type
ns_t_invalid	./platform/posix/include/arpa/nameser.h	/^  ns_t_invalid = 0,   \/* Cookie. *\/$/;"	e	enum:__ns_type
ns_t_invalid	./platform/system/include/arpa/nameser.h	/^  ns_t_invalid = 0,  \/\/ Cookie.$/;"	e	enum:__ns_type
ns_t_isdn	./platform/posix/include/arpa/nameser.h	/^  ns_t_isdn = 20,     \/* ISDN calling address. *\/$/;"	e	enum:__ns_type
ns_t_ixfr	./platform/posix/include/arpa/nameser.h	/^  ns_t_ixfr = 251,    \/* Incremental zone transfer. *\/$/;"	e	enum:__ns_type
ns_t_key	./platform/posix/include/arpa/nameser.h	/^  ns_t_key = 25,      \/* Security key. *\/$/;"	e	enum:__ns_type
ns_t_kx	./platform/posix/include/arpa/nameser.h	/^  ns_t_kx = 36,       \/* Key Exchange *\/$/;"	e	enum:__ns_type
ns_t_loc	./platform/posix/include/arpa/nameser.h	/^  ns_t_loc = 29,      \/* Location Information. *\/$/;"	e	enum:__ns_type
ns_t_maila	./platform/posix/include/arpa/nameser.h	/^  ns_t_maila = 254,   \/* Transfer mail agent records. *\/$/;"	e	enum:__ns_type
ns_t_mailb	./platform/posix/include/arpa/nameser.h	/^  ns_t_mailb = 253,   \/* Transfer mailbox records. *\/$/;"	e	enum:__ns_type
ns_t_max	./platform/posix/include/arpa/nameser.h	/^  ns_t_max = 65536$/;"	e	enum:__ns_type
ns_t_max	./platform/system/include/arpa/nameser.h	/^  ns_t_max = 65536$/;"	e	enum:__ns_type
ns_t_mb	./platform/posix/include/arpa/nameser.h	/^  ns_t_mb = 7,        \/* Mailbox domain name. *\/$/;"	e	enum:__ns_type
ns_t_md	./platform/posix/include/arpa/nameser.h	/^  ns_t_md = 3,        \/* Mail destination. *\/$/;"	e	enum:__ns_type
ns_t_mf	./platform/posix/include/arpa/nameser.h	/^  ns_t_mf = 4,        \/* Mail forwarder. *\/$/;"	e	enum:__ns_type
ns_t_mg	./platform/posix/include/arpa/nameser.h	/^  ns_t_mg = 8,        \/* Mail group member. *\/$/;"	e	enum:__ns_type
ns_t_minfo	./platform/posix/include/arpa/nameser.h	/^  ns_t_minfo = 14,    \/* Mailbox information. *\/$/;"	e	enum:__ns_type
ns_t_mr	./platform/posix/include/arpa/nameser.h	/^  ns_t_mr = 9,        \/* Mail rename name. *\/$/;"	e	enum:__ns_type
ns_t_mx	./platform/posix/include/arpa/nameser.h	/^  ns_t_mx = 15,       \/* Mail routing information. *\/$/;"	e	enum:__ns_type
ns_t_mx	./platform/system/include/arpa/nameser.h	/^  ns_t_mx = 15,   \/\/ Mail routing information.$/;"	e	enum:__ns_type
ns_t_naptr	./platform/posix/include/arpa/nameser.h	/^  ns_t_naptr = 35,    \/* Naming Authority PoinTeR *\/$/;"	e	enum:__ns_type
ns_t_nimloc	./platform/posix/include/arpa/nameser.h	/^  ns_t_nimloc = 32,   \/* Nimrod Locator. *\/$/;"	e	enum:__ns_type
ns_t_ns	./platform/posix/include/arpa/nameser.h	/^  ns_t_ns = 2,        \/* Authoritative server. *\/$/;"	e	enum:__ns_type
ns_t_ns	./platform/system/include/arpa/nameser.h	/^  ns_t_ns = 2,       \/\/ Authoritative server.$/;"	e	enum:__ns_type
ns_t_nsap	./platform/posix/include/arpa/nameser.h	/^  ns_t_nsap = 22,     \/* NSAP address. *\/$/;"	e	enum:__ns_type
ns_t_nsap_ptr	./platform/posix/include/arpa/nameser.h	/^  ns_t_nsap_ptr = 23, \/* Reverse NSAP lookup (deprecated). *\/$/;"	e	enum:__ns_type
ns_t_null	./platform/posix/include/arpa/nameser.h	/^  ns_t_null = 10,     \/* Null resource record. *\/$/;"	e	enum:__ns_type
ns_t_nxt	./platform/posix/include/arpa/nameser.h	/^  ns_t_nxt = 30,      \/* Next domain (security). *\/$/;"	e	enum:__ns_type
ns_t_opt	./platform/posix/include/arpa/nameser.h	/^  ns_t_opt = 41,      \/* EDNS0 option (meta-RR) *\/$/;"	e	enum:__ns_type
ns_t_ptr	./platform/posix/include/arpa/nameser.h	/^  ns_t_ptr = 12,      \/* Domain name pointer. *\/$/;"	e	enum:__ns_type
ns_t_ptr	./platform/system/include/arpa/nameser.h	/^  ns_t_ptr = 12,  \/\/ Domain name pointer.$/;"	e	enum:__ns_type
ns_t_px	./platform/posix/include/arpa/nameser.h	/^  ns_t_px = 26,       \/* X.400 mail mapping. *\/$/;"	e	enum:__ns_type
ns_t_rp	./platform/posix/include/arpa/nameser.h	/^  ns_t_rp = 17,       \/* Responsible person. *\/$/;"	e	enum:__ns_type
ns_t_rt	./platform/posix/include/arpa/nameser.h	/^  ns_t_rt = 21,       \/* Router. *\/$/;"	e	enum:__ns_type
ns_t_sig	./platform/posix/include/arpa/nameser.h	/^  ns_t_sig = 24,      \/* Security signature. *\/$/;"	e	enum:__ns_type
ns_t_sink	./platform/posix/include/arpa/nameser.h	/^  ns_t_sink = 40,     \/* Kitchen sink (experimentatl) *\/$/;"	e	enum:__ns_type
ns_t_soa	./platform/posix/include/arpa/nameser.h	/^  ns_t_soa = 6,       \/* Start of authority zone. *\/$/;"	e	enum:__ns_type
ns_t_srv	./platform/posix/include/arpa/nameser.h	/^  ns_t_srv = 33,      \/* Server Selection. *\/$/;"	e	enum:__ns_type
ns_t_tkey	./platform/posix/include/arpa/nameser.h	/^  ns_t_tkey = 249,    \/* Transaction key *\/$/;"	e	enum:__ns_type
ns_t_tsig	./platform/posix/include/arpa/nameser.h	/^  ns_t_tsig = 250,    \/* Transaction signature. *\/$/;"	e	enum:__ns_type
ns_t_txt	./platform/posix/include/arpa/nameser.h	/^  ns_t_txt = 16,      \/* Text strings. *\/$/;"	e	enum:__ns_type
ns_t_txt	./platform/system/include/arpa/nameser.h	/^  ns_t_txt = 16,  \/\/ Text strings.$/;"	e	enum:__ns_type
ns_t_wks	./platform/posix/include/arpa/nameser.h	/^  ns_t_wks = 11,      \/* Well known service. *\/$/;"	e	enum:__ns_type
ns_t_x25	./platform/posix/include/arpa/nameser.h	/^  ns_t_x25 = 19,      \/* X_25 calling address. *\/$/;"	e	enum:__ns_type
ns_t_zxfr	./platform/posix/include/arpa/nameser.h	/^  ns_t_zxfr = 256,    \/* BIND-specific, nonstandard. *\/$/;"	e	enum:__ns_type
ns_type	./platform/posix/include/arpa/nameser.h	/^} ns_type;$/;"	t	typeref:enum:__ns_type
ns_type	./platform/system/include/arpa/nameser.h	/^} ns_type;$/;"	t	typeref:enum:__ns_type
ntohl	./platform/posix/sockets/inet.cc	/^uint32_t ntohl(uint32_t netlong) {$/;"	f
ntohs	./platform/posix/sockets/inet.cc	/^uint16_t ntohs(uint16_t netshort) {$/;"	f
null_assertion_description_	./grpc/auth/core/ekep_handshaker_util_test.cc	/^  AssertionDescription null_assertion_description_;$/;"	m	class:asylo::__anon257::EkepHandshakerUtilTest	file:
null_assertion_description_	./grpc/auth/core/ekep_handshaker_util_test.cc	/^  AssertionDescription null_assertion_description_;$/;"	m	class:asylo::__anon511::EkepHandshakerUtilTest	file:
null_assertion_description_	./grpc/auth/enclave_credentials_options_test.cc	/^  AssertionDescription null_assertion_description_;$/;"	m	class:asylo::__anon249::EnclaveCredentialsOptionsTest	file:
null_assertion_description_	./grpc/auth/enclave_credentials_options_test.cc	/^  AssertionDescription null_assertion_description_;$/;"	m	class:asylo::__anon503::EnclaveCredentialsOptionsTest	file:
null_expectation_	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  EnclaveIdentityExpectation null_expectation_;$/;"	m	class:asylo::__anon173::NullIdentityExpectationMatcherTest	file:
null_expectation_	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  EnclaveIdentityExpectation null_expectation_;$/;"	m	class:asylo::__anon427::NullIdentityExpectationMatcherTest	file:
null_identity_	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  EnclaveIdentity null_identity_;$/;"	m	class:asylo::__anon173::NullIdentityExpectationMatcherTest	file:
null_identity_	./identity/null_identity/null_identity_expectation_matcher_test.cc	/^  EnclaveIdentity null_identity_;$/;"	m	class:asylo::__anon427::NullIdentityExpectationMatcherTest	file:
num_blocked_	./test/misc/condvar_test.cc	/^  volatile int num_blocked_ = 0;$/;"	m	class:asylo::__anon194::BroadcastTest	file:
num_blocked_	./test/misc/condvar_test.cc	/^  volatile int num_blocked_ = 0;$/;"	m	class:asylo::__anon448::BroadcastTest	file:
num_current_working_threads_	./platform/posix/io/eventfd_test.cc	/^  std::atomic_int num_current_working_threads_;$/;"	m	class:asylo::__anon327::EventFdTest	file:
num_current_working_threads_	./platform/posix/io/eventfd_test.cc	/^  std::atomic_int num_current_working_threads_;$/;"	m	class:asylo::__anon73::EventFdTest	file:
number_of_sealed_messages_	./crypto/aead_cryptor.h	/^  size_t number_of_sealed_messages_;$/;"	m	class:asylo::experimental::AeadCryptor
obj_ptr_	./identity/util/aligned_object_ptr.h	/^  T *obj_ptr_;$/;"	m	class:asylo::AlignedObjectPtr
ocall_dispatch_untrusted_call	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_dispatch_untrusted_call(uint64_t selector, void *buffer) {$/;"	f
ocall_enc_untrusted__exit	./platform/arch/sgx/untrusted/ocalls.cc	/^void ocall_enc_untrusted__exit(int rc) { _exit(rc); }$/;"	f
ocall_enc_untrusted_accept	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_accept(int sockfd, struct bridge_sockaddr *addr) {$/;"	f
ocall_enc_untrusted_acquire_shared_resource	./platform/arch/sgx/untrusted/ocalls.cc	/^void *ocall_enc_untrusted_acquire_shared_resource(SharedNameKind kind,$/;"	f
ocall_enc_untrusted_allocate_buffers	./platform/arch/sgx/untrusted/ocalls.cc	/^void **ocall_enc_untrusted_allocate_buffers(bridge_size_t count,$/;"	f
ocall_enc_untrusted_bind	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_bind(int sockfd,$/;"	f
ocall_enc_untrusted_clock_gettime	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_clock_gettime(bridge_clockid_t clk_id,$/;"	f
ocall_enc_untrusted_connect	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_connect(int sockfd,$/;"	f
ocall_enc_untrusted_deallocate_free_list	./platform/arch/sgx/untrusted/ocalls.cc	/^void ocall_enc_untrusted_deallocate_free_list(void **free_list,$/;"	f
ocall_enc_untrusted_epoll_create	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_epoll_create(int size) { return epoll_create(size); }$/;"	f
ocall_enc_untrusted_epoll_ctl	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_epoll_ctl(const char *serialized_args,$/;"	f
ocall_enc_untrusted_epoll_wait	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_epoll_wait(const char *serialized_args,$/;"	f
ocall_enc_untrusted_fcntl	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_fcntl(int fd, int bridge_cmd, int64_t arg) {$/;"	f
ocall_enc_untrusted_flock	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_flock(int fd, int operation) {$/;"	f
ocall_enc_untrusted_fork	./platform/arch/sgx/untrusted/ocalls.cc	/^pid_t ocall_enc_untrusted_fork(const char *enclave_name, const char *config,$/;"	f
ocall_enc_untrusted_fstat	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_fstat(int fd, struct bridge_stat *stat_buffer) {$/;"	f
ocall_enc_untrusted_getaddrinfo	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_getaddrinfo(const char *node, const char *service,$/;"	f
ocall_enc_untrusted_getifaddrs	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_getifaddrs(char **serialized_ifaddrs,$/;"	f
ocall_enc_untrusted_getitimer	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_getitimer(enum TimerType which,$/;"	f
ocall_enc_untrusted_getpeername	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_getpeername(int sockfd, struct bridge_sockaddr *addr) {$/;"	f
ocall_enc_untrusted_getpwuid	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_getpwuid(uid_t uid,$/;"	f
ocall_enc_untrusted_getrusage	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_getrusage(enum RUsageTarget who,$/;"	f
ocall_enc_untrusted_getsockname	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_getsockname(int sockfd, struct bridge_sockaddr *addr) {$/;"	f
ocall_enc_untrusted_getsockopt	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_getsockopt(int sockfd, int level, int optname,$/;"	f
ocall_enc_untrusted_gettimeofday	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_gettimeofday(struct bridge_timeval *tv, void *tz) {$/;"	f
ocall_enc_untrusted_hex_dump	./platform/arch/sgx/untrusted/ocalls.cc	/^void ocall_enc_untrusted_hex_dump(const void *buf, int nbytes) {$/;"	f
ocall_enc_untrusted_inet_ntop	./platform/arch/sgx/untrusted/ocalls.cc	/^char *ocall_enc_untrusted_inet_ntop(int af, const void *src,$/;"	f
ocall_enc_untrusted_inet_pton	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_inet_pton(AfFamily af, const char *src, void *dst,$/;"	f
ocall_enc_untrusted_initiate_migration	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_initiate_migration(const char *enclave_name) {$/;"	f
ocall_enc_untrusted_inotify_add_watch	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_inotify_add_watch(const char *serialized_args,$/;"	f
ocall_enc_untrusted_inotify_init1	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_inotify_init1(int non_block) {$/;"	f
ocall_enc_untrusted_inotify_read	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_inotify_read(int fd, bridge_size_t count,$/;"	f
ocall_enc_untrusted_inotify_rm_watch	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_inotify_rm_watch(const char *serialized_args,$/;"	f
ocall_enc_untrusted_lstat	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_lstat(const char *pathname,$/;"	f
ocall_enc_untrusted_malloc	./platform/arch/sgx/untrusted/ocalls.cc	/^void *ocall_enc_untrusted_malloc(bridge_size_t size) {$/;"	f
ocall_enc_untrusted_nanosleep	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_nanosleep(const struct bridge_timespec *req,$/;"	f
ocall_enc_untrusted_open	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_open(const char *path_name, int flags, uint32_t mode) {$/;"	f
ocall_enc_untrusted_openlog	./platform/arch/sgx/untrusted/ocalls.cc	/^void ocall_enc_untrusted_openlog(const char *ident, int option, int facility) {$/;"	f
ocall_enc_untrusted_pipe2	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_pipe2(int pipefd[2], int flags) {$/;"	f
ocall_enc_untrusted_poll	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_poll(struct bridge_pollfd *fds, unsigned int nfds,$/;"	f
ocall_enc_untrusted_puts	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_puts(const char *str) {$/;"	f
ocall_enc_untrusted_raise	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_raise(int bridge_sig) {$/;"	f
ocall_enc_untrusted_read_with_untrusted_ptr	./platform/arch/sgx/untrusted/ocalls.cc	/^bridge_ssize_t ocall_enc_untrusted_read_with_untrusted_ptr(int fd, void *buf,$/;"	f
ocall_enc_untrusted_recvfrom	./platform/arch/sgx/untrusted/ocalls.cc	/^ssize_t ocall_enc_untrusted_recvfrom(const char *serialized_args,$/;"	f
ocall_enc_untrusted_recvmsg	./platform/arch/sgx/untrusted/ocalls.cc	/^bridge_ssize_t ocall_enc_untrusted_recvmsg(int sockfd,$/;"	f
ocall_enc_untrusted_register_signal_handler	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_register_signal_handler($/;"	f
ocall_enc_untrusted_release_shared_resource	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_release_shared_resource(SharedNameKind kind,$/;"	f
ocall_enc_untrusted_sched_getaffinity	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_sched_getaffinity(int64_t pid, BridgeCpuSet *mask) {$/;"	f
ocall_enc_untrusted_select	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_select(int nfds, BridgeFDSet *bridge_readfds,$/;"	f
ocall_enc_untrusted_sendmsg	./platform/arch/sgx/untrusted/ocalls.cc	/^bridge_ssize_t ocall_enc_untrusted_sendmsg(int sockfd,$/;"	f
ocall_enc_untrusted_setitimer	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_setitimer(enum TimerType which,$/;"	f
ocall_enc_untrusted_setsockopt	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_setsockopt(int sockfd, int level, int optname,$/;"	f
ocall_enc_untrusted_sigprocmask	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_sigprocmask(int how, const bridge_sigset_t *set,$/;"	f
ocall_enc_untrusted_sleep	./platform/arch/sgx/untrusted/ocalls.cc	/^uint32_t ocall_enc_untrusted_sleep(uint32_t seconds) { return sleep(seconds); }$/;"	f
ocall_enc_untrusted_socket	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_socket(int domain, int type, int protocol) {$/;"	f
ocall_enc_untrusted_stat	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_stat(const char *pathname,$/;"	f
ocall_enc_untrusted_sysconf	./platform/arch/sgx/untrusted/ocalls.cc	/^int64_t ocall_enc_untrusted_sysconf(enum SysconfConstants bridge_name) {$/;"	f
ocall_enc_untrusted_syslog	./platform/arch/sgx/untrusted/ocalls.cc	/^void ocall_enc_untrusted_syslog(int priority, const char *message) {$/;"	f
ocall_enc_untrusted_thread_create	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_thread_create(const char *name) {$/;"	f
ocall_enc_untrusted_times	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_times(struct BridgeTms *bridge_buf) {$/;"	f
ocall_enc_untrusted_uname	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_uname(struct BridgeUtsName *bridge_utsname_val) {$/;"	f
ocall_enc_untrusted_utime	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_utime(const char *filename,$/;"	f
ocall_enc_untrusted_utimes	./platform/arch/sgx/untrusted/ocalls.cc	/^int ocall_enc_untrusted_utimes($/;"	f
ocall_enc_untrusted_wait3	./platform/arch/sgx/untrusted/ocalls.cc	/^pid_t ocall_enc_untrusted_wait3(struct BridgeWStatus *bridge_wstatus,$/;"	f
ocall_enc_untrusted_waitpid	./platform/arch/sgx/untrusted/ocalls.cc	/^pid_t ocall_enc_untrusted_waitpid(pid_t pid,$/;"	f
ocall_enc_untrusted_write_with_untrusted_ptr	./platform/arch/sgx/untrusted/ocalls.cc	/^bridge_ssize_t ocall_enc_untrusted_write_with_untrusted_ptr(int fd,$/;"	f
ocall_table_bridge	./platform/primitives/sgx/untrusted_sgx.cc	/^extern "C" ABSL_CONST_INIT const ocall_table_t ocall_table_bridge;$/;"	v
ocall_table_t	./platform/primitives/sgx/untrusted_sgx.cc	/^struct ocall_table_t {$/;"	s	file:
offset	./platform/storage/utils/record_store.h	/^    off_t offset;  \/\/ Byte offset of this record.$/;"	m	struct:asylo::RecordStore::CacheEntry
offset	./platform/system_call/message.h	/^  \/* byte: 24 ..  71 *\/ uint64_t offset[kParameterMax];  \/\/ Parameter offset.$/;"	m	struct:asylo::system_call::MessageHeader
offset	./platform/system_call/message.h	/^  size_t offset(int index) const { return header()->offset[index]; }$/;"	f	class:asylo::system_call::MessageReader
offset_	./grpc/auth/util/multi_buffer_input_stream.h	/^  int offset_;$/;"	m	class:asylo::MultiBufferInputStream
offset_translator_	./platform/storage/secure/aead_handler.h	/^  std::unique_ptr<OffsetTranslator> offset_translator_;$/;"	m	class:asylo::platform::storage::AeadHandler
ok	./platform/primitives/primitive_status.h	/^  bool ok() const { return error_code_ == error::GoogleError::OK; }$/;"	f	class:asylo::primitives::PrimitiveStatus
ok	./util/status.cc	/^bool Status::ok() const { return error_code_ == 0; }$/;"	f	class:asylo::Status
ok	./util/statusor.h	/^  bool ok() const { return has_value_; }$/;"	f	class:asylo::StatusOr
old_sa	./examples/hello_world/hello_driver.cc	/^struct sigaction old_sa;$/;"	v	typeref:struct:sigaction
on_SIGILL	./test/misc/double_die.cc	/^void on_SIGILL(int \/* signum *\/) { longjmp(env, 1); }$/;"	f	namespace:asylo::__anon192
on_SIGILL	./test/misc/double_die.cc	/^void on_SIGILL(int \/* signum *\/) { longjmp(env, 1); }$/;"	f	namespace:asylo::__anon446
once	./test/misc/threaded_test.cc	/^static pthread_once_t once = PTHREAD_ONCE_INIT;$/;"	m	namespace:asylo::__anon208	file:
once	./test/misc/threaded_test.cc	/^static pthread_once_t once = PTHREAD_ONCE_INIT;$/;"	m	namespace:asylo::__anon462	file:
once_count	./test/misc/threaded_test.cc	/^static volatile int once_count = 0;$/;"	m	namespace:asylo::__anon208	file:
once_count	./test/misc/threaded_test.cc	/^static volatile int once_count = 0;$/;"	m	namespace:asylo::__anon462	file:
once_function	./test/misc/threaded_test.cc	/^void once_function() { ++once_count; }$/;"	f	namespace:asylo::__anon208
once_function	./test/misc/threaded_test.cc	/^void once_function() { ++once_count; }$/;"	f	namespace:asylo::__anon462
one_word	./platform/posix/sched.cc	/^constexpr CpuSetWord one_word = 1;$/;"	v
opendir	./platform/posix/dirent.cc	/^DIR *opendir(const char *) { abort(); }$/;"	f
openlog	./platform/posix/syslog.cc	/^void openlog(const char *ident, int option, int facility) {$/;"	f
operator !=	./crypto/util/byte_container_view.h	/^  bool operator!=(ByteContainerView other) const { return !operator==(other); }$/;"	f	class:asylo::ByteContainerView
operator !=	./crypto/util/bytes.h	/^  bool operator!=(const BytesT &other) const {$/;"	f	class:asylo::final
operator !=	./identity/sgx/attributes_util.cc	/^bool operator!=(const Attributes &lhs, const Attributes &rhs) {$/;"	f	namespace:asylo::sgx
operator !=	./identity/sgx/fake_enclave.cc	/^bool FakeEnclave::operator!=(const FakeEnclave &other) const {$/;"	f	class:asylo::sgx::FakeEnclave
operator !=	./identity/sgx/secs_attributes.cc	/^bool operator!=(const SecsAttributeSet &lhs, const SecsAttributeSet &rhs) {$/;"	f	namespace:asylo::sgx
operator !=	./identity/util/sha256_hash_util.cc	/^bool operator!=(const Sha256HashProto &lhs, const Sha256HashProto &rhs) {$/;"	f	namespace:asylo
operator !=	./util/cleansing_allocator.h	/^bool operator!=(const CleansingAllocator<T, A> &lhs,$/;"	f	namespace:asylo
operator !=	./util/cleansing_allocator_test.cc	/^bool operator!=(const TestAllocator<T> &lhs, const TestAllocator<U> &rhs) {$/;"	f	namespace:asylo::__anon239
operator !=	./util/cleansing_allocator_test.cc	/^bool operator!=(const TestAllocator<T> &lhs, const TestAllocator<U> &rhs) {$/;"	f	namespace:asylo::__anon493
operator !=	./util/status.cc	/^bool operator!=(const Status &lhs, const Status &rhs) { return !(lhs == rhs); }$/;"	f	namespace:asylo
operator &	./identity/sgx/attributes_util.cc	/^Attributes operator&(const Attributes &lhs, const Attributes &rhs) {$/;"	f	namespace:asylo::sgx
operator &	./identity/sgx/secs_attributes.cc	/^SecsAttributeSet operator&(const SecsAttributeSet &lhs,$/;"	f	namespace:asylo::sgx
operator &	./util/logging.h	/^  void operator&(const std::ostream &) {}$/;"	f	class:asylo::LogMessageVoidify
operator &=	./identity/sgx/secs_attributes.cc	/^SecsAttributeSet &operator&=(SecsAttributeSet &lhs,$/;"	f	namespace:asylo::sgx
operator ()	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^    void operator()(std::string *out,$/;"	f	struct:asylo::__anon182::ApplicationWrapperEnclaveTest::EnvironmentVariableFormatter
operator ()	./bazel/application_wrapper/application_wrapper_enclave_test.cc	/^    void operator()(std::string *out,$/;"	f	struct:asylo::__anon436::ApplicationWrapperEnclaveTest::EnvironmentVariableFormatter
operator ()	./identity/assertion_description_util.cc	/^bool AssertionDescriptionEq::operator()(const AssertionDescription &lhs,$/;"	f	class:asylo::AssertionDescriptionEq
operator ()	./identity/assertion_description_util.cc	/^size_t AssertionDescriptionHasher::operator()($/;"	f	class:asylo::AssertionDescriptionHasher
operator ()	./identity/enclave_assertion_generator.h	/^  std::string operator()(const EnclaveAssertionGenerator &generator) {$/;"	f	struct:asylo::Namer
operator ()	./identity/enclave_assertion_verifier.h	/^  std::string operator()(const EnclaveAssertionVerifier &verifier) {$/;"	f	struct:asylo::Namer
operator ()	./identity/named_identity_expectation_matcher.h	/^  std::string operator()(const NamedIdentityExpectationMatcher &matcher) {$/;"	f	struct:asylo::Namer
operator ()	./identity/secret_sealer.h	/^  std::string operator()(const SecretSealer &sealer) {$/;"	f	struct:asylo::Namer
operator ()	./platform/common/memory.h	/^  inline void operator()(void *ptr) const { free(ptr); }$/;"	f	struct:asylo::MallocDeleter
operator ()	./platform/common/static_map_test.cc	/^  std::string operator()(const Bar &bar) {$/;"	f	struct:asylo::__anon101::BarNamer
operator ()	./platform/common/static_map_test.cc	/^  std::string operator()(const Bar &bar) {$/;"	f	struct:asylo::__anon355::BarNamer
operator ()	./platform/common/static_map_test.cc	/^  std::string operator()(const Foo &foo) { return foo.Name(); }$/;"	f	struct:asylo::Namer
operator ()	./platform/core/shared_name.h	/^    bool operator()(const SharedName &lhs, const SharedName &rhs) const {$/;"	f	struct:asylo::SharedName::Eq
operator ()	./platform/core/shared_name.h	/^    size_t operator()(const SharedName &name) const {$/;"	f	struct:asylo::SharedName::Hash
operator ()	./platform/crypto/gcmlib/gcm_cryptor.h	/^    size_t operator()(const GcmCryptorKey &safe_bytes) const {$/;"	f	class:asylo::platform::crypto::gcmlib::GcmCryptorRegistry::SafeBytesHasher
operator ()	./platform/primitives/parameter_stack.h	/^    void operator()(Extent *extent) { item_->Delete(); }$/;"	f	class:asylo::primitives::ParameterStack::ItemDeleter
operator ()	./platform/primitives/util/trusted_memory.h	/^  inline void operator()(void *ptr) const { untrusted_cache_free(ptr); }$/;"	f	struct:asylo::UntrustedDeleter
operator ()	./platform/system_call/system_call.cc	/^  void operator()(uint8_t *buffer) { free(buffer); }$/;"	f	struct:__anon121::MallocDeleter
operator ()	./platform/system_call/system_call.cc	/^  void operator()(uint8_t *buffer) { free(buffer); }$/;"	f	struct:__anon375::MallocDeleter
operator ()	./util/error_space.h	/^  std::string operator()(const ErrorSpace &space) { return space.SpaceName(); }$/;"	f	struct:asylo::error::error_internal::ErrorSpaceNamer
operator ()	./util/statusor_test.cc	/^  Foo operator()() { return Foo(kIntElement); }$/;"	f	struct:asylo::__anon231::FooCtor
operator ()	./util/statusor_test.cc	/^  Foo operator()() { return Foo(kIntElement); }$/;"	f	struct:asylo::__anon485::FooCtor
operator ()	./util/statusor_test.cc	/^  HeapAllocatedObject operator()() { return HeapAllocatedObject(); }$/;"	f	struct:asylo::__anon231::HeapAllocatedObjectCtor
operator ()	./util/statusor_test.cc	/^  HeapAllocatedObject operator()() { return HeapAllocatedObject(); }$/;"	f	struct:asylo::__anon485::HeapAllocatedObjectCtor
operator ()	./util/statusor_test.cc	/^  int operator()() { return kIntElement; }$/;"	f	struct:asylo::__anon231::IntCtor
operator ()	./util/statusor_test.cc	/^  int operator()() { return kIntElement; }$/;"	f	struct:asylo::__anon485::IntCtor
operator ()	./util/statusor_test.cc	/^  std::string operator()() { return std::string(kStringElement); }$/;"	f	struct:asylo::__anon231::StringCtor
operator ()	./util/statusor_test.cc	/^  std::string operator()() { return std::string(kStringElement); }$/;"	f	struct:asylo::__anon485::StringCtor
operator ()	./util/statusor_test.cc	/^  std::vector<std::string> operator()() {$/;"	f	struct:asylo::__anon231::StringVectorCtor
operator ()	./util/statusor_test.cc	/^  std::vector<std::string> operator()() {$/;"	f	struct:asylo::__anon485::StringVectorCtor
operator *	./identity/util/aligned_object_ptr.h	/^  T &operator*() { return *get(); }$/;"	f	class:asylo::AlignedObjectPtr
operator *	./identity/util/aligned_object_ptr.h	/^  const T &operator*() const { return *get(); }$/;"	f	class:asylo::AlignedObjectPtr
operator *	./platform/common/static_map_internal.h	/^  T &operator*() { return *MapIteratorT::operator*().second; }$/;"	f	class:asylo::internal::ValueIterator
operator *	./util/mutex_guarded.h	/^  T &operator*() { return *value_; }$/;"	f	class:asylo::LockView
operator *	./util/mutex_guarded.h	/^  const T &operator*() const { return *value_; }$/;"	f	class:asylo::ReaderLockView
operator ->	./identity/util/aligned_object_ptr.h	/^  T *operator->() { return get(); }$/;"	f	class:asylo::AlignedObjectPtr
operator ->	./identity/util/aligned_object_ptr.h	/^  const T *operator->() const { return get(); }$/;"	f	class:asylo::AlignedObjectPtr
operator ->	./platform/common/static_map_internal.h	/^  T *operator->() { return MapIteratorT::operator->()->second; }$/;"	f	class:asylo::internal::ValueIterator
operator ->	./util/mutex_guarded.h	/^  T *operator->() { return value_; }$/;"	f	class:asylo::LockView
operator ->	./util/mutex_guarded.h	/^  const T *operator->() const { return value_; }$/;"	f	class:asylo::ReaderLockView
operator <<	./crypto/util/bytes.h	/^inline std::ostream &operator<<(std::ostream &os,$/;"	f	namespace:asylo
operator <<	./platform/core/shared_name.h	/^inline std::ostream &operator<<(std::ostream &os, const SharedName &name) {$/;"	f	namespace:asylo
operator <<	./util/status.cc	/^std::ostream &operator<<(std::ostream &os, const Status &status) {$/;"	f	namespace:asylo
operator =	./bazel/application_wrapper/argv.cc	/^Argv &Argv::operator=(const Argv &other) {$/;"	f	class:asylo::Argv
operator =	./identity/util/aligned_object_ptr.h	/^  AlignedObjectPtr &operator=(AlignedObjectPtr &&rhs) {$/;"	f	class:asylo::AlignedObjectPtr
operator =	./platform/primitives/primitive_status.h	/^  PrimitiveStatus &operator=(const PrimitiveStatus &other) {$/;"	f	class:asylo::primitives::PrimitiveStatus
operator =	./test/misc/exception.cc	/^TestException &TestException::operator=(const TestException &other) {$/;"	f	class:asylo::TestException
operator =	./util/fd_utils.cc	/^Pipe &Pipe::operator=(Pipe &&other) {$/;"	f	class:asylo::Pipe
operator =	./util/file_mapping.h	/^  FileMapping &operator=(FileMapping &&other) {$/;"	f	class:asylo::FileMapping
operator =	./util/mutex_guarded.h	/^  LockView &operator=(LockView &&other) {$/;"	f	class:asylo::LockView
operator =	./util/mutex_guarded.h	/^  ReaderLockView &operator=(ReaderLockView &&other) {$/;"	f	class:asylo::ReaderLockView
operator =	./util/status.cc	/^Status &Status::operator=(Status &&other) {$/;"	f	class:asylo::Status
operator =	./util/statusor.h	/^  StatusOr &operator=(StatusOr &&other) {$/;"	f	class:asylo::StatusOr
operator =	./util/statusor.h	/^  StatusOr &operator=(const StatusOr &other) {$/;"	f	class:asylo::StatusOr
operator =	./util/statusor_test.cc	/^  MoveOnlyDataType &operator=(MoveOnlyDataType &&other) {$/;"	f	struct:asylo::__anon231::MoveOnlyDataType
operator =	./util/statusor_test.cc	/^  MoveOnlyDataType &operator=(MoveOnlyDataType &&other) {$/;"	f	struct:asylo::__anon485::MoveOnlyDataType
operator ==	./crypto/util/byte_container_view.h	/^  bool operator==(ByteContainerView other) const {$/;"	f	class:asylo::ByteContainerView
operator ==	./crypto/util/bytes.h	/^  bool operator==(const BytesT &other) const {$/;"	f	class:asylo::final
operator ==	./crypto/util/trivial_object_util_test.cc	/^bool operator==(const TrivialStructure &first, const TrivialStructure &second) {$/;"	f	namespace:asylo::__anon22
operator ==	./crypto/util/trivial_object_util_test.cc	/^bool operator==(const TrivialStructure &first, const TrivialStructure &second) {$/;"	f	namespace:asylo::__anon276
operator ==	./identity/sgx/attributes_util.cc	/^bool operator==(const Attributes &lhs, const Attributes &rhs) {$/;"	f	namespace:asylo::sgx
operator ==	./identity/sgx/fake_enclave.cc	/^bool FakeEnclave::operator==(const FakeEnclave &other) const {$/;"	f	class:asylo::sgx::FakeEnclave
operator ==	./identity/sgx/secs_attributes.cc	/^bool operator==(const SecsAttributeSet &lhs, const SecsAttributeSet &rhs) {$/;"	f	namespace:asylo::sgx
operator ==	./identity/util/sha256_hash_util.cc	/^bool operator==(const Sha256HashProto &lhs, const Sha256HashProto &rhs) {$/;"	f	namespace:asylo
operator ==	./util/cleansing_allocator.h	/^bool operator==(const CleansingAllocator<T, A> &lhs,$/;"	f	namespace:asylo
operator ==	./util/cleansing_allocator_test.cc	/^bool operator==(const TestAllocator<T> &lhs, const TestAllocator<U> &rhs) {$/;"	f	namespace:asylo::__anon239
operator ==	./util/cleansing_allocator_test.cc	/^bool operator==(const TestAllocator<T> &lhs, const TestAllocator<U> &rhs) {$/;"	f	namespace:asylo::__anon493
operator ==	./util/status.cc	/^bool operator==(const Status &lhs, const Status &rhs) {$/;"	f	namespace:asylo
operator ==	./util/statusor_test.cc	/^bool operator==(const Foo &lhs, const Foo &rhs) {$/;"	f	namespace:asylo::__anon231
operator ==	./util/statusor_test.cc	/^bool operator==(const Foo &lhs, const Foo &rhs) {$/;"	f	namespace:asylo::__anon485
operator ==	./util/statusor_test.cc	/^bool operator==(const HeapAllocatedObject &lhs,$/;"	f	namespace:asylo::__anon231
operator ==	./util/statusor_test.cc	/^bool operator==(const HeapAllocatedObject &lhs,$/;"	f	namespace:asylo::__anon485
operator EnumT	./util/status_internal.h	/^  operator EnumT() {$/;"	f	struct:asylo::status_internal::ErrorCodeHolder
operator []	./crypto/util/byte_container_view.h	/^  const uint8_t &operator[](size_t offset) const { return data_[offset]; }$/;"	f	class:asylo::ByteContainerView
operator []	./crypto/util/bytes.h	/^  inline const uint8_t &operator[](size_t pos) const { return data_[pos]; }$/;"	f	class:asylo::Bytes
operator []	./crypto/util/bytes.h	/^  inline uint8_t &operator[](size_t pos) { return data_[pos]; }$/;"	f	class:asylo::Bytes
operator bool	./identity/util/aligned_object_ptr.h	/^  explicit operator bool() const { return obj_ptr_ != nullptr; }$/;"	f	class:asylo::AlignedObjectPtr
operator |	./identity/sgx/secs_attributes.cc	/^SecsAttributeSet operator|(const SecsAttributeSet &lhs,$/;"	f	namespace:asylo::sgx
operator |=	./identity/sgx/secs_attributes.cc	/^SecsAttributeSet &operator|=(SecsAttributeSet &lhs,$/;"	f	namespace:asylo::sgx
operator ~	./identity/sgx/secs_attributes.cc	/^SecsAttributeSet operator~(const SecsAttributeSet &value) {$/;"	f	namespace:asylo::sgx
options_	./platform/core/enclave_manager.cc	/^EnclaveManagerOptions *EnclaveManager::options_ = nullptr;$/;"	m	class:asylo::EnclaveManager	file:
other	./bazel/application_wrapper/argv.h	/^  Argv &operator=(Argv &&other) = default;$/;"	m	class:asylo::Argv
other	./bazel/application_wrapper/argv.h	/^  Argv(Argv &&other) = default;$/;"	m	class:asylo::Argv
other	./grpc/auth/core/ekep_error_space.h	/^  EkepErrorSpace &operator=(const EkepErrorSpace &other) = delete;$/;"	m	class:asylo::EkepErrorSpace
other	./identity/delegating_identity_expectation_matcher.h	/^      DelegatingIdentityExpectationMatcher &&other) = default;$/;"	m	class:asylo::final
other	./identity/delegating_identity_expectation_matcher.h	/^      const DelegatingIdentityExpectationMatcher &other) = default;$/;"	m	class:asylo::final
other	./identity/named_identity_expectation_matcher.h	/^      NamedIdentityExpectationMatcher &&other) = delete;$/;"	m	class:asylo::NamedIdentityExpectationMatcher
other	./identity/named_identity_expectation_matcher.h	/^      const NamedIdentityExpectationMatcher &other) = delete;$/;"	m	class:asylo::NamedIdentityExpectationMatcher
other	./identity/named_identity_expectation_matcher.h	/^  NamedIdentityExpectationMatcher(NamedIdentityExpectationMatcher &&other) =$/;"	m	class:asylo::NamedIdentityExpectationMatcher
other	./identity/sgx/fake_enclave.h	/^  FakeEnclave &operator=(const FakeEnclave &other) = default;$/;"	m	class:asylo::sgx::FakeEnclave
other	./identity/sgx/fake_enclave.h	/^  FakeEnclave(const FakeEnclave &other) = default;$/;"	m	class:asylo::sgx::FakeEnclave
other	./identity/sgx/sgx_local_secret_sealer.h	/^  SgxLocalSecretSealer &operator=(const SgxLocalSecretSealer &other) = delete;$/;"	m	class:asylo::SgxLocalSecretSealer
other	./identity/sgx/sgx_local_secret_sealer.h	/^  SgxLocalSecretSealer(const SgxLocalSecretSealer &other) = delete;$/;"	m	class:asylo::SgxLocalSecretSealer
other	./platform/core/bridge_msghdr_wrapper.h	/^  BridgeMsghdrWrapper &operator=(const BridgeMsghdrWrapper &other) = delete;$/;"	m	class:asylo::BridgeMsghdrWrapper
other	./platform/core/bridge_msghdr_wrapper.h	/^  BridgeMsghdrWrapper(const BridgeMsghdrWrapper &other) = delete;$/;"	m	class:asylo::BridgeMsghdrWrapper
other	./platform/primitives/parameter_stack.h	/^    Item &operator=(const Item &other) = delete;$/;"	m	struct:asylo::primitives::ParameterStack::Item
other	./platform/primitives/parameter_stack.h	/^    Item(const Item &other) = delete;$/;"	m	struct:asylo::primitives::ParameterStack::Item
other	./platform/primitives/parameter_stack.h	/^  ParameterStack operator=(const ParameterStack &other) = delete;$/;"	m	class:asylo::primitives::ParameterStack
other	./platform/primitives/parameter_stack.h	/^  ParameterStack(const ParameterStack &other) = delete;$/;"	m	class:asylo::primitives::ParameterStack
other	./platform/primitives/untrusted_primitives.h	/^    ScopedCurrentClient &operator=(const ScopedCurrentClient &other) = delete;$/;"	m	class:asylo::primitives::Client::ScopedCurrentClient
other	./platform/primitives/untrusted_primitives.h	/^    ScopedCurrentClient(const ScopedCurrentClient &other) = delete;$/;"	m	class:asylo::primitives::Client::ScopedCurrentClient
other	./platform/primitives/util/message.h	/^  MessageReader &operator=(MessageReader &&other) = default;$/;"	m	class:asylo::primitives::MessageReader
other	./platform/primitives/util/message.h	/^  MessageReader operator=(const MessageReader &other) = delete;$/;"	m	class:asylo::primitives::MessageReader
other	./platform/primitives/util/message.h	/^  MessageReader(const MessageReader &other) = delete;$/;"	m	class:asylo::primitives::MessageReader
other	./platform/primitives/util/message.h	/^  MessageWriter &operator=(MessageWriter &&other) = default;$/;"	m	class:asylo::primitives::MessageWriter
other	./platform/primitives/util/message.h	/^  MessageWriter operator=(const MessageWriter &other) = delete;$/;"	m	class:asylo::primitives::MessageWriter
other	./platform/primitives/util/message.h	/^  MessageWriter(const MessageWriter &other) = delete;$/;"	m	class:asylo::primitives::MessageWriter
other	./test/util/output_collector.h	/^  OutputCollector &operator=(const OutputCollector &other) = delete;$/;"	m	class:asylo::OutputCollector
other	./test/util/output_collector.h	/^  OutputCollector(const OutputCollector &other) = delete;$/;"	m	class:asylo::OutputCollector
other	./util/cleanup.h	/^  Cleanup &operator=(Cleanup &&other) = delete;$/;"	m	class:asylo::Cleanup
other	./util/cleanup.h	/^  Cleanup &operator=(const Cleanup &other) = delete;$/;"	m	class:asylo::Cleanup
other	./util/cleanup.h	/^  Cleanup(Cleanup &&other) = delete;$/;"	m	class:asylo::Cleanup
other	./util/cleanup.h	/^  Cleanup(const Cleanup &other) = delete;$/;"	m	class:asylo::Cleanup
other	./util/elf_reader.h	/^  ElfReader &operator=(const ElfReader &other) = default;$/;"	m	class:asylo::ElfReader
other	./util/elf_reader.h	/^  ElfReader(const ElfReader &other) = default;$/;"	m	class:asylo::ElfReader
other	./util/error_space.h	/^  ErrorSpace &operator=(const ErrorSpace &other) = delete;$/;"	m	class:asylo::error::ErrorSpace
other	./util/error_space.h	/^  ErrorSpace(const ErrorSpace &other) = delete;$/;"	m	class:asylo::error::ErrorSpace
other	./util/error_space.h	/^  GoogleErrorSpace &operator=(const GoogleErrorSpace &other) = delete;$/;"	m	class:asylo::error::GoogleErrorSpace
other	./util/fd_utils.h	/^  Pipe &operator=(const Pipe &other) = delete;$/;"	m	class:asylo::Pipe
other	./util/fd_utils.h	/^  Pipe(const Pipe &other) = delete;$/;"	m	class:asylo::Pipe
other	./util/file_mapping.h	/^  FileMapping &operator=(const FileMapping &other) = delete;$/;"	m	class:asylo::FileMapping
other	./util/file_mapping.h	/^  FileMapping(const FileMapping &other) = delete;$/;"	m	class:asylo::FileMapping
other	./util/mutex_guarded.h	/^  LockView &operator=(const LockView &other) = delete;$/;"	m	class:asylo::LockView
other	./util/mutex_guarded.h	/^  LockView(const LockView &other) = delete;$/;"	m	class:asylo::LockView
other	./util/mutex_guarded.h	/^  MutexGuarded &operator=(const MutexGuarded &other) = delete;$/;"	m	class:asylo::MutexGuarded
other	./util/mutex_guarded.h	/^  MutexGuarded(const MutexGuarded &other) = delete;$/;"	m	class:asylo::MutexGuarded
other	./util/mutex_guarded.h	/^  ReaderLockView &operator=(const ReaderLockView &other) = delete;$/;"	m	class:asylo::ReaderLockView
other	./util/mutex_guarded.h	/^  ReaderLockView(const ReaderLockView &other) = delete;$/;"	m	class:asylo::ReaderLockView
other	./util/posix_error_space.h	/^  PosixErrorSpace &operator=(const PosixErrorSpace &other) = delete;$/;"	m	class:asylo::error::PosixErrorSpace
other	./util/status.h	/^  Status &operator=(const Status &other) = default;$/;"	m	class:asylo::Status
other	./util/status.h	/^  Status(const Status &other) = default;$/;"	m	class:asylo::Status
other	./util/statusor_test.cc	/^  CopyOnlyDataType &operator=(const CopyOnlyDataType &other) = default;$/;"	m	struct:asylo::__anon231::CopyOnlyDataType	file:
other	./util/statusor_test.cc	/^  CopyOnlyDataType &operator=(const CopyOnlyDataType &other) = default;$/;"	m	struct:asylo::__anon485::CopyOnlyDataType	file:
other	./util/statusor_test.cc	/^  CopyOnlyDataType(const CopyOnlyDataType &other) = default;$/;"	m	struct:asylo::__anon231::CopyOnlyDataType	file:
other	./util/statusor_test.cc	/^  CopyOnlyDataType(const CopyOnlyDataType &other) = default;$/;"	m	struct:asylo::__anon485::CopyOnlyDataType	file:
other	./util/statusor_test.cc	/^  MoveOnlyDataType &operator=(const MoveOnlyDataType &other) = delete;$/;"	m	struct:asylo::__anon231::MoveOnlyDataType	file:
other	./util/statusor_test.cc	/^  MoveOnlyDataType &operator=(const MoveOnlyDataType &other) = delete;$/;"	m	struct:asylo::__anon485::MoveOnlyDataType	file:
other	./util/statusor_test.cc	/^  MoveOnlyDataType(const MoveOnlyDataType &other) = delete;$/;"	m	struct:asylo::__anon231::MoveOnlyDataType	file:
other	./util/statusor_test.cc	/^  MoveOnlyDataType(const MoveOnlyDataType &other) = delete;$/;"	m	struct:asylo::__anon485::MoveOnlyDataType	file:
other	./util/std_thread.h	/^  Thread &operator=(Thread &&other) = default;$/;"	m	class:asylo::Thread
other	./util/std_thread.h	/^  Thread &operator=(const Thread &other) = delete;$/;"	m	class:asylo::Thread
other	./util/std_thread.h	/^  Thread(const Thread &other) = delete;$/;"	m	class:asylo::Thread
outgoing_bytes	./grpc/auth/core/enclave_transport_security.cc	/^  std::string outgoing_bytes;$/;"	m	struct:asylo::tsi_enclave_handshaker	file:
output_	./platform/core/trusted_application.cc	/^  char **output_;$/;"	m	class:asylo::__anon135::StatusSerializer	file:
output_	./platform/core/trusted_application.cc	/^  char **output_;$/;"	m	class:asylo::__anon389::StatusSerializer	file:
output_len_	./platform/core/trusted_application.cc	/^  size_t *output_len_;$/;"	m	class:asylo::__anon135::StatusSerializer	file:
output_len_	./platform/core/trusted_application.cc	/^  size_t *output_len_;$/;"	m	class:asylo::__anon389::StatusSerializer	file:
output_proto_	./platform/core/trusted_application.cc	/^  const OutputProto *output_proto_;$/;"	m	class:asylo::__anon135::StatusSerializer	file:
output_proto_	./platform/core/trusted_application.cc	/^  const OutputProto *output_proto_;$/;"	m	class:asylo::__anon389::StatusSerializer	file:
override	./crypto/aes_gcm_siv.h	/^                   AesGcmSivNonce *nonce) override;$/;"	m	class:asylo::AesGcmSivNonceGenerator
override	./crypto/ecdsa_p256_sha256_signing_key.h	/^                ByteContainerView signature) const override;$/;"	m	class:asylo::EcdsaP256Sha256VerifyingKey
override	./crypto/ecdsa_p256_sha256_signing_key.h	/^              std::vector<uint8_t> *signature) const override;$/;"	m	class:asylo::EcdsaP256Sha256SigningKey
override	./crypto/ecdsa_p256_sha256_signing_key.h	/^      CleansingVector<uint8_t> *serialized_key) const override;$/;"	m	class:asylo::EcdsaP256Sha256SigningKey
override	./crypto/ecdsa_p256_sha256_signing_key.h	/^  SignatureScheme GetSignatureScheme() const override;$/;"	m	class:asylo::EcdsaP256Sha256SigningKey
override	./crypto/ecdsa_p256_sha256_signing_key.h	/^  SignatureScheme GetSignatureScheme() const override;$/;"	m	class:asylo::EcdsaP256Sha256VerifyingKey
override	./crypto/ecdsa_p256_sha256_signing_key.h	/^  StatusOr<std::string> SerializeToDer() const override;$/;"	m	class:asylo::EcdsaP256Sha256VerifyingKey
override	./crypto/ecdsa_p256_sha256_signing_key.h	/^  StatusOr<std::unique_ptr<VerifyingKey>> GetVerifyingKey() const override;$/;"	m	class:asylo::EcdsaP256Sha256SigningKey
override	./crypto/random_nonce_generator.h	/^  Status NextNonce(absl::Span<uint8_t> nonce) override;$/;"	m	class:asylo::RandomNonceGenerator
override	./crypto/random_nonce_generator.h	/^  size_t NonceSize() const override;$/;"	m	class:asylo::RandomNonceGenerator
override	./crypto/rsa_oaep_encryption_key.h	/^                 CleansingVector<uint8_t> *plaintext) const override;$/;"	m	class:asylo::RsaOaepDecryptionKey
override	./crypto/rsa_oaep_encryption_key.h	/^                 std::vector<uint8_t> *ciphertext) const override;$/;"	m	class:asylo::RsaOaepEncryptionKey
override	./crypto/rsa_oaep_encryption_key.h	/^      CleansingVector<uint8_t> *serialized_key) const override;$/;"	m	class:asylo::RsaOaepDecryptionKey
override	./crypto/rsa_oaep_encryption_key.h	/^      const override;$/;"	m	class:asylo::RsaOaepDecryptionKey
override	./crypto/rsa_oaep_encryption_key.h	/^  AsymmetricEncryptionScheme GetEncryptionScheme() const override;$/;"	m	class:asylo::RsaOaepDecryptionKey
override	./crypto/rsa_oaep_encryption_key.h	/^  AsymmetricEncryptionScheme GetEncryptionScheme() const override;$/;"	m	class:asylo::RsaOaepEncryptionKey
override	./crypto/rsa_oaep_encryption_key.h	/^  StatusOr<std::string> SerializeToDer() const override;$/;"	m	class:asylo::RsaOaepEncryptionKey
override	./crypto/sha256_hash.h	/^  HashAlgorithm GetHashAlgorithm() const override;$/;"	m	class:asylo::final
override	./crypto/sha256_hash.h	/^  Status CumulativeHash(std::vector<uint8_t> *digest) const override;$/;"	m	class:asylo::final
override	./crypto/sha256_hash.h	/^  size_t DigestSize() const override;$/;"	m	class:asylo::final
override	./crypto/sha256_hash.h	/^  void Init() override;$/;"	m	class:asylo::final
override	./crypto/sha256_hash.h	/^  void Update(ByteContainerView data) override;$/;"	m	class:asylo::final
override	./daemon/identity/attestation_domain_service_impl.h	/^      GetAttestationDomainResponse *response) override;$/;"	m	class:asylo::final
override	./examples/grpc_server/grpc_server_enclave.cc	/^                    asylo::EnclaveOutput *enclave_output) override;$/;"	m	class:examples::grpc_server::final	file:
override	./examples/grpc_server/grpc_server_enclave.cc	/^      LOCKS_EXCLUDED(server_mutex_) override;$/;"	m	class:examples::grpc_server::final	file:
override	./examples/grpc_server/translator_server_impl.h	/^                                GetTranslationResponse *response) override;$/;"	m	class:examples::grpc_server::final
override	./examples/grpc_server/translator_server_impl.h	/^      LOCKS_EXCLUDED(shutdown_requested_mutex_) override;$/;"	m	class:examples::grpc_server::final
override	./grpc/auth/core/client_ekep_handshaker.h	/^                                std::string *output) override;$/;"	m	class:asylo::final
override	./grpc/auth/core/client_ekep_handshaker.h	/^  HandshakeMessageType GetExpectedMessageType() const override;$/;"	m	class:asylo::final
override	./grpc/auth/core/client_ekep_handshaker.h	/^  Result StartHandshake(std::string *output) override;$/;"	m	class:asylo::final
override	./grpc/auth/core/client_ekep_handshaker.h	/^  bool IsHandshakeAborted() const override;$/;"	m	class:asylo::final
override	./grpc/auth/core/client_ekep_handshaker.h	/^  bool IsHandshakeCompleted() const override;$/;"	m	class:asylo::final
override	./grpc/auth/core/client_ekep_handshaker.h	/^  bool IsHandshakeInProgress() const override;$/;"	m	class:asylo::final
override	./grpc/auth/core/client_ekep_handshaker.h	/^  void AbortHandshake(const Status &abort_status, std::string *output) override;$/;"	m	class:asylo::final
override	./grpc/auth/core/client_ekep_handshaker.h	/^  void HandleAbortMessage(const Abort *abort_message) override;$/;"	m	class:asylo::final
override	./grpc/auth/core/enclave_credentials.h	/^      grpc_channel_args** new_args) override;$/;"	m	class:final
override	./grpc/auth/core/enclave_credentials.h	/^  create_security_connector() override;$/;"	m	class:final
override	./grpc/auth/core/enclave_credentials.h	/^  ~grpc_enclave_channel_credentials() override;$/;"	m	class:final
override	./grpc/auth/core/enclave_credentials.h	/^  ~grpc_enclave_server_credentials() override;$/;"	m	class:final
override	./grpc/auth/core/enclave_security_connector.cc	/^  ~grpc_enclave_server_security_connector() override = default;$/;"	m	class:__anon255::final	file:
override	./grpc/auth/core/enclave_security_connector.cc	/^  ~grpc_enclave_server_security_connector() override = default;$/;"	m	class:__anon509::final	file:
override	./grpc/auth/core/server_ekep_handshaker.h	/^                                std::string *output) override;$/;"	m	class:asylo::final
override	./grpc/auth/core/server_ekep_handshaker.h	/^  HandshakeMessageType GetExpectedMessageType() const override;$/;"	m	class:asylo::final
override	./grpc/auth/core/server_ekep_handshaker.h	/^  Result StartHandshake(std::string *output) override;$/;"	m	class:asylo::final
override	./grpc/auth/core/server_ekep_handshaker.h	/^  bool IsHandshakeAborted() const override;$/;"	m	class:asylo::final
override	./grpc/auth/core/server_ekep_handshaker.h	/^  bool IsHandshakeCompleted() const override;$/;"	m	class:asylo::final
override	./grpc/auth/core/server_ekep_handshaker.h	/^  bool IsHandshakeInProgress() const override;$/;"	m	class:asylo::final
override	./grpc/auth/core/server_ekep_handshaker.h	/^  void AbortHandshake(const Status &abort_status, std::string *output) override;$/;"	m	class:asylo::final
override	./grpc/auth/core/server_ekep_handshaker.h	/^  void HandleAbortMessage(const Abort *abort_message) override;$/;"	m	class:asylo::final
override	./grpc/auth/util/multi_buffer_input_stream.h	/^      static_cast<ZeroCopyInputStream *>(nullptr)->ByteCount()) override;$/;"	m	class:asylo::MultiBufferInputStream
override	./grpc/auth/util/multi_buffer_input_stream.h	/^  bool Next(const void **data, int *size) override;$/;"	m	class:asylo::MultiBufferInputStream
override	./grpc/auth/util/multi_buffer_input_stream.h	/^  bool Skip(int count) override;$/;"	m	class:asylo::MultiBufferInputStream
override	./grpc/auth/util/multi_buffer_input_stream.h	/^  void BackUp(int count) override;$/;"	m	class:asylo::MultiBufferInputStream
override	./identity/delegating_identity_expectation_matcher.h	/^      const EnclaveIdentityExpectation &expectation) const override;$/;"	m	class:asylo::final
override	./identity/delegating_identity_expectation_matcher.h	/^  ~DelegatingIdentityExpectationMatcher() override = default;$/;"	m	class:asylo::final
override	./identity/identity_expectation_matcher_test.cc	/^  ~TestMatcher() override = default;$/;"	m	class:asylo::__anon170::final	file:
override	./identity/identity_expectation_matcher_test.cc	/^  ~TestMatcher() override = default;$/;"	m	class:asylo::__anon424::final	file:
override	./identity/null_identity/null_assertion_generator.h	/^                  Assertion *assertion) const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_generator.h	/^  EnclaveIdentityType IdentityType() const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_generator.h	/^  Status CreateAssertionOffer(AssertionOffer *offer) const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_generator.h	/^  Status Initialize(const std::string &config) override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_generator.h	/^  StatusOr<bool> CanGenerate(const AssertionRequest &request) const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_generator.h	/^  bool IsInitialized() const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_generator.h	/^  std::string AuthorityType() const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_verifier.h	/^                EnclaveIdentity *peer_identity) const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_verifier.h	/^  EnclaveIdentityType IdentityType() const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_verifier.h	/^  Status CreateAssertionRequest(AssertionRequest *request) const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_verifier.h	/^  Status Initialize(const std::string &config) override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_verifier.h	/^  StatusOr<bool> CanVerify(const AssertionOffer &offer) const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_verifier.h	/^  bool IsInitialized() const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_assertion_verifier.h	/^  std::string AuthorityType() const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_identity_expectation_matcher.h	/^      const EnclaveIdentityExpectation &expectation) const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_identity_expectation_matcher.h	/^  EnclaveIdentityDescription Description() const override;$/;"	m	class:asylo::final
override	./identity/null_identity/null_identity_expectation_matcher.h	/^  ~NullIdentityExpectationMatcher() override = default;$/;"	m	class:asylo::final
override	./identity/sgx/dcap_intel_architectural_enclave_interface.h	/^                       std::string *signature) override;$/;"	m	class:asylo::sgx::DcapIntelArchitecturalEnclaveInterface
override	./identity/sgx/dcap_intel_architectural_enclave_interface.h	/^                    uint8_t *signature_scheme) override;$/;"	m	class:asylo::sgx::DcapIntelArchitecturalEnclaveInterface
override	./identity/sgx/dcap_intel_architectural_enclave_interface.h	/^  Status GetPceTargetinfo(Targetinfo *targetinfo, uint16_t *pce_svn) override;$/;"	m	class:asylo::sgx::DcapIntelArchitecturalEnclaveInterface
override	./identity/sgx/dcap_intel_architectural_enclave_interface.h	/^  ~DcapIntelArchitecturalEnclaveInterface() override = default;$/;"	m	class:asylo::sgx::DcapIntelArchitecturalEnclaveInterface
override	./identity/sgx/sgx_code_identity_expectation_matcher.h	/^      const EnclaveIdentityExpectation &expectation) const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_code_identity_expectation_matcher.h	/^  EnclaveIdentityDescription Description() const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_code_identity_expectation_matcher.h	/^  ~SgxCodeIdentityExpectationMatcher() override = default;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_generator.h	/^                  Assertion *assertion) const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_generator.h	/^  EnclaveIdentityType IdentityType() const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_generator.h	/^  Status CreateAssertionOffer(AssertionOffer *offer) const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_generator.h	/^  Status Initialize(const std::string &config) override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_generator.h	/^  StatusOr<bool> CanGenerate(const AssertionRequest &request) const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_generator.h	/^  bool IsInitialized() const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_generator.h	/^  std::string AuthorityType() const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_verifier.h	/^                EnclaveIdentity *peer_identity) const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_verifier.h	/^  EnclaveIdentityType IdentityType() const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_verifier.h	/^  Status CreateAssertionRequest(AssertionRequest *request) const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_verifier.h	/^  Status Initialize(const std::string &config) override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_verifier.h	/^  StatusOr<bool> CanVerify(const AssertionOffer &offer) const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_verifier.h	/^  bool IsInitialized() const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_assertion_verifier.h	/^  std::string AuthorityType() const override;$/;"	m	class:asylo::final
override	./identity/sgx/sgx_local_secret_sealer.h	/^                CleansingVector<uint8_t> *secret) override;$/;"	m	class:asylo::SgxLocalSecretSealer
override	./identity/sgx/sgx_local_secret_sealer.h	/^              ByteContainerView secret, SealedSecret *sealed_secret) override;$/;"	m	class:asylo::SgxLocalSecretSealer
override	./identity/sgx/sgx_local_secret_sealer.h	/^      const SealedSecretHeader &header) const override;$/;"	m	class:asylo::SgxLocalSecretSealer
override	./identity/sgx/sgx_local_secret_sealer.h	/^  SealingRootType RootType() const override;$/;"	m	class:asylo::SgxLocalSecretSealer
override	./identity/sgx/sgx_local_secret_sealer.h	/^  Status SetDefaultHeader(SealedSecretHeader *header) const override;$/;"	m	class:asylo::SgxLocalSecretSealer
override	./identity/sgx/sgx_local_secret_sealer.h	/^  std::string RootName() const override;$/;"	m	class:asylo::SgxLocalSecretSealer
override	./identity/sgx/sgx_local_secret_sealer.h	/^  std::vector<EnclaveIdentityExpectation> RootAcl() const override;$/;"	m	class:asylo::SgxLocalSecretSealer
override	./platform/arch/sgx/untrusted/sgx_client.h	/^      const EnclaveConfig &config) const override;$/;"	m	class:asylo::SgxEmbeddedLoader
override	./platform/arch/sgx/untrusted/sgx_client.h	/^      const EnclaveConfig &config) const override;$/;"	m	class:asylo::SgxLoader
override	./platform/arch/sgx/untrusted/sgx_client.h	/^  Status DestroyEnclave() override;$/;"	m	class:asylo::SgxClient
override	./platform/arch/sgx/untrusted/sgx_client.h	/^  Status EnterAndDonateThread() override;$/;"	m	class:asylo::SgxClient
override	./platform/arch/sgx/untrusted/sgx_client.h	/^  Status EnterAndFinalize(const EnclaveFinal &final_input) override;$/;"	m	class:asylo::SgxClient
override	./platform/arch/sgx/untrusted/sgx_client.h	/^  Status EnterAndHandleSignal(const EnclaveSignal &signal) override;$/;"	m	class:asylo::SgxClient
override	./platform/arch/sgx/untrusted/sgx_client.h	/^  Status EnterAndInitialize(const EnclaveConfig &config) override;$/;"	m	class:asylo::SgxClient
override	./platform/arch/sgx/untrusted/sgx_client.h	/^  Status EnterAndRun(const EnclaveInput &input, EnclaveOutput *output) override;$/;"	m	class:asylo::SgxClient
override	./platform/arch/sgx/untrusted/sgx_client.h	/^  StatusOr<std::unique_ptr<EnclaveLoader>> Copy() const override;$/;"	m	class:asylo::SgxEmbeddedLoader
override	./platform/arch/sgx/untrusted/sgx_client.h	/^  StatusOr<std::unique_ptr<EnclaveLoader>> Copy() const override;$/;"	m	class:asylo::SgxLoader
override	./platform/posix/io/io_context_epoll.h	/^                int timeout) override;$/;"	m	class:asylo::io::IOContextEpoll
override	./platform/posix/io/io_context_epoll.h	/^  int EpollCtl(int op, int hostfd, struct epoll_event *event) override;$/;"	m	class:asylo::io::IOContextEpoll
override	./platform/posix/io/io_context_epoll.h	/^  int GetHostFileDescriptor() override;$/;"	m	class:asylo::io::IOContextEpoll
override	./platform/posix/io/io_context_eventfd.h	/^  int Close() override;$/;"	m	class:asylo::io::IOContextEventFd
override	./platform/posix/io/io_context_eventfd.h	/^  ssize_t Read(void *buf, size_t count) override;$/;"	m	class:asylo::io::IOContextEventFd
override	./platform/posix/io/io_context_eventfd.h	/^  ssize_t Write(const void *buf, size_t count) override;$/;"	m	class:asylo::io::IOContextEventFd
override	./platform/posix/io/io_context_inotify.h	/^  int Close() override;$/;"	m	class:asylo::io::IOContextInotify
override	./platform/posix/io/io_context_inotify.h	/^  int GetHostFileDescriptor() override;$/;"	m	class:asylo::io::IOContextInotify
override	./platform/posix/io/io_context_inotify.h	/^  int InotifyAddWatch(const char *pathname, uint32_t mask) override;$/;"	m	class:asylo::io::IOContextInotify
override	./platform/posix/io/io_context_inotify.h	/^  int InotifyRmWatch(int wd) override;$/;"	m	class:asylo::io::IOContextInotify
override	./platform/posix/io/io_context_inotify.h	/^  ssize_t Read(void *buf, size_t count) override;$/;"	m	class:asylo::io::IOContextInotify
override	./platform/posix/io/io_context_inotify.h	/^  ssize_t Write(const void *buf, size_t count) override;$/;"	m	class:asylo::io::IOContextInotify
override	./platform/posix/io/native_paths.h	/^                                                 mode_t mode) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^                   socklen_t *addrlen) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^                 socklen_t *optlen) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^                 socklen_t option_len) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int Accept(struct sockaddr *addr, socklen_t *addrlen) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int Access(const char *path, int mode) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Bind(const struct sockaddr *addr, socklen_t addrlen) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int ChMod(const char *pathname, mode_t mode) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Chown(const char *path, uid_t owner, gid_t group) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Close() override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int Connect(const struct sockaddr *addr, socklen_t addrlen) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int FChMod(mode_t mode) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int FChOwn(uid_t owner, gid_t group) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int FCntl(int cmd, int64_t arg) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int FLock(int operation) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int FStat(struct stat *stat_buffer) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int FSync() override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int FTruncate(off_t length) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int GetHostFileDescriptor() override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int GetPeerName(struct sockaddr *addr, socklen_t *addrlen) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int GetSockName(struct sockaddr *addr, socklen_t *addrlen) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int Isatty() override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int LSeek(off_t offset, int whence) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int LStat(const char *pathname, struct stat *stat_buffer) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Link(const char *existing, const char *new_link) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Listen(int backlog) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int Mkdir(const char *path, mode_t mode) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Rename(const char *oldpath, const char *newpath) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int RmDir(const char *pathname) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Shutdown(int how) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  int Stat(const char *pathname, struct stat *stat_buffer) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int SymLink(const char *path1, const char *path2) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Truncate(const char *path, off_t length) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Unlink(const char *pathname) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Utime(const char *filename, const struct utimbuf *times) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  int Utimes(const char *filename, const struct timeval times[2]) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  ssize_t Read(void *buf, size_t count) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  ssize_t ReadLink(const char *path_name, char *buf, size_t bufsize) override;$/;"	m	class:asylo::io::NativePathHandler
override	./platform/posix/io/native_paths.h	/^  ssize_t Readv(const struct iovec *iov, int iovcnt) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  ssize_t RecvMsg(struct msghdr *msg, int flags) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  ssize_t Send(const void *buf, size_t len, int flags) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  ssize_t SendMsg(const struct msghdr *msg, int flags) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  ssize_t Write(const void *buf, size_t count) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/native_paths.h	/^  ssize_t Writev(const struct iovec *iov, int iovcnt) override;$/;"	m	class:asylo::io::IOContextNative
override	./platform/posix/io/random_devices.h	/^                                                 mode_t mode) override;$/;"	m	class:asylo::RandomPathHandler
override	./platform/posix/io/random_devices.h	/^  int Chown(const char *path, uid_t owner, gid_t group) override;$/;"	m	class:asylo::RandomPathHandler
override	./platform/posix/io/random_devices.h	/^  int Close() override;$/;"	m	class:asylo::RandomIOContext
override	./platform/posix/io/random_devices.h	/^  int FStat(struct stat *stat_buffer) override;$/;"	m	class:asylo::RandomIOContext
override	./platform/posix/io/random_devices.h	/^  int FSync() override;$/;"	m	class:asylo::RandomIOContext
override	./platform/posix/io/random_devices.h	/^  int Isatty() override;$/;"	m	class:asylo::RandomIOContext
override	./platform/posix/io/random_devices.h	/^  int LSeek(off_t offset, int whence) override;$/;"	m	class:asylo::RandomIOContext
override	./platform/posix/io/random_devices.h	/^  int LStat(const char *pathname, struct stat *stat_buffer) override;$/;"	m	class:asylo::RandomPathHandler
override	./platform/posix/io/random_devices.h	/^  int Link(const char *existing, const char *new_link) override;$/;"	m	class:asylo::RandomPathHandler
override	./platform/posix/io/random_devices.h	/^  int Stat(const char *pathname, struct stat *stat_buffer) override;$/;"	m	class:asylo::RandomPathHandler
override	./platform/posix/io/random_devices.h	/^  int SymLink(const char *path1, const char *path2) override;$/;"	m	class:asylo::RandomPathHandler
override	./platform/posix/io/random_devices.h	/^  int Unlink(const char *pathname) override;$/;"	m	class:asylo::RandomPathHandler
override	./platform/posix/io/random_devices.h	/^  ssize_t Read(void *buf, size_t count) override;$/;"	m	class:asylo::RandomIOContext
override	./platform/posix/io/random_devices.h	/^  ssize_t ReadLink(const char *path_name, char *buf, size_t bufsize) override;$/;"	m	class:asylo::RandomPathHandler
override	./platform/posix/io/random_devices.h	/^  ssize_t Write(const void *buf, size_t count) override;$/;"	m	class:asylo::RandomIOContext
override	./platform/posix/io/secure_paths.h	/^  int Close() override;$/;"	m	class:asylo::io::IOContextSecure
override	./platform/posix/io/secure_paths.h	/^  int FStat(struct stat *st) override;$/;"	m	class:asylo::io::IOContextSecure
override	./platform/posix/io/secure_paths.h	/^  int FSync() override;$/;"	m	class:asylo::io::IOContextSecure
override	./platform/posix/io/secure_paths.h	/^  int Ioctl(int request, void *argp) override;$/;"	m	class:asylo::io::IOContextSecure
override	./platform/posix/io/secure_paths.h	/^  int Isatty() override;$/;"	m	class:asylo::io::IOContextSecure
override	./platform/posix/io/secure_paths.h	/^  int LSeek(off_t offset, int whence) override;$/;"	m	class:asylo::io::IOContextSecure
override	./platform/posix/io/secure_paths.h	/^  ssize_t Read(void *buf, size_t count) override;$/;"	m	class:asylo::io::IOContextSecure
override	./platform/posix/io/secure_paths.h	/^  ssize_t Write(const void *buf, size_t count) override;$/;"	m	class:asylo::io::IOContextSecure
override	./platform/primitives/sgx/untrusted_sgx.h	/^                             NativeParameterStack *params) override;$/;"	m	class:asylo::primitives::SgxEnclaveClient
override	./platform/primitives/sgx/untrusted_sgx.h	/^  Status Destroy() override;$/;"	m	class:asylo::primitives::SgxEnclaveClient
override	./platform/primitives/sgx/untrusted_sgx.h	/^  bool IsClosed() const override;$/;"	m	class:asylo::primitives::SgxEnclaveClient
override	./platform/primitives/sgx/untrusted_sgx.h	/^  ~SgxEnclaveClient() override;$/;"	m	class:asylo::primitives::SgxEnclaveClient
override	./platform/primitives/sim/untrusted_sim.h	/^                             NativeParameterStack *params) override;$/;"	m	class:asylo::primitives::SimEnclaveClient
override	./platform/primitives/sim/untrusted_sim.h	/^  Status Destroy() override;$/;"	m	class:asylo::primitives::SimEnclaveClient
override	./platform/primitives/sim/untrusted_sim.h	/^  bool IsClosed() const override;$/;"	m	class:asylo::primitives::SimEnclaveClient
override	./platform/primitives/sim/untrusted_sim.h	/^  ~SimEnclaveClient() override;$/;"	m	class:asylo::primitives::SimEnclaveClient
override	./platform/primitives/test/sim_test_backend.h	/^      std::unique_ptr<Client::ExitCallProvider> exit_call_provider) override;$/;"	m	class:asylo::primitives::test::SimTestBackend
override	./platform/primitives/util/dispatch_table.h	/^                             const ExitHandler &handler) override;$/;"	m	class:asylo::primitives::DispatchTable
override	./platform/storage/utils/untrusted_file.h	/^  Status Read(void *buffer, off_t offset, size_t size) override;$/;"	m	class:asylo::UntrustedFile
override	./platform/storage/utils/untrusted_file.h	/^  Status Sync() override;$/;"	m	class:asylo::UntrustedFile
override	./platform/storage/utils/untrusted_file.h	/^  Status Truncate(size_t size) override;$/;"	m	class:asylo::UntrustedFile
override	./platform/storage/utils/untrusted_file.h	/^  Status Write(const void *buffer, off_t offset, size_t size) override;$/;"	m	class:asylo::UntrustedFile
override	./platform/storage/utils/untrusted_file.h	/^  StatusOr<size_t> Size() const override;$/;"	m	class:asylo::UntrustedFile
override	./test/grpc/client_enclave.h	/^  Status Run(const EnclaveInput &input, EnclaveOutput *output) override;$/;"	m	class:asylo::ClientEnclave
override	./test/loader/loader_test.cc	/^  ~FakeLoader() override = default;$/;"	m	class:asylo::__anon215::FakeLoader	file:
override	./test/loader/loader_test.cc	/^  ~FakeLoader() override = default;$/;"	m	class:asylo::__anon469::FakeLoader	file:
override	./test/util/fake_enclave_loader.h	/^      const EnclaveConfig &config) const override;$/;"	m	class:asylo::FakeEnclaveLoader
owner_	./platform/core/untrusted_mutex.h	/^  uint64_t owner_;$/;"	m	class:asylo::UntrustedMutex
ownerepoch	./identity/sgx/fake_enclave.h	/^    SafeBytes<kOwnerEpochSize> ownerepoch;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
ownerepoch_	./identity/sgx/fake_enclave.h	/^  SafeBytes<kOwnerEpochSize> ownerepoch_;$/;"	m	class:asylo::sgx::FakeEnclave
pack_attributes	./platform/system_call/type_conversions/types_conversions_generator.cc	/^  bool pack_attributes;$/;"	m	struct:StructProperties	file:
packet_data_	./platform/posix/pipe_test.cc	/^  std::vector<uint8_t> packet_data_;$/;"	m	class:asylo::__anon301::PipeTest	file:
packet_data_	./platform/posix/pipe_test.cc	/^  std::vector<uint8_t> packet_data_;$/;"	m	class:asylo::__anon47::PipeTest	file:
padding	./identity/sgx/fake_enclave.h	/^    UnsafeBytes<kPkcs15PaddingSize> padding;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
padding	./identity/sgx/fake_enclave.h	/^    const KeyDependenciesPadding padding;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependencies
pair_stdout	./test/misc/active_enclave_signal_test_driver.cc	/^int pair_stdout[2];$/;"	m	namespace:asylo::__anon198	file:
pair_stdout	./test/misc/active_enclave_signal_test_driver.cc	/^int pair_stdout[2];$/;"	m	namespace:asylo::__anon452	file:
parameter	./platform/system_call/message.h	/^  T parameter(int index) const {$/;"	f	class:asylo::system_call::MessageReader
parameter	./platform/system_call/metadata.cc	/^ParameterDescriptor SystemCallDescriptor::parameter(int index) const {$/;"	f	class:asylo::system_call::SystemCallDescriptor
parameter_address	./platform/system_call/message.h	/^  T parameter_address(int index) const {$/;"	f	class:asylo::system_call::MessageReader
parameter_count	./platform/system_call/generate_tables.cc	/^  int parameter_count;$/;"	m	struct:SystemCallDescription	file:
parameter_count	./platform/system_call/metadata.cc	/^  const uint8_t parameter_count;$/;"	m	struct:asylo::system_call::__anon116::SystemCallTableEntry	file:
parameter_count	./platform/system_call/metadata.cc	/^  const uint8_t parameter_count;$/;"	m	struct:asylo::system_call::__anon370::SystemCallTableEntry	file:
parameter_count	./platform/system_call/metadata.cc	/^int SystemCallDescriptor::parameter_count() const {$/;"	f	class:asylo::system_call::SystemCallDescriptor
parameter_index	./platform/system_call/generate_tables.cc	/^  size_t parameter_index;$/;"	m	struct:SystemCallDescription	file:
parameter_index	./platform/system_call/metadata.cc	/^  const size_t parameter_index;$/;"	m	struct:asylo::system_call::__anon116::SystemCallTableEntry	file:
parameter_index	./platform/system_call/metadata.cc	/^  const size_t parameter_index;$/;"	m	struct:asylo::system_call::__anon370::SystemCallTableEntry	file:
parameter_is_used	./platform/system_call/message.cc	/^bool MessageReader::parameter_is_used(ParameterDescriptor parameter) const {$/;"	f	class:asylo::system_call::MessageReader
parameter_is_used	./platform/system_call/message.cc	/^bool MessageReader::parameter_is_used(int index) const {$/;"	f	class:asylo::system_call::MessageReader
parameter_is_used	./platform/system_call/message.cc	/^bool MessageWriter::parameter_is_used(ParameterDescriptor parameter) const {$/;"	f	class:asylo::system_call::MessageWriter
parameter_is_used	./platform/system_call/message.cc	/^bool MessageWriter::parameter_is_used(int index) const {$/;"	f	class:asylo::system_call::MessageWriter
parameter_size	./platform/system_call/message.h	/^  size_t parameter_size(int index) const { return header()->size[index]; }$/;"	f	class:asylo::system_call::MessageReader
parameter_size_	./platform/system_call/message.h	/^  std::array<size_t, kParameterMax> parameter_size_;$/;"	m	class:asylo::system_call::MessageWriter
parameters_	./platform/system_call/message.h	/^  const std::array<uint64_t, kParameterMax> parameters_;$/;"	m	class:asylo::system_call::MessageWriter
path	./platform/storage/secure/aead_handler.h	/^    const std::string path;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileControl
path_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  std::string path_;$/;"	m	class:asylo::__anon100::EnclaveStorageSecureTest	file:
path_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  std::string path_;$/;"	m	class:asylo::__anon354::EnclaveStorageSecureTest	file:
payload_length_	./platform/storage/utils/offset_translator.h	/^  const size_t payload_length_;$/;"	m	class:asylo::platform::storage::OffsetTranslator
payload_length_	./platform/storage/utils/offset_translator_test.cc	/^  size_t payload_length_;$/;"	m	class:asylo::__anon350::OffsetTranslatorTest	file:
payload_length_	./platform/storage/utils/offset_translator_test.cc	/^  size_t payload_length_;$/;"	m	class:asylo::__anon96::OffsetTranslatorTest	file:
payload_length_vals	./platform/storage/utils/offset_translator_test.cc	/^const off_t payload_length_vals[] = {10, 40, 120};$/;"	m	namespace:asylo::__anon350	file:
payload_length_vals	./platform/storage/utils/offset_translator_test.cc	/^const off_t payload_length_vals[] = {10, 40, 120};$/;"	m	namespace:asylo::__anon96	file:
peer_identities_	./grpc/auth/core/ekep_handshaker.h	/^  std::unique_ptr<EnclaveIdentities> peer_identities_;$/;"	m	class:asylo::EkepHandshaker
peer_identities_	./grpc/auth/core/enclave_transport_security.cc	/^  std::unique_ptr<EnclaveIdentities> peer_identities_;$/;"	m	class:asylo::TsiEnclaveHandshakerResult	file:
physical_size	./platform/storage/secure/aead_handler.h	/^    size_t physical_size() {$/;"	f	struct:asylo::platform::storage::AeadHandler::FileControl
pipe	./platform/posix/unistd.cc	/^int pipe(int pipefd[2]) { return IOManager::GetInstance().Pipe(pipefd, 0); }$/;"	f
pipe2	./platform/posix/unistd.cc	/^int pipe2(int pipefd[2], int flags) {$/;"	f
plaintext	./crypto/aead_test_vector.h	/^  CleansingVector<uint8_t> plaintext;$/;"	m	struct:asylo::AeadTestVector
plaintext1_hex	./crypto/aes_gcm_siv_test.cc	/^const char plaintext1_hex[] =$/;"	m	namespace:asylo::__anon26	file:
plaintext1_hex	./crypto/aes_gcm_siv_test.cc	/^const char plaintext1_hex[] =$/;"	m	namespace:asylo::__anon280	file:
plaintext2_hex	./crypto/aes_gcm_siv_test.cc	/^const char plaintext2_hex[] = "010000000000000000000000";$/;"	m	namespace:asylo::__anon26	file:
plaintext2_hex	./crypto/aes_gcm_siv_test.cc	/^const char plaintext2_hex[] = "010000000000000000000000";$/;"	m	namespace:asylo::__anon280	file:
plaintext_	./identity/sgx/pce_util_test.cc	/^  std::vector<uint8_t> plaintext_;$/;"	m	class:asylo::sgx::__anon151::PceUtilTest	file:
plaintext_	./identity/sgx/pce_util_test.cc	/^  std::vector<uint8_t> plaintext_;$/;"	m	class:asylo::sgx::__anon405::PceUtilTest	file:
platform	./platform/crypto/gcmlib/gcm_cryptor.cc	/^namespace platform {$/;"	n	namespace:asylo	file:
platform	./platform/crypto/gcmlib/gcm_cryptor.h	/^namespace platform {$/;"	n	namespace:asylo
platform	./platform/storage/secure/aead_handler.cc	/^namespace platform {$/;"	n	namespace:asylo	file:
platform	./platform/storage/secure/aead_handler.h	/^namespace platform {$/;"	n	namespace:asylo
platform	./platform/storage/secure/authenticated_dictionary.h	/^namespace platform {$/;"	n	namespace:asylo
platform	./platform/storage/secure/ctmmt_authenticated_dictionary.cc	/^namespace platform {$/;"	n	namespace:asylo	file:
platform	./platform/storage/secure/ctmmt_authenticated_dictionary.h	/^namespace platform {$/;"	n	namespace:asylo
platform	./platform/storage/secure/enclave_storage_secure.cc	/^namespace platform {$/;"	n	namespace:asylo	file:
platform	./platform/storage/secure/enclave_storage_secure.h	/^namespace platform {$/;"	n	namespace:asylo
platform	./platform/storage/utils/fd_closer.cc	/^namespace platform {$/;"	n	namespace:asylo	file:
platform	./platform/storage/utils/fd_closer.h	/^namespace platform {$/;"	n	namespace:asylo
platform	./platform/storage/utils/fd_closer_test.cc	/^namespace platform {$/;"	n	namespace:asylo	file:
platform	./platform/storage/utils/offset_translator.cc	/^namespace platform {$/;"	n	namespace:asylo	file:
platform	./platform/storage/utils/offset_translator.h	/^namespace platform {$/;"	n	namespace:asylo
policy	./crypto/util/bytes.h	/^  static constexpr DataSafety policy = DataSafety::SAFE;$/;"	m	struct:asylo::SafePolicy
policy	./crypto/util/bytes.h	/^  static constexpr DataSafety policy = DataSafety::UNSAFE;$/;"	m	struct:asylo::UnsafePolicy
policy	./crypto/util/bytes.h	/^  static constexpr DataSafety policy() { return Policy::policy; }$/;"	f	class:asylo::Bytes
poll	./platform/posix/poll.cc	/^int poll(struct pollfd *fds, nfds_t nfds, int timeout) {$/;"	f
poll_fd	./test/misc/active_enclave_signal_test_driver.cc	/^  int poll_fd;$/;"	m	struct:asylo::__anon198::SendSignalThreadInput	file:
poll_fd	./test/misc/active_enclave_signal_test_driver.cc	/^  int poll_fd;$/;"	m	struct:asylo::__anon452::SendSignalThreadInput	file:
pollfd	./platform/posix/include/poll.h	/^struct pollfd {$/;"	s
port_	./grpc/util/enclave_server.h	/^  int port_;$/;"	m	class:asylo::final
port_set	./grpc/auth/test/h2_enclave_security_test.cc	/^  bool port_set;$/;"	m	struct:asylo::__anon247::EnclaveFullStackFixtureData	file:
port_set	./grpc/auth/test/h2_enclave_security_test.cc	/^  bool port_set;$/;"	m	struct:asylo::__anon501::EnclaveFullStackFixtureData	file:
pos_	./platform/primitives/util/message.h	/^  int pos_ = 0;$/;"	m	class:asylo::primitives::MessageReader
posix_memalign	./platform/posix/mman.cc	/^int posix_memalign(void **memptr, size_t alignment, size_t size) {$/;"	f
prefix_to_handler_	./platform/posix/io/io_manager.h	/^  std::map<std::string, std::unique_ptr<VirtualPathHandler>> prefix_to_handler_;$/;"	m	class:asylo::io::IOManager
primitive_client_	./platform/core/enclave_client.h	/^  std::shared_ptr<primitives::Client> primitive_client_;$/;"	m	class:asylo::EnclaveClient
primitive_sgx_client_	./platform/arch/sgx/untrusted/sgx_client.h	/^  std::shared_ptr<primitives::SgxEnclaveClient> primitive_sgx_client_;$/;"	m	class:asylo::SgxClient
primitives	./platform/primitives/examples/hello_driver.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/examples/hello_enclave.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/examples/hello_enclave.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/examples/hello_test.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/extent.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/extent_test.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/parameter_stack.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/parameter_stack_test.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/primitive_status.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/primitive_status_test.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/primitives.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/sgx/trusted_sgx.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/sgx/trusted_sgx.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/sgx/untrusted_sgx.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/sgx/untrusted_sgx.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/sim/malloc_lock.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/sim/shared_sim.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/sim/trusted_sim.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/sim/untrusted_sim.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/sim/untrusted_sim.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/test/primitives_test.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/test/sgx_test_backend.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/test/sgx_test_backend.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/test/sim_test_backend.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/test/sim_test_backend.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/test/test_backend.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/test/test_enclave.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/test/test_selectors.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/trusted_primitives.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/untrusted_primitives.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/untrusted_primitives.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/util/dispatch_table.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/util/dispatch_table.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/util/dispatch_table_test.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/util/message.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/util/message_test.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/util/primitive_locks.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/util/status_conversions.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/util/status_conversions.h	/^namespace primitives {$/;"	n	namespace:asylo
primitives	./platform/primitives/util/status_conversions_test.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/util/trusted_runtime_helper.cc	/^namespace primitives {$/;"	n	namespace:asylo	file:
primitives	./platform/primitives/util/trusted_runtime_helper.h	/^namespace primitives {$/;"	n	namespace:asylo
private_key_	./crypto/ecdsa_p256_sha256_signing_key.h	/^  bssl::UniquePtr<EC_KEY> private_key_;$/;"	m	class:asylo::EcdsaP256Sha256SigningKey
private_key_	./crypto/rsa_oaep_encryption_key.h	/^  bssl::UniquePtr<RSA> private_key_;$/;"	m	class:asylo::RsaOaepDecryptionKey
promised_assertions_	./grpc/auth/core/server_ekep_handshaker.h	/^  std::vector<AssertionRequest> promised_assertions_;$/;"	m	class:asylo::final
proto	./platform/core/trusted_application.cc	/^  OutputProto proto;$/;"	m	class:asylo::__anon135::StatusSerializer	file:
proto	./platform/core/trusted_application.cc	/^  OutputProto proto;$/;"	m	class:asylo::__anon389::StatusSerializer	file:
pthread_attr_destroy	./platform/posix/pthread.cc	/^int pthread_attr_destroy(pthread_attr_t *attr) {$/;"	f
pthread_attr_getschedparam	./platform/posix/pthread.cc	/^int pthread_attr_getschedparam(const pthread_attr_t *attr,$/;"	f
pthread_attr_getschedpolicy	./platform/posix/pthread.cc	/^int pthread_attr_getschedpolicy(const pthread_attr_t *attr, int *policy) {$/;"	f
pthread_attr_getscope	./platform/posix/pthread.cc	/^int pthread_attr_getscope(const pthread_attr_t *attr, int *scope) {$/;"	f
pthread_attr_getstacksize	./platform/posix/pthread.cc	/^int pthread_attr_getstacksize(const pthread_attr_t *attr, size_t *stacksize) {$/;"	f
pthread_attr_init	./platform/posix/pthread.cc	/^int pthread_attr_init(pthread_attr_t *attr) {$/;"	f
pthread_attr_setdetachstate	./platform/posix/pthread.cc	/^int pthread_attr_setdetachstate(pthread_attr_t *attr, int type) {$/;"	f
pthread_attr_setschedparam	./platform/posix/pthread.cc	/^int pthread_attr_setschedparam(pthread_attr_t *attr,$/;"	f
pthread_attr_setschedpolicy	./platform/posix/pthread.cc	/^int pthread_attr_setschedpolicy(pthread_attr_t *attr, int policy) {$/;"	f
pthread_attr_setscope	./platform/posix/pthread.cc	/^int pthread_attr_setscope(pthread_attr_t *attr, int scope) { return ENOSYS; }$/;"	f
pthread_attr_setstacksize	./platform/posix/pthread.cc	/^int pthread_attr_setstacksize(pthread_attr_t *attr, size_t stacksize) {$/;"	f
pthread_cancel	./platform/posix/pthread.cc	/^int pthread_cancel(pthread_t unused) { return ENOSYS; }$/;"	f
pthread_cond_broadcast	./platform/posix/pthread.cc	/^int pthread_cond_broadcast(pthread_cond_t *cond) {$/;"	f
pthread_cond_broadcast	./platform/primitives/sim/runtime_stubs.c	/^int pthread_cond_broadcast() { return 0; }$/;"	f
pthread_cond_destroy	./platform/posix/pthread.cc	/^int pthread_cond_destroy(pthread_cond_t *cond) {$/;"	f
pthread_cond_destroy	./platform/primitives/sim/runtime_stubs.c	/^int pthread_cond_destroy() { return 0; }$/;"	f
pthread_cond_init	./platform/posix/pthread.cc	/^int pthread_cond_init(pthread_cond_t *cond, const pthread_condattr_t *attr) {$/;"	f
pthread_cond_init	./platform/primitives/sim/runtime_stubs.c	/^int pthread_cond_init() { return 0; }$/;"	f
pthread_cond_signal	./platform/posix/pthread.cc	/^int pthread_cond_signal(pthread_cond_t *cond) {$/;"	f
pthread_cond_signal	./platform/primitives/sim/runtime_stubs.c	/^int pthread_cond_signal() { return 0; }$/;"	f
pthread_cond_timedwait	./platform/posix/pthread.cc	/^int pthread_cond_timedwait(pthread_cond_t *cond, pthread_mutex_t *mutex,$/;"	f
pthread_cond_timedwait	./platform/primitives/sim/runtime_stubs.c	/^int pthread_cond_timedwait() { return 0; }$/;"	f
pthread_cond_wait	./platform/posix/pthread.cc	/^int pthread_cond_wait(pthread_cond_t *cond, pthread_mutex_t *mutex) {$/;"	f
pthread_cond_wait	./platform/primitives/sim/runtime_stubs.c	/^int pthread_cond_wait() { return 0; }$/;"	f
pthread_condattr_destroy	./platform/posix/pthread.cc	/^int pthread_condattr_destroy(pthread_condattr_t *attr) { return 0; }$/;"	f
pthread_condattr_init	./platform/posix/pthread.cc	/^int pthread_condattr_init(pthread_condattr_t *attr) { return 0; }$/;"	f
pthread_create	./platform/posix/pthread.cc	/^int pthread_create(pthread_t *thread, const pthread_attr_t *attr,$/;"	f
pthread_detach	./platform/posix/pthread.cc	/^int pthread_detach(pthread_t thread) {$/;"	f
pthread_equal	./platform/posix/pthread.cc	/^int pthread_equal(pthread_t thread_one, pthread_t thread_two) {$/;"	f
pthread_getspecific	./platform/posix/pthread.cc	/^void *pthread_getspecific(pthread_key_t key) {$/;"	f
pthread_getspecific	./platform/primitives/sim/runtime_stubs.c	/^int pthread_getspecific() { return 0; }$/;"	f
pthread_impl	./platform/posix/pthread.cc	/^namespace pthread_impl {$/;"	n	namespace:asylo	file:
pthread_impl	./platform/posix/pthread_impl.h	/^namespace pthread_impl {$/;"	n	namespace:asylo
pthread_impl	./test/misc/pthread_test.cc	/^namespace pthread_impl {$/;"	n	namespace:asylo	file:
pthread_join	./platform/posix/pthread.cc	/^int pthread_join(pthread_t thread, void **value_ptr) {$/;"	f
pthread_key_create	./platform/posix/pthread.cc	/^int pthread_key_create(pthread_key_t *key, void (*destructor)(void *)) {$/;"	f
pthread_key_create	./platform/primitives/sim/runtime_stubs.c	/^int pthread_key_create() { return 0; }$/;"	f
pthread_key_delete	./platform/posix/pthread.cc	/^int pthread_key_delete(pthread_key_t key) {$/;"	f
pthread_mutex_check_parameter	./platform/posix/pthread.cc	/^int pthread_mutex_check_parameter(pthread_mutex_t *mutex) {$/;"	f	namespace:__anon296
pthread_mutex_check_parameter	./platform/posix/pthread.cc	/^int pthread_mutex_check_parameter(pthread_mutex_t *mutex) {$/;"	f	namespace:__anon42
pthread_mutex_destroy	./platform/posix/pthread.cc	/^int pthread_mutex_destroy(pthread_mutex_t *mutex) {$/;"	f
pthread_mutex_destroy	./platform/primitives/sim/runtime_stubs.c	/^int pthread_mutex_destroy() { return 0; }$/;"	f
pthread_mutex_init	./platform/posix/pthread.cc	/^int pthread_mutex_init(pthread_mutex_t *mutex,$/;"	f
pthread_mutex_init	./platform/primitives/sim/runtime_stubs.c	/^int pthread_mutex_init() { return 0; }$/;"	f
pthread_mutex_lock	./platform/posix/pthread.cc	/^int pthread_mutex_lock(pthread_mutex_t *mutex) {$/;"	f
pthread_mutex_lock	./platform/primitives/sim/runtime_stubs.c	/^int pthread_mutex_lock() { return 0; }$/;"	f
pthread_mutex_lock_internal	./platform/posix/pthread.cc	/^int pthread_mutex_lock_internal(pthread_mutex_t *mutex) {$/;"	f	namespace:__anon296
pthread_mutex_lock_internal	./platform/posix/pthread.cc	/^int pthread_mutex_lock_internal(pthread_mutex_t *mutex) {$/;"	f	namespace:__anon42
pthread_mutex_trylock	./platform/posix/pthread.cc	/^int pthread_mutex_trylock(pthread_mutex_t *mutex) {$/;"	f
pthread_mutex_trylock	./platform/primitives/sim/runtime_stubs.c	/^int pthread_mutex_trylock() { return 0; }$/;"	f
pthread_mutex_unlock	./platform/posix/pthread.cc	/^int pthread_mutex_unlock(pthread_mutex_t *mutex) {$/;"	f
pthread_mutex_unlock	./platform/primitives/sim/runtime_stubs.c	/^int pthread_mutex_unlock() { return 0; }$/;"	f
pthread_mutexattr_destroy	./platform/posix/pthread.cc	/^int pthread_mutexattr_destroy(pthread_mutexattr_t *mutexattr) { return 0; }$/;"	f
pthread_mutexattr_init	./platform/posix/pthread.cc	/^int pthread_mutexattr_init(pthread_mutexattr_t *mutexattr) { return 0; }$/;"	f
pthread_mutexattr_settype	./platform/posix/pthread.cc	/^int pthread_mutexattr_settype(pthread_mutexattr_t *mutexattr, int type) {$/;"	f
pthread_once	./platform/posix/pthread.cc	/^int pthread_once(pthread_once_t *once, void (*init_routine)(void)) {$/;"	f
pthread_rwlock_destroy	./platform/posix/pthread.cc	/^int pthread_rwlock_destroy(pthread_rwlock_t *rwlock) {$/;"	f
pthread_rwlock_init	./platform/posix/pthread.cc	/^int pthread_rwlock_init(pthread_rwlock_t *rwlock,$/;"	f
pthread_rwlock_lock	./platform/posix/pthread.cc	/^int pthread_rwlock_lock(pthread_rwlock_t *rwlock) {$/;"	f	namespace:__anon296
pthread_rwlock_lock	./platform/posix/pthread.cc	/^int pthread_rwlock_lock(pthread_rwlock_t *rwlock) {$/;"	f	namespace:__anon42
pthread_rwlock_rdlock	./platform/posix/pthread.cc	/^int pthread_rwlock_rdlock(pthread_rwlock_t *rwlock) {$/;"	f
pthread_rwlock_tryrdlock	./platform/posix/pthread.cc	/^int pthread_rwlock_tryrdlock(pthread_rwlock_t *rwlock) {$/;"	f
pthread_rwlock_tryrdlock_internal	./platform/posix/pthread.cc	/^int pthread_rwlock_tryrdlock_internal(pthread_rwlock_t *rwlock) {$/;"	f	namespace:__anon296
pthread_rwlock_tryrdlock_internal	./platform/posix/pthread.cc	/^int pthread_rwlock_tryrdlock_internal(pthread_rwlock_t *rwlock) {$/;"	f	namespace:__anon42
pthread_rwlock_trywrlock	./platform/posix/pthread.cc	/^int pthread_rwlock_trywrlock(pthread_rwlock_t *rwlock) {$/;"	f
pthread_rwlock_trywrlock_internal	./platform/posix/pthread.cc	/^int pthread_rwlock_trywrlock_internal(pthread_rwlock_t *rwlock) {$/;"	f	namespace:__anon296
pthread_rwlock_trywrlock_internal	./platform/posix/pthread.cc	/^int pthread_rwlock_trywrlock_internal(pthread_rwlock_t *rwlock) {$/;"	f	namespace:__anon42
pthread_rwlock_unlock	./platform/posix/pthread.cc	/^int pthread_rwlock_unlock(pthread_rwlock_t *rwlock) {$/;"	f
pthread_rwlock_wrlock	./platform/posix/pthread.cc	/^int pthread_rwlock_wrlock(pthread_rwlock_t *rwlock) {$/;"	f
pthread_self	./platform/posix/pthread.cc	/^pthread_t pthread_self() {$/;"	f
pthread_setcancelstate	./platform/posix/pthread.cc	/^int pthread_setcancelstate(int state, int *oldstate) { return ENOSYS; }$/;"	f
pthread_setcanceltype	./platform/posix/pthread.cc	/^int pthread_setcanceltype(int type, int *oldtype) { return ENOSYS; }$/;"	f
pthread_setspecific	./platform/posix/pthread.cc	/^int pthread_setspecific(pthread_key_t key, const void *value) {$/;"	f
pthread_setspecific	./platform/primitives/sim/runtime_stubs.c	/^int pthread_setspecific() { return 0; }$/;"	f
pthread_sigmask	./platform/posix/signal.cc	/^int pthread_sigmask(int how, const sigset_t *set, sigset_t *oldset) {$/;"	f
pthread_sigmask	./platform/primitives/sim/runtime_stubs.c	/^int pthread_sigmask() { return 0; }$/;"	f
pthread_spin_lock	./platform/posix/pthread.cc	/^inline int pthread_spin_lock(pthread_spinlock_t *lock) {$/;"	f	namespace:__anon296
pthread_spin_lock	./platform/posix/pthread.cc	/^inline int pthread_spin_lock(pthread_spinlock_t *lock) {$/;"	f	namespace:__anon42
pthread_spin_unlock	./platform/posix/pthread.cc	/^inline int pthread_spin_unlock(pthread_spinlock_t *lock) {$/;"	f	namespace:__anon296
pthread_spin_unlock	./platform/posix/pthread.cc	/^inline int pthread_spin_unlock(pthread_spinlock_t *lock) {$/;"	f	namespace:__anon42
ptr	./platform/posix/include/sys/epoll.h	/^  void *ptr;$/;"	m	union:epoll_data
public_key	./identity/sgx/identity_key_management_structs.h	/^  Rsa3072PublicKey public_key;$/;"	m	struct:asylo::sgx::Sigstruct
public_key_	./crypto/ecdsa_p256_sha256_signing_key.h	/^  bssl::UniquePtr<EC_KEY> public_key_;$/;"	m	class:asylo::EcdsaP256Sha256SigningKey
public_key_	./crypto/ecdsa_p256_sha256_signing_key.h	/^  bssl::UniquePtr<EC_KEY> public_key_;$/;"	m	class:asylo::EcdsaP256Sha256VerifyingKey
public_key_	./crypto/rsa_oaep_encryption_key.h	/^  bssl::UniquePtr<RSA> public_key_;$/;"	m	class:asylo::RsaOaepEncryptionKey
purpose_	./identity/additional_authenticated_data_generator.h	/^  UnsafeBytes<kAdditionalAuthenticatedDataPurposeSize> purpose_;$/;"	m	class:asylo::AdditionalAuthenticatedDataGenerator
pw_dir	./platform/common/bridge_types.h	/^  char pw_dir[BRIDGE_PASSWD_FIELD_LENGTH];$/;"	m	struct:BridgePassWd
pw_gecos	./platform/common/bridge_types.h	/^  char pw_gecos[BRIDGE_PASSWD_FIELD_LENGTH];$/;"	m	struct:BridgePassWd
pw_gid	./platform/common/bridge_types.h	/^  gid_t pw_gid;$/;"	m	struct:BridgePassWd
pw_name	./platform/common/bridge_types.h	/^  char pw_name[BRIDGE_PASSWD_FIELD_LENGTH];$/;"	m	struct:BridgePassWd
pw_passwd	./platform/common/bridge_types.h	/^  char pw_passwd[BRIDGE_PASSWD_FIELD_LENGTH];$/;"	m	struct:BridgePassWd
pw_shell	./platform/common/bridge_types.h	/^  char pw_shell[BRIDGE_PASSWD_FIELD_LENGTH];$/;"	m	struct:BridgePassWd
pw_uid	./platform/common/bridge_types.h	/^  uid_t pw_uid;$/;"	m	struct:BridgePassWd
q1	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kRsa3072ModulusSize> q1;$/;"	m	struct:asylo::sgx::Sigstruct
q2	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kRsa3072ModulusSize> q2;$/;"	m	struct:asylo::sgx::Sigstruct
queued_threads_	./platform/posix/threading/thread_manager.h	/^  std::queue<std::shared_ptr<Thread>> queued_threads_;$/;"	m	class:asylo::ThreadManager
raise	./platform/posix/signal.cc	/^int raise(int sig) { return enc_untrusted_raise(sig); }$/;"	f
random_flag	./test/util/finite_domain_fuzz.cc	/^int random_flag() {$/;"	f	namespace:asylo
raw_list_	./test/misc/pthread_test.cc	/^  __pthread_list_t raw_list_ = {};$/;"	m	class:asylo::pthread_impl::__anon201::QueueOperationsTest	file:
raw_list_	./test/misc/pthread_test.cc	/^  __pthread_list_t raw_list_ = {};$/;"	m	class:asylo::pthread_impl::__anon455::QueueOperationsTest	file:
raw_pointer	./platform/primitives/extent.h	/^  static constexpr void *raw_pointer(T *ptr) {$/;"	f	class:asylo::primitives::Extent
raw_pointer	./platform/primitives/extent.h	/^  static constexpr void *raw_pointer(const T *ptr) {$/;"	f	class:asylo::primitives::Extent
rbegin	./crypto/util/byte_container_view.h	/^  const_reverse_iterator rbegin() const {$/;"	f	class:asylo::ByteContainerView
rbegin	./crypto/util/bytes.h	/^  const_reverse_iterator rbegin() const { return crbegin(); }$/;"	f	class:asylo::Bytes
rbegin	./crypto/util/bytes.h	/^  reverse_iterator rbegin() { return reverse_iterator(end()); }$/;"	f	class:asylo::Bytes
rdrand64	./platform/arch/sgx/trusted/hardware_random.cc	/^static uint64_t rdrand64() {$/;"	f	namespace:asylo::__anon285
rdrand64	./platform/arch/sgx/trusted/hardware_random.cc	/^static uint64_t rdrand64() {$/;"	f	namespace:asylo::__anon31
rdrand64	./platform/arch/sgx/trusted/hardware_random.cc	/^static void rdrand64(void *out) {$/;"	f	namespace:asylo::__anon285
rdrand64	./platform/arch/sgx/trusted/hardware_random.cc	/^static void rdrand64(void *out) {$/;"	f	namespace:asylo::__anon31
read_all	./platform/storage/secure/aead_handler.cc	/^ssize_t read_all(int fd, void *buf, size_t len) {$/;"	f	namespace:asylo::platform::storage::__anon353
read_all	./platform/storage/secure/aead_handler.cc	/^ssize_t read_all(int fd, void *buf, size_t len) {$/;"	f	namespace:asylo::platform::storage::__anon99
read_buffer_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  char read_buffer_[kMaxTestBufLen];$/;"	m	class:asylo::__anon100::EnclaveStorageSecureTest	file:
read_buffer_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  char read_buffer_[kMaxTestBufLen];$/;"	m	class:asylo::__anon354::EnclaveStorageSecureTest	file:
read_closed_	./util/fd_utils.h	/^  std::atomic<bool> read_closed_;$/;"	m	class:asylo::Pipe
read_count_	./platform/posix/sockets/socket_transmit.h	/^  int read_count_;$/;"	m	class:asylo::SocketTransmit
read_fd	./util/fd_utils.h	/^  inline int read_fd() const { return read_fd_; }$/;"	f	class:asylo::Pipe
read_fd_	./test/util/output_collector.h	/^  int read_fd_;$/;"	m	class:asylo::OutputCollector
read_fd_	./util/fd_utils.h	/^  int read_fd_;$/;"	m	class:asylo::Pipe
read_pos_	./platform/common/ring_buffer.h	/^  volatile size_t read_pos_;   \/\/ Read index into buffer_.$/;"	m	class:asylo::RingBuffer
readdir	./platform/posix/dirent.cc	/^struct dirent *readdir(DIR *) {$/;"	f
readdir_r	./platform/posix/dirent.cc	/^int readdir_r(DIR *, struct dirent *, struct dirent **) { abort(); }$/;"	f
readlink	./platform/posix/unistd.cc	/^ssize_t readlink(const char *path_name, char *buf, size_t bufsize) {$/;"	f
readv	./platform/posix/uio.cc	/^ssize_t readv(int fd, const struct iovec *iov, int iovcnt) {$/;"	f
realpath	./platform/posix/stdlib.cc	/^char *realpath(const char *path, char *resolved_path) {$/;"	f
rebind	./util/cleansing_allocator.h	/^  struct rebind {$/;"	s	class:asylo::CleansingAllocator
rebind	./util/cleansing_allocator_test.cc	/^  struct rebind {$/;"	s	class:asylo::__anon239::TestAllocator	file:
rebind	./util/cleansing_allocator_test.cc	/^  struct rebind {$/;"	s	class:asylo::__anon493::TestAllocator	file:
record_protocol_	./grpc/auth/core/ekep_handshaker.h	/^  RecordProtocol record_protocol_;$/;"	m	class:asylo::EkepHandshaker
record_protocol_	./grpc/auth/core/enclave_transport_security.cc	/^  RecordProtocol record_protocol_;$/;"	m	class:asylo::TsiEnclaveHandshakerResult	file:
record_protocol_	./grpc/auth/enclave_auth_context.h	/^  const RecordProtocol record_protocol_;$/;"	m	class:asylo::EnclaveAuthContext
record_protocol_key_	./grpc/auth/core/ekep_handshaker.h	/^  CleansingVector<uint8_t> record_protocol_key_;$/;"	m	class:asylo::EkepHandshaker
record_protocol_key_	./grpc/auth/core/enclave_transport_security.cc	/^  CleansingVector<uint8_t> record_protocol_key_;$/;"	m	class:asylo::TsiEnclaveHandshakerResult	file:
recursive_lock_count_	./platform/core/untrusted_mutex.h	/^  uint64_t recursive_lock_count_;$/;"	m	class:asylo::UntrustedMutex
recv	./platform/posix/sockets/socket.cc	/^ssize_t recv(int sockfd, void *buf, size_t len, int flags) {$/;"	f
recvfrom	./platform/posix/sockets/socket.cc	/^ssize_t recvfrom(int socket, void *buffer, size_t length, int flags,$/;"	f
recvmsg	./platform/posix/sockets/socket.cc	/^ssize_t recvmsg(int sockfd, struct msghdr *msg, int flags) {$/;"	f
redirect_stderr	./test/util/enclave_test.cc	/^int EnclaveTest::redirect_stderr() {$/;"	f	class:asylo::EnclaveTest
redirect_stdin	./test/util/enclave_test.cc	/^int EnclaveTest::redirect_stdin() {$/;"	f	class:asylo::EnclaveTest
redirect_stdout	./test/util/enclave_test.cc	/^int EnclaveTest::redirect_stdout() {$/;"	f	class:asylo::EnclaveTest
reference_count	./platform/core/shared_resource_manager.h	/^    int reference_count;$/;"	m	struct:asylo::SharedResourceManager::ResourceHandle
reference_google_error_status_	./platform/primitives/util/status_conversions_test.cc	/^  Status reference_google_error_status_ =$/;"	m	class:asylo::primitives::__anon339::StatusConversionsTest	file:
reference_google_error_status_	./platform/primitives/util/status_conversions_test.cc	/^  Status reference_google_error_status_ =$/;"	m	class:asylo::primitives::__anon85::StatusConversionsTest	file:
reference_non_google_error_status_	./platform/primitives/util/status_conversions_test.cc	/^  Status reference_non_google_error_status_ =$/;"	m	class:asylo::primitives::__anon339::StatusConversionsTest	file:
reference_non_google_error_status_	./platform/primitives/util/status_conversions_test.cc	/^  Status reference_non_google_error_status_ =$/;"	m	class:asylo::primitives::__anon85::StatusConversionsTest	file:
reg	./platform/arch/sgx/trusted/exceptions.cc	/^  int reg[4];$/;"	m	struct:__anon282::CpuidResult	file:
reg	./platform/arch/sgx/trusted/exceptions.cc	/^  int reg[4];$/;"	m	struct:__anon28::CpuidResult	file:
register_exception_handlers	./platform/arch/sgx/trusted/exceptions.cc	/^void register_exception_handlers() {$/;"	f	namespace:__anon28
register_exception_handlers	./platform/arch/sgx/trusted/exceptions.cc	/^void register_exception_handlers() {$/;"	f	namespace:__anon282
release	./platform/common/bridge_types.h	/^  char release[BRIDGE_UTSNAME_FIELD_LENGTH];$/;"	m	struct:BridgeUtsName
release	./platform/posix/include/sys/utsname.h	/^  char release[UTSNAME_FIELD_LENGTH];$/;"	m	struct:utsname
release	./platform/storage/utils/fd_closer.cc	/^int FdCloser::release() {$/;"	f	class:asylo::platform::storage::FdCloser
release	./util/cleanup.h	/^  std::function<void()> release() {$/;"	f	class:asylo::Cleanup
remove_required_attribute	./identity/sgx/fake_enclave.h	/^  void remove_required_attribute(SecsAttributeBit bit) {$/;"	f	class:asylo::sgx::FakeEnclave
remove_valid_attribute	./identity/sgx/fake_enclave.h	/^  void remove_valid_attribute(SecsAttributeBit bit) {$/;"	f	class:asylo::sgx::FakeEnclave
rename	./platform/posix/io/io_syscalls.cc	/^int rename(const char *oldpath, const char *newpath) {$/;"	f
rend	./crypto/util/byte_container_view.h	/^  const_reverse_iterator rend() const {$/;"	f	class:asylo::ByteContainerView
rend	./crypto/util/bytes.h	/^  const_reverse_iterator rend() const { return crend(); }$/;"	f	class:asylo::Bytes
rend	./crypto/util/bytes.h	/^  reverse_iterator rend() { return reverse_iterator(begin()); }$/;"	f	class:asylo::Bytes
replace	./crypto/util/bytes.h	/^  size_t replace(size_t pos, ByteContainerView view) {$/;"	f	class:asylo::Bytes
replace	./crypto/util/bytes.h	/^  size_t replace(size_t pos, const void *ptr, size_t count) {$/;"	f	class:asylo::Bytes
replace	./crypto/util/bytes.h	/^  size_t replace(size_t pos, uint8_t ch, size_t count) {$/;"	f	class:asylo::Bytes
report_key_request_	./identity/sgx/fake_hardware_interface_test.cc	/^  AlignedKeyrequestPtr report_key_request_;$/;"	m	class:asylo::sgx::__anon148::FakeEnclaveTest	file:
report_key_request_	./identity/sgx/fake_hardware_interface_test.cc	/^  AlignedKeyrequestPtr report_key_request_;$/;"	m	class:asylo::sgx::__anon402::FakeEnclaveTest	file:
report_keyid_	./identity/sgx/fake_enclave.h	/^  UnsafeBytes<kReportKeyidSize> report_keyid_;$/;"	m	class:asylo::sgx::FakeEnclave
reportdata	./identity/sgx/identity_key_management_structs.h	/^  Reportdata reportdata;$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
required_attributes_	./identity/sgx/fake_enclave.h	/^  SecsAttributeSet required_attributes_;$/;"	m	class:asylo::sgx::FakeEnclave
reserved1	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<12> reserved1;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
reserved1	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<12> reserved1;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::Sigstruct
reserved1	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<2> reserved1;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
reserved1	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<2> reserved1;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Targetinfo
reserved1	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<4> reserved1;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::SigstructBody
reserved1	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<84> reserved1;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::SigstructHeader
reserved2	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<16> reserved2;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::SigstructBody
reserved2	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<32> reserved2;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
reserved2	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<434> reserved2;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Keyrequest
reserved2	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<8> reserved2;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Targetinfo
reserved3	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<32> reserved3;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
reserved3	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<384> reserved3;  \/\/ Field size take from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Targetinfo
reserved4	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<42> reserved4;  \/\/ Field size taken from the Intel SDM.$/;"	m	struct:asylo::sgx::KeyrequestKeyname::Report
reserved_bss_base	./platform/primitives/trusted_runtime.h	/^  void *reserved_bss_base;$/;"	m	struct:EnclaveMemoryLayout
reserved_bss_size	./platform/primitives/trusted_runtime.h	/^  size_t reserved_bss_size;$/;"	m	struct:EnclaveMemoryLayout
reserved_data_base	./platform/primitives/trusted_runtime.h	/^  void *reserved_data_base;$/;"	m	struct:EnclaveMemoryLayout
reserved_data_size	./platform/primitives/trusted_runtime.h	/^  size_t reserved_data_size;$/;"	m	struct:EnclaveMemoryLayout
reserved_heap_base	./platform/primitives/trusted_runtime.h	/^  void *reserved_heap_base;$/;"	m	struct:EnclaveMemoryLayout
reserved_heap_size	./platform/primitives/trusted_runtime.h	/^  size_t reserved_heap_size;$/;"	m	struct:EnclaveMemoryLayout
reset	./platform/posix/sockets/socket_transmit.cc	/^void SocketTransmit::reset() {$/;"	f	class:asylo::SocketTransmit
reset	./platform/storage/utils/fd_closer.cc	/^bool FdCloser::reset() { return reset(-1); }$/;"	f	class:asylo::platform::storage::FdCloser
reset	./platform/storage/utils/fd_closer.cc	/^bool FdCloser::reset(int new_fd) {$/;"	f	class:asylo::platform::storage::FdCloser
resize	./crypto/util/bytes.h	/^  void resize(size_t new_size) const { return; }$/;"	f	class:asylo::Bytes
resource	./platform/core/shared_resource_manager.h	/^    T *resource;$/;"	m	struct:asylo::SharedResourceManager::UnmanagedResource
resource	./platform/core/shared_resource_manager.h	/^    std::unique_ptr<T, Deleter> resource;$/;"	m	struct:asylo::SharedResourceManager::ManagedResource
resource_name	./platform/core/shared_resource_manager.h	/^    SharedName resource_name;$/;"	m	struct:asylo::SharedResourceManager::ResourceHandle
restore	./platform/arch/sgx/untrusted/sgx_client.cc	/^static Status restore(sgx_enclave_id_t eid, const char *input, size_t input_len,$/;"	f	namespace:asylo
restore_handler	./examples/hello_world/hello_driver.cc	/^void restore_handler(int signo) {$/;"	f
result	./platform/system_call/message.h	/^  \/* byte: 16 ..  23 *\/ uint64_t result;                 \/\/ System call result.$/;"	m	struct:asylo::system_call::MessageHeader
result	./platform/system_call/message.h	/^  uint64_t result() const { return header()->result; }$/;"	f	class:asylo::system_call::MessageReader
result_	./platform/system_call/message.h	/^  uint64_t result_;$/;"	m	class:asylo::system_call::MessageWriter
ret_	./platform/posix/threading/thread_manager.h	/^    void *ret_;$/;"	m	class:asylo::ThreadManager::Thread
revents	./platform/common/bridge_types.h	/^  int16_t revents;$/;"	m	struct:bridge_pollfd
revents	./platform/posix/include/poll.h	/^  short revents;$/;"	m	struct:pollfd
rewinddir	./platform/posix/dirent.cc	/^void rewinddir(DIR *) { abort(); }$/;"	f
rlim_cur	./platform/posix/include/sys/resource.h	/^  rlim_t rlim_cur; \/* current soft limit *\/$/;"	m	struct:rlimit
rlim_max	./platform/posix/include/sys/resource.h	/^  rlim_t rlim_max; \/* maximum value for rlim_cur *\/$/;"	m	struct:rlimit
rlim_t	./platform/posix/include/sys/resource.h	/^typedef uint64_t rlim_t;$/;"	t
rlimit	./platform/posix/include/sys/resource.h	/^struct rlimit {$/;"	s
rmdir	./platform/posix/unistd.cc	/^int rmdir(const char *pathname) {$/;"	f
root_key_	./identity/sgx/fake_enclave.h	/^  SafeBytes<SHA256_DIGEST_LENGTH> root_key_;$/;"	m	class:asylo::sgx::FakeEnclave
ru_stime	./platform/common/bridge_types.h	/^  struct bridge_timeval ru_stime;$/;"	m	struct:BridgeRUsage	typeref:struct:BridgeRUsage::bridge_timeval
ru_utime	./platform/common/bridge_types.h	/^  struct bridge_timeval ru_utime;$/;"	m	struct:BridgeRUsage	typeref:struct:BridgeRUsage::bridge_timeval
run_log_	./test/misc/pthread_test.cc	/^  static std::vector<std::string> run_log_;$/;"	m	class:asylo::pthread_impl::__anon201::PthreadCleanupTest	file:
run_log_	./test/misc/pthread_test.cc	/^  static std::vector<std::string> run_log_;$/;"	m	class:asylo::pthread_impl::__anon455::PthreadCleanupTest	file:
run_log_	./test/misc/pthread_test.cc	/^std::vector<std::string> PthreadCleanupTest::run_log_;$/;"	m	class:asylo::pthread_impl::__anon201::PthreadCleanupTest	file:
run_log_	./test/misc/pthread_test.cc	/^std::vector<std::string> PthreadCleanupTest::run_log_;$/;"	m	class:asylo::pthread_impl::__anon455::PthreadCleanupTest	file:
rwlock_	./test/misc/rwlock_test.cc	/^  pthread_rwlock_t rwlock_ = PTHREAD_RWLOCK_INITIALIZER;$/;"	m	class:asylo::__anon213::RwLockTest	file:
rwlock_	./test/misc/rwlock_test.cc	/^  pthread_rwlock_t rwlock_ = PTHREAD_RWLOCK_INITIALIZER;$/;"	m	class:asylo::__anon467::RwLockTest	file:
s1_	./grpc/auth/util/safe_string_test.cc	/^  safe_string s1_;$/;"	m	class:asylo::__anon253::SafeStringTest	file:
s1_	./grpc/auth/util/safe_string_test.cc	/^  safe_string s1_;$/;"	m	class:asylo::__anon507::SafeStringTest	file:
s2_	./grpc/auth/util/safe_string_test.cc	/^  safe_string s2_;$/;"	m	class:asylo::__anon253::SafeStringTest	file:
s2_	./grpc/auth/util/safe_string_test.cc	/^  safe_string s2_;$/;"	m	class:asylo::__anon507::SafeStringTest	file:
s6_addr	./platform/posix/include/netinet/in.h	/^    uint8_t s6_addr[16];$/;"	m	union:in6_addr::__anon1
s6_addr16	./platform/posix/include/netinet/in.h	/^    uint16_t s6_addr16[8];$/;"	m	union:in6_addr::__anon1
s6_addr32	./platform/posix/include/netinet/in.h	/^    uint32_t s6_addr32[4];$/;"	m	union:in6_addr::__anon1
s_addr	./platform/posix/include/netinet/in.h	/^  in_addr_t s_addr;$/;"	m	struct:in_addr
s_aliases	./platform/posix/include/netdb.h	/^  char **s_aliases;  \/\/ Alias list.$/;"	m	struct:servent
s_name	./platform/posix/include/netdb.h	/^  char *s_name;      \/\/ Official service name.$/;"	m	struct:servent
s_port	./platform/posix/include/netdb.h	/^  int s_port;        \/\/ Port number.$/;"	m	struct:servent
s_proto	./platform/posix/include/netdb.h	/^  char *s_proto;     \/\/ Protocol to use.$/;"	m	struct:servent
sa_data	./platform/posix/include/sys/socket.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	./platform/common/bridge_types.h	/^  uint16_t sa_family;$/;"	m	struct:bridge_sockaddr
sa_family	./platform/posix/include/sys/socket.h	/^  sa_family_t sa_family;$/;"	m	struct:sockaddr
sa_family_t	./platform/posix/include/sys/socket.h	/^typedef __sa_family_t sa_family_t;$/;"	t
safe_string	./grpc/auth/util/safe_string.h	/^} safe_string;$/;"	t	typeref:struct:__anon6
safe_string_assign	./grpc/auth/util/safe_string.cc	/^void safe_string_assign(safe_string *safe_str, size_t size, const char *data) {$/;"	f
safe_string_copy	./grpc/auth/util/safe_string.cc	/^void safe_string_copy(safe_string *dest, const safe_string *src) {$/;"	f
safe_string_free	./grpc/auth/util/safe_string.cc	/^void safe_string_free(safe_string *safe_str) {$/;"	f
safe_string_init	./grpc/auth/util/safe_string.cc	/^void safe_string_init(safe_string *safe_str) {$/;"	f
saved_client_	./platform/primitives/untrusted_primitives.h	/^    Client *saved_client_;$/;"	m	class:asylo::primitives::Client::ScopedCurrentClient
sched_getaffinity	./platform/posix/sched.cc	/^int sched_getaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask) {$/;"	f
sched_yield	./platform/posix/sched.cc	/^int sched_yield() { return enc_untrusted_sched_yield(); }$/;"	f
sched_yield	./platform/primitives/sim/runtime_stubs.c	/^int sched_yield() { return 0; }$/;"	f
scratch_	./platform/common/ring_buffer_test.cc	/^  std::vector<uint8_t> scratch_;$/;"	m	class:asylo::RingBufferTest	file:
seal_fuses_	./identity/sgx/fake_enclave.h	/^  SafeBytes<AES_BLOCK_SIZE> seal_fuses_;$/;"	m	class:asylo::sgx::FakeEnclave
seal_key_fuses	./identity/sgx/fake_enclave.h	/^    SafeBytes<AES_BLOCK_SIZE> seal_key_fuses;$/;"	m	struct:asylo::sgx::FakeEnclave::KeyDependenciesBase
seal_key_request_	./identity/sgx/fake_hardware_interface_test.cc	/^  AlignedKeyrequestPtr seal_key_request_;$/;"	m	class:asylo::sgx::__anon148::FakeEnclaveTest	file:
seal_key_request_	./identity/sgx/fake_hardware_interface_test.cc	/^  AlignedKeyrequestPtr seal_key_request_;$/;"	m	class:asylo::sgx::__anon402::FakeEnclaveTest	file:
section_data_	./util/elf_reader.cc	/^  absl::flat_hash_map<std::string, absl::Span<const uint8_t>> section_data_;$/;"	m	class:asylo::ElfReaderCreator	file:
section_data_	./util/elf_reader.h	/^  absl::flat_hash_map<std::string, absl::Span<const uint8_t>> section_data_;$/;"	m	class:asylo::ElfReader
section_headers_	./util/elf_reader.cc	/^  absl::flat_hash_map<std::string, const Elf64_Shdr *> section_headers_;$/;"	m	class:asylo::ElfReaderCreator	file:
section_headers_	./util/elf_reader.h	/^  absl::flat_hash_map<std::string, const Elf64_Shdr *> section_headers_;$/;"	m	class:asylo::ElfReader
section_name_	./platform/arch/sgx/untrusted/sgx_client.h	/^  const std::string section_name_;$/;"	m	class:asylo::SgxEmbeddedLoader
secure_auth_context_	./grpc/auth/enclave_auth_context_test.cc	/^  std::unique_ptr<::grpc::SecureAuthContext> secure_auth_context_;$/;"	m	class:asylo::__anon248::EnclaveAuthContextTest	file:
secure_auth_context_	./grpc/auth/enclave_auth_context_test.cc	/^  std::unique_ptr<::grpc::SecureAuthContext> secure_auth_context_;$/;"	m	class:asylo::__anon502::EnclaveAuthContextTest	file:
secure_close	./platform/storage/secure/enclave_storage_secure.cc	/^int secure_close(int fd) {$/;"	f	namespace:asylo::platform::storage
secure_fstat	./platform/storage/secure/enclave_storage_secure.cc	/^int secure_fstat(int fd, struct stat *st) {$/;"	f	namespace:asylo::platform::storage
secure_lseek	./platform/storage/secure/enclave_storage_secure.cc	/^off_t secure_lseek(int fd, off_t offset, int whence) {$/;"	f	namespace:asylo::platform::storage
secure_open	./platform/storage/secure/enclave_storage_secure.cc	/^int secure_open(const char *pathname, int flags, ...) {$/;"	f	namespace:asylo::platform::storage
secure_read	./platform/storage/secure/enclave_storage_secure.cc	/^ssize_t secure_read(int fd, void *buf, size_t count) {$/;"	f	namespace:asylo::platform::storage
secure_write	./platform/storage/secure/enclave_storage_secure.cc	/^ssize_t secure_write(int fd, const void *buf, size_t count) {$/;"	f	namespace:asylo::platform::storage
seekdir	./platform/posix/dirent.cc	/^void seekdir(DIR *, int64_t) { abort(); }$/;"	f
select	./platform/posix/select.cc	/^int select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds,$/;"	f
selected_cipher_suite_	./grpc/auth/core/client_ekep_handshaker.h	/^  HandshakeCipher selected_cipher_suite_;$/;"	m	class:asylo::final
selected_cipher_suite_	./grpc/auth/core/server_ekep_handshaker.h	/^  HandshakeCipher selected_cipher_suite_;$/;"	m	class:asylo::final
selected_ekep_version_	./grpc/auth/core/client_ekep_handshaker.h	/^  std::string selected_ekep_version_;$/;"	m	class:asylo::final
selected_ekep_version_	./grpc/auth/core/server_ekep_handshaker.h	/^  std::string selected_ekep_version_;$/;"	m	class:asylo::final
selected_record_protocol_	./grpc/auth/core/client_ekep_handshaker.h	/^  RecordProtocol selected_record_protocol_;$/;"	m	class:asylo::final
selected_record_protocol_	./grpc/auth/core/server_ekep_handshaker.h	/^  RecordProtocol selected_record_protocol_;$/;"	m	class:asylo::final
self_assertions	./grpc/auth/core/ekep_handshaker_util.h	/^  std::vector<AssertionDescription> self_assertions;$/;"	m	struct:asylo::EkepHandshakerOptions
self_assertions	./grpc/auth/core/enclave_credentials_options.h	/^  assertion_description_array self_assertions;$/;"	m	struct:__anon7
self_assertions	./grpc/auth/enclave_credentials_options.h	/^  AssertionDescriptionHashSet self_assertions;$/;"	m	struct:asylo::EnclaveCredentialsOptions
self_assertions_	./grpc/auth/core/client_ekep_handshaker.h	/^  const std::vector<AssertionDescription> self_assertions_;$/;"	m	class:asylo::final
self_assertions_	./grpc/auth/core/enclave_credentials.h	/^  assertion_description_array self_assertions_;$/;"	m	class:final
self_assertions_	./grpc/auth/core/server_ekep_handshaker.h	/^  const std::vector<AssertionDescription> self_assertions_;$/;"	m	class:asylo::final
sem	./test/misc/sem_test.cc	/^  sem_t sem;$/;"	m	class:asylo::__anon205::ProducerConsumerTest	file:
sem	./test/misc/sem_test.cc	/^  sem_t sem;$/;"	m	class:asylo::__anon459::ProducerConsumerTest	file:
sem_destroy	./platform/posix/pthread.cc	/^int sem_destroy(sem_t *sem) {$/;"	f
sem_getvalue	./platform/posix/pthread.cc	/^int sem_getvalue(sem_t *sem, int *sval) {$/;"	f
sem_init	./platform/posix/pthread.cc	/^int sem_init(sem_t *sem, const int pshared, const unsigned int value) {$/;"	f
sem_post	./platform/posix/pthread.cc	/^int sem_post(sem_t *sem) {$/;"	f
sem_t	./platform/posix/include/semaphore.h	/^typedef struct sem_t {$/;"	s
sem_t	./platform/posix/include/semaphore.h	/^} sem_t;$/;"	t	typeref:struct:sem_t
sem_timedwait	./platform/posix/pthread.cc	/^int sem_timedwait(sem_t *sem, const timespec *abs_timeout) {$/;"	f
sem_trywait	./platform/posix/pthread.cc	/^int sem_trywait(sem_t *sem) {$/;"	f
sem_wait	./platform/posix/pthread.cc	/^int sem_wait(sem_t *sem) { return sem_timedwait(sem, nullptr); }$/;"	f
semaphore_	./platform/posix/io/io_context_eventfd.h	/^  bool semaphore_;$/;"	m	class:asylo::io::IOContextEventFd
send	./platform/posix/sockets/socket.cc	/^ssize_t send(int sockfd, const void *buf, size_t len, int flags) {$/;"	f
sendmsg	./platform/posix/sockets/socket.cc	/^ssize_t sendmsg(int sockfd, const struct msghdr *msg, int flags) {$/;"	f
servent	./platform/posix/include/netdb.h	/^struct servent {$/;"	s
server_	./grpc/util/enclave_server.h	/^  MutexGuarded<std::unique_ptr<::grpc::Server>> server_;$/;"	m	class:asylo::final
server_	./grpc/util/grpc_server_launcher.h	/^  std::unique_ptr<::grpc::Server> server_;$/;"	m	class:asylo::GrpcServerLauncher
server_address	./platform/core/enclave_manager.h	/^    std::string server_address;$/;"	m	struct:asylo::EnclaveManagerOptions::ConfigServerConnectionAttributes
server_address_	./grpc/util/grpc_server_launcher_test.cc	/^  std::string server_address_;$/;"	m	class:asylo::__anon263::GrpcServerLauncherTest	file:
server_address_	./grpc/util/grpc_server_launcher_test.cc	/^  std::string server_address_;$/;"	m	class:asylo::__anon517::GrpcServerLauncherTest	file:
server_address_	./test/grpc/enclave_communication_test.cc	/^  std::string server_address_;$/;"	m	class:asylo::__anon221::EnclaveCommunicationTest	file:
server_address_	./test/grpc/enclave_communication_test.cc	/^  std::string server_address_;$/;"	m	class:asylo::__anon475::EnclaveCommunicationTest	file:
server_assertion_transcript_	./grpc/auth/core/client_ekep_handshaker.h	/^  std::string server_assertion_transcript_;$/;"	m	class:asylo::final
server_credentials	./test/grpc/channel_test.cc	/^  std::shared_ptr<::grpc::ServerCredentials> server_credentials;$/;"	m	struct:asylo::__anon224::CredentialsConfig	file:
server_credentials	./test/grpc/channel_test.cc	/^  std::shared_ptr<::grpc::ServerCredentials> server_credentials;$/;"	m	struct:asylo::__anon478::CredentialsConfig	file:
server_exit_status_	./examples/grpc_server/grpc_server_test.cc	/^  int server_exit_status_;$/;"	m	class:examples::grpc_server::__anon244::GrpcServerTest	file:
server_exit_status_	./examples/grpc_server/grpc_server_test.cc	/^  int server_exit_status_;$/;"	m	class:examples::grpc_server::__anon498::GrpcServerTest	file:
server_launcher_	./test/grpc/enclave_communication_test.cc	/^  EnclaveTestLauncher server_launcher_;$/;"	m	class:asylo::__anon221::EnclaveCommunicationTest	file:
server_launcher_	./test/grpc/enclave_communication_test.cc	/^  EnclaveTestLauncher server_launcher_;$/;"	m	class:asylo::__anon475::EnclaveCommunicationTest	file:
server_mutex_	./examples/grpc_server/grpc_server_enclave.cc	/^  absl::Mutex server_mutex_;$/;"	m	class:examples::grpc_server::final	file:
server_port_found_	./examples/grpc_server/grpc_server_test.cc	/^  bool server_port_found_;$/;"	m	class:examples::grpc_server::__anon244::GrpcServerTest	file:
server_port_found_	./examples/grpc_server/grpc_server_test.cc	/^  bool server_port_found_;$/;"	m	class:examples::grpc_server::__anon244::ServerEnclaveExecTester	file:
server_port_found_	./examples/grpc_server/grpc_server_test.cc	/^  bool server_port_found_;$/;"	m	class:examples::grpc_server::__anon498::GrpcServerTest	file:
server_port_found_	./examples/grpc_server/grpc_server_test.cc	/^  bool server_port_found_;$/;"	m	class:examples::grpc_server::__anon498::ServerEnclaveExecTester	file:
server_thread_	./examples/grpc_server/grpc_server_test.cc	/^  std::unique_ptr<std::thread> server_thread_;$/;"	m	class:examples::grpc_server::__anon244::GrpcServerTest	file:
server_thread_	./examples/grpc_server/grpc_server_test.cc	/^  std::unique_ptr<std::thread> server_thread_;$/;"	m	class:examples::grpc_server::__anon498::GrpcServerTest	file:
server_thread_state_mutex_	./examples/grpc_server/grpc_server_test.cc	/^  absl::Mutex *server_thread_state_mutex_;$/;"	m	class:examples::grpc_server::__anon244::ServerEnclaveExecTester	file:
server_thread_state_mutex_	./examples/grpc_server/grpc_server_test.cc	/^  absl::Mutex *server_thread_state_mutex_;$/;"	m	class:examples::grpc_server::__anon498::ServerEnclaveExecTester	file:
server_thread_state_mutex_	./examples/grpc_server/grpc_server_test.cc	/^  absl::Mutex server_thread_state_mutex_;$/;"	m	class:examples::grpc_server::__anon244::GrpcServerTest	file:
server_thread_state_mutex_	./examples/grpc_server/grpc_server_test.cc	/^  absl::Mutex server_thread_state_mutex_;$/;"	m	class:examples::grpc_server::__anon498::GrpcServerTest	file:
server_thread_state_mutex_	./examples/grpc_server/grpc_server_test.cc	/^  int *server_port_ PT_GUARDED_BY(*server_thread_state_mutex_);$/;"	m	class:examples::grpc_server::__anon244::ServerEnclaveExecTester	file:
server_thread_state_mutex_	./examples/grpc_server/grpc_server_test.cc	/^  int *server_port_ PT_GUARDED_BY(*server_thread_state_mutex_);$/;"	m	class:examples::grpc_server::__anon498::ServerEnclaveExecTester	file:
service_	./examples/grpc_server/grpc_server_enclave.cc	/^  TranslatorServerImpl service_;$/;"	m	class:examples::grpc_server::final	file:
service_	./grpc/util/enclave_server.h	/^  std::unique_ptr<::grpc::Service> service_;$/;"	m	class:asylo::final
service_factory_	./grpc/util/enclave_server.h	/^  GrpcServiceFactory service_factory_;$/;"	m	class:asylo::final
services_	./grpc/util/grpc_server_launcher.h	/^  std::vector<std::unique_ptr<::grpc::Service>> services_;$/;"	m	class:asylo::GrpcServerLauncher
set_attributes	./identity/sgx/fake_enclave.h	/^  void set_attributes(const SecsAttributeSet &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_config_server_connection_attributes	./platform/core/enclave_manager.cc	/^EnclaveManagerOptions::set_config_server_connection_attributes($/;"	f	class:asylo::EnclaveManagerOptions
set_configid	./identity/sgx/fake_enclave.h	/^  void set_configid(const UnsafeBytes<kConfigidSize> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_configsvn	./identity/sgx/fake_enclave.h	/^  void set_configsvn(uint16_t value) { configsvn_ = value; }$/;"	f	class:asylo::sgx::FakeEnclave
set_cpusvn	./identity/sgx/fake_enclave.h	/^  void set_cpusvn(const UnsafeBytes<kCpusvnSize> &value) { cpusvn_ = value; }$/;"	f	class:asylo::sgx::FakeEnclave
set_host_config	./platform/core/enclave_manager.cc	/^EnclaveManagerOptions &EnclaveManagerOptions::set_host_config($/;"	f	class:asylo::EnclaveManagerOptions
set_isvextprodid	./identity/sgx/fake_enclave.h	/^  void set_isvextprodid(const UnsafeBytes<kIsvextprodidSize> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_isvfamilyid	./identity/sgx/fake_enclave.h	/^  void set_isvfamilyid(const UnsafeBytes<kIsvfamilyidSize> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_isvprodid	./identity/sgx/fake_enclave.h	/^  void set_isvprodid(uint16_t value) { isvprodid_ = value; }$/;"	f	class:asylo::sgx::FakeEnclave
set_isvsvn	./identity/sgx/fake_enclave.h	/^  void set_isvsvn(uint16_t value) { isvsvn_ = value; }$/;"	f	class:asylo::sgx::FakeEnclave
set_log_basename	./util/logging.cc	/^bool set_log_basename(const std::string &filename) {$/;"	f	namespace:asylo::__anon236
set_log_basename	./util/logging.cc	/^bool set_log_basename(const std::string &filename) {$/;"	f	namespace:asylo::__anon490
set_log_directory	./util/logging.cc	/^bool set_log_directory(const std::string &log_directory) {$/;"	f	namespace:asylo
set_miscselect	./identity/sgx/fake_enclave.h	/^  void set_miscselect(uint32_t value) { miscselect_ = value; }$/;"	f	class:asylo::sgx::FakeEnclave
set_mrenclave	./identity/sgx/fake_enclave.h	/^  void set_mrenclave(const UnsafeBytes<SHA256_DIGEST_LENGTH> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_mrsigner	./identity/sgx/fake_enclave.h	/^  void set_mrsigner(const UnsafeBytes<SHA256_DIGEST_LENGTH> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_ownerepoch	./identity/sgx/fake_enclave.h	/^  void set_ownerepoch(const SafeBytes<kOwnerEpochSize> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_report_keyid	./identity/sgx/fake_enclave.h	/^  void set_report_keyid(const UnsafeBytes<kReportKeyidSize> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_required_attributes	./identity/sgx/fake_enclave.h	/^  void set_required_attributes(const SecsAttributeSet &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_root_key	./identity/sgx/fake_enclave.h	/^  void set_root_key(const SafeBytes<SHA256_DIGEST_LENGTH> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_seal_fuses	./identity/sgx/fake_enclave.h	/^  void set_seal_fuses(const SafeBytes<AES_BLOCK_SIZE> &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_stderr	./test/util/enclave_test.h	/^  void set_stderr(int fd) { config_.set_stderr_fd(fd); }$/;"	f	class:asylo::EnclaveTest
set_stdin	./test/util/enclave_test.h	/^  void set_stdin(int fd) { config_.set_stdin_fd(fd); }$/;"	f	class:asylo::EnclaveTest
set_stdout	./test/util/enclave_test.h	/^  void set_stdout(int fd) { config_.set_stdout_fd(fd); }$/;"	f	class:asylo::EnclaveTest
set_valid_attributes	./identity/sgx/fake_enclave.h	/^  void set_valid_attributes(const SecsAttributeSet &value) {$/;"	f	class:asylo::sgx::FakeEnclave
set_vlog_level	./util/logging.cc	/^void set_vlog_level(int level) { vlog_level = level; }$/;"	f	namespace:asylo
setitimer	./platform/posix/time.cc	/^int setitimer(int which, const struct itimerval *new_value,$/;"	f
setrlimit	./platform/posix/resource.cc	/^int setrlimit(int resource, const struct rlimit *rlim) {$/;"	f
setsid	./platform/posix/unistd.cc	/^pid_t setsid() { return enc_untrusted_setsid(); }$/;"	f
setsockopt	./platform/posix/sockets/socket.cc	/^int setsockopt(int sockfd, int level, int option_name, const void *option_value,$/;"	f
severity_	./util/logging.h	/^  LogSeverity severity_;$/;"	m	class:asylo::LogMessage
sgx	./identity/sgx/attributes_util.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/attributes_util.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/attributes_util_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/code_identity_constants.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/code_identity_constants.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/code_identity_test_util.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/code_identity_test_util.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/code_identity_util.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/code_identity_util.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/code_identity_util_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/dcap_intel_architectural_enclave_interface.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/dcap_intel_architectural_enclave_interface.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/fake_enclave.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/fake_enclave.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/fake_hardware_interface.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/fake_hardware_interface_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/fake_self_identity.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/hardware_interface.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/hardware_interface.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/identity_key_management_structs.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/intel_architectural_enclave_interface.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/local_secret_sealer_helpers.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/local_secret_sealer_helpers.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/pce_util.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/pce_util.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/pce_util_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/platform_provisioning.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/platform_provisioning.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/platform_provisioning_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/proto_format.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/proto_format.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/proto_format_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/remote_assertion_util.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/remote_assertion_util.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/remote_assertion_util_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/secs_attributes.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/secs_attributes.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/secs_attributes_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/secs_miscselect.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/secs_miscselect.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/secs_miscselect_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/self_identity.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/self_identity.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/self_identity_internal.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/tcb.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/tcb.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/tcb_info_from_json.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/tcb_info_from_json.h	/^namespace sgx {$/;"	n	namespace:asylo
sgx	./identity/sgx/tcb_info_from_json_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/tcb_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./identity/sgx/verify_hardware_report_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx	./util/proto_struct_util_test.cc	/^namespace sgx {$/;"	n	namespace:asylo	file:
sgx_local_assertion_description_	./grpc/auth/enclave_credentials_options_test.cc	/^  AssertionDescription sgx_local_assertion_description_;$/;"	m	class:asylo::__anon249::EnclaveCredentialsOptionsTest	file:
sgx_local_assertion_description_	./grpc/auth/enclave_credentials_options_test.cc	/^  AssertionDescription sgx_local_assertion_description_;$/;"	m	class:asylo::__anon503::EnclaveCredentialsOptionsTest	file:
sgx_thread_cond_t	./third_party/intel/posix/sgx_thread.h	/^} sgx_thread_cond_t;$/;"	t	typeref:struct:_sgx_thread_cond_t
sgx_thread_condattr_t	./third_party/intel/posix/sgx_thread.h	/^} sgx_thread_condattr_t;$/;"	t	typeref:struct:_sgx_thread_cond_attr_t
sgx_thread_mutex_t	./third_party/intel/posix/sgx_thread.h	/^} sgx_thread_mutex_t;$/;"	t	typeref:struct:_sgx_thread_mutex_t
sgx_thread_mutexattr_t	./third_party/intel/posix/sgx_thread.h	/^} sgx_thread_mutexattr_t;$/;"	t	typeref:struct:_sgx_thread_mutex_attr_t
sgx_thread_queue_t	./third_party/intel/posix/sgx_thread.h	/^} sgx_thread_queue_t;$/;"	t	typeref:struct:_sgx_thread_queue_t
sgx_thread_t	./third_party/intel/posix/sgx_thread.h	/^typedef uintptr_t sgx_thread_t;$/;"	t
shared_resource_manager_	./platform/core/enclave_manager.h	/^  SharedResourceManager shared_resource_manager_;$/;"	m	class:asylo::EnclaveManager
shared_resources	./platform/core/enclave_manager.h	/^  SharedResourceManager *shared_resources() {$/;"	f	class:asylo::EnclaveManager
shared_resources	./platform/core/enclave_manager.h	/^  const SharedResourceManager *shared_resources() const {$/;"	f	class:asylo::EnclaveManager
shared_resources_	./platform/core/shared_resource_manager.h	/^      shared_resources_;$/;"	m	class:asylo::SharedResourceManager
shutdown	./platform/posix/sockets/socket.cc	/^int shutdown(int sockfd, int how) {$/;"	f
shutdown_requested_	./examples/grpc_server/grpc_server_enclave.cc	/^  absl::Notification shutdown_requested_;$/;"	m	class:examples::grpc_server::final	file:
shutdown_requested_mutex_	./examples/grpc_server/translator_server_impl.h	/^  absl::Mutex shutdown_requested_mutex_;$/;"	m	class:examples::grpc_server::final
shutdown_timeout_	./examples/grpc_server/grpc_server_enclave.cc	/^  absl::Duration shutdown_timeout_;$/;"	m	class:examples::grpc_server::final	file:
si_code	./platform/common/bridge_types.h	/^  int32_t si_code;$/;"	m	struct:bridge_siginfo_t
si_signo	./platform/common/bridge_types.h	/^  int32_t si_signo;$/;"	m	struct:bridge_siginfo_t
sig_atomic_t	./platform/posix/include/signal.h	/^typedef int sig_atomic_t;$/;"	t
sigaction	./platform/common/bridge_types.h	/^  void (*sigaction)(int, struct bridge_siginfo_t *, void *);$/;"	m	struct:BridgeSignalHandler
sigaction	./platform/posix/signal.cc	/^int sigaction(int signum, const struct sigaction *act,$/;"	f
signal	./platform/posix/signal.cc	/^sighandler_t signal(int signum, sighandler_t handler) {$/;"	f
signal_enclave_map_lock_	./platform/core/enclave_manager.h	/^  mutable absl::Mutex signal_enclave_map_lock_;$/;"	m	class:asylo::EnclaveSignalDispatcher
signal_handled	./test/misc/active_enclave_signal_test_enclave.cc	/^static volatile thread_local bool signal_handled = false;$/;"	m	namespace:asylo	file:
signal_handled	./test/misc/inactive_enclave_signal_test_enclave.cc	/^static bool signal_handled = false;$/;"	m	namespace:asylo	file:
signal_handled	./test/misc/raise_signal_test.cc	/^static bool signal_handled = false;$/;"	m	namespace:asylo::__anon199	file:
signal_handled	./test/misc/raise_signal_test.cc	/^static bool signal_handled = false;$/;"	m	namespace:asylo::__anon453	file:
signal_handler_interrupted	./test/misc/active_enclave_signal_test_enclave.cc	/^static volatile thread_local bool signal_handler_interrupted = false;$/;"	m	namespace:asylo	file:
signal_mask_	./platform/posix/signal/signal_manager.h	/^  thread_local static sigset_t signal_mask_;$/;"	m	class:asylo::SignalManager
signal_test_type	./test/misc/active_enclave_signal_test_driver.cc	/^  SignalTestInput::SignalTestType signal_test_type;$/;"	m	struct:asylo::__anon198::SendSignalThreadInput	file:
signal_test_type	./test/misc/active_enclave_signal_test_driver.cc	/^  SignalTestInput::SignalTestType signal_test_type;$/;"	m	struct:asylo::__anon452::SendSignalThreadInput	file:
signal_to_reset_lock_	./platform/posix/signal/signal_manager.h	/^  mutable absl::Mutex signal_to_reset_lock_;$/;"	m	class:asylo::SignalManager
signal_to_sigaction_lock_	./platform/posix/signal/signal_manager.h	/^  mutable absl::Mutex signal_to_sigaction_lock_;$/;"	m	class:asylo::SignalManager
signature	./identity/sgx/identity_key_management_structs.h	/^  UnsafeBytes<kRsa3072ModulusSize> signature;$/;"	m	struct:asylo::sgx::Sigstruct
signing_key_	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^  std::unique_ptr<EcdsaP256Sha256SigningKey> signing_key_;$/;"	m	class:asylo::__anon19::EcdsaP256Sha256SigningKeyTest	file:
signing_key_	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^  std::unique_ptr<EcdsaP256Sha256SigningKey> signing_key_;$/;"	m	class:asylo::__anon273::EcdsaP256Sha256SigningKeyTest	file:
sigprocmask	./platform/posix/signal.cc	/^int sigprocmask(int how, const sigset_t *set, sigset_t *oldset) {$/;"	f
sim_asylo_exit_call	./platform/primitives/sim/untrusted_sim.cc	/^PrimitiveStatus sim_asylo_exit_call(uint64_t untrusted_selector, void *params) {$/;"	f	namespace:asylo::primitives::__anon347
sim_asylo_exit_call	./platform/primitives/sim/untrusted_sim.cc	/^PrimitiveStatus sim_asylo_exit_call(uint64_t untrusted_selector, void *params) {$/;"	f	namespace:asylo::primitives::__anon93
sim_asylo_local_alloc_handler	./platform/primitives/sim/untrusted_sim.cc	/^void *sim_asylo_local_alloc_handler(size_t size) { return malloc(size); }$/;"	f	namespace:asylo::primitives::__anon347
sim_asylo_local_alloc_handler	./platform/primitives/sim/untrusted_sim.cc	/^void *sim_asylo_local_alloc_handler(size_t size) { return malloc(size); }$/;"	f	namespace:asylo::primitives::__anon93
sim_asylo_local_free_handler	./platform/primitives/sim/untrusted_sim.cc	/^void sim_asylo_local_free_handler(void *ptr) { return free(ptr); }$/;"	f	namespace:asylo::primitives::__anon347
sim_asylo_local_free_handler	./platform/primitives/sim/untrusted_sim.cc	/^void sim_asylo_local_free_handler(void *ptr) { return free(ptr); }$/;"	f	namespace:asylo::primitives::__anon93
sim_trampoline_address	./platform/primitives/sim/shared_sim.h	/^constexpr uint64_t sim_trampoline_address = 0x7e0000000000;$/;"	m	namespace:asylo::primitives
simulator	./platform/primitives/sim/trusted_sim.cc	/^} simulator;$/;"	m	namespace:asylo::primitives::__anon345	typeref:struct:asylo::primitives::__anon345::__anon346	file:
simulator	./platform/primitives/sim/trusted_sim.cc	/^} simulator;$/;"	m	namespace:asylo::primitives::__anon91	typeref:struct:asylo::primitives::__anon91::__anon92	file:
sin6_addr	./platform/common/bridge_types.h	/^  struct bridge_in6_addr sin6_addr;$/;"	m	struct:bridge_sockaddr_in6	typeref:struct:bridge_sockaddr_in6::bridge_in6_addr
sin6_addr	./platform/posix/include/netinet/in.h	/^  struct in6_addr sin6_addr;$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr
sin6_family	./platform/posix/include/netinet/in.h	/^  sa_family_t sin6_family;$/;"	m	struct:sockaddr_in6
sin6_flowinfo	./platform/common/bridge_types.h	/^  uint32_t sin6_flowinfo;$/;"	m	struct:bridge_sockaddr_in6
sin6_flowinfo	./platform/posix/include/netinet/in.h	/^  uint32_t sin6_flowinfo;$/;"	m	struct:sockaddr_in6
sin6_port	./platform/common/bridge_types.h	/^  uint16_t sin6_port;$/;"	m	struct:bridge_sockaddr_in6
sin6_port	./platform/posix/include/netinet/in.h	/^  in_port_t sin6_port;$/;"	m	struct:sockaddr_in6
sin6_scope_id	./platform/common/bridge_types.h	/^  uint32_t sin6_scope_id;$/;"	m	struct:bridge_sockaddr_in6
sin6_scope_id	./platform/posix/include/netinet/in.h	/^  uint32_t sin6_scope_id;$/;"	m	struct:sockaddr_in6
sin_addr	./platform/common/bridge_types.h	/^  struct bridge_in_addr sin_addr;$/;"	m	struct:bridge_sockaddr_in	typeref:struct:bridge_sockaddr_in::bridge_in_addr
sin_addr	./platform/posix/include/netinet/in.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	./platform/posix/include/netinet/in.h	/^  sa_family_t sin_family;$/;"	m	struct:sockaddr_in
sin_port	./platform/common/bridge_types.h	/^  uint16_t sin_port;$/;"	m	struct:bridge_sockaddr_in
sin_port	./platform/posix/include/netinet/in.h	/^  in_port_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	./platform/common/bridge_types.h	/^  char sin_zero[8];$/;"	m	struct:bridge_sockaddr_in
sin_zero	./platform/posix/include/netinet/in.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
size	./crypto/util/byte_container_view.h	/^  size_t size() const { return size_; }$/;"	f	class:asylo::ByteContainerView
size	./crypto/util/bytes.h	/^  static constexpr size_t size() { return Size; }$/;"	f	class:asylo::Bytes
size	./grpc/auth/util/safe_string.h	/^  size_t size;$/;"	m	struct:__anon6
size	./platform/arch/sgx/untrusted/sgx_client.h	/^  size_t size() { return primitive_sgx_client_->GetEnclaveSize(); }$/;"	f	class:asylo::SgxClient
size	./platform/common/ring_buffer.h	/^  size_t size() const { return count_; }$/;"	f	class:asylo::RingBuffer
size	./platform/primitives/extent.h	/^  size_t size() const { return size_; }$/;"	f	class:asylo::primitives::Extent
size	./platform/primitives/parameter_stack.h	/^  size_t size() const { return size_; }$/;"	f	class:asylo::primitives::ParameterStack
size	./platform/primitives/util/message.h	/^  size_t size() const { return extents_.size(); }$/;"	f	class:asylo::primitives::MessageReader
size	./platform/primitives/util/message.h	/^  size_t size() const { return extents_.size(); }$/;"	f	class:asylo::primitives::MessageWriter
size	./platform/system_call/generate_tables.cc	/^  size_t size;$/;"	m	struct:ParameterDescription	file:
size	./platform/system_call/message.h	/^  \/* byte: 72 .. 119 *\/ uint64_t size[kParameterMax];    \/\/ Parameter size.$/;"	m	struct:asylo::system_call::MessageHeader
size	./platform/system_call/metadata.cc	/^  const uint32_t size;$/;"	m	struct:asylo::system_call::__anon116::ParameterTableEntry	file:
size	./platform/system_call/metadata.cc	/^  const uint32_t size;$/;"	m	struct:asylo::system_call::__anon370::ParameterTableEntry	file:
size	./platform/system_call/metadata.cc	/^size_t ParameterDescriptor::size() const {$/;"	f	class:asylo::system_call::ParameterDescriptor
size_	./crypto/util/byte_container_view.h	/^  size_t size_;$/;"	m	class:asylo::ByteContainerView
size_	./grpc/auth/util/multi_buffer_input_stream.h	/^  int size_;$/;"	m	class:asylo::MultiBufferInputStream
size_	./platform/primitives/extent.h	/^  size_t size_;$/;"	m	class:asylo::primitives::Extent
size_	./platform/primitives/parameter_stack.h	/^  size_t size_ = 0;$/;"	m	class:asylo::primitives::ParameterStack
size_	./platform/primitives/sgx/untrusted_sgx.h	/^  size_t size_;                     \/\/ Enclave size.$/;"	m	class:asylo::primitives::SgxEnclaveClient
sizeof	./platform/common/ring_buffer.h	/^  static_assert(sizeof(std::atomic<size_t>) == sizeof(size_t),$/;"	m	class:asylo::RingBuffer
sizeof	./platform/posix/time.cc	/^static_assert(sizeof(std::atomic<int64_t>) == sizeof(int64_t),$/;"	m	namespace:__anon314	file:
sizeof	./platform/posix/time.cc	/^static_assert(sizeof(std::atomic<int64_t>) == sizeof(int64_t),$/;"	m	namespace:__anon60	file:
skip_conversions	./platform/system_call/type_conversions/types_conversions_generator.cc	/^  bool skip_conversions;$/;"	m	struct:EnumProperties	file:
skip_conversions	./platform/system_call/type_conversions/types_conversions_generator.cc	/^  bool skip_conversions;$/;"	m	struct:StructProperties	file:
sleep	./platform/posix/unistd.cc	/^uint32_t sleep(uint32_t seconds) { return enc_untrusted_sleep(seconds); }$/;"	f
sleeping_finalizer_function	./test/misc/threaded_finalize.cc	/^void *sleeping_finalizer_function(void *arg) {$/;"	f	namespace:asylo
small_data_	./platform/posix/pipe_test.cc	/^  std::vector<uint8_t> small_data_;$/;"	m	class:asylo::__anon301::PipeTest	file:
small_data_	./platform/posix/pipe_test.cc	/^  std::vector<uint8_t> small_data_;$/;"	m	class:asylo::__anon47::PipeTest	file:
snapshot_deleter_	./platform/posix/fork_security_test_driver.cc	/^  SnapshotDeleter snapshot_deleter_;$/;"	m	class:asylo::__anon305::ForkSecurityTest	file:
snapshot_deleter_	./platform/posix/fork_security_test_driver.cc	/^  SnapshotDeleter snapshot_deleter_;$/;"	m	class:asylo::__anon51::ForkSecurityTest	file:
snapshot_handler	./examples/hello_world/hello_driver.cc	/^void snapshot_handler(int signo)$/;"	f
snapshot_layout	./examples/hello_world/hello_driver.cc	/^asylo::SnapshotLayout snapshot_layout;$/;"	v
snapshot_layout_	./examples/grpc_server/grpc_server_driver.cc	/^asylo::SnapshotLayout snapshot_layout_;$/;"	v
snapshot_layout_	./platform/posix/fork_security_test_driver.cc	/^  SnapshotLayout snapshot_layout_;$/;"	m	class:asylo::__anon305::ForkSecurityTest	file:
snapshot_layout_	./platform/posix/fork_security_test_driver.cc	/^  SnapshotLayout snapshot_layout_;$/;"	m	class:asylo::__anon51::ForkSecurityTest	file:
sock_transmit_	./platform/posix/sockets/socket_client.h	/^  SocketTransmit sock_transmit_;$/;"	m	class:asylo::SocketClient
sock_transmit_	./platform/posix/sockets/socket_server.h	/^  SocketTransmit sock_transmit_;$/;"	m	class:asylo::SocketServer
sockaddr	./platform/posix/include/sys/socket.h	/^struct sockaddr {$/;"	s
sockaddr_in	./platform/posix/include/netinet/in.h	/^struct sockaddr_in {$/;"	s
sockaddr_in6	./platform/posix/include/netinet/in.h	/^struct sockaddr_in6 {$/;"	s
sockaddr_storage	./platform/posix/include/sys/socket.h	/^struct sockaddr_storage {$/;"	s
sockaddr_un	./platform/posix/include/sys/un.h	/^struct sockaddr_un {$/;"	s
socket	./platform/posix/sockets/socket.cc	/^int socket(int domain, int type, int protocol) {$/;"	f
socket_fd_	./platform/posix/sockets/socket_server.h	/^  platform::storage::FdCloser socket_fd_;$/;"	m	class:asylo::SocketServer
socketpair	./platform/posix/sockets/socket.cc	/^int socketpair(int domain, int type, int protocol, int sv[2]) { abort(); }$/;"	f
socklen_t	./platform/posix/include/sys/socket.h	/^typedef __socklen_t socklen_t;$/;"	t
source	./platform/posix/include/netinet/udp.h	/^  uint16_t source;$/;"	m	struct:udphdr
space_name_	./platform/primitives/util/status_conversions_test.cc	/^    const std::string space_name_;$/;"	m	class:asylo::primitives::__anon339::StatusConversionsTest::NonGoogleErrorSpace	file:
space_name_	./platform/primitives/util/status_conversions_test.cc	/^    const std::string space_name_;$/;"	m	class:asylo::primitives::__anon85::StatusConversionsTest::NonGoogleErrorSpace	file:
space_name_	./util/error_space.h	/^  const std::string space_name_;$/;"	m	class:asylo::error::ErrorSpaceImplementationHelper
speed_t	./platform/posix/include/sys/termios.h	/^typedef unsigned int speed_t;$/;"	t
src	./platform/common/bridge_functions.cc	/^void ReinterpretCopyArray(T (&dst)[M], const U (&src)[N],$/;"	m	namespace:asylo	file:
ss_family	./platform/posix/include/sys/socket.h	/^  sa_family_t ss_family;$/;"	m	struct:sockaddr_storage
st_atime_enc	./platform/common/bridge_types.h	/^  int64_t st_atime_enc;$/;"	m	struct:bridge_stat
st_blksize	./platform/common/bridge_types.h	/^  int64_t st_blksize;$/;"	m	struct:bridge_stat
st_blocks	./platform/common/bridge_types.h	/^  int64_t st_blocks;$/;"	m	struct:bridge_stat
st_ctime_enc	./platform/common/bridge_types.h	/^  int64_t st_ctime_enc;$/;"	m	struct:bridge_stat
st_dev	./platform/common/bridge_types.h	/^  int64_t st_dev;$/;"	m	struct:bridge_stat
st_gid	./platform/common/bridge_types.h	/^  int64_t st_gid;$/;"	m	struct:bridge_stat
st_ino	./platform/common/bridge_types.h	/^  int64_t st_ino;$/;"	m	struct:bridge_stat
st_mode	./platform/common/bridge_types.h	/^  int64_t st_mode;$/;"	m	struct:bridge_stat
st_mtime_enc	./platform/common/bridge_types.h	/^  int64_t st_mtime_enc;$/;"	m	struct:bridge_stat
st_nlink	./platform/common/bridge_types.h	/^  int64_t st_nlink;$/;"	m	struct:bridge_stat
st_rdev	./platform/common/bridge_types.h	/^  int64_t st_rdev;$/;"	m	struct:bridge_stat
st_size	./platform/common/bridge_types.h	/^  int64_t st_size;$/;"	m	struct:bridge_stat
st_uid	./platform/common/bridge_types.h	/^  int64_t st_uid;$/;"	m	struct:bridge_stat
stack_base	./platform/arch/sgx/trusted/fork.cc	/^  void *stack_base;$/;"	m	struct:asylo::__anon284::ThreadMemoryLayout	file:
stack_base	./platform/arch/sgx/trusted/fork.cc	/^  void *stack_base;$/;"	m	struct:asylo::__anon30::ThreadMemoryLayout	file:
stack_base	./platform/primitives/trusted_runtime.h	/^  void *stack_base;$/;"	m	struct:EnclaveMemoryLayout
stack_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> stack_deleter_;$/;"	m	class:asylo::__anon305::SnapshotDeleter	file:
stack_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> stack_deleter_;$/;"	m	class:asylo::__anon51::SnapshotDeleter	file:
stack_limit	./platform/arch/sgx/trusted/fork.cc	/^  void *stack_limit;$/;"	m	struct:asylo::__anon284::ThreadMemoryLayout	file:
stack_limit	./platform/arch/sgx/trusted/fork.cc	/^  void *stack_limit;$/;"	m	struct:asylo::__anon30::ThreadMemoryLayout	file:
stack_limit	./platform/primitives/trusted_runtime.h	/^  void *stack_limit;$/;"	m	struct:EnclaveMemoryLayout
start	./test/misc/initfini.cc	/^void start(void) { return; }$/;"	f
start_routine_	./platform/posix/threading/thread_manager.h	/^    const std::function<void *()> start_routine_;$/;"	m	class:asylo::ThreadManager::Thread
state_	./grpc/util/grpc_server_launcher.h	/^  State state_;$/;"	m	class:asylo::GrpcServerLauncher
state_	./platform/posix/threading/thread_manager.h	/^    ThreadState state_ = ThreadState::QUEUED;$/;"	m	class:asylo::ThreadManager::Thread
state_change_cond_	./platform/posix/threading/thread_manager.h	/^    pthread_cond_t state_change_cond_ = PTHREAD_COND_INITIALIZER;$/;"	m	class:asylo::ThreadManager::Thread
status	./examples/hello_world/hello_driver.cc	/^asylo::Status status; $/;"	v
status	./util/statusor.h	/^  Status status() const { return ok() ? Status::OkStatus() : variant_.status_; }$/;"	f	class:asylo::StatusOr
status_	./util/statusor.h	/^    Status status_;$/;"	m	union:asylo::StatusOr::variant
status_internal	./util/status_internal.h	/^namespace status_internal {$/;"	n	namespace:asylo
status_proto_	./platform/core/trusted_application.cc	/^  StatusProto *status_proto_;$/;"	m	class:asylo::__anon135::StatusSerializer	file:
status_proto_	./platform/core/trusted_application.cc	/^  StatusProto *status_proto_;$/;"	m	class:asylo::__anon389::StatusSerializer	file:
status_type_traits	./util/status_internal.h	/^struct status_type_traits {$/;"	s	namespace:asylo::status_internal
stop	./test/misc/initfini.cc	/^void stop(void) { return; }$/;"	f
stop_on_count	./test/misc/exhaust_sgx_tcs.cc	/^constexpr int stop_on_count = 3;$/;"	m	namespace:asylo::__anon191	file:
stop_on_count	./test/misc/exhaust_sgx_tcs.cc	/^constexpr int stop_on_count = 3;$/;"	m	namespace:asylo::__anon445	file:
storage	./platform/storage/secure/aead_handler.cc	/^namespace storage {$/;"	n	namespace:asylo::platform	file:
storage	./platform/storage/secure/aead_handler.h	/^namespace storage {$/;"	n	namespace:asylo::platform
storage	./platform/storage/secure/authenticated_dictionary.h	/^namespace storage {$/;"	n	namespace:asylo::platform
storage	./platform/storage/secure/ctmmt_authenticated_dictionary.cc	/^namespace storage {$/;"	n	namespace:asylo::platform	file:
storage	./platform/storage/secure/ctmmt_authenticated_dictionary.h	/^namespace storage {$/;"	n	namespace:asylo::platform
storage	./platform/storage/secure/enclave_storage_secure.cc	/^namespace storage {$/;"	n	namespace:asylo::platform	file:
storage	./platform/storage/secure/enclave_storage_secure.h	/^namespace storage {$/;"	n	namespace:asylo::platform
storage	./platform/storage/utils/fd_closer.cc	/^namespace storage {$/;"	n	namespace:asylo::platform	file:
storage	./platform/storage/utils/fd_closer.h	/^namespace storage {$/;"	n	namespace:asylo::platform
storage	./platform/storage/utils/fd_closer_test.cc	/^namespace storage {$/;"	n	namespace:asylo::platform	file:
storage	./platform/storage/utils/offset_translator.cc	/^namespace storage {$/;"	n	namespace:asylo::platform	file:
storage	./platform/storage/utils/offset_translator.h	/^namespace storage {$/;"	n	namespace:asylo::platform
str	./platform/posix/io/inotify_test.cc	/^const char *str = "Testing inotify.";$/;"	m	namespace:asylo::__anon321	file:
str	./platform/posix/io/inotify_test.cc	/^const char *str = "Testing inotify.";$/;"	m	namespace:asylo::__anon67	file:
str	./util/status_internal.h	/^                  *str = s->error_message(), *b = s->ok(), std::true_type());$/;"	m	struct:asylo::status_internal::status_type_traits
stream	./util/logging.h	/^  std::ostringstream &stream() { return stream_; }$/;"	f	class:asylo::LogMessage
stream_	./util/logging.h	/^  std::ostringstream *stream_;$/;"	m	class:asylo::CheckOpMessageBuilder
stream_	./util/logging.h	/^  std::ostringstream stream_;$/;"	m	class:asylo::LogMessage
stub_	./daemon/identity/attestation_domain_client.h	/^  std::unique_ptr<AttestationDomainService::StubInterface> stub_;$/;"	m	class:asylo::AttestationDomainClient
stub_	./examples/grpc_server/grpc_server_test.cc	/^  std::unique_ptr<Translator::Stub> stub_;$/;"	m	class:examples::grpc_server::__anon244::GrpcServerTest	file:
stub_	./examples/grpc_server/grpc_server_test.cc	/^  std::unique_ptr<Translator::Stub> stub_;$/;"	m	class:examples::grpc_server::__anon498::GrpcServerTest	file:
stub_	./test/grpc/messenger_client_impl.h	/^  std::unique_ptr<typename T::Stub> stub_;$/;"	m	class:asylo::test::MessengerClient
sun_family	./platform/posix/include/sys/un.h	/^  uint16_t sun_family;$/;"	m	struct:sockaddr_un
sun_path	./platform/common/bridge_types.h	/^  char sun_path[108];$/;"	m	struct:bridge_sockaddr_un
sun_path	./platform/posix/include/sys/un.h	/^  char sun_path[108];$/;"	m	struct:sockaddr_un
supported_encryption_schemes_	./identity/sgx/pce_util_test.cc	/^      supported_encryption_schemes_;$/;"	m	class:asylo::sgx::__anon151::PceUtilTest	file:
supported_encryption_schemes_	./identity/sgx/pce_util_test.cc	/^      supported_encryption_schemes_;$/;"	m	class:asylo::sgx::__anon405::PceUtilTest	file:
supported_signature_schemes_	./identity/sgx/pce_util_test.cc	/^  absl::flat_hash_map<SignatureScheme, uint8_t> supported_signature_schemes_;$/;"	m	class:asylo::sgx::__anon151::PceUtilTest	file:
supported_signature_schemes_	./identity/sgx/pce_util_test.cc	/^  absl::flat_hash_map<SignatureScheme, uint8_t> supported_signature_schemes_;$/;"	m	class:asylo::sgx::__anon405::PceUtilTest	file:
swdefined	./identity/sgx/identity_key_management_structs.h	/^  uint32_t swdefined;$/;"	m	struct:asylo::sgx::SigstructHeader
switched_heap_next	./platform/posix/memory/memory.cc	/^uint8_t *switched_heap_next = nullptr;$/;"	m	namespace:__anon316	file:
switched_heap_next	./platform/posix/memory/memory.cc	/^uint8_t *switched_heap_next = nullptr;$/;"	m	namespace:__anon62	file:
switched_heap_remaining	./platform/posix/memory/memory.cc	/^size_t switched_heap_remaining = 0;$/;"	m	namespace:__anon316	file:
switched_heap_remaining	./platform/posix/memory/memory.cc	/^size_t switched_heap_remaining = 0;$/;"	m	namespace:__anon62	file:
symlink	./platform/posix/unistd.cc	/^int symlink(const char *path1, const char *path2) {$/;"	f
sys_futex	./platform/common/futex.cc	/^int sys_futex(int32_t *uaddr, int32_t futex_op, int32_t val,$/;"	f	namespace:asylo::__anon107
sys_futex	./platform/common/futex.cc	/^int sys_futex(int32_t *uaddr, int32_t futex_op, int32_t val,$/;"	f	namespace:asylo::__anon361
sys_futex_wait	./platform/common/futex.cc	/^void sys_futex_wait(int32_t *futex, int32_t expected) {$/;"	f
sys_futex_wake	./platform/common/futex.cc	/^void sys_futex_wake(int32_t *futex) {$/;"	f
syscall	./platform/system_call/generate_tables.cc	/^  std::string syscall;$/;"	m	struct:ParameterDescription	file:
syscall_dispatch_callback	./platform/system_call/system_call.h	/^typedef asylo::primitives::PrimitiveStatus (*syscall_dispatch_callback)($/;"	t	class:asylo::primitives
sysconf	./platform/posix/unistd.cc	/^long sysconf(int name) {$/;"	f
sysconf	./platform/primitives/sim/runtime_syscalls.c	/^long sysconf(int name) {$/;"	f
syslog	./platform/posix/syslog.cc	/^void syslog(int priority, const char *format, ...) {$/;"	f
sysname	./platform/common/bridge_types.h	/^  char sysname[BRIDGE_UTSNAME_FIELD_LENGTH];$/;"	m	struct:BridgeUtsName
sysname	./platform/posix/include/sys/utsname.h	/^  char sysname[UTSNAME_FIELD_LENGTH];$/;"	m	struct:utsname
sysno	./platform/system_call/message.h	/^  \/* byte: 12 ..  15 *\/ uint32_t sysno;                  \/\/ System call number.$/;"	m	struct:asylo::system_call::MessageHeader
sysno	./platform/system_call/message.h	/^  int sysno() const { return header()->sysno; }$/;"	f	class:asylo::system_call::MessageReader
sysno_	./platform/system_call/message.h	/^  int sysno_;$/;"	m	class:asylo::system_call::MessageWriter
sysno_	./platform/system_call/metadata.h	/^  const int sysno_;$/;"	m	class:asylo::system_call::ParameterDescriptor
sysno_	./platform/system_call/metadata.h	/^  const int sysno_;$/;"	m	class:asylo::system_call::SystemCallDescriptor
system_call	./platform/system_call/message.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/message.h	/^namespace system_call {$/;"	n	namespace:asylo
system_call	./platform/system_call/message_test.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/metadata.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/metadata.h	/^namespace system_call {$/;"	n	namespace:asylo
system_call	./platform/system_call/metadata_test.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/serialize.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/serialize.h	/^namespace system_call {$/;"	n	namespace:asylo
system_call	./platform/system_call/serialize_test.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/system_call_message_fuzzer.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/system_call_test.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/type_conversions/generated_types_functions_test.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/type_conversions/manual_types_functions_test.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/untrusted_invoke.cc	/^namespace system_call {$/;"	n	namespace:asylo	file:
system_call	./platform/system_call/untrusted_invoke.h	/^namespace system_call {$/;"	n	namespace:asylo
table	./platform/primitives/sgx/untrusted_sgx.cc	/^    void *table[];$/;"	m	struct:ocall_table_t	file:
take_snapshot	./platform/arch/sgx/untrusted/sgx_client.cc	/^static Status take_snapshot(sgx_enclave_id_t eid, char **output,$/;"	f	namespace:asylo
target_	./grpc/auth/core/enclave_security_connector.cc	/^  char *target_;$/;"	m	class:__anon255::final	file:
target_	./grpc/auth/core/enclave_security_connector.cc	/^  char *target_;$/;"	m	class:__anon509::final	file:
target_fd_	./test/util/output_collector.h	/^  int target_fd_;$/;"	m	class:asylo::OutputCollector
target_section_header	./util/elf_reader_test.cc	/^    Elf64_Shdr *target_section_header;$/;"	m	struct:asylo::__anon226::ElfReaderTest::ElfReaderTestMembers	file:
target_section_header	./util/elf_reader_test.cc	/^    Elf64_Shdr *target_section_header;$/;"	m	struct:asylo::__anon480::ElfReaderTest::ElfReaderTestMembers	file:
target_section_header_	./util/elf_reader_test.cc	/^  Elf64_Shdr *const target_section_header_;$/;"	m	class:asylo::__anon226::ElfReaderTest	file:
target_section_header_	./util/elf_reader_test.cc	/^  Elf64_Shdr *const target_section_header_;$/;"	m	class:asylo::__anon480::ElfReaderTest	file:
target_section_index	./util/elf_reader_test.cc	/^    uint16_t target_section_index;$/;"	m	struct:asylo::__anon226::ElfReaderTest::ElfReaderTestMembers	file:
target_section_index	./util/elf_reader_test.cc	/^    uint16_t target_section_index;$/;"	m	struct:asylo::__anon480::ElfReaderTest::ElfReaderTestMembers	file:
target_section_index_	./util/elf_reader_test.cc	/^  const uint16_t target_section_index_;$/;"	m	class:asylo::__anon226::ElfReaderTest	file:
target_section_index_	./util/elf_reader_test.cc	/^  const uint16_t target_section_index_;$/;"	m	class:asylo::__anon480::ElfReaderTest	file:
tcflag_t	./platform/posix/include/sys/termios.h	/^typedef unsigned int tcflag_t;$/;"	t
tcgetattr	./platform/posix/termios.cc	/^int tcgetattr(int fildes, struct termios *termios_p) { abort(); }$/;"	f
tcsetattr	./platform/posix/termios.cc	/^int tcsetattr(int fd, int optional_actions, const struct termios *termios_p) {$/;"	f
telldir	./platform/posix/dirent.cc	/^int64_t telldir(DIR *) { abort(); }$/;"	f
termios	./platform/posix/include/sys/termios.h	/^struct termios {$/;"	s
test	./platform/primitives/examples/hello_test.cc	/^namespace test {$/;"	n	namespace:asylo::primitives	file:
test	./platform/primitives/test/sgx_test_backend.cc	/^namespace test {$/;"	n	namespace:asylo::primitives	file:
test	./platform/primitives/test/sgx_test_backend.h	/^namespace test {$/;"	n	namespace:asylo::primitives
test	./platform/primitives/test/sim_test_backend.cc	/^namespace test {$/;"	n	namespace:asylo::primitives	file:
test	./platform/primitives/test/sim_test_backend.h	/^namespace test {$/;"	n	namespace:asylo::primitives
test	./platform/primitives/test/test_backend.h	/^namespace test {$/;"	n	namespace:asylo::primitives
test	./test/grpc/enclave_insecure_server_test.cc	/^namespace test {$/;"	n	namespace:asylo	file:
test	./test/grpc/enclave_secure_server_test.cc	/^namespace test {$/;"	n	namespace:asylo	file:
test	./test/grpc/messenger_client_impl.h	/^namespace test {$/;"	n	namespace:asylo
test	./test/grpc/messenger_server_impl.h	/^namespace test {$/;"	n	namespace:asylo
test_buf_len_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  size_t test_buf_len_;$/;"	m	class:asylo::__anon100::EnclaveStorageSecureTest	file:
test_buf_len_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  size_t test_buf_len_;$/;"	m	class:asylo::__anon354::EnclaveStorageSecureTest	file:
test_file_	./platform/posix/io/read_write_test.cc	/^  asylo::MallocUniquePtr<char> test_file_;$/;"	m	class:asylo::__anon322::ReadWriteTest	file:
test_file_	./platform/posix/io/read_write_test.cc	/^  asylo::MallocUniquePtr<char> test_file_;$/;"	m	class:asylo::__anon68::ReadWriteTest	file:
test_flag	./platform/system_call/metadata.cc	/^bool ParameterDescriptor::test_flag(uint32_t flag) const {$/;"	f	class:asylo::system_call::ParameterDescriptor
test_handler	./platform/primitives/examples/hello_test.cc	/^  static Status test_handler(std::shared_ptr<Client> client, void *context,$/;"	f	class:asylo::primitives::test::HelloTest	file:
test_in_initialize_	./bazel/test_shim_enclave.cc	/^  bool test_in_initialize_;$/;"	m	class:asylo::TestShimEnclave	file:
test_key_	./crypto/aead_key_test.cc	/^  std::unique_ptr<AeadKey> test_key_;$/;"	m	class:asylo::__anon12::AeadKeyTest	file:
test_key_	./crypto/aead_key_test.cc	/^  std::unique_ptr<AeadKey> test_key_;$/;"	m	class:asylo::__anon266::AeadKeyTest	file:
test_launcher_	./test/misc/exception_app.cc	/^  EnclaveTestLauncher test_launcher_;$/;"	m	class:asylo::__anon190::ExceptionTest	file:
test_launcher_	./test/misc/exception_app.cc	/^  EnclaveTestLauncher test_launcher_;$/;"	m	class:asylo::__anon444::ExceptionTest	file:
test_launcher_	./test/util/enclave_test.h	/^  EnclaveTestLauncher test_launcher_;$/;"	m	class:asylo::EnclaveTest
test_tmpdir	./test/util/test_flags.h	/^DECLARE_string(test_tmpdir);$/;"	v
test_vector	./crypto/aead_cryptor_test.cc	/^  AeadTestVector test_vector;$/;"	m	struct:asylo::experimental::__anon11::AeadCryptorParam	file:
test_vector	./crypto/aead_cryptor_test.cc	/^  AeadTestVector test_vector;$/;"	m	struct:asylo::experimental::__anon265::AeadCryptorParam	file:
test_vector	./crypto/aead_key_test.cc	/^  AeadTestVector test_vector;$/;"	m	struct:asylo::__anon12::AeadKeyParam	file:
test_vector	./crypto/aead_key_test.cc	/^  AeadTestVector test_vector;$/;"	m	struct:asylo::__anon266::AeadKeyParam	file:
test_vector_	./crypto/aead_key_test.cc	/^  AeadTestVector test_vector_;$/;"	m	class:asylo::__anon12::AeadKeyTest	file:
test_vector_	./crypto/aead_key_test.cc	/^  AeadTestVector test_vector_;$/;"	m	class:asylo::__anon266::AeadKeyTest	file:
this_thread_id	./util/std_thread.h	/^  static Id this_thread_id() { return ConvertToId(std::this_thread::get_id()); }$/;"	f	class:asylo::Thread
thread_	./grpc/util/grpc_server_launcher_test.cc	/^  std::thread thread_;$/;"	m	class:asylo::__anon263::AsyncDelayedShutdownInvoker	file:
thread_	./grpc/util/grpc_server_launcher_test.cc	/^  std::thread thread_;$/;"	m	class:asylo::__anon517::AsyncDelayedShutdownInvoker	file:
thread_	./util/std_thread.h	/^  std::thread thread_;$/;"	m	class:asylo::Thread
thread_base	./platform/arch/sgx/trusted/fork.cc	/^  void *thread_base;$/;"	m	struct:asylo::__anon284::ThreadMemoryLayout	file:
thread_base	./platform/arch/sgx/trusted/fork.cc	/^  void *thread_base;$/;"	m	struct:asylo::__anon30::ThreadMemoryLayout	file:
thread_base	./platform/primitives/trusted_runtime.h	/^  void *thread_base;$/;"	m	struct:EnclaveMemoryLayout
thread_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> thread_deleter_;$/;"	m	class:asylo::__anon305::SnapshotDeleter	file:
thread_deleter_	./platform/posix/fork_security_test_driver.cc	/^  std::vector<SnapshotEntryDeleter> thread_deleter_;$/;"	m	class:asylo::__anon51::SnapshotDeleter	file:
thread_id_	./platform/posix/threading/thread_manager.h	/^    pthread_t thread_id_;$/;"	m	class:asylo::ThreadManager::Thread
thread_lock_count	./platform/primitives/sim/malloc_lock.cc	/^thread_local int64_t thread_lock_count = 0;$/;"	m	namespace:asylo::primitives	file:
thread_size	./platform/arch/sgx/trusted/fork.cc	/^  size_t thread_size;$/;"	m	struct:asylo::__anon284::ThreadMemoryLayout	file:
thread_size	./platform/arch/sgx/trusted/fork.cc	/^  size_t thread_size;$/;"	m	struct:asylo::__anon30::ThreadMemoryLayout	file:
thread_size	./platform/primitives/trusted_runtime.h	/^  size_t thread_size;$/;"	m	struct:EnclaveMemoryLayout
thread_specific	./platform/posix/pthread.cc	/^             PTHREAD_KEYS_MAX> thread_specific = {nullptr};$/;"	m	namespace:__anon296	file:
thread_specific	./platform/posix/pthread.cc	/^             PTHREAD_KEYS_MAX> thread_specific = {nullptr};$/;"	m	namespace:__anon42	file:
thread_specific_function	./test/misc/threaded_test.cc	/^void *thread_specific_function(void *arg) {$/;"	f	namespace:asylo::__anon208
thread_specific_function	./test/misc/threaded_test.cc	/^void *thread_specific_function(void *arg) {$/;"	f	namespace:asylo::__anon462
threads_	./platform/posix/threading/thread_manager.h	/^  absl::flat_hash_map<pthread_t, std::shared_ptr<Thread>> threads_;$/;"	m	class:asylo::ThreadManager
threads_cond_	./platform/posix/threading/thread_manager.h	/^  pthread_cond_t threads_cond_ = PTHREAD_COND_INITIALIZER;$/;"	m	class:asylo::ThreadManager
threads_lock_	./platform/posix/threading/thread_manager.h	/^  pthread_mutex_t threads_lock_ = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:asylo::ThreadManager
tid_hash	./platform/common/singleton_test.cc	/^  size_t tid_hash;$/;"	m	struct:asylo::__anon112::NumericConstant	file:
tid_hash	./platform/common/singleton_test.cc	/^  size_t tid_hash;$/;"	m	struct:asylo::__anon366::NumericConstant	file:
tms_cstime	./platform/common/bridge_types.h	/^  clock_t tms_cstime;$/;"	m	struct:BridgeTms
tms_cutime	./platform/common/bridge_types.h	/^  clock_t tms_cutime;$/;"	m	struct:BridgeTms
tms_stime	./platform/common/bridge_types.h	/^  clock_t tms_stime;$/;"	m	struct:BridgeTms
tms_utime	./platform/common/bridge_types.h	/^  clock_t tms_utime;$/;"	m	struct:BridgeTms
token_	./platform/primitives/sgx/untrusted_sgx.h	/^  sgx_launch_token_t token_ = {0};  \/\/ SGX SDK launch token.$/;"	m	class:asylo::primitives::SgxEnclaveClient
top_	./platform/primitives/parameter_stack.h	/^  Item *top_ = nullptr;  \/\/ Stack top.$/;"	m	class:asylo::primitives::ParameterStack
transcript_	./grpc/auth/core/ekep_handshaker.h	/^  Transcript transcript_;$/;"	m	class:asylo::EkepHandshaker
transfer_secure_snapshot_key	./platform/arch/sgx/untrusted/sgx_client.cc	/^static Status transfer_secure_snapshot_key(sgx_enclave_id_t eid,$/;"	f	namespace:asylo
translation_map_	./examples/grpc_server/translator_server_impl.h	/^  absl::flat_hash_map<std::string, std::string> translation_map_;$/;"	m	class:examples::grpc_server::final
translator_	./platform/storage/utils/offset_translator_test.cc	/^  std::unique_ptr<OffsetTranslator> translator_;$/;"	m	class:asylo::__anon350::OffsetTranslatorTest	file:
translator_	./platform/storage/utils/offset_translator_test.cc	/^  std::unique_ptr<OffsetTranslator> translator_;$/;"	m	class:asylo::__anon96::OffsetTranslatorTest	file:
trim_offset_	./grpc/auth/util/multi_buffer_input_stream.h	/^  int trim_offset_;$/;"	m	class:asylo::MultiBufferInputStream
truncate	./platform/posix/unistd.cc	/^int truncate(const char *path, off_t length) {$/;"	f
trusted_spin_lock_	./platform/core/trusted_mutex.h	/^  TrustedSpinLock trusted_spin_lock_;$/;"	m	class:asylo::TrustedMutex
tsi_enclave_handshaker	./grpc/auth/core/enclave_transport_security.cc	/^struct tsi_enclave_handshaker {$/;"	s	namespace:asylo	file:
tsi_enclave_handshaker	./grpc/auth/core/enclave_transport_security.cc	/^tsi_enclave_handshaker::tsi_enclave_handshaker($/;"	f	class:asylo::tsi_enclave_handshaker
tsi_enclave_handshaker_create	./grpc/auth/core/enclave_transport_security.cc	/^tsi_result tsi_enclave_handshaker_create($/;"	f
tsi_enclave_handshaker_result	./grpc/auth/core/enclave_transport_security.cc	/^struct tsi_enclave_handshaker_result {$/;"	s	namespace:asylo	file:
tv_nsec	./platform/common/bridge_types.h	/^  int64_t tv_nsec;$/;"	m	struct:bridge_timespec
tv_sec	./platform/common/bridge_types.h	/^  int64_t tv_sec;$/;"	m	struct:bridge_timespec
tv_sec	./platform/common/bridge_types.h	/^  int64_t tv_sec;$/;"	m	struct:bridge_timeval
tv_usec	./platform/common/bridge_types.h	/^  int64_t tv_usec;$/;"	m	struct:bridge_timeval
type	./platform/system_call/generate_tables.cc	/^  std::string type;$/;"	m	struct:ParameterDescription	file:
type	./platform/system_call/metadata.cc	/^  const char *type;$/;"	m	struct:asylo::system_call::__anon116::ParameterTableEntry	file:
type	./platform/system_call/metadata.cc	/^  const char *type;$/;"	m	struct:asylo::system_call::__anon370::ParameterTableEntry	file:
type	./platform/system_call/metadata.cc	/^absl::string_view ParameterDescriptor::type() const {$/;"	f	class:asylo::system_call::ParameterDescriptor
type_sizes_	./platform/common/test/bridge_types_test_enclave.cc	/^  absl::flat_hash_map<std::string, size_t> type_sizes_;$/;"	m	class:asylo::EnclaveBridgeTypes	file:
u32	./platform/posix/include/sys/epoll.h	/^  uint32_t u32;$/;"	m	union:epoll_data
u64	./platform/posix/include/sys/epoll.h	/^  uint64_t u64;$/;"	m	union:epoll_data
uc_mcontext	./platform/posix/include/sys/ucontext.h	/^  mcontext_t uc_mcontext;$/;"	m	struct:ucontext
ucontext	./platform/posix/include/sys/ucontext.h	/^typedef struct ucontext {$/;"	s
ucontext_t	./platform/posix/include/sys/ucontext.h	/^} ucontext_t;$/;"	t	typeref:struct:ucontext
udphdr	./platform/posix/include/netinet/udp.h	/^struct udphdr {$/;"	s
umask	./platform/posix/stat.cc	/^mode_t umask(mode_t mask) { return IOManager::GetInstance().Umask(mask); }$/;"	f
uname	./platform/posix/utsname.cc	/^int uname(struct utsname *buf) { return enc_untrusted_uname(buf); }$/;"	f
unauthenticated_ciphertext	./crypto/aead_test_vector.h	/^  std::string unauthenticated_ciphertext;$/;"	m	struct:asylo::AeadTestVector
unsupported_encryption_schemes_	./identity/sgx/pce_util_test.cc	/^  std::vector<AsymmetricEncryptionScheme> unsupported_encryption_schemes_;$/;"	m	class:asylo::sgx::__anon151::PceUtilTest	file:
unsupported_encryption_schemes_	./identity/sgx/pce_util_test.cc	/^  std::vector<AsymmetricEncryptionScheme> unsupported_encryption_schemes_;$/;"	m	class:asylo::sgx::__anon405::PceUtilTest	file:
unsupported_signature_schemes_	./identity/sgx/pce_util_test.cc	/^  std::vector<SignatureScheme> unsupported_signature_schemes_;$/;"	m	class:asylo::sgx::__anon151::PceUtilTest	file:
unsupported_signature_schemes_	./identity/sgx/pce_util_test.cc	/^  std::vector<SignatureScheme> unsupported_signature_schemes_;$/;"	m	class:asylo::sgx::__anon405::PceUtilTest	file:
untrusted_cache_free	./platform/core/untrusted_cache_malloc.cc	/^void untrusted_cache_free(void *buffer) {$/;"	f
untrusted_cache_malloc	./platform/core/untrusted_cache_malloc.cc	/^void *untrusted_cache_malloc(size_t size) {$/;"	f
untrusted_cache_malloc_	./platform/core/untrusted_cache_malloc_test.cc	/^  UntrustedCacheMalloc *untrusted_cache_malloc_ =$/;"	m	class:asylo::__anon128::UntrustedCacheMallocTest	file:
untrusted_cache_malloc_	./platform/core/untrusted_cache_malloc_test.cc	/^  UntrustedCacheMalloc *untrusted_cache_malloc_ =$/;"	m	class:asylo::__anon382::UntrustedCacheMallocTest	file:
untrusted_futex_	./platform/core/untrusted_mutex.h	/^  int32_t *untrusted_futex_;$/;"	m	class:asylo::UntrustedMutex
untrusted_mutex_	./platform/core/trusted_mutex.h	/^  UntrustedMutex untrusted_mutex_;$/;"	m	class:asylo::TrustedMutex
unused_bytes_	./grpc/auth/core/enclave_transport_security.cc	/^  std::string unused_bytes_;$/;"	m	class:asylo::TsiEnclaveHandshakerResult	file:
usage	./test/util/exit_app.cc	/^void usage(int argc, char *argv[]) {$/;"	f
used_thread_keys	./platform/posix/pthread.cc	/^std::bitset<PTHREAD_KEYS_MAX> used_thread_keys;$/;"	m	namespace:__anon296	file:
used_thread_keys	./platform/posix/pthread.cc	/^std::bitset<PTHREAD_KEYS_MAX> used_thread_keys;$/;"	m	namespace:__anon42	file:
used_thread_keys_lock	./platform/posix/pthread.cc	/^static pthread_mutex_t used_thread_keys_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:__anon296	file:
used_thread_keys_lock	./platform/posix/pthread.cc	/^static pthread_mutex_t used_thread_keys_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:__anon42	file:
uses_key_id	./crypto/nonce_generator.h	/^  virtual bool uses_key_id() { return false; }$/;"	f	class:asylo::NonceGenerator
usleep	./platform/posix/unistd.cc	/^int usleep(useconds_t usec) { return enc_untrusted_usleep(usec); }$/;"	f
util	./platform/posix/io/path_normalization_test.cc	/^namespace util {$/;"	n	namespace:asylo::io	file:
util	./platform/posix/io/util.cc	/^namespace util {$/;"	n	namespace:asylo::io	file:
util	./platform/posix/io/util.h	/^namespace util {$/;"	n	namespace:asylo::io
utimbuf	./platform/posix/include/utime.h	/^struct utimbuf {$/;"	s
utime	./platform/posix/utime.cc	/^int utime(const char *filename, const struct utimbuf *times) {$/;"	f
utimes	./platform/posix/utime.cc	/^int utimes(const char *filename, const struct timeval times[2]) {$/;"	f
utsname	./platform/posix/include/sys/utsname.h	/^struct utsname {$/;"	s
uuid_	./identity/additional_authenticated_data_generator.h	/^  UnsafeBytes<kAdditionalAuthenticatedDataUuidSize> uuid_;$/;"	m	class:asylo::AdditionalAuthenticatedDataGenerator
valid_attributes_	./identity/sgx/fake_enclave.h	/^  SecsAttributeSet valid_attributes_;$/;"	m	class:asylo::sgx::FakeEnclave
value	./crypto/util/byte_container_view_internal.h	/^  static constexpr bool value = api_type::value & size_type::value;$/;"	m	struct:asylo::internal::is_ro_byte_container_type
value	./platform/common/singleton_test.cc	/^  const int value;$/;"	m	struct:asylo::__anon112::NumericConstant	file:
value	./platform/common/singleton_test.cc	/^  const int value;$/;"	m	struct:asylo::__anon366::NumericConstant	file:
value	./platform/core/test/shared_resource_test.cc	/^  std::string value;$/;"	m	struct:asylo::__anon134::TestResource	file:
value	./platform/core/test/shared_resource_test.cc	/^  std::string value;$/;"	m	struct:asylo::__anon388::TestResource	file:
value	./platform/posix/io/io_manager.cc	/^  static constexpr Type value = -1;$/;"	m	struct:asylo::io::__anon320::ErrorValue	file:
value	./platform/posix/io/io_manager.cc	/^  static constexpr Type value = -1;$/;"	m	struct:asylo::io::__anon66::ErrorValue	file:
value	./platform/posix/io/io_manager.cc	/^  static constexpr Type value = nullptr;$/;"	m	struct:asylo::io::__anon320::ErrorValue	file:
value	./platform/posix/io/io_manager.cc	/^  static constexpr Type value = nullptr;$/;"	m	struct:asylo::io::__anon66::ErrorValue	file:
value	./platform/storage/utils/record_store.h	/^    T value;       \/\/ Cached record value.$/;"	m	struct:asylo::RecordStore::CacheEntry
value	./util/statusor_test.cc	/^  int *value;$/;"	m	struct:asylo::__anon231::HeapAllocatedObject	file:
value	./util/statusor_test.cc	/^  int *value;$/;"	m	struct:asylo::__anon485::HeapAllocatedObject	file:
value_	./util/mutex_guarded.h	/^  T *value_;$/;"	m	class:asylo::LockView
value_	./util/mutex_guarded.h	/^  const T *value_;$/;"	m	class:asylo::ReaderLockView
value_	./util/statusor.h	/^    T value_;$/;"	m	union:asylo::StatusOr::variant
value_matcher_	./test/util/status_matchers.h	/^  const ::testing::Matcher<const T &> value_matcher_;$/;"	m	class:asylo::internal::IsOkAndHoldsMatcher
value_matcher_	./test/util/status_matchers.h	/^  const ValueMatcherT value_matcher_;$/;"	m	class:asylo::internal::IsOkAndHoldsGenerator
values	./platform/system_call/type_conversions/types_conversions_generator.cc	/^  std::map<std::string, std::string> values;$/;"	m	struct:StructProperties	file:
values	./platform/system_call/type_conversions/types_conversions_generator.cc	/^  std::vector<std::pair<std::string, int>> values;$/;"	m	struct:EnumProperties	file:
variable_on_bss	./test/misc/memory_layout_test.cc	/^int variable_on_bss;$/;"	m	namespace:asylo::__anon202	file:
variable_on_bss	./test/misc/memory_layout_test.cc	/^int variable_on_bss;$/;"	m	namespace:asylo::__anon456	file:
variable_on_data	./test/misc/memory_layout_test.cc	/^int variable_on_data = 1;$/;"	m	namespace:asylo::__anon202	file:
variable_on_data	./test/misc/memory_layout_test.cc	/^int variable_on_data = 1;$/;"	m	namespace:asylo::__anon456	file:
variant	./util/statusor.h	/^    variant() {}$/;"	f	union:asylo::StatusOr::variant
variant	./util/statusor.h	/^    variant(Status &&status) : status_(std::move(status)) {}$/;"	f	union:asylo::StatusOr::variant
variant	./util/statusor.h	/^    variant(U &&value) : value_(std::forward<U>(value)) {}$/;"	f	union:asylo::StatusOr::variant
variant	./util/statusor.h	/^    variant(const Status &status) : status_(status) {}$/;"	f	union:asylo::StatusOr::variant
variant	./util/statusor.h	/^  union variant {$/;"	u	class:asylo::StatusOr
variant_	./util/statusor.h	/^  variant variant_;$/;"	m	class:asylo::StatusOr
vendor	./identity/sgx/identity_key_management_structs.h	/^  uint32_t vendor;$/;"	m	struct:asylo::sgx::SigstructHeader
verifier_	./identity/null_identity/null_assertion_authority_test.cc	/^  const EnclaveAssertionVerifier *verifier_;$/;"	m	class:asylo::__anon174::NullAssertionAuthorityTest	file:
verifier_	./identity/null_identity/null_assertion_authority_test.cc	/^  const EnclaveAssertionVerifier *verifier_;$/;"	m	class:asylo::__anon428::NullAssertionAuthorityTest	file:
verifier_enclave_	./identity/sgx/sgx_local_assertion_authority_test.cc	/^  sgx::FakeEnclave verifier_enclave_;$/;"	m	class:asylo::__anon160::SgxLocalAssertionAuthorityTest	file:
verifier_enclave_	./identity/sgx/sgx_local_assertion_authority_test.cc	/^  sgx::FakeEnclave verifier_enclave_;$/;"	m	class:asylo::__anon414::SgxLocalAssertionAuthorityTest	file:
verifying_key_	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^  std::unique_ptr<VerifyingKey> verifying_key_;$/;"	m	class:asylo::__anon19::EcdsaP256Sha256VerifyingKeyTest	file:
verifying_key_	./crypto/ecdsa_p256_sha256_signing_key_test.cc	/^  std::unique_ptr<VerifyingKey> verifying_key_;$/;"	m	class:asylo::__anon273::EcdsaP256Sha256VerifyingKeyTest	file:
version	./platform/common/bridge_types.h	/^  char version[BRIDGE_UTSNAME_FIELD_LENGTH];$/;"	m	struct:BridgeUtsName
version	./platform/posix/include/sys/utsname.h	/^  char version[UTSNAME_FIELD_LENGTH];$/;"	m	struct:utsname
version	./platform/primitives/sim/shared_sim.h	/^  uint64_t version;$/;"	m	struct:asylo::primitives::SimTrampoline
vfork	./platform/posix/unistd.cc	/^pid_t vfork() {$/;"	f
visitor_count_	./examples/hello_world/hello_enclave.cc	/^		uint64_t visitor_count_;$/;"	m	class:HelloApplication	file:
vlog_level	./util/logging.cc	/^int vlog_level = 0;$/;"	m	namespace:asylo::__anon236	file:
vlog_level	./util/logging.cc	/^int vlog_level = 0;$/;"	m	namespace:asylo::__anon490	file:
wait3	./platform/posix/wait.cc	/^pid_t wait3(int *wstatus, int options, struct rusage *usage) {$/;"	f
waitpid	./platform/posix/wait.cc	/^pid_t waitpid(pid_t pid, int *wstatus, int options) {$/;"	f
wd	./platform/posix/include/sys/inotify.h	/^  int wd;           \/\/ Watch descriptor$/;"	m	struct:inotify_event
winsize	./platform/posix/include/sys/ioctl.h	/^struct winsize {$/;"	s
words	./platform/common/bridge_types.h	/^  BridgeCpuSetWord words[BRIDGE_CPU_SET_NUM_WORDS];$/;"	m	struct:BridgeCpuSet
words	./platform/posix/include/internal/sched.h	/^  CpuSetWord words[CPU_SET_T_NUM_WORDS];$/;"	m	struct:CpuSet
write_all	./platform/storage/secure/aead_handler.cc	/^ssize_t write_all(int fd, const void *buf, size_t len) {$/;"	f	namespace:asylo::platform::storage::__anon353
write_all	./platform/storage/secure/aead_handler.cc	/^ssize_t write_all(int fd, const void *buf, size_t len) {$/;"	f	namespace:asylo::platform::storage::__anon99
write_buffer_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  char write_buffer_[kMaxTestBufLen];$/;"	m	class:asylo::__anon100::EnclaveStorageSecureTest	file:
write_buffer_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  char write_buffer_[kMaxTestBufLen];$/;"	m	class:asylo::__anon354::EnclaveStorageSecureTest	file:
write_closed_	./util/fd_utils.h	/^  std::atomic<bool> write_closed_;$/;"	m	class:asylo::Pipe
write_count_	./platform/posix/sockets/socket_transmit.h	/^  int write_count_;$/;"	m	class:asylo::SocketTransmit
write_fd	./util/fd_utils.h	/^  inline int write_fd() const { return write_fd_; }$/;"	f	class:asylo::Pipe
write_fd_	./util/fd_utils.h	/^  int write_fd_;$/;"	m	class:asylo::Pipe
write_pos_	./platform/common/ring_buffer.h	/^  volatile size_t write_pos_;  \/\/ Write index into buffer_.$/;"	m	class:asylo::RingBuffer
writev	./platform/posix/uio.cc	/^ssize_t writev(int fd, const struct iovec *iov, int iovcnt) {$/;"	f
ws_col	./platform/posix/include/sys/ioctl.h	/^  uint16_t ws_col;$/;"	m	struct:winsize
ws_row	./platform/posix/include/sys/ioctl.h	/^  uint16_t ws_row;$/;"	m	struct:winsize
ws_xpixel	./platform/posix/include/sys/ioctl.h	/^  uint16_t ws_xpixel;$/;"	m	struct:winsize
ws_ypixel	./platform/posix/include/sys/ioctl.h	/^  uint16_t ws_ypixel;$/;"	m	struct:winsize
xfrm	./identity/sgx/secs_attributes.h	/^  uint64_t xfrm;$/;"	m	struct:asylo::sgx::SecsAttributeBit::SecsAttributeSet
year	./identity/sgx/identity_key_management_structs.h	/^  uint16_t year;$/;"	m	struct:asylo::sgx::Date
zero_buffer_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  char zero_buffer_[kMaxTestBufLen];$/;"	m	class:asylo::__anon100::EnclaveStorageSecureTest	file:
zero_buffer_	./platform/storage/secure/enclave_storage_secure_test.cc	/^  char zero_buffer_[kMaxTestBufLen];$/;"	m	class:asylo::__anon354::EnclaveStorageSecureTest	file:
zero_hash	./platform/storage/secure/aead_handler.h	/^    std::string zero_hash;$/;"	m	struct:asylo::platform::storage::AeadHandler::FileControl
zip	./test/util/finite_domain_fuzz.h	/^absl::optional<std::vector<std::pair<T, U>>> zip(std::vector<T> ts,$/;"	f	namespace:asylo
~AlignedObjectPtr	./identity/util/aligned_object_ptr.h	/^  ~AlignedObjectPtr() {$/;"	f	class:asylo::AlignedObjectPtr
~AsyncDelayedShutdownInvoker	./grpc/util/grpc_server_launcher_test.cc	/^  ~AsyncDelayedShutdownInvoker() { thread_.join(); }$/;"	f	class:asylo::__anon263::AsyncDelayedShutdownInvoker
~AsyncDelayedShutdownInvoker	./grpc/util/grpc_server_launcher_test.cc	/^  ~AsyncDelayedShutdownInvoker() { thread_.join(); }$/;"	f	class:asylo::__anon517::AsyncDelayedShutdownInvoker
~AutoCloseIOContext	./platform/posix/io/io_manager.h	/^      ~AutoCloseIOContext() {$/;"	f	class:asylo::io::IOManager::FileDescriptorTable::AutoCloseIOContext
~CheckOpMessageBuilder	./util/logging.cc	/^CheckOpMessageBuilder::~CheckOpMessageBuilder() { delete stream_; }$/;"	f	class:asylo::CheckOpMessageBuilder
~Cleanup	./util/cleanup.h	/^  ~Cleanup() {$/;"	f	class:asylo::Cleanup
~DieTest	./test/misc/double_die.cc	/^  ~DieTest() {$/;"	f	class:asylo::__anon192::DieTest
~DieTest	./test/misc/double_die.cc	/^  ~DieTest() {$/;"	f	class:asylo::__anon446::DieTest
~ExceptionTest	./test/misc/exception_app.cc	/^  ~ExceptionTest() {$/;"	f	class:asylo::__anon190::ExceptionTest
~ExceptionTest	./test/misc/exception_app.cc	/^  ~ExceptionTest() {$/;"	f	class:asylo::__anon444::ExceptionTest
~FdCloser	./platform/storage/utils/fd_closer.cc	/^FdCloser::~FdCloser() { reset(-1); }$/;"	f	class:asylo::platform::storage::FdCloser
~FileMapping	./util/file_mapping.cc	/^FileMapping::~FileMapping() {$/;"	f	class:asylo::FileMapping
~Foo	./platform/common/static_map_test.cc	/^  virtual ~Foo() {}$/;"	f	class:asylo::__anon101::Foo
~Foo	./platform/common/static_map_test.cc	/^  virtual ~Foo() {}$/;"	f	class:asylo::__anon355::Foo
~HeapAllocatedObject	./util/statusor_test.cc	/^  ~HeapAllocatedObject() { delete value; }$/;"	f	struct:asylo::__anon231::HeapAllocatedObject
~HeapAllocatedObject	./util/statusor_test.cc	/^  ~HeapAllocatedObject() { delete value; }$/;"	f	struct:asylo::__anon485::HeapAllocatedObject
~LockView	./util/mutex_guarded.h	/^  ~LockView() {$/;"	f	class:asylo::LockView
~LockableGuard	./platform/posix/pthread.cc	/^  ~LockableGuard() { pthread_spin_unlock(lock_); }$/;"	f	class:__anon296::LockableGuard
~LockableGuard	./platform/posix/pthread.cc	/^  ~LockableGuard() { pthread_spin_unlock(lock_); }$/;"	f	class:__anon42::LockableGuard
~LogMessage	./util/logging.cc	/^LogMessage::~LogMessage() {$/;"	f	class:asylo::LogMessage
~MoveOnlyDataType	./util/statusor_test.cc	/^  ~MoveOnlyDataType() {$/;"	f	struct:asylo::__anon231::MoveOnlyDataType
~MoveOnlyDataType	./util/statusor_test.cc	/^  ~MoveOnlyDataType() {$/;"	f	struct:asylo::__anon485::MoveOnlyDataType
~OutputCollector	./test/util/output_collector.cc	/^OutputCollector::~OutputCollector() {$/;"	f	class:asylo::OutputCollector
~ParameterStack	./platform/primitives/parameter_stack.h	/^  ~ParameterStack() {$/;"	f	class:asylo::primitives::ParameterStack
~Pipe	./util/fd_utils.cc	/^Pipe::~Pipe() {$/;"	f	class:asylo::Pipe
~PthreadMutexLock	./platform/posix/pthread_impl.h	/^  ~PthreadMutexLock() {$/;"	f	class:asylo::pthread_impl::PthreadMutexLock
~ReaderLockView	./util/mutex_guarded.h	/^  ~ReaderLockView() {$/;"	f	class:asylo::ReaderLockView
~RecordStore	./platform/storage/utils/record_store.h	/^  ~RecordStore() {$/;"	f	class:asylo::RecordStore
~SafeBytes	./crypto/util/bytes.h	/^  ~SafeBytes() { base_type::Cleanse(); }$/;"	f	class:asylo::final
~ScopedCurrentClient	./platform/primitives/untrusted_primitives.h	/^    ~ScopedCurrentClient() { current_client_ = saved_client_; }$/;"	f	class:asylo::primitives::Client::ScopedCurrentClient
~ScopedSpinLock	./platform/common/spin_lock.h	/^  ~ScopedSpinLock() { lock_->Release(); }$/;"	f	class:ScopedSpinLock
~SimEnclaveClient	./platform/primitives/sim/untrusted_sim.cc	/^SimEnclaveClient::~SimEnclaveClient() {$/;"	f	class:asylo::primitives::SimEnclaveClient
~SpinLockGuard	./platform/primitives/util/primitive_locks.h	/^  ~SpinLockGuard() { asylo_spin_unlock(lock_); }$/;"	f	class:asylo::primitives::SpinLockGuard
~StatusOr	./util/statusor.h	/^  ~StatusOr() {$/;"	f	class:asylo::StatusOr
~TestResource	./platform/core/test/shared_resource_test.cc	/^  ~TestResource() { *alive = false; }$/;"	f	struct:asylo::__anon134::TestResource
~TestResource	./platform/core/test/shared_resource_test.cc	/^  ~TestResource() { *alive = false; }$/;"	f	struct:asylo::__anon388::TestResource
~Thread	./util/std_thread.h	/^  ~Thread() { CHECK(!thread_.joinable()); }$/;"	f	class:asylo::Thread
~UntrustedCacheMalloc	./platform/core/untrusted_cache_malloc.cc	/^UntrustedCacheMalloc::~UntrustedCacheMalloc() {$/;"	f	class:asylo::UntrustedCacheMalloc
~UntrustedFile	./platform/storage/utils/untrusted_file.cc	/^UntrustedFile::~UntrustedFile() {$/;"	f	class:asylo::UntrustedFile
~UntrustedMutex	./platform/core/untrusted_mutex.cc	/^UntrustedMutex::~UntrustedMutex() {$/;"	f	class:asylo::UntrustedMutex
~grpc_enclave_channel_credentials	./grpc/auth/core/enclave_credentials.cc	/^grpc_enclave_channel_credentials::~grpc_enclave_channel_credentials() {$/;"	f	class:grpc_enclave_channel_credentials
~grpc_enclave_server_credentials	./grpc/auth/core/enclave_credentials.cc	/^grpc_enclave_server_credentials::~grpc_enclave_server_credentials() {$/;"	f	class:grpc_enclave_server_credentials
~variant	./util/statusor.h	/^    ~variant() {}$/;"	f	union:asylo::StatusOr::variant
